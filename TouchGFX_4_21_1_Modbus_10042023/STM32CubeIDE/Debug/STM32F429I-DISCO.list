
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001c8a4  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001a1c  0801ca54  0801ca54  0002ca54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00000bba  0801e470  0801e470  0002e470  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  0801f02c  0801f02c  0002f02c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000007c  0801f044  0801f044  0002f044  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00150090  0801f0c0  0801f0c0  0002f0c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0816f150  0816f150  00180164  2**0
                  CONTENTS
  8 .ARM          00000008  0816f150  0816f150  0017f150  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0816f158  0816f158  00180164  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  0816f158  0816f158  0017f158  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  0816f16c  0816f16c  0017f16c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000164  20000000  0816f174  00180000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          000127b0  20000164  0816f2d8  00180164  2**2
                  ALLOC
 14 ._user_heap_stack 00001404  20012914  0816f2d8  00182914  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00180164  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00190000  2**2
                  ALLOC
 17 .debug_line   0004d70f  00000000  00000000  00180194  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   000a2c11  00000000  00000000  001cd8a3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 00012c9b  00000000  00000000  002704b4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 00002b68  00000000  00000000  00283150  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    0011205f  00000000  00000000  00285cb8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 00004c68  00000000  00000000  00397d18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    0002b777  00000000  00000000  0039c980  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  00030579  00000000  00000000  003c80f7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000cf  00000000  00000000  003f8670  2**0
                  CONTENTS, READONLY
 26 .debug_frame  00008424  00000000  00000000  003f8740  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000164 	.word	0x20000164
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0801ca3c 	.word	0x0801ca3c

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000168 	.word	0x20000168
 80001ec:	0801ca3c 	.word	0x0801ca3c

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b974 	b.w	8000590 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	468e      	mov	lr, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d14d      	bne.n	800036a <__udivmoddi4+0xaa>
 80002ce:	428a      	cmp	r2, r1
 80002d0:	4694      	mov	ip, r2
 80002d2:	d969      	bls.n	80003a8 <__udivmoddi4+0xe8>
 80002d4:	fab2 f282 	clz	r2, r2
 80002d8:	b152      	cbz	r2, 80002f0 <__udivmoddi4+0x30>
 80002da:	fa01 f302 	lsl.w	r3, r1, r2
 80002de:	f1c2 0120 	rsb	r1, r2, #32
 80002e2:	fa20 f101 	lsr.w	r1, r0, r1
 80002e6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002ea:	ea41 0e03 	orr.w	lr, r1, r3
 80002ee:	4094      	lsls	r4, r2
 80002f0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80002f4:	0c21      	lsrs	r1, r4, #16
 80002f6:	fbbe f6f8 	udiv	r6, lr, r8
 80002fa:	fa1f f78c 	uxth.w	r7, ip
 80002fe:	fb08 e316 	mls	r3, r8, r6, lr
 8000302:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000306:	fb06 f107 	mul.w	r1, r6, r7
 800030a:	4299      	cmp	r1, r3
 800030c:	d90a      	bls.n	8000324 <__udivmoddi4+0x64>
 800030e:	eb1c 0303 	adds.w	r3, ip, r3
 8000312:	f106 30ff 	add.w	r0, r6, #4294967295
 8000316:	f080 811f 	bcs.w	8000558 <__udivmoddi4+0x298>
 800031a:	4299      	cmp	r1, r3
 800031c:	f240 811c 	bls.w	8000558 <__udivmoddi4+0x298>
 8000320:	3e02      	subs	r6, #2
 8000322:	4463      	add	r3, ip
 8000324:	1a5b      	subs	r3, r3, r1
 8000326:	b2a4      	uxth	r4, r4
 8000328:	fbb3 f0f8 	udiv	r0, r3, r8
 800032c:	fb08 3310 	mls	r3, r8, r0, r3
 8000330:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000334:	fb00 f707 	mul.w	r7, r0, r7
 8000338:	42a7      	cmp	r7, r4
 800033a:	d90a      	bls.n	8000352 <__udivmoddi4+0x92>
 800033c:	eb1c 0404 	adds.w	r4, ip, r4
 8000340:	f100 33ff 	add.w	r3, r0, #4294967295
 8000344:	f080 810a 	bcs.w	800055c <__udivmoddi4+0x29c>
 8000348:	42a7      	cmp	r7, r4
 800034a:	f240 8107 	bls.w	800055c <__udivmoddi4+0x29c>
 800034e:	4464      	add	r4, ip
 8000350:	3802      	subs	r0, #2
 8000352:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000356:	1be4      	subs	r4, r4, r7
 8000358:	2600      	movs	r6, #0
 800035a:	b11d      	cbz	r5, 8000364 <__udivmoddi4+0xa4>
 800035c:	40d4      	lsrs	r4, r2
 800035e:	2300      	movs	r3, #0
 8000360:	e9c5 4300 	strd	r4, r3, [r5]
 8000364:	4631      	mov	r1, r6
 8000366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036a:	428b      	cmp	r3, r1
 800036c:	d909      	bls.n	8000382 <__udivmoddi4+0xc2>
 800036e:	2d00      	cmp	r5, #0
 8000370:	f000 80ef 	beq.w	8000552 <__udivmoddi4+0x292>
 8000374:	2600      	movs	r6, #0
 8000376:	e9c5 0100 	strd	r0, r1, [r5]
 800037a:	4630      	mov	r0, r6
 800037c:	4631      	mov	r1, r6
 800037e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000382:	fab3 f683 	clz	r6, r3
 8000386:	2e00      	cmp	r6, #0
 8000388:	d14a      	bne.n	8000420 <__udivmoddi4+0x160>
 800038a:	428b      	cmp	r3, r1
 800038c:	d302      	bcc.n	8000394 <__udivmoddi4+0xd4>
 800038e:	4282      	cmp	r2, r0
 8000390:	f200 80f9 	bhi.w	8000586 <__udivmoddi4+0x2c6>
 8000394:	1a84      	subs	r4, r0, r2
 8000396:	eb61 0303 	sbc.w	r3, r1, r3
 800039a:	2001      	movs	r0, #1
 800039c:	469e      	mov	lr, r3
 800039e:	2d00      	cmp	r5, #0
 80003a0:	d0e0      	beq.n	8000364 <__udivmoddi4+0xa4>
 80003a2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003a6:	e7dd      	b.n	8000364 <__udivmoddi4+0xa4>
 80003a8:	b902      	cbnz	r2, 80003ac <__udivmoddi4+0xec>
 80003aa:	deff      	udf	#255	; 0xff
 80003ac:	fab2 f282 	clz	r2, r2
 80003b0:	2a00      	cmp	r2, #0
 80003b2:	f040 8092 	bne.w	80004da <__udivmoddi4+0x21a>
 80003b6:	eba1 010c 	sub.w	r1, r1, ip
 80003ba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003be:	fa1f fe8c 	uxth.w	lr, ip
 80003c2:	2601      	movs	r6, #1
 80003c4:	0c20      	lsrs	r0, r4, #16
 80003c6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003ca:	fb07 1113 	mls	r1, r7, r3, r1
 80003ce:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003d2:	fb0e f003 	mul.w	r0, lr, r3
 80003d6:	4288      	cmp	r0, r1
 80003d8:	d908      	bls.n	80003ec <__udivmoddi4+0x12c>
 80003da:	eb1c 0101 	adds.w	r1, ip, r1
 80003de:	f103 38ff 	add.w	r8, r3, #4294967295
 80003e2:	d202      	bcs.n	80003ea <__udivmoddi4+0x12a>
 80003e4:	4288      	cmp	r0, r1
 80003e6:	f200 80cb 	bhi.w	8000580 <__udivmoddi4+0x2c0>
 80003ea:	4643      	mov	r3, r8
 80003ec:	1a09      	subs	r1, r1, r0
 80003ee:	b2a4      	uxth	r4, r4
 80003f0:	fbb1 f0f7 	udiv	r0, r1, r7
 80003f4:	fb07 1110 	mls	r1, r7, r0, r1
 80003f8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80003fc:	fb0e fe00 	mul.w	lr, lr, r0
 8000400:	45a6      	cmp	lr, r4
 8000402:	d908      	bls.n	8000416 <__udivmoddi4+0x156>
 8000404:	eb1c 0404 	adds.w	r4, ip, r4
 8000408:	f100 31ff 	add.w	r1, r0, #4294967295
 800040c:	d202      	bcs.n	8000414 <__udivmoddi4+0x154>
 800040e:	45a6      	cmp	lr, r4
 8000410:	f200 80bb 	bhi.w	800058a <__udivmoddi4+0x2ca>
 8000414:	4608      	mov	r0, r1
 8000416:	eba4 040e 	sub.w	r4, r4, lr
 800041a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800041e:	e79c      	b.n	800035a <__udivmoddi4+0x9a>
 8000420:	f1c6 0720 	rsb	r7, r6, #32
 8000424:	40b3      	lsls	r3, r6
 8000426:	fa22 fc07 	lsr.w	ip, r2, r7
 800042a:	ea4c 0c03 	orr.w	ip, ip, r3
 800042e:	fa20 f407 	lsr.w	r4, r0, r7
 8000432:	fa01 f306 	lsl.w	r3, r1, r6
 8000436:	431c      	orrs	r4, r3
 8000438:	40f9      	lsrs	r1, r7
 800043a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800043e:	fa00 f306 	lsl.w	r3, r0, r6
 8000442:	fbb1 f8f9 	udiv	r8, r1, r9
 8000446:	0c20      	lsrs	r0, r4, #16
 8000448:	fa1f fe8c 	uxth.w	lr, ip
 800044c:	fb09 1118 	mls	r1, r9, r8, r1
 8000450:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000454:	fb08 f00e 	mul.w	r0, r8, lr
 8000458:	4288      	cmp	r0, r1
 800045a:	fa02 f206 	lsl.w	r2, r2, r6
 800045e:	d90b      	bls.n	8000478 <__udivmoddi4+0x1b8>
 8000460:	eb1c 0101 	adds.w	r1, ip, r1
 8000464:	f108 3aff 	add.w	sl, r8, #4294967295
 8000468:	f080 8088 	bcs.w	800057c <__udivmoddi4+0x2bc>
 800046c:	4288      	cmp	r0, r1
 800046e:	f240 8085 	bls.w	800057c <__udivmoddi4+0x2bc>
 8000472:	f1a8 0802 	sub.w	r8, r8, #2
 8000476:	4461      	add	r1, ip
 8000478:	1a09      	subs	r1, r1, r0
 800047a:	b2a4      	uxth	r4, r4
 800047c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000480:	fb09 1110 	mls	r1, r9, r0, r1
 8000484:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000488:	fb00 fe0e 	mul.w	lr, r0, lr
 800048c:	458e      	cmp	lr, r1
 800048e:	d908      	bls.n	80004a2 <__udivmoddi4+0x1e2>
 8000490:	eb1c 0101 	adds.w	r1, ip, r1
 8000494:	f100 34ff 	add.w	r4, r0, #4294967295
 8000498:	d26c      	bcs.n	8000574 <__udivmoddi4+0x2b4>
 800049a:	458e      	cmp	lr, r1
 800049c:	d96a      	bls.n	8000574 <__udivmoddi4+0x2b4>
 800049e:	3802      	subs	r0, #2
 80004a0:	4461      	add	r1, ip
 80004a2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004a6:	fba0 9402 	umull	r9, r4, r0, r2
 80004aa:	eba1 010e 	sub.w	r1, r1, lr
 80004ae:	42a1      	cmp	r1, r4
 80004b0:	46c8      	mov	r8, r9
 80004b2:	46a6      	mov	lr, r4
 80004b4:	d356      	bcc.n	8000564 <__udivmoddi4+0x2a4>
 80004b6:	d053      	beq.n	8000560 <__udivmoddi4+0x2a0>
 80004b8:	b15d      	cbz	r5, 80004d2 <__udivmoddi4+0x212>
 80004ba:	ebb3 0208 	subs.w	r2, r3, r8
 80004be:	eb61 010e 	sbc.w	r1, r1, lr
 80004c2:	fa01 f707 	lsl.w	r7, r1, r7
 80004c6:	fa22 f306 	lsr.w	r3, r2, r6
 80004ca:	40f1      	lsrs	r1, r6
 80004cc:	431f      	orrs	r7, r3
 80004ce:	e9c5 7100 	strd	r7, r1, [r5]
 80004d2:	2600      	movs	r6, #0
 80004d4:	4631      	mov	r1, r6
 80004d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	40d8      	lsrs	r0, r3
 80004e0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004e4:	fa21 f303 	lsr.w	r3, r1, r3
 80004e8:	4091      	lsls	r1, r2
 80004ea:	4301      	orrs	r1, r0
 80004ec:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004f0:	fa1f fe8c 	uxth.w	lr, ip
 80004f4:	fbb3 f0f7 	udiv	r0, r3, r7
 80004f8:	fb07 3610 	mls	r6, r7, r0, r3
 80004fc:	0c0b      	lsrs	r3, r1, #16
 80004fe:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000502:	fb00 f60e 	mul.w	r6, r0, lr
 8000506:	429e      	cmp	r6, r3
 8000508:	fa04 f402 	lsl.w	r4, r4, r2
 800050c:	d908      	bls.n	8000520 <__udivmoddi4+0x260>
 800050e:	eb1c 0303 	adds.w	r3, ip, r3
 8000512:	f100 38ff 	add.w	r8, r0, #4294967295
 8000516:	d22f      	bcs.n	8000578 <__udivmoddi4+0x2b8>
 8000518:	429e      	cmp	r6, r3
 800051a:	d92d      	bls.n	8000578 <__udivmoddi4+0x2b8>
 800051c:	3802      	subs	r0, #2
 800051e:	4463      	add	r3, ip
 8000520:	1b9b      	subs	r3, r3, r6
 8000522:	b289      	uxth	r1, r1
 8000524:	fbb3 f6f7 	udiv	r6, r3, r7
 8000528:	fb07 3316 	mls	r3, r7, r6, r3
 800052c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000530:	fb06 f30e 	mul.w	r3, r6, lr
 8000534:	428b      	cmp	r3, r1
 8000536:	d908      	bls.n	800054a <__udivmoddi4+0x28a>
 8000538:	eb1c 0101 	adds.w	r1, ip, r1
 800053c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000540:	d216      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000542:	428b      	cmp	r3, r1
 8000544:	d914      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000546:	3e02      	subs	r6, #2
 8000548:	4461      	add	r1, ip
 800054a:	1ac9      	subs	r1, r1, r3
 800054c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000550:	e738      	b.n	80003c4 <__udivmoddi4+0x104>
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e705      	b.n	8000364 <__udivmoddi4+0xa4>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e3      	b.n	8000324 <__udivmoddi4+0x64>
 800055c:	4618      	mov	r0, r3
 800055e:	e6f8      	b.n	8000352 <__udivmoddi4+0x92>
 8000560:	454b      	cmp	r3, r9
 8000562:	d2a9      	bcs.n	80004b8 <__udivmoddi4+0x1f8>
 8000564:	ebb9 0802 	subs.w	r8, r9, r2
 8000568:	eb64 0e0c 	sbc.w	lr, r4, ip
 800056c:	3801      	subs	r0, #1
 800056e:	e7a3      	b.n	80004b8 <__udivmoddi4+0x1f8>
 8000570:	4646      	mov	r6, r8
 8000572:	e7ea      	b.n	800054a <__udivmoddi4+0x28a>
 8000574:	4620      	mov	r0, r4
 8000576:	e794      	b.n	80004a2 <__udivmoddi4+0x1e2>
 8000578:	4640      	mov	r0, r8
 800057a:	e7d1      	b.n	8000520 <__udivmoddi4+0x260>
 800057c:	46d0      	mov	r8, sl
 800057e:	e77b      	b.n	8000478 <__udivmoddi4+0x1b8>
 8000580:	3b02      	subs	r3, #2
 8000582:	4461      	add	r1, ip
 8000584:	e732      	b.n	80003ec <__udivmoddi4+0x12c>
 8000586:	4630      	mov	r0, r6
 8000588:	e709      	b.n	800039e <__udivmoddi4+0xde>
 800058a:	4464      	add	r4, ip
 800058c:	3802      	subs	r0, #2
 800058e:	e742      	b.n	8000416 <__udivmoddi4+0x156>

08000590 <__aeabi_idiv0>:
 8000590:	4770      	bx	lr
 8000592:	bf00      	nop

08000594 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000594:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005cc <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000598:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059a:	e003      	b.n	80005a4 <LoopCopyDataInit>

0800059c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800059c:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800059e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a2:	3104      	adds	r1, #4

080005a4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a4:	480b      	ldr	r0, [pc, #44]	; (80005d4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005a6:	4b0c      	ldr	r3, [pc, #48]	; (80005d8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005aa:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005ac:	d3f6      	bcc.n	800059c <CopyDataInit>
  ldr  r2, =_sbss
 80005ae:	4a0b      	ldr	r2, [pc, #44]	; (80005dc <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b0:	e002      	b.n	80005b8 <LoopFillZerobss>

080005b2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b4:	f842 3b04 	str.w	r3, [r2], #4

080005b8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b8:	4b09      	ldr	r3, [pc, #36]	; (80005e0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005bc:	d3f9      	bcc.n	80005b2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005be:	f002 ff67 	bl	8003490 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c2:	f01b f9d5 	bl	801b970 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005c6:	f000 fee5 	bl	8001394 <main>
  bx  lr    
 80005ca:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005cc:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005d0:	0816f174 	.word	0x0816f174
  ldr  r0, =_sdata
 80005d4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d8:	20000164 	.word	0x20000164
  ldr  r2, =_sbss
 80005dc:	20000164 	.word	0x20000164
  ldr  r3, = _ebss
 80005e0:	20012914 	.word	0x20012914

080005e4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e4:	e7fe      	b.n	80005e4 <ADC_IRQHandler>

080005e6 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80005e6:	4770      	bx	lr

080005e8 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80005e8:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 80005ea:	f000 fd1d 	bl	8001028 <touchgfx_components_init>
  touchgfx_init();
}
 80005ee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 80005f2:	f000 bca9 	b.w	8000f48 <touchgfx_init>

080005f6 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005f6:	f000 bd19 	b.w	800102c <touchgfx_taskEntry>

080005fa <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005fa:	4770      	bx	lr

080005fc <_ZN20STM32TouchControllerD0Ev>:
 80005fc:	b510      	push	{r4, lr}
 80005fe:	2104      	movs	r1, #4
 8000600:	4604      	mov	r4, r0
 8000602:	f01b f93d 	bl	801b880 <_ZdlPvj>
 8000606:	4620      	mov	r0, r4
 8000608:	bd10      	pop	{r4, pc}
	...

0800060c <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 800060c:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 800060e:	4b0c      	ldr	r3, [pc, #48]	; (8000640 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000610:	4c0c      	ldr	r4, [pc, #48]	; (8000644 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000612:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000614:	4b0c      	ldr	r3, [pc, #48]	; (8000648 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000616:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8000618:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800061a:	6863      	ldr	r3, [r4, #4]
 800061c:	4798      	blx	r3
 800061e:	f640 0311 	movw	r3, #2065	; 0x811
 8000622:	4298      	cmp	r0, r3
 8000624:	d10a      	bne.n	800063c <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8000626:	4d09      	ldr	r5, [pc, #36]	; (800064c <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8000628:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800062a:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 800062c:	2082      	movs	r0, #130	; 0x82
 800062e:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000630:	682b      	ldr	r3, [r5, #0]
 8000632:	2082      	movs	r0, #130	; 0x82
 8000634:	68db      	ldr	r3, [r3, #12]
 8000636:	4798      	blx	r3
 8000638:	2000      	movs	r0, #0
    }

    return ret;
}
 800063a:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 800063c:	2001      	movs	r0, #1
 800063e:	e7fc      	b.n	800063a <_Z11BSP_TS_Inittt+0x2e>
 8000640:	20000180 	.word	0x20000180
 8000644:	2000004c 	.word	0x2000004c
 8000648:	20000182 	.word	0x20000182
 800064c:	20000184 	.word	0x20000184

08000650 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000650:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000654:	20f0      	movs	r0, #240	; 0xf0
 8000656:	f7ff bfd9 	b.w	800060c <_Z11BSP_TS_Inittt>
	...

0800065c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 800065c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800065e:	4d2d      	ldr	r5, [pc, #180]	; (8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8000660:	682b      	ldr	r3, [r5, #0]
{
 8000662:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000664:	691b      	ldr	r3, [r3, #16]
 8000666:	2082      	movs	r0, #130	; 0x82
 8000668:	4798      	blx	r3
 800066a:	b280      	uxth	r0, r0
 800066c:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800066e:	2800      	cmp	r0, #0
 8000670:	d043      	beq.n	80006fa <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x9e>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000672:	682b      	ldr	r3, [r5, #0]
 8000674:	f10d 0206 	add.w	r2, sp, #6
 8000678:	695b      	ldr	r3, [r3, #20]
 800067a:	a901      	add	r1, sp, #4
 800067c:	2082      	movs	r0, #130	; 0x82
 800067e:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000680:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000684:	f5a2 72b4 	sub.w	r2, r2, #360	; 0x168
 8000688:	b292      	uxth	r2, r2

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 800068a:	2a0a      	cmp	r2, #10
 800068c:	d937      	bls.n	80006fe <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa2>
        yr = y / 11;
 800068e:	230b      	movs	r3, #11
 8000690:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000694:	4b20      	ldr	r3, [pc, #128]	; (8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 8000696:	881b      	ldrh	r3, [r3, #0]
 8000698:	429a      	cmp	r2, r3
 800069a:	d901      	bls.n	80006a0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = TsYBoundary - 1;
 800069c:	3b01      	subs	r3, #1
 800069e:	b29a      	uxth	r2, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 80006a0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80006a4:	f640 31b8 	movw	r1, #3000	; 0xbb8
 80006a8:	428b      	cmp	r3, r1
 80006aa:	d82a      	bhi.n	8000702 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa6>
        {
            x = 3870 - x;
 80006ac:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006b0:	330e      	adds	r3, #14
 80006b2:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006b4:	210f      	movs	r1, #15
 80006b6:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006ba:	4918      	ldr	r1, [pc, #96]	; (800071c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
 80006bc:	8809      	ldrh	r1, [r1, #0]
 80006be:	428b      	cmp	r3, r1
 80006c0:	d901      	bls.n	80006c6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
        {
            xr = TsXBoundary - 1;
 80006c2:	1e4b      	subs	r3, r1, #1
 80006c4:	b29b      	uxth	r3, r3
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c6:	4e16      	ldr	r6, [pc, #88]	; (8000720 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c8:	4d16      	ldr	r5, [pc, #88]	; (8000724 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc8>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ca:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006cc:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ce:	4283      	cmp	r3, r0
 80006d0:	b281      	uxth	r1, r0
 80006d2:	bf8c      	ite	hi
 80006d4:	1a59      	subhi	r1, r3, r1
 80006d6:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d8:	b2b8      	uxth	r0, r7
 80006da:	42ba      	cmp	r2, r7
 80006dc:	bf8c      	ite	hi
 80006de:	1a10      	subhi	r0, r2, r0
 80006e0:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006e2:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006e4:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006e6:	4401      	add	r1, r0
 80006e8:	2905      	cmp	r1, #5
        {
            _x = x;
 80006ea:	bfc8      	it	gt
 80006ec:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006ee:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006f0:	bfc8      	it	gt
 80006f2:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006f4:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80006f6:	682b      	ldr	r3, [r5, #0]
 80006f8:	80a3      	strh	r3, [r4, #4]
    }
}
 80006fa:	b003      	add	sp, #12
 80006fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
            yr = 0;
 80006fe:	2200      	movs	r2, #0
 8000700:	e7ce      	b.n	80006a0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
            x = 3800 - x;
 8000702:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8000706:	3308      	adds	r3, #8
 8000708:	b29b      	uxth	r3, r3
        if (xr <= 0)
 800070a:	2b0e      	cmp	r3, #14
 800070c:	d8d2      	bhi.n	80006b4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            xr = 0;
 800070e:	2300      	movs	r3, #0
 8000710:	e7d9      	b.n	80006c6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
 8000712:	bf00      	nop
 8000714:	20000184 	.word	0x20000184
 8000718:	20000182 	.word	0x20000182
 800071c:	20000180 	.word	0x20000180
 8000720:	20000188 	.word	0x20000188
 8000724:	2000018c 	.word	0x2000018c

08000728 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8000728:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800072a:	4668      	mov	r0, sp
{
 800072c:	460d      	mov	r5, r1
 800072e:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000730:	f7ff ff94 	bl	800065c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000734:	f8bd 0000 	ldrh.w	r0, [sp]
 8000738:	b130      	cbz	r0, 8000748 <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 800073a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800073e:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000740:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000744:	6023      	str	r3, [r4, #0]
        return true;
 8000746:	2001      	movs	r0, #1
}
 8000748:	b003      	add	sp, #12
 800074a:	bd30      	pop	{r4, r5, pc}

0800074c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 800074c:	2803      	cmp	r0, #3
 800074e:	d821      	bhi.n	8000794 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>
 8000750:	e8df f000 	tbb	[pc, r0]
 8000754:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000758:	4b0f      	ldr	r3, [pc, #60]	; (8000798 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 800075a:	681a      	ldr	r2, [r3, #0]
 800075c:	fab2 f282 	clz	r2, r2
 8000760:	0952      	lsrs	r2, r2, #5
 8000762:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000764:	480d      	ldr	r0, [pc, #52]	; (800079c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000766:	f003 b981 	b.w	8003a6c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 800076a:	4b0b      	ldr	r3, [pc, #44]	; (8000798 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 800076c:	685a      	ldr	r2, [r3, #4]
 800076e:	fab2 f282 	clz	r2, r2
 8000772:	0952      	lsrs	r2, r2, #5
 8000774:	2108      	movs	r1, #8
 8000776:	e7f5      	b.n	8000764 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000778:	4b07      	ldr	r3, [pc, #28]	; (8000798 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 800077a:	689a      	ldr	r2, [r3, #8]
 800077c:	fab2 f282 	clz	r2, r2
 8000780:	0952      	lsrs	r2, r2, #5
 8000782:	2110      	movs	r1, #16
 8000784:	e7ee      	b.n	8000764 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000786:	4b04      	ldr	r3, [pc, #16]	; (8000798 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 8000788:	68da      	ldr	r2, [r3, #12]
 800078a:	fab2 f282 	clz	r2, r2
 800078e:	0952      	lsrs	r2, r2, #5
 8000790:	2120      	movs	r1, #32
 8000792:	e7e7      	b.n	8000764 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8000794:	4770      	bx	lr
 8000796:	bf00      	nop
 8000798:	20000190 	.word	0x20000190
 800079c:	40021000 	.word	0x40021000

080007a0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 80007a0:	2803      	cmp	r0, #3
 80007a2:	d821      	bhi.n	80007e8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>
 80007a4:	e8df f000 	tbb	[pc, r0]
 80007a8:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80007ac:	4b0f      	ldr	r3, [pc, #60]	; (80007ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80007ae:	681a      	ldr	r2, [r3, #0]
 80007b0:	3a00      	subs	r2, #0
 80007b2:	bf18      	it	ne
 80007b4:	2201      	movne	r2, #1
 80007b6:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80007b8:	480d      	ldr	r0, [pc, #52]	; (80007f0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 80007ba:	f003 b957 	b.w	8003a6c <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007be:	4b0b      	ldr	r3, [pc, #44]	; (80007ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80007c0:	685a      	ldr	r2, [r3, #4]
 80007c2:	3a00      	subs	r2, #0
 80007c4:	bf18      	it	ne
 80007c6:	2201      	movne	r2, #1
 80007c8:	2108      	movs	r1, #8
 80007ca:	e7f5      	b.n	80007b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80007cc:	4b07      	ldr	r3, [pc, #28]	; (80007ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80007ce:	689a      	ldr	r2, [r3, #8]
 80007d0:	3a00      	subs	r2, #0
 80007d2:	bf18      	it	ne
 80007d4:	2201      	movne	r2, #1
 80007d6:	2110      	movs	r1, #16
 80007d8:	e7ee      	b.n	80007b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80007da:	4b04      	ldr	r3, [pc, #16]	; (80007ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 80007dc:	68da      	ldr	r2, [r3, #12]
 80007de:	3a00      	subs	r2, #0
 80007e0:	bf18      	it	ne
 80007e2:	2201      	movne	r2, #1
 80007e4:	2120      	movs	r1, #32
 80007e6:	e7e7      	b.n	80007b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 80007e8:	4770      	bx	lr
 80007ea:	bf00      	nop
 80007ec:	20000190 	.word	0x20000190
 80007f0:	40021000 	.word	0x40021000

080007f4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007f4:	2803      	cmp	r0, #3
 80007f6:	d80d      	bhi.n	8000814 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>
 80007f8:	e8df f000 	tbb	[pc, r0]
 80007fc:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000800:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000802:	4805      	ldr	r0, [pc, #20]	; (8000818 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 8000804:	f003 b937 	b.w	8003a76 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000808:	2108      	movs	r1, #8
 800080a:	e7fa      	b.n	8000802 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 800080c:	2110      	movs	r1, #16
 800080e:	e7f8      	b.n	8000802 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000810:	2120      	movs	r1, #32
 8000812:	e7f6      	b.n	8000802 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8000814:	4770      	bx	lr
 8000816:	bf00      	nop
 8000818:	40021000 	.word	0x40021000

0800081c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 800081c:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 800081e:	2803      	cmp	r0, #3
 8000820:	d811      	bhi.n	8000846 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2a>
 8000822:	e8df f000 	tbb	[pc, r0]
 8000826:	0a02      	.short	0x0a02
 8000828:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800082a:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800082c:	4807      	ldr	r0, [pc, #28]	; (800084c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 800082e:	f003 f917 	bl	8003a60 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8000832:	1e43      	subs	r3, r0, #1
 8000834:	4258      	negs	r0, r3
 8000836:	4158      	adcs	r0, r3
 8000838:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800083a:	2108      	movs	r1, #8
 800083c:	e7f6      	b.n	800082c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 800083e:	2110      	movs	r1, #16
 8000840:	e7f4      	b.n	800082c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000842:	2120      	movs	r1, #32
 8000844:	e7f2      	b.n	800082c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 8000846:	2000      	movs	r0, #0
 8000848:	e7f3      	b.n	8000832 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 800084a:	bf00      	nop
 800084c:	40021000 	.word	0x40021000

08000850 <_ZN8touchgfx4GPIO4initEv>:
{
 8000850:	b570      	push	{r4, r5, r6, lr}
 8000852:	4d08      	ldr	r5, [pc, #32]	; (8000874 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000854:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000856:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000858:	b2e0      	uxtb	r0, r4
 800085a:	f7ff ffdf 	bl	800081c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800085e:	b118      	cbz	r0, 8000868 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000860:	682b      	ldr	r3, [r5, #0]
 8000862:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000864:	bf18      	it	ne
 8000866:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000868:	3401      	adds	r4, #1
 800086a:	2c05      	cmp	r4, #5
 800086c:	f105 0504 	add.w	r5, r5, #4
 8000870:	d1f2      	bne.n	8000858 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000872:	bd70      	pop	{r4, r5, r6, pc}
 8000874:	20000190 	.word	0x20000190

08000878 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000878:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800087a:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800087e:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000882:	4770      	bx	lr

08000884 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000884:	2000      	movs	r0, #0
 8000886:	4770      	bx	lr

08000888 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000888:	4b03      	ldr	r3, [pc, #12]	; (8000898 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800088a:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800088c:	3900      	subs	r1, #0
 800088e:	bf18      	it	ne
 8000890:	2101      	movne	r1, #1
 8000892:	7019      	strb	r1, [r3, #0]
    }
 8000894:	4770      	bx	lr
 8000896:	bf00      	nop
 8000898:	2001266f 	.word	0x2001266f

0800089c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800089c:	2000      	movs	r0, #0
 800089e:	4770      	bx	lr

080008a0 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80008a0:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80008a2:	b10b      	cbz	r3, 80008a8 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80008a4:	4608      	mov	r0, r1
 80008a6:	4718      	bx	r3
        }
    }
 80008a8:	4770      	bx	lr

080008aa <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80008aa:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80008ae:	4770      	bx	lr

080008b0 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80008b0:	6840      	ldr	r0, [r0, #4]
 80008b2:	6803      	ldr	r3, [r0, #0]
 80008b4:	699b      	ldr	r3, [r3, #24]
 80008b6:	4718      	bx	r3

080008b8 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 80008b8:	4770      	bx	lr

080008ba <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 80008ba:	4770      	bx	lr

080008bc <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80008bc:	4770      	bx	lr
	...

080008c0 <_ZN11TouchGFXHAL10initializeEv>:

LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");

void TouchGFXHAL::initialize()
{
 80008c0:	b570      	push	{r4, r5, r6, lr}
 80008c2:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 80008c4:	f000 fc80 	bl	80011c8 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // existing frame buffers are re-used. just add animation storage
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationStorage);
 80008c8:	6823      	ldr	r3, [r4, #0]
 80008ca:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80008ce:	4b04      	ldr	r3, [pc, #16]	; (80008e0 <_ZN11TouchGFXHAL10initializeEv+0x20>)
 80008d0:	e9d4 120f 	ldrd	r1, r2, [r4, #60]	; 0x3c
 80008d4:	4620      	mov	r0, r4
 80008d6:	46ac      	mov	ip, r5
}
 80008d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationStorage);
 80008dc:	4760      	bx	ip
 80008de:	bf00      	nop
 80008e0:	d0000000 	.word	0xd0000000

080008e4 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 80008e4:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 80008e6:	6803      	ldr	r3, [r0, #0]
{
 80008e8:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 80008ea:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80008ee:	4798      	blx	r3
    enableInterrupts();
 80008f0:	6823      	ldr	r3, [r4, #0]
 80008f2:	4620      	mov	r0, r4
 80008f4:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80008f6:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80008f8:	f000 f8ec 	bl	8000ad4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80008fc:	6823      	ldr	r3, [r4, #0]
 80008fe:	4620      	mov	r0, r4
 8000900:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000902:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8000904:	2029      	movs	r0, #41	; 0x29
 8000906:	f000 ffb1 	bl	800186c <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 800090a:	f000 f8e3 	bl	8000ad4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 800090e:	6823      	ldr	r3, [r4, #0]
 8000910:	4620      	mov	r0, r4
 8000912:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000914:	4798      	blx	r3
    for (;;)
 8000916:	e7f8      	b.n	800090a <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08000918 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000918:	b510      	push	{r4, lr}
 800091a:	4604      	mov	r4, r0
        swapFrameBuffers();
 800091c:	f009 fcea 	bl	800a2f4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000920:	6823      	ldr	r3, [r4, #0]
 8000922:	4620      	mov	r0, r4
 8000924:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8000928:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 800092c:	4718      	bx	r3

0800092e <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800092e:	f000 bc3d 	b.w	80011ac <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08000932 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000932:	f000 bc41 	b.w	80011b8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000936 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000936:	f000 bc6d 	b.w	8001214 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

0800093a <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800093a:	f000 bc13 	b.w	8001164 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

0800093e <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800093e:	f000 bc75 	b.w	800122c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000942 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000942:	f000 bc7d 	b.w	8001240 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08000946 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000946:	f000 bc17 	b.w	8001178 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

0800094a <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 800094a:	f008 bf39 	b.w	80097c0 <_ZN8touchgfx3HAL16flushFrameBufferEv>

0800094e <_ZN11TouchGFXHALD0Ev>:
 800094e:	b510      	push	{r4, lr}
 8000950:	217c      	movs	r1, #124	; 0x7c
 8000952:	4604      	mov	r4, r0
 8000954:	f01a ff94 	bl	801b880 <_ZdlPvj>
 8000958:	4620      	mov	r0, r4
 800095a:	bd10      	pop	{r4, pc}

0800095c <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800095c:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 8000960:	b11b      	cbz	r3, 800096a <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000962:	6840      	ldr	r0, [r0, #4]
 8000964:	6803      	ldr	r3, [r0, #0]
 8000966:	681b      	ldr	r3, [r3, #0]
 8000968:	4718      	bx	r3
    }
 800096a:	4618      	mov	r0, r3
 800096c:	4770      	bx	lr
	...

08000970 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000970:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000972:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000976:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 800097a:	4b0c      	ldr	r3, [pc, #48]	; (80009ac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 800097c:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800097e:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000980:	d009      	beq.n	8000996 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8000982:	b93a      	cbnz	r2, 8000994 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000984:	4a0a      	ldr	r2, [pc, #40]	; (80009b0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000986:	490b      	ldr	r1, [pc, #44]	; (80009b4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000988:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 800098a:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 800098c:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800098e:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000990:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000992:	701a      	strb	r2, [r3, #0]
    }
 8000994:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000996:	2a00      	cmp	r2, #0
 8000998:	d0fc      	beq.n	8000994 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800099a:	4a05      	ldr	r2, [pc, #20]	; (80009b0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 800099c:	4905      	ldr	r1, [pc, #20]	; (80009b4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800099e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 80009a0:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 80009a2:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009a4:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 80009a6:	2200      	movs	r2, #0
 80009a8:	e7f3      	b.n	8000992 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 80009aa:	bf00      	nop
 80009ac:	20012668 	.word	0x20012668
 80009b0:	20012664 	.word	0x20012664
 80009b4:	20012666 	.word	0x20012666

080009b8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80009b8:	b570      	push	{r4, r5, r6, lr}
 80009ba:	460d      	mov	r5, r1
 80009bc:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80009be:	b935      	cbnz	r5, 80009ce <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 80009c0:	4b09      	ldr	r3, [pc, #36]	; (80009e8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 80009c2:	4a0a      	ldr	r2, [pc, #40]	; (80009ec <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 80009c4:	480a      	ldr	r0, [pc, #40]	; (80009f0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 80009c6:	f240 21d2 	movw	r1, #722	; 0x2d2
 80009ca:	f01a ff87 	bl	801b8dc <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80009ce:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80009d2:	4b08      	ldr	r3, [pc, #32]	; (80009f4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 80009d4:	3a00      	subs	r2, #0
 80009d6:	bf18      	it	ne
 80009d8:	2201      	movne	r2, #1
 80009da:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 80009dc:	6803      	ldr	r3, [r0, #0]
    }
 80009de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 80009e2:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80009e6:	4718      	bx	r3
 80009e8:	0801caac 	.word	0x0801caac
 80009ec:	0801cae4 	.word	0x0801cae4
 80009f0:	0801cb32 	.word	0x0801cb32
 80009f4:	2001266e 	.word	0x2001266e

080009f8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80009f8:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80009fa:	4b09      	ldr	r3, [pc, #36]	; (8000a20 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80009fc:	881b      	ldrh	r3, [r3, #0]
 80009fe:	428b      	cmp	r3, r1
 8000a00:	d803      	bhi.n	8000a0a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000a02:	4b08      	ldr	r3, [pc, #32]	; (8000a24 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000a04:	881b      	ldrh	r3, [r3, #0]
 8000a06:	4293      	cmp	r3, r2
 8000a08:	d905      	bls.n	8000a16 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000a0a:	4b07      	ldr	r3, [pc, #28]	; (8000a28 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000a0c:	4a07      	ldr	r2, [pc, #28]	; (8000a2c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000a0e:	4808      	ldr	r0, [pc, #32]	; (8000a30 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000a10:	219e      	movs	r1, #158	; 0x9e
 8000a12:	f01a ff63 	bl	801b8dc <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000a16:	4b07      	ldr	r3, [pc, #28]	; (8000a34 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000a18:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000a1a:	4b07      	ldr	r3, [pc, #28]	; (8000a38 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000a1c:	801a      	strh	r2, [r3, #0]
    }
 8000a1e:	bd08      	pop	{r3, pc}
 8000a20:	20012664 	.word	0x20012664
 8000a24:	20012666 	.word	0x20012666
 8000a28:	0801cb77 	.word	0x0801cb77
 8000a2c:	0801cbda 	.word	0x0801cbda
 8000a30:	0801cb32 	.word	0x0801cb32
 8000a34:	2001266a 	.word	0x2001266a
 8000a38:	2001266c 	.word	0x2001266c

08000a3c <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000a3c:	2101      	movs	r1, #1
{
 8000a3e:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000a40:	2200      	movs	r2, #0
 8000a42:	4608      	mov	r0, r1
 8000a44:	f006 fa0b 	bl	8006e5e <osSemaphoreNew>
 8000a48:	4b0a      	ldr	r3, [pc, #40]	; (8000a74 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000a4a:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000a4c:	b928      	cbnz	r0, 8000a5a <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000a4e:	4b0a      	ldr	r3, [pc, #40]	; (8000a78 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000a50:	4a0a      	ldr	r2, [pc, #40]	; (8000a7c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000a52:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000a54:	480a      	ldr	r0, [pc, #40]	; (8000a80 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000a56:	f01a ff41 	bl	801b8dc <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000a5a:	2200      	movs	r2, #0
 8000a5c:	2104      	movs	r1, #4
 8000a5e:	2001      	movs	r0, #1
 8000a60:	f006 fa9a 	bl	8006f98 <osMessageQueueNew>
 8000a64:	4b07      	ldr	r3, [pc, #28]	; (8000a84 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000a66:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000a68:	b918      	cbnz	r0, 8000a72 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000a6a:	4b07      	ldr	r3, [pc, #28]	; (8000a88 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000a6c:	4a03      	ldr	r2, [pc, #12]	; (8000a7c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000a6e:	212c      	movs	r1, #44	; 0x2c
 8000a70:	e7f0      	b.n	8000a54 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000a72:	bd08      	pop	{r3, pc}
 8000a74:	200001a4 	.word	0x200001a4
 8000a78:	0801ccf8 	.word	0x0801ccf8
 8000a7c:	0801cd41 	.word	0x0801cd41
 8000a80:	0801cd70 	.word	0x0801cd70
 8000a84:	200001a0 	.word	0x200001a0
 8000a88:	0801cdee 	.word	0x0801cdee

08000a8c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000a8c:	4b02      	ldr	r3, [pc, #8]	; (8000a98 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000a8e:	f04f 31ff 	mov.w	r1, #4294967295
 8000a92:	6818      	ldr	r0, [r3, #0]
 8000a94:	f006 ba2d 	b.w	8006ef2 <osSemaphoreAcquire>
 8000a98:	200001a4 	.word	0x200001a4

08000a9c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000a9c:	4b01      	ldr	r3, [pc, #4]	; (8000aa4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000a9e:	6818      	ldr	r0, [r3, #0]
 8000aa0:	f006 ba52 	b.w	8006f48 <osSemaphoreRelease>
 8000aa4:	200001a4 	.word	0x200001a4

08000aa8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000aa8:	4b02      	ldr	r3, [pc, #8]	; (8000ab4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000aaa:	2100      	movs	r1, #0
 8000aac:	6818      	ldr	r0, [r3, #0]
 8000aae:	f006 ba20 	b.w	8006ef2 <osSemaphoreAcquire>
 8000ab2:	bf00      	nop
 8000ab4:	200001a4 	.word	0x200001a4

08000ab8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000ab8:	f7ff bff0 	b.w	8000a9c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000abc <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000abc:	4803      	ldr	r0, [pc, #12]	; (8000acc <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000abe:	4904      	ldr	r1, [pc, #16]	; (8000ad0 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000ac0:	6800      	ldr	r0, [r0, #0]
 8000ac2:	2300      	movs	r3, #0
 8000ac4:	461a      	mov	r2, r3
 8000ac6:	f006 baa2 	b.w	800700e <osMessageQueuePut>
 8000aca:	bf00      	nop
 8000acc:	200001a0 	.word	0x200001a0
 8000ad0:	20000004 	.word	0x20000004

08000ad4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000ad4:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000ad6:	4c08      	ldr	r4, [pc, #32]	; (8000af8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000ad8:	2300      	movs	r3, #0
 8000ada:	461a      	mov	r2, r3
 8000adc:	a901      	add	r1, sp, #4
 8000ade:	6820      	ldr	r0, [r4, #0]
 8000ae0:	f006 fac5 	bl	800706e <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000ae4:	6820      	ldr	r0, [r4, #0]
 8000ae6:	f04f 33ff 	mov.w	r3, #4294967295
 8000aea:	2200      	movs	r2, #0
 8000aec:	a901      	add	r1, sp, #4
 8000aee:	f006 fabe 	bl	800706e <osMessageQueueGet>
}
 8000af2:	b002      	add	sp, #8
 8000af4:	bd10      	pop	{r4, pc}
 8000af6:	bf00      	nop
 8000af8:	200001a0 	.word	0x200001a0

08000afc <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000afc:	6803      	ldr	r3, [r0, #0]
 8000afe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000b00:	4718      	bx	r3

08000b02 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000b02:	2001      	movs	r0, #1
 8000b04:	4770      	bx	lr

08000b06 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000b06:	6803      	ldr	r3, [r0, #0]
 8000b08:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000b0a:	4718      	bx	r3

08000b0c <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8000b0c:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000b0e:	2300      	movs	r3, #0
 8000b10:	9301      	str	r3, [sp, #4]
 8000b12:	4b0d      	ldr	r3, [pc, #52]	; (8000b48 <_ZN8STM32DMA10initializeEv+0x3c>)
 8000b14:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000b16:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000b1a:	631a      	str	r2, [r3, #48]	; 0x30
 8000b1c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000b1e:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8000b22:	9201      	str	r2, [sp, #4]
 8000b24:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000b26:	691a      	ldr	r2, [r3, #16]
 8000b28:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000b2c:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000b2e:	691a      	ldr	r2, [r3, #16]
 8000b30:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000b34:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000b36:	4b05      	ldr	r3, [pc, #20]	; (8000b4c <_ZN8STM32DMA10initializeEv+0x40>)
 8000b38:	4a05      	ldr	r2, [pc, #20]	; (8000b50 <_ZN8STM32DMA10initializeEv+0x44>)
 8000b3a:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000b3c:	4b05      	ldr	r3, [pc, #20]	; (8000b54 <_ZN8STM32DMA10initializeEv+0x48>)
 8000b3e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000b42:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000b44:	b002      	add	sp, #8
 8000b46:	4770      	bx	lr
 8000b48:	40023800 	.word	0x40023800
 8000b4c:	200015f4 	.word	0x200015f4
 8000b50:	08000b99 	.word	0x08000b99
 8000b54:	e000e100 	.word	0xe000e100

08000b58 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000b58:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000b5c:	4770      	bx	lr
	...

08000b60 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000b60:	4b05      	ldr	r3, [pc, #20]	; (8000b78 <_ZN8STM32DMAD1Ev+0x18>)
 8000b62:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000b64:	4b05      	ldr	r3, [pc, #20]	; (8000b7c <_ZN8STM32DMAD1Ev+0x1c>)
 8000b66:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000b6a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000b6e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000b72:	f3bf 8f6f 	isb	sy
}
 8000b76:	4770      	bx	lr
 8000b78:	0801cfbc 	.word	0x0801cfbc
 8000b7c:	e000e100 	.word	0xe000e100

08000b80 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000b80:	b510      	push	{r4, lr}
 8000b82:	4604      	mov	r4, r0
}
 8000b84:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000b88:	f7ff ffea 	bl	8000b60 <_ZN8STM32DMAD1Ev>
 8000b8c:	4620      	mov	r0, r4
 8000b8e:	f01a fe77 	bl	801b880 <_ZdlPvj>
 8000b92:	4620      	mov	r0, r4
 8000b94:	bd10      	pop	{r4, pc}
	...

08000b98 <DMA2D_XferCpltCallback>:
        return instance;
 8000b98:	4b02      	ldr	r3, [pc, #8]	; (8000ba4 <DMA2D_XferCpltCallback+0xc>)
 8000b9a:	681b      	ldr	r3, [r3, #0]
 8000b9c:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000b9e:	6803      	ldr	r3, [r0, #0]
 8000ba0:	695b      	ldr	r3, [r3, #20]
 8000ba2:	4718      	bx	r3
 8000ba4:	20012670 	.word	0x20012670

08000ba8 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000ba8:	b570      	push	{r4, r5, r6, lr}
 8000baa:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000bac:	4625      	mov	r5, r4
 8000bae:	4b0a      	ldr	r3, [pc, #40]	; (8000bd8 <_ZN8STM32DMAC1Ev+0x30>)
 8000bb0:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000bb2:	2600      	movs	r6, #0
 8000bb4:	6060      	str	r0, [r4, #4]
 8000bb6:	7226      	strb	r6, [r4, #8]
 8000bb8:	7266      	strb	r6, [r4, #9]
 8000bba:	f845 3b20 	str.w	r3, [r5], #32
 8000bbe:	2260      	movs	r2, #96	; 0x60
 8000bc0:	4629      	mov	r1, r5
 8000bc2:	f009 fcd5 	bl	800a570 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000bc6:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000bca:	60ee      	str	r6, [r5, #12]
 8000bcc:	3524      	adds	r5, #36	; 0x24
 8000bce:	42ab      	cmp	r3, r5
 8000bd0:	d1fb      	bne.n	8000bca <_ZN8STM32DMAC1Ev+0x22>
}
 8000bd2:	4620      	mov	r0, r4
 8000bd4:	bd70      	pop	{r4, r5, r6, pc}
 8000bd6:	bf00      	nop
 8000bd8:	0801cfbc 	.word	0x0801cfbc

08000bdc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000bdc:	b508      	push	{r3, lr}
    switch (format)
 8000bde:	290b      	cmp	r1, #11
 8000be0:	d80b      	bhi.n	8000bfa <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000be2:	e8df f001 	tbb	[pc, r1]
 8000be6:	0612      	.short	0x0612
 8000be8:	0a0a0a10 	.word	0x0a0a0a10
 8000bec:	0808080a 	.word	0x0808080a
 8000bf0:	0808      	.short	0x0808
 8000bf2:	2001      	movs	r0, #1
}
 8000bf4:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000bf6:	2005      	movs	r0, #5
        break;
 8000bf8:	e7fc      	b.n	8000bf4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000bfa:	4b05      	ldr	r3, [pc, #20]	; (8000c10 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000bfc:	4a05      	ldr	r2, [pc, #20]	; (8000c14 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000bfe:	4806      	ldr	r0, [pc, #24]	; (8000c18 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000c00:	2166      	movs	r1, #102	; 0x66
 8000c02:	f01a fe6b 	bl	801b8dc <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000c06:	2000      	movs	r0, #0
 8000c08:	e7f4      	b.n	8000bf4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000c0a:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000c0c:	e7f2      	b.n	8000bf4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000c0e:	bf00      	nop
 8000c10:	0801ce30 	.word	0x0801ce30
 8000c14:	0801ce4b 	.word	0x0801ce4b
 8000c18:	0801ce95 	.word	0x0801ce95

08000c1c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000c1c:	b508      	push	{r3, lr}
    switch (format)
 8000c1e:	290a      	cmp	r1, #10
 8000c20:	d809      	bhi.n	8000c36 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000c22:	e8df f001 	tbb	[pc, r1]
 8000c26:	0610      	.short	0x0610
 8000c28:	0808080e 	.word	0x0808080e
 8000c2c:	06060608 	.word	0x06060608
 8000c30:	06          	.byte	0x06
 8000c31:	00          	.byte	0x00
 8000c32:	2001      	movs	r0, #1
}
 8000c34:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000c36:	4b05      	ldr	r3, [pc, #20]	; (8000c4c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000c38:	4a05      	ldr	r2, [pc, #20]	; (8000c50 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000c3a:	4806      	ldr	r0, [pc, #24]	; (8000c54 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000c3c:	2187      	movs	r1, #135	; 0x87
 8000c3e:	f01a fe4d 	bl	801b8dc <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000c42:	2000      	movs	r0, #0
 8000c44:	e7f6      	b.n	8000c34 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000c46:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000c48:	e7f4      	b.n	8000c34 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000c4a:	bf00      	nop
 8000c4c:	0801ce30 	.word	0x0801ce30
 8000c50:	0801cf11 	.word	0x0801cf11
 8000c54:	0801ce95 	.word	0x0801ce95

08000c58 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000c58:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c5c:	7f4f      	ldrb	r7, [r1, #29]
{
 8000c5e:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c60:	4639      	mov	r1, r7
{
 8000c62:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c64:	f7ff ffba 	bl	8000bdc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c68:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000c6c:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c6e:	4641      	mov	r1, r8
 8000c70:	4648      	mov	r0, r9
 8000c72:	f7ff ffb3 	bl	8000bdc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c76:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c78:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c7a:	4648      	mov	r0, r9
 8000c7c:	f7ff ffce 	bl	8000c1c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c80:	8aa1      	ldrh	r1, [r4, #20]
 8000c82:	8b62      	ldrh	r2, [r4, #26]
 8000c84:	4b42      	ldr	r3, [pc, #264]	; (8000d90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000c86:	1a52      	subs	r2, r2, r1
 8000c88:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c8a:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000c8c:	8b22      	ldrh	r2, [r4, #24]
 8000c8e:	1a52      	subs	r2, r2, r1
 8000c90:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c92:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c94:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c96:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000c9a:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c9c:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000c9e:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ca0:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000ca2:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000ca4:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ca6:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8000caa:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cac:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8000cb0:	d026      	beq.n	8000d00 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8000cb2:	d810      	bhi.n	8000cd6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8000cb4:	2920      	cmp	r1, #32
 8000cb6:	ea45 0402 	orr.w	r4, r5, r2
 8000cba:	d061      	beq.n	8000d80 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000cbc:	2940      	cmp	r1, #64	; 0x40
 8000cbe:	d05f      	beq.n	8000d80 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000cc0:	2904      	cmp	r1, #4
 8000cc2:	d05d      	beq.n	8000d80 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cc4:	4b32      	ldr	r3, [pc, #200]	; (8000d90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000cc6:	432a      	orrs	r2, r5
 8000cc8:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000ccc:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cce:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000cd0:	d05a      	beq.n	8000d88 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000cd2:	4a30      	ldr	r2, [pc, #192]	; (8000d94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000cd4:	e040      	b.n	8000d58 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8000cd6:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8000cda:	d007      	beq.n	8000cec <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8000cdc:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8000ce0:	d1f0      	bne.n	8000cc4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ce2:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000ce6:	f042 0209 	orr.w	r2, r2, #9
 8000cea:	e003      	b.n	8000cf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cec:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000cf0:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000cf4:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000cf6:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000cf8:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000cfa:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000cfc:	6158      	str	r0, [r3, #20]
 8000cfe:	e02a      	b.n	8000d56 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000d00:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d02:	432a      	orrs	r2, r5
 8000d04:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000d08:	1d21      	adds	r1, r4, #4
 8000d0a:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d0c:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000d0e:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d10:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000d12:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000d14:	b142      	cbz	r2, 8000d28 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8000d16:	2a01      	cmp	r2, #1
 8000d18:	d021      	beq.n	8000d5e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8000d1a:	4b1f      	ldr	r3, [pc, #124]	; (8000d98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000d1c:	4a1f      	ldr	r2, [pc, #124]	; (8000d9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000d1e:	4820      	ldr	r0, [pc, #128]	; (8000da0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000d20:	f240 1111 	movw	r1, #273	; 0x111
 8000d24:	f01a fdda 	bl	801b8dc <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d28:	69da      	ldr	r2, [r3, #28]
 8000d2a:	8861      	ldrh	r1, [r4, #2]
 8000d2c:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000d30:	3901      	subs	r1, #1
 8000d32:	f022 0210 	bic.w	r2, r2, #16
 8000d36:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000d3a:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000d3c:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000d3e:	4b14      	ldr	r3, [pc, #80]	; (8000d90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000d40:	69da      	ldr	r2, [r3, #28]
 8000d42:	f042 0220 	orr.w	r2, r2, #32
 8000d46:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000d48:	69da      	ldr	r2, [r3, #28]
 8000d4a:	0692      	lsls	r2, r2, #26
 8000d4c:	d4fc      	bmi.n	8000d48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000d4e:	2210      	movs	r2, #16
 8000d50:	609a      	str	r2, [r3, #8]
            if(blend)
 8000d52:	2800      	cmp	r0, #0
 8000d54:	d0bd      	beq.n	8000cd2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000d56:	4a13      	ldr	r2, [pc, #76]	; (8000da4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000d58:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000d5a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d5e:	8862      	ldrh	r2, [r4, #2]
 8000d60:	69d9      	ldr	r1, [r3, #28]
 8000d62:	1e54      	subs	r4, r2, #1
 8000d64:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000d68:	f022 0210 	bic.w	r2, r2, #16
 8000d6c:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 8000d70:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d74:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000d78:	bf18      	it	ne
 8000d7a:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000d7c:	61da      	str	r2, [r3, #28]
                break;
 8000d7e:	e7de      	b.n	8000d3e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000d80:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8000d84:	61dc      	str	r4, [r3, #28]
 8000d86:	e7b8      	b.n	8000cfa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000d88:	f240 2201 	movw	r2, #513	; 0x201
 8000d8c:	e7e4      	b.n	8000d58 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8000d8e:	bf00      	nop
 8000d90:	4002b000 	.word	0x4002b000
 8000d94:	00010201 	.word	0x00010201
 8000d98:	0801cf5c 	.word	0x0801cf5c
 8000d9c:	0801cf76 	.word	0x0801cf76
 8000da0:	0801ce95 	.word	0x0801ce95
 8000da4:	00020201 	.word	0x00020201

08000da8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000da8:	b570      	push	{r4, r5, r6, lr}
 8000daa:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000dac:	7f89      	ldrb	r1, [r1, #30]
 8000dae:	f7ff ff35 	bl	8000c1c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000db2:	8aa6      	ldrh	r6, [r4, #20]
 8000db4:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000db6:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000db8:	4b15      	ldr	r3, [pc, #84]	; (8000e10 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000dba:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000dbc:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000dbe:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000dc2:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000dc4:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000dc6:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000dc8:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000dca:	6826      	ldr	r6, [r4, #0]
 8000dcc:	68e1      	ldr	r1, [r4, #12]
 8000dce:	2e08      	cmp	r6, #8
 8000dd0:	d10d      	bne.n	8000dee <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000dd2:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000dd4:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000dd6:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000dd8:	7f20      	ldrb	r0, [r4, #28]
 8000dda:	4a0e      	ldr	r2, [pc, #56]	; (8000e14 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000ddc:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000de0:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000de2:	4a0d      	ldr	r2, [pc, #52]	; (8000e18 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000de4:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000de6:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000de8:	60dd      	str	r5, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000dea:	601a      	str	r2, [r3, #0]
    }
}
 8000dec:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000dee:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000df0:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000df2:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000df4:	0948      	lsrs	r0, r1, #5
 8000df6:	0a0a      	lsrs	r2, r1, #8
 8000df8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000dfc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000e00:	4302      	orrs	r2, r0
 8000e02:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000e06:	430a      	orrs	r2, r1
 8000e08:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000e0a:	4a04      	ldr	r2, [pc, #16]	; (8000e1c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000e0c:	e7ed      	b.n	8000dea <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000e0e:	bf00      	nop
 8000e10:	4002b000 	.word	0x4002b000
 8000e14:	00010009 	.word	0x00010009
 8000e18:	00020201 	.word	0x00020201
 8000e1c:	00030201 	.word	0x00030201

08000e20 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000e20:	2001      	movs	r0, #1
 8000e22:	4770      	bx	lr

08000e24 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000e24:	200c      	movs	r0, #12
 8000e26:	4770      	bx	lr

08000e28 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000e28:	230c      	movs	r3, #12
 8000e2a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e2e:	3008      	adds	r0, #8
 8000e30:	4770      	bx	lr

08000e32 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000e32:	230c      	movs	r3, #12
 8000e34:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e38:	3008      	adds	r0, #8
 8000e3a:	4770      	bx	lr

08000e3c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e3c:	2001      	movs	r0, #1
 8000e3e:	4770      	bx	lr

08000e40 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e40:	f44f 701d 	mov.w	r0, #628	; 0x274
 8000e44:	4770      	bx	lr

08000e46 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e46:	f44f 731d 	mov.w	r3, #628	; 0x274
 8000e4a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e4e:	3008      	adds	r0, #8
 8000e50:	4770      	bx	lr

08000e52 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e52:	f44f 731d 	mov.w	r3, #628	; 0x274
 8000e56:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000e5a:	3008      	adds	r0, #8
 8000e5c:	4770      	bx	lr

08000e5e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000e5e:	2001      	movs	r0, #1
 8000e60:	4770      	bx	lr

08000e62 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000e62:	2010      	movs	r0, #16
 8000e64:	4770      	bx	lr

08000e66 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e66:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e6a:	3008      	adds	r0, #8
 8000e6c:	4770      	bx	lr

08000e6e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000e6e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000e72:	3008      	adds	r0, #8
 8000e74:	4770      	bx	lr

08000e76 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8000e76:	4608      	mov	r0, r1
 8000e78:	f001 ba14 	b.w	80022a4 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08000e7c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000e7c:	b510      	push	{r4, lr}
 8000e7e:	4b03      	ldr	r3, [pc, #12]	; (8000e8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000e80:	6003      	str	r3, [r0, #0]
 8000e82:	4604      	mov	r4, r0
 8000e84:	f008 f9f1 	bl	800926a <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000e88:	4620      	mov	r0, r4
 8000e8a:	bd10      	pop	{r4, pc}
 8000e8c:	0801d074 	.word	0x0801d074

08000e90 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000e90:	b510      	push	{r4, lr}
 8000e92:	4604      	mov	r4, r0
 8000e94:	f7ff fff2 	bl	8000e7c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e98:	4620      	mov	r0, r4
 8000e9a:	2114      	movs	r1, #20
 8000e9c:	f01a fcf0 	bl	801b880 <_ZdlPvj>
 8000ea0:	4620      	mov	r0, r4
 8000ea2:	bd10      	pop	{r4, pc}

08000ea4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000ea4:	b510      	push	{r4, lr}
 8000ea6:	4b03      	ldr	r3, [pc, #12]	; (8000eb4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ea8:	6003      	str	r3, [r0, #0]
 8000eaa:	4604      	mov	r4, r0
 8000eac:	f008 f9dd 	bl	800926a <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000eb0:	4620      	mov	r0, r4
 8000eb2:	bd10      	pop	{r4, pc}
 8000eb4:	0801d040 	.word	0x0801d040

08000eb8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000eb8:	b510      	push	{r4, lr}
 8000eba:	4604      	mov	r4, r0
 8000ebc:	f7ff fff2 	bl	8000ea4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000ec0:	4620      	mov	r0, r4
 8000ec2:	f44f 711f 	mov.w	r1, #636	; 0x27c
 8000ec6:	f01a fcdb 	bl	801b880 <_ZdlPvj>
 8000eca:	4620      	mov	r0, r4
 8000ecc:	bd10      	pop	{r4, pc}
	...

08000ed0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000ed0:	b510      	push	{r4, lr}
 8000ed2:	4b03      	ldr	r3, [pc, #12]	; (8000ee0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ed4:	6003      	str	r3, [r0, #0]
 8000ed6:	4604      	mov	r4, r0
 8000ed8:	f008 f9c7 	bl	800926a <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000edc:	4620      	mov	r0, r4
 8000ede:	bd10      	pop	{r4, pc}
 8000ee0:	0801d00c 	.word	0x0801d00c

08000ee4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000ee4:	b510      	push	{r4, lr}
 8000ee6:	4604      	mov	r4, r0
 8000ee8:	f7ff fff2 	bl	8000ed0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000eec:	4620      	mov	r0, r4
 8000eee:	2118      	movs	r1, #24
 8000ef0:	f01a fcc6 	bl	801b880 <_ZdlPvj>
 8000ef4:	4620      	mov	r0, r4
 8000ef6:	bd10      	pop	{r4, pc}

08000ef8 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000ef8:	b510      	push	{r4, lr}
 8000efa:	4b08      	ldr	r3, [pc, #32]	; (8000f1c <_ZN12FrontendHeapD1Ev+0x24>)
 8000efc:	6003      	str	r3, [r0, #0]
 8000efe:	4604      	mov	r4, r0
 8000f00:	f500 702a 	add.w	r0, r0, #680	; 0x2a8
 8000f04:	f7ff ffba 	bl	8000e7c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f08:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000f0c:	f7ff ffca 	bl	8000ea4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f10:	f104 0014 	add.w	r0, r4, #20
 8000f14:	f7ff ffdc 	bl	8000ed0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000f18:	4620      	mov	r0, r4
 8000f1a:	bd10      	pop	{r4, pc}
 8000f1c:	0801d0a8 	.word	0x0801d0a8

08000f20 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000f20:	b508      	push	{r3, lr}
 8000f22:	4802      	ldr	r0, [pc, #8]	; (8000f2c <__tcf_0+0xc>)
 8000f24:	f7ff ffe8 	bl	8000ef8 <_ZN12FrontendHeapD1Ev>
 8000f28:	bd08      	pop	{r3, pc}
 8000f2a:	bf00      	nop
 8000f2c:	200001ac 	.word	0x200001ac

08000f30 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000f30:	b510      	push	{r4, lr}
 8000f32:	4604      	mov	r4, r0
 8000f34:	f7ff ffe0 	bl	8000ef8 <_ZN12FrontendHeapD1Ev>
 8000f38:	4620      	mov	r0, r4
 8000f3a:	f240 412c 	movw	r1, #1068	; 0x42c
 8000f3e:	f01a fc9f 	bl	801b880 <_ZdlPvj>
 8000f42:	4620      	mov	r0, r4
 8000f44:	bd10      	pop	{r4, pc}
	...

08000f48 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000f48:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000f4c:	f001 f838 	bl	8001fc0 <_ZN14BitmapDatabase11getInstanceEv>
 8000f50:	4605      	mov	r5, r0
 8000f52:	f001 f839 	bl	8001fc8 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000f56:	2400      	movs	r4, #0
 8000f58:	4601      	mov	r1, r0
 8000f5a:	4623      	mov	r3, r4
 8000f5c:	4628      	mov	r0, r5
 8000f5e:	4622      	mov	r2, r4
 8000f60:	9400      	str	r4, [sp, #0]
 8000f62:	f00e fe81 	bl	800fc68 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000f66:	4b25      	ldr	r3, [pc, #148]	; (8000ffc <touchgfx_init+0xb4>)
 8000f68:	4a25      	ldr	r2, [pc, #148]	; (8001000 <touchgfx_init+0xb8>)
        static FrontendHeap instance;
 8000f6a:	4d26      	ldr	r5, [pc, #152]	; (8001004 <touchgfx_init+0xbc>)
 8000f6c:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000f6e:	4620      	mov	r0, r4
 8000f70:	f001 fe4e 	bl	8002c10 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000f74:	4824      	ldr	r0, [pc, #144]	; (8001008 <touchgfx_init+0xc0>)
 8000f76:	f00e fddf 	bl	800fb38 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000f7a:	782b      	ldrb	r3, [r5, #0]
 8000f7c:	f3bf 8f5b 	dmb	ish
 8000f80:	07db      	lsls	r3, r3, #31
 8000f82:	d435      	bmi.n	8000ff0 <touchgfx_init+0xa8>
 8000f84:	4628      	mov	r0, r5
 8000f86:	f01a fc7d 	bl	801b884 <__cxa_guard_acquire>
 8000f8a:	b388      	cbz	r0, 8000ff0 <touchgfx_init+0xa8>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000f8c:	4c1f      	ldr	r4, [pc, #124]	; (800100c <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000f8e:	4b20      	ldr	r3, [pc, #128]	; (8001010 <touchgfx_init+0xc8>)
 8000f90:	6023      	str	r3, [r4, #0]
 8000f92:	f504 7634 	add.w	r6, r4, #720	; 0x2d0
 8000f96:	f104 0014 	add.w	r0, r4, #20
 8000f9a:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8000f9e:	f504 772a 	add.w	r7, r4, #680	; 0x2a8
 8000fa2:	6060      	str	r0, [r4, #4]
 8000fa4:	f8c4 8008 	str.w	r8, [r4, #8]
 8000fa8:	60e7      	str	r7, [r4, #12]
 8000faa:	6126      	str	r6, [r4, #16]
 8000fac:	f008 f95e 	bl	800926c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fb0:	4b18      	ldr	r3, [pc, #96]	; (8001014 <touchgfx_init+0xcc>)
 8000fb2:	6163      	str	r3, [r4, #20]
 8000fb4:	4640      	mov	r0, r8
 8000fb6:	f008 f959 	bl	800926c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fba:	4b17      	ldr	r3, [pc, #92]	; (8001018 <touchgfx_init+0xd0>)
 8000fbc:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000fbe:	4638      	mov	r0, r7
 8000fc0:	f008 f954 	bl	800926c <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000fc4:	4b15      	ldr	r3, [pc, #84]	; (800101c <touchgfx_init+0xd4>)
 8000fc6:	f8c4 32a8 	str.w	r3, [r4, #680]	; 0x2a8
 8000fca:	f504 702f 	add.w	r0, r4, #700	; 0x2bc
 8000fce:	f001 fee7 	bl	8002da0 <_ZN5ModelC1Ev>
 8000fd2:	4622      	mov	r2, r4
 8000fd4:	f504 712f 	add.w	r1, r4, #700	; 0x2bc
 8000fd8:	4630      	mov	r0, r6
 8000fda:	f001 fe8b 	bl	8002cf4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000fde:	4630      	mov	r0, r6
 8000fe0:	f001 f960 	bl	80022a4 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8000fe4:	480e      	ldr	r0, [pc, #56]	; (8001020 <touchgfx_init+0xd8>)
 8000fe6:	f01a fc97 	bl	801b918 <atexit>
 8000fea:	4628      	mov	r0, r5
 8000fec:	f01a fc56 	bl	801b89c <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000ff0:	480c      	ldr	r0, [pc, #48]	; (8001024 <touchgfx_init+0xdc>)
}
 8000ff2:	b002      	add	sp, #8
 8000ff4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000ff8:	f7ff bc62 	b.w	80008c0 <_ZN11TouchGFXHAL10initializeEv>
 8000ffc:	200126cc 	.word	0x200126cc
 8001000:	200013f8 	.word	0x200013f8
 8001004:	200001a8 	.word	0x200001a8
 8001008:	20000008 	.word	0x20000008
 800100c:	200001ac 	.word	0x200001ac
 8001010:	0801d0a8 	.word	0x0801d0a8
 8001014:	0801d00c 	.word	0x0801d00c
 8001018:	0801d040 	.word	0x0801d040
 800101c:	0801d074 	.word	0x0801d074
 8001020:	08000f21 	.word	0x08000f21
 8001024:	2000137c 	.word	0x2000137c

08001028 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001028:	4770      	bx	lr
	...

0800102c <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 800102c:	4801      	ldr	r0, [pc, #4]	; (8001034 <touchgfx_taskEntry+0x8>)
 800102e:	f7ff bc59 	b.w	80008e4 <_ZN11TouchGFXHAL9taskEntryEv>
 8001032:	bf00      	nop
 8001034:	2000137c 	.word	0x2000137c

08001038 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001038:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 800103a:	4c23      	ldr	r4, [pc, #140]	; (80010c8 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static STM32DMA dma;
 800103c:	4e23      	ldr	r6, [pc, #140]	; (80010cc <_GLOBAL__sub_I_touchgfx_init+0x94>)
 800103e:	4b24      	ldr	r3, [pc, #144]	; (80010d0 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 8001040:	4d24      	ldr	r5, [pc, #144]	; (80010d4 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 8001042:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001044:	4630      	mov	r0, r6
 8001046:	f7ff fdaf 	bl	8000ba8 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800104a:	4628      	mov	r0, r5
 800104c:	f011 ff16 	bl	8012e7c <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 8001050:	4b21      	ldr	r3, [pc, #132]	; (80010d8 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        instance = this;
 8001052:	4822      	ldr	r0, [pc, #136]	; (80010dc <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 8001054:	60dc      	str	r4, [r3, #12]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001056:	4c22      	ldr	r4, [pc, #136]	; (80010e0 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
        instance = this;
 8001058:	6003      	str	r3, [r0, #0]
          lastRenderMethod(HARDWARE)
 800105a:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800105c:	20f0      	movs	r0, #240	; 0xf0
          lastRenderMethod(HARDWARE)
 800105e:	f44f 7180 	mov.w	r1, #256	; 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001062:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8001064:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001068:	4c1e      	ldr	r4, [pc, #120]	; (80010e4 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 800106a:	491f      	ldr	r1, [pc, #124]	; (80010e8 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800106c:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 800106e:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001072:	4c1e      	ldr	r4, [pc, #120]	; (80010ec <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001074:	861a      	strh	r2, [r3, #48]	; 0x30
          lastRenderMethod(HARDWARE)
 8001076:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800107a:	f44f 70a0 	mov.w	r0, #320	; 0x140
          lastRenderMethod(HARDWARE)
 800107e:	6759      	str	r1, [r3, #116]	; 0x74
 8001080:	2101      	movs	r1, #1
 8001082:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001086:	e9c3 2206 	strd	r2, r2, [r3, #24]
 800108a:	e9c3 2208 	strd	r2, r2, [r3, #32]
 800108e:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8001092:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8001096:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 800109a:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 800109e:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 80010a2:	661a      	str	r2, [r3, #96]	; 0x60
 80010a4:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 80010a8:	671a      	str	r2, [r3, #112]	; 0x70
 80010aa:	e9c3 6501 	strd	r6, r5, [r3, #4]
 80010ae:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010b2:	8020      	strh	r0, [r4, #0]
 80010b4:	4c0e      	ldr	r4, [pc, #56]	; (80010f0 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80010b6:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80010ba:	8020      	strh	r0, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 80010bc:	480d      	ldr	r0, [pc, #52]	; (80010f4 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 80010be:	7002      	strb	r2, [r0, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80010c0:	4a0d      	ldr	r2, [pc, #52]	; (80010f8 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 80010c2:	601a      	str	r2, [r3, #0]
}
 80010c4:	bd70      	pop	{r4, r5, r6, pc}
 80010c6:	bf00      	nop
 80010c8:	200005d8 	.word	0x200005d8
 80010cc:	200005dc 	.word	0x200005dc
 80010d0:	0801ca9c 	.word	0x0801ca9c
 80010d4:	200013fc 	.word	0x200013fc
 80010d8:	2000137c 	.word	0x2000137c
 80010dc:	20012670 	.word	0x20012670
 80010e0:	20012664 	.word	0x20012664
 80010e4:	2001266a 	.word	0x2001266a
 80010e8:	01000001 	.word	0x01000001
 80010ec:	20012666 	.word	0x20012666
 80010f0:	2001266c 	.word	0x2001266c
 80010f4:	20012668 	.word	0x20012668
 80010f8:	0801cc28 	.word	0x0801cc28

080010fc <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 80010fc:	4801      	ldr	r0, [pc, #4]	; (8001104 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 80010fe:	f7ff bd2f 	b.w	8000b60 <_ZN8STM32DMAD1Ev>
 8001102:	bf00      	nop
 8001104:	200005dc 	.word	0x200005dc

08001108 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001108:	2000      	movs	r0, #0
 800110a:	4770      	bx	lr

0800110c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 800110c:	8081      	strh	r1, [r0, #4]
    }
 800110e:	4770      	bx	lr

08001110 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8001110:	80c1      	strh	r1, [r0, #6]
    }
 8001112:	4770      	bx	lr

08001114 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001114:	8101      	strh	r1, [r0, #8]
    }
 8001116:	4770      	bx	lr

08001118 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001118:	8141      	strh	r1, [r0, #10]
    }
 800111a:	4770      	bx	lr

0800111c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 800111c:	4770      	bx	lr

0800111e <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800111e:	4770      	bx	lr

08001120 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8001120:	4770      	bx	lr

08001122 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8001122:	4770      	bx	lr

08001124 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001124:	4770      	bx	lr

08001126 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8001126:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001128:	88c4      	ldrh	r4, [r0, #6]
 800112a:	6803      	ldr	r3, [r0, #0]
 800112c:	1b12      	subs	r2, r2, r4
 800112e:	8884      	ldrh	r4, [r0, #4]
 8001130:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001132:	1b09      	subs	r1, r1, r4
 8001134:	b212      	sxth	r2, r2
    }
 8001136:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800113a:	b209      	sxth	r1, r1
 800113c:	4718      	bx	r3

0800113e <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800113e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001142:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001144:	f04f 33ff 	mov.w	r3, #4294967295
 8001148:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800114a:	6813      	ldr	r3, [r2, #0]
 800114c:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800114e:	6010      	str	r0, [r2, #0]
    }
 8001150:	4770      	bx	lr

08001152 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8001152:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001156:	b11a      	cbz	r2, 8001160 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8001158:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 800115c:	b102      	cbz	r2, 8001160 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800115e:	6018      	str	r0, [r3, #0]
        }
    }
 8001160:	4770      	bx	lr
	...

08001164 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001164:	4b03      	ldr	r3, [pc, #12]	; (8001174 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001166:	2290      	movs	r2, #144	; 0x90
 8001168:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 800116c:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8001170:	4770      	bx	lr
 8001172:	bf00      	nop
 8001174:	e000e100 	.word	0xe000e100

08001178 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001178:	4a09      	ldr	r2, [pc, #36]	; (80011a0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 800117a:	490a      	ldr	r1, [pc, #40]	; (80011a4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 800117c:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800117e:	480a      	ldr	r0, [pc, #40]	; (80011a8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001180:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001184:	3b01      	subs	r3, #1
 8001186:	b29b      	uxth	r3, r3
 8001188:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800118a:	6911      	ldr	r1, [r2, #16]
 800118c:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8001190:	3901      	subs	r1, #1
 8001192:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001194:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001196:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001198:	f043 0301 	orr.w	r3, r3, #1
 800119c:	6353      	str	r3, [r2, #52]	; 0x34
}
 800119e:	4770      	bx	lr
 80011a0:	40016800 	.word	0x40016800
 80011a4:	20001478 	.word	0x20001478
 80011a8:	20001476 	.word	0x20001476

080011ac <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 80011ac:	4b01      	ldr	r3, [pc, #4]	; (80011b4 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 80011ae:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 80011b2:	4770      	bx	lr
 80011b4:	40016800 	.word	0x40016800

080011b8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80011b8:	4b02      	ldr	r3, [pc, #8]	; (80011c4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80011ba:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80011bc:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80011c0:	625a      	str	r2, [r3, #36]	; 0x24
}
 80011c2:	4770      	bx	lr
 80011c4:	40016800 	.word	0x40016800

080011c8 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80011c8:	b570      	push	{r4, r5, r6, lr}
 80011ca:	4604      	mov	r4, r0
    HAL::initialize();
 80011cc:	f008 fb4d 	bl	800986a <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80011d0:	6823      	ldr	r3, [r4, #0]
 80011d2:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 80011d4:	f00b fd2c 	bl	800cc30 <_ZN8touchgfx11Application11getInstanceEv>
 80011d8:	4601      	mov	r1, r0
 80011da:	4620      	mov	r0, r4
 80011dc:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80011de:	6823      	ldr	r3, [r4, #0]
 80011e0:	4a05      	ldr	r2, [pc, #20]	; (80011f8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 80011e2:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80011e6:	4620      	mov	r0, r4
 80011e8:	46ac      	mov	ip, r5
 80011ea:	2300      	movs	r3, #0
}
 80011ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80011f0:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 80011f4:	4760      	bx	ip
 80011f6:	bf00      	nop
 80011f8:	d004b000 	.word	0xd004b000

080011fc <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80011fc:	f008 bb1c 	b.w	8009838 <_ZN8touchgfx3HAL10beginFrameEv>

08001200 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
 8001200:	f890 304b 	ldrb.w	r3, [r0, #75]	; 0x4b
 8001204:	b113      	cbz	r3, 800120c <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xc>
        refreshRequested = true;
 8001206:	4b02      	ldr	r3, [pc, #8]	; (8001210 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x10>)
 8001208:	2201      	movs	r2, #1
 800120a:	701a      	strb	r2, [r3, #0]
    HAL::endFrame();
 800120c:	f008 bb20 	b.w	8009850 <_ZN8touchgfx3HAL8endFrameEv>
 8001210:	20001474 	.word	0x20001474

08001214 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001214:	f008 bada 	b.w	80097cc <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001218 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001218:	f008 bc35 	b.w	8009a86 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

0800121c <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 800121c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001220:	b112      	cbz	r2, 8001228 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8001222:	6803      	ldr	r3, [r0, #0]
 8001224:	695b      	ldr	r3, [r3, #20]
 8001226:	4718      	bx	r3
    }
 8001228:	4770      	bx	lr
	...

0800122c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800122c:	4b03      	ldr	r3, [pc, #12]	; (800123c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 800122e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001232:	609a      	str	r2, [r3, #8]
 8001234:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001238:	609a      	str	r2, [r3, #8]
}
 800123a:	4770      	bx	lr
 800123c:	e000e100 	.word	0xe000e100

08001240 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001240:	4b08      	ldr	r3, [pc, #32]	; (8001264 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 8001242:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001246:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800124a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800124e:	f3bf 8f6f 	isb	sy
 8001252:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001256:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800125a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800125e:	f3bf 8f6f 	isb	sy
}
 8001262:	4770      	bx	lr
 8001264:	e000e100 	.word	0xe000e100

08001268 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001268:	b510      	push	{r4, lr}
        return instance;
 800126a:	4c14      	ldr	r4, [pc, #80]	; (80012bc <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 800126c:	6823      	ldr	r3, [r4, #0]
 800126e:	b323      	cbz	r3, 80012ba <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001270:	4b13      	ldr	r3, [pc, #76]	; (80012c0 <HAL_LTDC_LineEventCallback+0x58>)
 8001272:	4a14      	ldr	r2, [pc, #80]	; (80012c4 <HAL_LTDC_LineEventCallback+0x5c>)
 8001274:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001276:	8811      	ldrh	r1, [r2, #0]
 8001278:	428b      	cmp	r3, r1
 800127a:	d113      	bne.n	80012a4 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 800127c:	4b12      	ldr	r3, [pc, #72]	; (80012c8 <HAL_LTDC_LineEventCallback+0x60>)
 800127e:	8819      	ldrh	r1, [r3, #0]
 8001280:	f003 f9da 	bl	8004638 <HAL_LTDC_ProgramLineEvent>
 8001284:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001286:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 800128a:	3301      	adds	r3, #1
 800128c:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001290:	f7ff fc14 	bl	8000abc <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001294:	6820      	ldr	r0, [r4, #0]
 8001296:	f009 f82d 	bl	800a2f4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 800129a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800129e:	2000      	movs	r0, #0
 80012a0:	f7ff ba54 	b.w	800074c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80012a4:	f003 f9c8 	bl	8004638 <HAL_LTDC_ProgramLineEvent>
        return instance;
 80012a8:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 80012aa:	6803      	ldr	r3, [r0, #0]
 80012ac:	6a1b      	ldr	r3, [r3, #32]
 80012ae:	4798      	blx	r3
    }
 80012b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 80012b4:	2000      	movs	r0, #0
 80012b6:	f7ff ba73 	b.w	80007a0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 80012ba:	bd10      	pop	{r4, pc}
 80012bc:	20012670 	.word	0x20012670
 80012c0:	40016800 	.word	0x40016800
 80012c4:	20001478 	.word	0x20001478
 80012c8:	20001476 	.word	0x20001476

080012cc <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 80012cc:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80012ce:	4b06      	ldr	r3, [pc, #24]	; (80012e8 <SPI5_Write+0x1c>)
{
 80012d0:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80012d4:	681b      	ldr	r3, [r3, #0]
 80012d6:	4805      	ldr	r0, [pc, #20]	; (80012ec <SPI5_Write+0x20>)
 80012d8:	2201      	movs	r2, #1
 80012da:	f10d 0106 	add.w	r1, sp, #6
 80012de:	f003 ff07 	bl	80050f0 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 80012e2:	b003      	add	sp, #12
 80012e4:	f85d fb04 	ldr.w	pc, [sp], #4
 80012e8:	20000010 	.word	0x20000010
 80012ec:	20001764 	.word	0x20001764

080012f0 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 80012f0:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 80012f2:	2064      	movs	r0, #100	; 0x64
 80012f4:	f005 fda7 	bl	8006e46 <osDelay>
  for(;;)
 80012f8:	e7fb      	b.n	80012f2 <StartDefaultTask+0x2>
	...

080012fc <SystemClock_Config>:
{
 80012fc:	b530      	push	{r4, r5, lr}
 80012fe:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001300:	2210      	movs	r2, #16
 8001302:	2100      	movs	r1, #0
 8001304:	a80a      	add	r0, sp, #40	; 0x28
 8001306:	f01a fb75 	bl	801b9f4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800130a:	2214      	movs	r2, #20
 800130c:	2100      	movs	r1, #0
 800130e:	a803      	add	r0, sp, #12
 8001310:	f01a fb70 	bl	801b9f4 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001314:	2400      	movs	r4, #0
 8001316:	4b1d      	ldr	r3, [pc, #116]	; (800138c <SystemClock_Config+0x90>)
 8001318:	9401      	str	r4, [sp, #4]
 800131a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800131c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001320:	641a      	str	r2, [r3, #64]	; 0x40
 8001322:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001324:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001328:	9301      	str	r3, [sp, #4]
 800132a:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800132c:	4b18      	ldr	r3, [pc, #96]	; (8001390 <SystemClock_Config+0x94>)
 800132e:	9402      	str	r4, [sp, #8]
 8001330:	681a      	ldr	r2, [r3, #0]
 8001332:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001336:	601a      	str	r2, [r3, #0]
 8001338:	681b      	ldr	r3, [r3, #0]
 800133a:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800133e:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001340:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001342:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001344:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001348:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800134c:	2502      	movs	r5, #2
 800134e:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001352:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001356:	2108      	movs	r1, #8
 8001358:	f44f 73a8 	mov.w	r3, #336	; 0x150
 800135c:	e9cd 1310 	strd	r1, r3, [sp, #64]	; 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001360:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001362:	2304      	movs	r3, #4
 8001364:	9313      	str	r3, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001366:	9512      	str	r5, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001368:	f003 f984 	bl	8004674 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800136c:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800136e:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001372:	f44f 50a0 	mov.w	r0, #5120	; 0x1400
 8001376:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800137a:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800137e:	2105      	movs	r1, #5
 8001380:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001382:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001384:	f003 fb54 	bl	8004a30 <HAL_RCC_ClockConfig>
}
 8001388:	b015      	add	sp, #84	; 0x54
 800138a:	bd30      	pop	{r4, r5, pc}
 800138c:	40023800 	.word	0x40023800
 8001390:	40007000 	.word	0x40007000

08001394 <main>:
{
 8001394:	b580      	push	{r7, lr}
 8001396:	b09a      	sub	sp, #104	; 0x68
  HAL_Init();
 8001398:	f002 f888 	bl	80034ac <HAL_Init>
  SystemClock_Config();
 800139c:	f7ff ffae 	bl	80012fc <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80013a0:	2214      	movs	r2, #20
 80013a2:	2100      	movs	r1, #0
 80013a4:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80013a6:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80013a8:	f01a fb24 	bl	801b9f4 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80013ac:	4bc8      	ldr	r3, [pc, #800]	; (80016d0 <main+0x33c>)
 80013ae:	9400      	str	r4, [sp, #0]
 80013b0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80013b2:	48c8      	ldr	r0, [pc, #800]	; (80016d4 <main+0x340>)
  hi2c3.Instance = I2C3;
 80013b4:	4dc8      	ldr	r5, [pc, #800]	; (80016d8 <main+0x344>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80013b6:	f042 0210 	orr.w	r2, r2, #16
 80013ba:	631a      	str	r2, [r3, #48]	; 0x30
 80013bc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013be:	f002 0210 	and.w	r2, r2, #16
 80013c2:	9200      	str	r2, [sp, #0]
 80013c4:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80013c6:	9401      	str	r4, [sp, #4]
 80013c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013ca:	f042 0220 	orr.w	r2, r2, #32
 80013ce:	631a      	str	r2, [r3, #48]	; 0x30
 80013d0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013d2:	f002 0220 	and.w	r2, r2, #32
 80013d6:	9201      	str	r2, [sp, #4]
 80013d8:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80013da:	9402      	str	r4, [sp, #8]
 80013dc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013de:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80013e2:	631a      	str	r2, [r3, #48]	; 0x30
 80013e4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013e6:	f002 0280 	and.w	r2, r2, #128	; 0x80
 80013ea:	9202      	str	r2, [sp, #8]
 80013ec:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80013ee:	9403      	str	r4, [sp, #12]
 80013f0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013f2:	f042 0204 	orr.w	r2, r2, #4
 80013f6:	631a      	str	r2, [r3, #48]	; 0x30
 80013f8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013fa:	f002 0204 	and.w	r2, r2, #4
 80013fe:	9203      	str	r2, [sp, #12]
 8001400:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001402:	9404      	str	r4, [sp, #16]
 8001404:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001406:	f042 0201 	orr.w	r2, r2, #1
 800140a:	631a      	str	r2, [r3, #48]	; 0x30
 800140c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800140e:	f002 0201 	and.w	r2, r2, #1
 8001412:	9204      	str	r2, [sp, #16]
 8001414:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001416:	9405      	str	r4, [sp, #20]
 8001418:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800141a:	f042 0202 	orr.w	r2, r2, #2
 800141e:	631a      	str	r2, [r3, #48]	; 0x30
 8001420:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001422:	f002 0202 	and.w	r2, r2, #2
 8001426:	9205      	str	r2, [sp, #20]
 8001428:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 800142a:	9406      	str	r4, [sp, #24]
 800142c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800142e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001432:	631a      	str	r2, [r3, #48]	; 0x30
 8001434:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001436:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800143a:	9206      	str	r2, [sp, #24]
 800143c:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800143e:	9407      	str	r4, [sp, #28]
 8001440:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001442:	f042 0208 	orr.w	r2, r2, #8
 8001446:	631a      	str	r2, [r3, #48]	; 0x30
 8001448:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800144a:	f003 0308 	and.w	r3, r3, #8
 800144e:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001450:	4622      	mov	r2, r4
 8001452:	213c      	movs	r1, #60	; 0x3c
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001454:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001456:	f002 fb09 	bl	8003a6c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800145a:	48a0      	ldr	r0, [pc, #640]	; (80016dc <main+0x348>)
 800145c:	4622      	mov	r2, r4
 800145e:	2104      	movs	r1, #4
 8001460:	f002 fb04 	bl	8003a6c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001464:	4622      	mov	r2, r4
 8001466:	489e      	ldr	r0, [pc, #632]	; (80016e0 <main+0x34c>)
 8001468:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 800146c:	f002 fafe 	bl	8003a6c <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001470:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001472:	f04f 0803 	mov.w	r8, #3
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001476:	233c      	movs	r3, #60	; 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001478:	4896      	ldr	r0, [pc, #600]	; (80016d4 <main+0x340>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800147a:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800147e:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001480:	f04f 0902 	mov.w	r9, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001484:	2704      	movs	r7, #4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001486:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800148a:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800148c:	f002 fa02 	bl	8003894 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001490:	4892      	ldr	r0, [pc, #584]	; (80016dc <main+0x348>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001492:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001494:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001496:	e9cd 760d 	strd	r7, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800149a:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800149e:	f002 f9f9 	bl	8003894 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014a2:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80014a4:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014a8:	488d      	ldr	r0, [pc, #564]	; (80016e0 <main+0x34c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014aa:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80014ae:	e9cd 490f 	strd	r4, r9, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014b2:	f002 f9ef 	bl	8003894 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 80014b6:	488b      	ldr	r0, [pc, #556]	; (80016e4 <main+0x350>)
 80014b8:	4b8b      	ldr	r3, [pc, #556]	; (80016e8 <main+0x354>)
 80014ba:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80014bc:	f002 f888 	bl	80035d0 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 80014c0:	4a8a      	ldr	r2, [pc, #552]	; (80016ec <main+0x358>)
 80014c2:	4b8b      	ldr	r3, [pc, #556]	; (80016f0 <main+0x35c>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80014c4:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 80014c6:	e9c5 2300 	strd	r2, r3, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80014ca:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80014cc:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80014d0:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 80014d4:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80014d8:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80014dc:	f002 fcb0 	bl	8003e40 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 80014e0:	2110      	movs	r1, #16
 80014e2:	4628      	mov	r0, r5
 80014e4:	f002 feec 	bl	80042c0 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 80014e8:	4621      	mov	r1, r4
 80014ea:	4628      	mov	r0, r5
 80014ec:	f002 ff07 	bl	80042fe <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 80014f0:	4880      	ldr	r0, [pc, #512]	; (80016f4 <main+0x360>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80014f2:	4981      	ldr	r1, [pc, #516]	; (80016f8 <main+0x364>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80014f4:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80014f6:	f44f 7382 	mov.w	r3, #260	; 0x104
 80014fa:	e9c0 1300 	strd	r1, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 80014fe:	f44f 7500 	mov.w	r5, #512	; 0x200
 8001502:	2318      	movs	r3, #24
 8001504:	e9c0 5306 	strd	r5, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001508:	230a      	movs	r3, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800150a:	4d7c      	ldr	r5, [pc, #496]	; (80016fc <main+0x368>)
  hspi5.Init.CRCPolynomial = 10;
 800150c:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 800150e:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001512:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001516:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 800151a:	f003 fd8d 	bl	8005038 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800151e:	4b78      	ldr	r3, [pc, #480]	; (8001700 <main+0x36c>)
  SdramTiming.LoadToActiveDelay = 2;
 8001520:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001524:	f04f 0c10 	mov.w	ip, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001528:	e9c5 3600 	strd	r3, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800152c:	2340      	movs	r3, #64	; 0x40
 800152e:	e9c5 c304 	strd	ip, r3, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001532:	f44f 73c0 	mov.w	r3, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001536:	e9c5 3406 	strd	r3, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 800153a:	f44f 6300 	mov.w	r3, #2048	; 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 800153e:	e9c5 3408 	strd	r3, r4, [r5, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001542:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001546:	62ab      	str	r3, [r5, #40]	; 0x28
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001548:	a90d      	add	r1, sp, #52	; 0x34
  SdramTiming.ExitSelfRefreshDelay = 7;
 800154a:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800154c:	4628      	mov	r0, r5
  SdramTiming.WriteRecoveryTime = 3;
 800154e:	e9cd 3810 	strd	r3, r8, [sp, #64]	; 0x40
  SdramTiming.SelfRefreshTime = 4;
 8001552:	e9cd 370e 	strd	r3, r7, [sp, #56]	; 0x38
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001556:	f04f 0a08 	mov.w	sl, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 800155a:	e9c5 4702 	strd	r4, r7, [r5, #8]
  SdramTiming.RCDDelay = 2;
 800155e:	e9cd 9912 	strd	r9, r9, [sp, #72]	; 0x48
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001562:	f003 fc69 	bl	8004e38 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001566:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800156a:	a909      	add	r1, sp, #36	; 0x24
 800156c:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 800156e:	e9cd a60a 	strd	sl, r6, [sp, #40]	; 0x28
 __IO uint32_t tmpmrd =0;
 8001572:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001574:	9609      	str	r6, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001576:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001578:	f003 fc7e 	bl	8004e78 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 800157c:	4630      	mov	r0, r6
 800157e:	f001 ffc1 	bl	8003504 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001582:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001586:	a909      	add	r1, sp, #36	; 0x24
 8001588:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800158a:	e9cd 9a09 	strd	r9, sl, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 800158e:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001592:	f003 fc71 	bl	8004e78 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001596:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800159a:	a909      	add	r1, sp, #36	; 0x24
 800159c:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800159e:	e9cd 8a09 	strd	r8, sl, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80015a2:	e9cd 740b 	strd	r7, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015a6:	f003 fc67 	bl	8004e78 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80015aa:	f44f 730c 	mov.w	r3, #560	; 0x230
 80015ae:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 80015b0:	9b08      	ldr	r3, [sp, #32]
 80015b2:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015b4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80015b8:	a909      	add	r1, sp, #36	; 0x24
 80015ba:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80015bc:	e9cd 7a09 	strd	r7, sl, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 80015c0:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015c2:	f003 fc59 	bl	8004e78 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 80015c6:	f240 516a 	movw	r1, #1386	; 0x56a
 80015ca:	4628      	mov	r0, r5
 80015cc:	f003 fc72 	bl	8004eb4 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80015d0:	2234      	movs	r2, #52	; 0x34
 80015d2:	4621      	mov	r1, r4
 80015d4:	eb0d 0002 	add.w	r0, sp, r2
 80015d8:	f01a fa0c 	bl	801b9f4 <memset>
  hltdc.Instance = LTDC;
 80015dc:	4d49      	ldr	r5, [pc, #292]	; (8001704 <main+0x370>)
 80015de:	4b4a      	ldr	r3, [pc, #296]	; (8001708 <main+0x374>)
  hltdc.Init.Backcolor.Blue = 0;
 80015e0:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80015e2:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 80015e6:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 80015e8:	e9c5 3605 	strd	r3, r6, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 80015ec:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedActiveH = 323;
 80015ee:	f240 1e0d 	movw	lr, #269	; 0x10d
  hltdc.Init.AccumulatedVBP = 3;
 80015f2:	e9c5 3807 	strd	r3, r8, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 80015f6:	f240 1343 	movw	r3, #323	; 0x143
 80015fa:	e9c5 e309 	strd	lr, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 80015fe:	f240 1817 	movw	r8, #279	; 0x117
 8001602:	f240 1347 	movw	r3, #327	; 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001606:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8001608:	e9c5 830b 	strd	r8, r3, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 800160c:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8001610:	612c      	str	r4, [r5, #16]
  hltdc.Init.Backcolor.Red = 0;
 8001612:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001616:	f002 ff17 	bl	8004448 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 800161a:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 240;
 800161c:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha0 = 0;
 800161e:	e9cd 1412 	strd	r1, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001622:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8001626:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 8001628:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800162c:	e9cd 0114 	strd	r0, r1, [sp, #80]	; 0x50
  pLayerCfg.WindowY0 = 0;
 8001630:	e9cd 240e 	strd	r2, r4, [sp, #56]	; 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001634:	a90d      	add	r1, sp, #52	; 0x34
  pLayerCfg.ImageWidth = 240;
 8001636:	e9cd 4216 	strd	r4, r2, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800163a:	4628      	mov	r0, r5
 800163c:	4622      	mov	r2, r4
  LcdDrv = &ili9341_drv;
 800163e:	4d33      	ldr	r5, [pc, #204]	; (800170c <main+0x378>)
  pLayerCfg.ImageHeight = 320;
 8001640:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001642:	e9cd 3910 	strd	r3, r9, [sp, #64]	; 0x40
  pLayerCfg.WindowX0 = 0;
 8001646:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.Backcolor.Blue = 0;
 8001648:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 800164c:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001650:	f002 ffc5 	bl	80045de <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001654:	4b2e      	ldr	r3, [pc, #184]	; (8001710 <main+0x37c>)
 8001656:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001658:	681b      	ldr	r3, [r3, #0]
  huart3.Instance = USART3;
 800165a:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 8001728 <main+0x394>
  LcdDrv->Init();
 800165e:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001660:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 8001662:	4d2c      	ldr	r5, [pc, #176]	; (8001714 <main+0x380>)
  LcdDrv->DisplayOff();
 8001664:	68db      	ldr	r3, [r3, #12]
 8001666:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8001668:	4b2b      	ldr	r3, [pc, #172]	; (8001718 <main+0x384>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 800166a:	e9c5 490a 	strd	r4, r9, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 800166e:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001672:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 8001674:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 8001678:	e9c5 9402 	strd	r9, r4, [r5, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800167c:	f002 f80e 	bl	800369c <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001680:	4631      	mov	r1, r6
 8001682:	4628      	mov	r0, r5
  huart3.Init.BaudRate = 9600;
 8001684:	4d25      	ldr	r5, [pc, #148]	; (800171c <main+0x388>)
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001686:	f002 f8c1 	bl	800380c <HAL_DMA2D_ConfigLayer>
  huart3.Init.BaudRate = 9600;
 800168a:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 800168e:	e9c8 5300 	strd	r5, r3, [r8]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 8001692:	4640      	mov	r0, r8
  ModbusH.uModbusType = MB_MASTER;										//KOM
 8001694:	4d22      	ldr	r5, [pc, #136]	; (8001720 <main+0x38c>)
  huart3.Init.Parity = UART_PARITY_NONE;
 8001696:	f8c8 4010 	str.w	r4, [r8, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 800169a:	230c      	movs	r3, #12
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800169c:	e9c8 3405 	strd	r3, r4, [r8, #20]
  huart3.Init.StopBits = UART_STOPBITS_1;
 80016a0:	e9c8 4402 	strd	r4, r4, [r8, #8]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 80016a4:	f8c8 401c 	str.w	r4, [r8, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 80016a8:	f004 f96a 	bl	8005980 <HAL_UART_Init>
  MX_TouchGFX_Init();
 80016ac:	f7fe ff9c 	bl	80005e8 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 80016b0:	f7fe ff99 	bl	80005e6 <MX_TouchGFX_PreOSInit>
  ModbusH.u16timeOut = 1000;											//KOM
 80016b4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80016b8:	f8a5 30a2 	strh.w	r3, [r5, #162]	; 0xa2
  ModbusInit(&ModbusH); 												//KOM
 80016bc:	4628      	mov	r0, r5
  ModbusH.u16regs = ModbusDATARX; 										//KOM
 80016be:	4b19      	ldr	r3, [pc, #100]	; (8001724 <main+0x390>)
 80016c0:	f8c5 3098 	str.w	r3, [r5, #152]	; 0x98
  ModbusH.uModbusType = MB_MASTER;										//KOM
 80016c4:	702f      	strb	r7, [r5, #0]
  ModbusH.port = &huart3;												//KOM
 80016c6:	f8c5 8004 	str.w	r8, [r5, #4]
  ModbusH.u8id = 0;														//KOM
 80016ca:	722c      	strb	r4, [r5, #8]
  ModbusH.EN_Port = NULL;												//KOM
 80016cc:	60ec      	str	r4, [r5, #12]
 80016ce:	e02d      	b.n	800172c <main+0x398>
 80016d0:	40023800 	.word	0x40023800
 80016d4:	40021000 	.word	0x40021000
 80016d8:	20001634 	.word	0x20001634
 80016dc:	40020800 	.word	0x40020800
 80016e0:	40020c00 	.word	0x40020c00
 80016e4:	200015ec 	.word	0x200015ec
 80016e8:	40023000 	.word	0x40023000
 80016ec:	40005c00 	.word	0x40005c00
 80016f0:	000186a0 	.word	0x000186a0
 80016f4:	20001764 	.word	0x20001764
 80016f8:	40015000 	.word	0x40015000
 80016fc:	20001730 	.word	0x20001730
 8001700:	a0000140 	.word	0xa0000140
 8001704:	20001688 	.word	0x20001688
 8001708:	40016800 	.word	0x40016800
 800170c:	20001480 	.word	0x20001480
 8001710:	20000014 	.word	0x20000014
 8001714:	200015f4 	.word	0x200015f4
 8001718:	4002b000 	.word	0x4002b000
 800171c:	40004800 	.word	0x40004800
 8001720:	200014a4 	.word	0x200014a4
 8001724:	20001484 	.word	0x20001484
 8001728:	200017bc 	.word	0x200017bc
  ModbusH.u16regsize = sizeof(ModbusDATARX)/sizeof(ModbusDATARX[0]); 	//KOM
 800172c:	f8a5 a0a4 	strh.w	sl, [r5, #164]	; 0xa4
  ModbusH.xTypeHW = USART_HW;											//KOM
 8001730:	f885 6140 	strb.w	r6, [r5, #320]	; 0x140
  ModbusInit(&ModbusH); 												//KOM
 8001734:	f004 fd5a 	bl	80061ec <ModbusInit>
  ModbusStart(&ModbusH); 												//KOM
 8001738:	4628      	mov	r0, r5
 800173a:	f004 fdcd 	bl	80062d8 <ModbusStart>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800173e:	4a09      	ldr	r2, [pc, #36]	; (8001764 <main+0x3d0>)
 8001740:	4809      	ldr	r0, [pc, #36]	; (8001768 <main+0x3d4>)
 8001742:	4621      	mov	r1, r4
 8001744:	f005 fb34 	bl	8006db0 <osThreadNew>
 8001748:	4b08      	ldr	r3, [pc, #32]	; (800176c <main+0x3d8>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800174a:	4a09      	ldr	r2, [pc, #36]	; (8001770 <main+0x3dc>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800174c:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800174e:	4621      	mov	r1, r4
 8001750:	4808      	ldr	r0, [pc, #32]	; (8001774 <main+0x3e0>)
 8001752:	f005 fb2d 	bl	8006db0 <osThreadNew>
 8001756:	4b08      	ldr	r3, [pc, #32]	; (8001778 <main+0x3e4>)
 8001758:	6018      	str	r0, [r3, #0]
  osKernelInitialize();
 800175a:	f005 fafd 	bl	8006d58 <osKernelInitialize>
  osKernelStart();
 800175e:	f005 fb0d 	bl	8006d7c <osKernelStart>
  while (1)
 8001762:	e7fe      	b.n	8001762 <main+0x3ce>
 8001764:	0801d0f0 	.word	0x0801d0f0
 8001768:	080012f1 	.word	0x080012f1
 800176c:	200015e8 	.word	0x200015e8
 8001770:	0801d0cc 	.word	0x0801d0cc
 8001774:	080005f7 	.word	0x080005f7
 8001778:	2000147c 	.word	0x2000147c

0800177c <IOE_Init>:
 800177c:	4770      	bx	lr

0800177e <IOE_ITConfig>:
 800177e:	4770      	bx	lr

08001780 <IOE_Write>:
{
 8001780:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 8001782:	4b09      	ldr	r3, [pc, #36]	; (80017a8 <IOE_Write+0x28>)
 8001784:	f88d 2017 	strb.w	r2, [sp, #23]
 8001788:	681b      	ldr	r3, [r3, #0]
 800178a:	9302      	str	r3, [sp, #8]
 800178c:	f10d 0217 	add.w	r2, sp, #23
 8001790:	2301      	movs	r3, #1
 8001792:	9200      	str	r2, [sp, #0]
 8001794:	9301      	str	r3, [sp, #4]
 8001796:	460a      	mov	r2, r1
 8001798:	4601      	mov	r1, r0
 800179a:	4804      	ldr	r0, [pc, #16]	; (80017ac <IOE_Write+0x2c>)
 800179c:	f002 fbf8 	bl	8003f90 <HAL_I2C_Mem_Write>
}
 80017a0:	b007      	add	sp, #28
 80017a2:	f85d fb04 	ldr.w	pc, [sp], #4
 80017a6:	bf00      	nop
 80017a8:	2000000c 	.word	0x2000000c
 80017ac:	20001634 	.word	0x20001634

080017b0 <IOE_Read>:
{
 80017b0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 80017b2:	2300      	movs	r3, #0
 80017b4:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80017b8:	4b08      	ldr	r3, [pc, #32]	; (80017dc <IOE_Read+0x2c>)
 80017ba:	681b      	ldr	r3, [r3, #0]
 80017bc:	9302      	str	r3, [sp, #8]
{
 80017be:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80017c0:	2301      	movs	r3, #1
 80017c2:	f10d 0117 	add.w	r1, sp, #23
 80017c6:	9100      	str	r1, [sp, #0]
 80017c8:	9301      	str	r3, [sp, #4]
 80017ca:	4601      	mov	r1, r0
 80017cc:	4804      	ldr	r0, [pc, #16]	; (80017e0 <IOE_Read+0x30>)
 80017ce:	f002 fc6f 	bl	80040b0 <HAL_I2C_Mem_Read>
}
 80017d2:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80017d6:	b007      	add	sp, #28
 80017d8:	f85d fb04 	ldr.w	pc, [sp], #4
 80017dc:	2000000c 	.word	0x2000000c
 80017e0:	20001634 	.word	0x20001634

080017e4 <IOE_ReadMultiple>:
{
 80017e4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 80017e6:	4c08      	ldr	r4, [pc, #32]	; (8001808 <IOE_ReadMultiple+0x24>)
 80017e8:	6824      	ldr	r4, [r4, #0]
 80017ea:	9200      	str	r2, [sp, #0]
 80017ec:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80017f0:	460a      	mov	r2, r1
 80017f2:	2301      	movs	r3, #1
 80017f4:	4601      	mov	r1, r0
 80017f6:	4805      	ldr	r0, [pc, #20]	; (800180c <IOE_ReadMultiple+0x28>)
 80017f8:	f002 fc5a 	bl	80040b0 <HAL_I2C_Mem_Read>
}
 80017fc:	3800      	subs	r0, #0
 80017fe:	bf18      	it	ne
 8001800:	2001      	movne	r0, #1
 8001802:	b004      	add	sp, #16
 8001804:	bd10      	pop	{r4, pc}
 8001806:	bf00      	nop
 8001808:	2000000c 	.word	0x2000000c
 800180c:	20001634 	.word	0x20001634

08001810 <IOE_Delay>:
 8001810:	f001 be78 	b.w	8003504 <HAL_Delay>

08001814 <LCD_IO_Init>:
{
 8001814:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001816:	4806      	ldr	r0, [pc, #24]	; (8001830 <LCD_IO_Init+0x1c>)
 8001818:	2200      	movs	r2, #0
 800181a:	2104      	movs	r1, #4
 800181c:	f002 f926 	bl	8003a6c <HAL_GPIO_WritePin>
}
 8001820:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001824:	4802      	ldr	r0, [pc, #8]	; (8001830 <LCD_IO_Init+0x1c>)
 8001826:	2201      	movs	r2, #1
 8001828:	2104      	movs	r1, #4
 800182a:	f002 b91f 	b.w	8003a6c <HAL_GPIO_WritePin>
 800182e:	bf00      	nop
 8001830:	40020800 	.word	0x40020800

08001834 <LCD_IO_WriteData>:
{
 8001834:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001836:	4d0b      	ldr	r5, [pc, #44]	; (8001864 <LCD_IO_WriteData+0x30>)
{
 8001838:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800183a:	2201      	movs	r2, #1
 800183c:	480a      	ldr	r0, [pc, #40]	; (8001868 <LCD_IO_WriteData+0x34>)
 800183e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001842:	f002 f913 	bl	8003a6c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001846:	2200      	movs	r2, #0
 8001848:	2104      	movs	r1, #4
 800184a:	4628      	mov	r0, r5
 800184c:	f002 f90e 	bl	8003a6c <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001850:	4620      	mov	r0, r4
 8001852:	f7ff fd3b 	bl	80012cc <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001856:	4628      	mov	r0, r5
 8001858:	2201      	movs	r2, #1
}
 800185a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800185e:	2104      	movs	r1, #4
 8001860:	f002 b904 	b.w	8003a6c <HAL_GPIO_WritePin>
 8001864:	40020800 	.word	0x40020800
 8001868:	40020c00 	.word	0x40020c00

0800186c <LCD_IO_WriteReg>:
{
 800186c:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800186e:	4d0b      	ldr	r5, [pc, #44]	; (800189c <LCD_IO_WriteReg+0x30>)
{
 8001870:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001872:	2200      	movs	r2, #0
 8001874:	480a      	ldr	r0, [pc, #40]	; (80018a0 <LCD_IO_WriteReg+0x34>)
 8001876:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800187a:	f002 f8f7 	bl	8003a6c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800187e:	2200      	movs	r2, #0
 8001880:	2104      	movs	r1, #4
 8001882:	4628      	mov	r0, r5
 8001884:	f002 f8f2 	bl	8003a6c <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001888:	4620      	mov	r0, r4
 800188a:	f7ff fd1f 	bl	80012cc <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800188e:	4628      	mov	r0, r5
 8001890:	2201      	movs	r2, #1
}
 8001892:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001896:	2104      	movs	r1, #4
 8001898:	f002 b8e8 	b.w	8003a6c <HAL_GPIO_WritePin>
 800189c:	40020800 	.word	0x40020800
 80018a0:	40020c00 	.word	0x40020c00

080018a4 <LCD_IO_ReadData>:
{
 80018a4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018a6:	4e14      	ldr	r6, [pc, #80]	; (80018f8 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80018a8:	4f14      	ldr	r7, [pc, #80]	; (80018fc <LCD_IO_ReadData+0x58>)
{
 80018aa:	4605      	mov	r5, r0
 80018ac:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018ae:	4630      	mov	r0, r6
 80018b0:	2200      	movs	r2, #0
 80018b2:	2104      	movs	r1, #4
 80018b4:	f002 f8da 	bl	8003a6c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80018b8:	2200      	movs	r2, #0
 80018ba:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80018be:	4638      	mov	r0, r7
 80018c0:	f002 f8d4 	bl	8003a6c <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80018c4:	4628      	mov	r0, r5
 80018c6:	f7ff fd01 	bl	80012cc <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 80018ca:	4b0d      	ldr	r3, [pc, #52]	; (8001900 <LCD_IO_ReadData+0x5c>)
 80018cc:	480d      	ldr	r0, [pc, #52]	; (8001904 <LCD_IO_ReadData+0x60>)
 80018ce:	681b      	ldr	r3, [r3, #0]
 80018d0:	4622      	mov	r2, r4
 80018d2:	a901      	add	r1, sp, #4
 80018d4:	f003 fdae 	bl	8005434 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80018d8:	4638      	mov	r0, r7
 80018da:	2201      	movs	r2, #1
 80018dc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 80018e0:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80018e2:	f002 f8c3 	bl	8003a6c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018e6:	4630      	mov	r0, r6
 80018e8:	2201      	movs	r2, #1
 80018ea:	2104      	movs	r1, #4
 80018ec:	f002 f8be 	bl	8003a6c <HAL_GPIO_WritePin>
}
 80018f0:	4620      	mov	r0, r4
 80018f2:	b003      	add	sp, #12
 80018f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80018f6:	bf00      	nop
 80018f8:	40020800 	.word	0x40020800
 80018fc:	40020c00 	.word	0x40020c00
 8001900:	20000010 	.word	0x20000010
 8001904:	20001764 	.word	0x20001764

08001908 <LCD_Delay>:
  HAL_Delay(Delay);
 8001908:	f001 bdfc 	b.w	8003504 <HAL_Delay>

0800190c <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 800190c:	6802      	ldr	r2, [r0, #0]
 800190e:	4b03      	ldr	r3, [pc, #12]	; (800191c <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001910:	429a      	cmp	r2, r3
 8001912:	d101      	bne.n	8001918 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8001914:	f001 bde4 	b.w	80034e0 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001918:	4770      	bx	lr
 800191a:	bf00      	nop
 800191c:	40001000 	.word	0x40001000

08001920 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001920:	4770      	bx	lr
	...

08001924 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001924:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001926:	4b0e      	ldr	r3, [pc, #56]	; (8001960 <HAL_MspInit+0x3c>)
 8001928:	2200      	movs	r2, #0
 800192a:	9200      	str	r2, [sp, #0]
 800192c:	6c59      	ldr	r1, [r3, #68]	; 0x44
 800192e:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001932:	6459      	str	r1, [r3, #68]	; 0x44
 8001934:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001936:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 800193a:	9100      	str	r1, [sp, #0]
 800193c:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800193e:	9201      	str	r2, [sp, #4]
 8001940:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001942:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001946:	6419      	str	r1, [r3, #64]	; 0x40
 8001948:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800194a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800194e:	9301      	str	r3, [sp, #4]
 8001950:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001952:	210f      	movs	r1, #15
 8001954:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001958:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800195a:	f001 bdf9 	b.w	8003550 <HAL_NVIC_SetPriority>
 800195e:	bf00      	nop
 8001960:	40023800 	.word	0x40023800

08001964 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001964:	6802      	ldr	r2, [r0, #0]
 8001966:	4b09      	ldr	r3, [pc, #36]	; (800198c <HAL_CRC_MspInit+0x28>)
 8001968:	429a      	cmp	r2, r3
{
 800196a:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 800196c:	d10b      	bne.n	8001986 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800196e:	2300      	movs	r3, #0
 8001970:	9301      	str	r3, [sp, #4]
 8001972:	4b07      	ldr	r3, [pc, #28]	; (8001990 <HAL_CRC_MspInit+0x2c>)
 8001974:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001976:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800197a:	631a      	str	r2, [r3, #48]	; 0x30
 800197c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800197e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001982:	9301      	str	r3, [sp, #4]
 8001984:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001986:	b002      	add	sp, #8
 8001988:	4770      	bx	lr
 800198a:	bf00      	nop
 800198c:	40023000 	.word	0x40023000
 8001990:	40023800 	.word	0x40023800

08001994 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001994:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001996:	4b0f      	ldr	r3, [pc, #60]	; (80019d4 <HAL_DMA2D_MspInit+0x40>)
 8001998:	6802      	ldr	r2, [r0, #0]
 800199a:	429a      	cmp	r2, r3
 800199c:	d116      	bne.n	80019cc <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800199e:	2200      	movs	r2, #0
 80019a0:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 80019a4:	9201      	str	r2, [sp, #4]
 80019a6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80019a8:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 80019ac:	6319      	str	r1, [r3, #48]	; 0x30
 80019ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019b0:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80019b4:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80019b6:	2105      	movs	r1, #5
 80019b8:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80019ba:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80019bc:	f001 fdc8 	bl	8003550 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80019c0:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 80019c2:	b003      	add	sp, #12
 80019c4:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80019c8:	f001 bdf4 	b.w	80035b4 <HAL_NVIC_EnableIRQ>
}
 80019cc:	b003      	add	sp, #12
 80019ce:	f85d fb04 	ldr.w	pc, [sp], #4
 80019d2:	bf00      	nop
 80019d4:	4002b000 	.word	0x4002b000

080019d8 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80019d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80019dc:	4604      	mov	r4, r0
 80019de:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80019e0:	2214      	movs	r2, #20
 80019e2:	2100      	movs	r1, #0
 80019e4:	a803      	add	r0, sp, #12
 80019e6:	f01a f805 	bl	801b9f4 <memset>
  if(hi2c->Instance==I2C3)
 80019ea:	6822      	ldr	r2, [r4, #0]
 80019ec:	4b24      	ldr	r3, [pc, #144]	; (8001a80 <HAL_I2C_MspInit+0xa8>)
 80019ee:	429a      	cmp	r2, r3
 80019f0:	d143      	bne.n	8001a7a <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 80019f2:	4c24      	ldr	r4, [pc, #144]	; (8001a84 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019f4:	4824      	ldr	r0, [pc, #144]	; (8001a88 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80019f6:	2500      	movs	r5, #0
 80019f8:	9500      	str	r5, [sp, #0]
 80019fa:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80019fc:	f043 0304 	orr.w	r3, r3, #4
 8001a00:	6323      	str	r3, [r4, #48]	; 0x30
 8001a02:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001a04:	f003 0304 	and.w	r3, r3, #4
 8001a08:	9300      	str	r3, [sp, #0]
 8001a0a:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001a0c:	9501      	str	r5, [sp, #4]
 8001a0e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001a10:	f043 0301 	orr.w	r3, r3, #1
 8001a14:	6323      	str	r3, [r4, #48]	; 0x30
 8001a16:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001a18:	f003 0301 	and.w	r3, r3, #1
 8001a1c:	9301      	str	r3, [sp, #4]
 8001a1e:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001a20:	f04f 0912 	mov.w	r9, #18
 8001a24:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a28:	f04f 0801 	mov.w	r8, #1
 8001a2c:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001a2e:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a30:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001a32:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a36:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001a3a:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a3c:	f001 ff2a 	bl	8003894 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001a40:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a44:	4811      	ldr	r0, [pc, #68]	; (8001a8c <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001a46:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a48:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001a4a:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a4e:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a52:	f001 ff1f 	bl	8003894 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001a56:	9502      	str	r5, [sp, #8]
 8001a58:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001a5a:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001a5e:	6423      	str	r3, [r4, #64]	; 0x40
 8001a60:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001a62:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001a66:	9302      	str	r3, [sp, #8]
 8001a68:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8001a6a:	6a23      	ldr	r3, [r4, #32]
 8001a6c:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001a70:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001a72:	6a23      	ldr	r3, [r4, #32]
 8001a74:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001a78:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001a7a:	b009      	add	sp, #36	; 0x24
 8001a7c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001a80:	40005c00 	.word	0x40005c00
 8001a84:	40023800 	.word	0x40023800
 8001a88:	40020800 	.word	0x40020800
 8001a8c:	40020000 	.word	0x40020000

08001a90 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001a90:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001a92:	b099      	sub	sp, #100	; 0x64
 8001a94:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a96:	2214      	movs	r2, #20
 8001a98:	2100      	movs	r1, #0
 8001a9a:	a807      	add	r0, sp, #28
 8001a9c:	f019 ffaa 	bl	801b9f4 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001aa0:	2230      	movs	r2, #48	; 0x30
 8001aa2:	eb0d 0002 	add.w	r0, sp, r2
 8001aa6:	2100      	movs	r1, #0
 8001aa8:	f019 ffa4 	bl	801b9f4 <memset>
  if(hltdc->Instance==LTDC)
 8001aac:	6822      	ldr	r2, [r4, #0]
 8001aae:	4b5e      	ldr	r3, [pc, #376]	; (8001c28 <HAL_LTDC_MspInit+0x198>)
 8001ab0:	429a      	cmp	r2, r3
 8001ab2:	f040 80b7 	bne.w	8001c24 <HAL_LTDC_MspInit+0x194>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001ab6:	2308      	movs	r3, #8
 8001ab8:	930c      	str	r3, [sp, #48]	; 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001aba:	23c0      	movs	r3, #192	; 0xc0
 8001abc:	9310      	str	r3, [sp, #64]	; 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001abe:	2304      	movs	r3, #4
 8001ac0:	9312      	str	r3, [sp, #72]	; 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001ac2:	a80c      	add	r0, sp, #48	; 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001ac4:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8001ac8:	9315      	str	r3, [sp, #84]	; 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001aca:	f003 f88b 	bl	8004be4 <HAL_RCCEx_PeriphCLKConfig>
 8001ace:	b108      	cbz	r0, 8001ad4 <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 8001ad0:	f7ff ff26 	bl	8001920 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001ad4:	4b55      	ldr	r3, [pc, #340]	; (8001c2c <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ad6:	4856      	ldr	r0, [pc, #344]	; (8001c30 <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001ad8:	2400      	movs	r4, #0
 8001ada:	9400      	str	r4, [sp, #0]
 8001adc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001ade:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001ae2:	645a      	str	r2, [r3, #68]	; 0x44
 8001ae4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001ae6:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001aea:	9200      	str	r2, [sp, #0]
 8001aec:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001aee:	9401      	str	r4, [sp, #4]
 8001af0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001af2:	f042 0220 	orr.w	r2, r2, #32
 8001af6:	631a      	str	r2, [r3, #48]	; 0x30
 8001af8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001afa:	f002 0220 	and.w	r2, r2, #32
 8001afe:	9201      	str	r2, [sp, #4]
 8001b00:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b02:	9402      	str	r4, [sp, #8]
 8001b04:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b06:	f042 0201 	orr.w	r2, r2, #1
 8001b0a:	631a      	str	r2, [r3, #48]	; 0x30
 8001b0c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b0e:	f002 0201 	and.w	r2, r2, #1
 8001b12:	9202      	str	r2, [sp, #8]
 8001b14:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b16:	9403      	str	r4, [sp, #12]
 8001b18:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b1a:	f042 0202 	orr.w	r2, r2, #2
 8001b1e:	631a      	str	r2, [r3, #48]	; 0x30
 8001b20:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b22:	f002 0202 	and.w	r2, r2, #2
 8001b26:	9203      	str	r2, [sp, #12]
 8001b28:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001b2a:	9404      	str	r4, [sp, #16]
 8001b2c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b2e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001b32:	631a      	str	r2, [r3, #48]	; 0x30
 8001b34:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b36:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001b3a:	9204      	str	r2, [sp, #16]
 8001b3c:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b3e:	9405      	str	r4, [sp, #20]
 8001b40:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b42:	f042 0204 	orr.w	r2, r2, #4
 8001b46:	631a      	str	r2, [r3, #48]	; 0x30
 8001b48:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b4a:	f002 0204 	and.w	r2, r2, #4
 8001b4e:	9205      	str	r2, [sp, #20]
 8001b50:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001b52:	9406      	str	r4, [sp, #24]
 8001b54:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b56:	f042 0208 	orr.w	r2, r2, #8
 8001b5a:	631a      	str	r2, [r3, #48]	; 0x30
 8001b5c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b5e:	f003 0308 	and.w	r3, r3, #8
 8001b62:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b64:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001b66:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001b68:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001b6a:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b6c:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b70:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b72:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001b76:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001b7a:	f001 fe8b 	bl	8003894 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001b7e:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b82:	482c      	ldr	r0, [pc, #176]	; (8001c34 <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001b84:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b86:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b88:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001b8c:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001b8e:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b92:	f001 fe7f 	bl	8003894 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001b96:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b98:	4827      	ldr	r0, [pc, #156]	; (8001c38 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001b9a:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001b9c:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b9e:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001ba2:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ba6:	f001 fe75 	bl	8003894 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001baa:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bae:	4822      	ldr	r0, [pc, #136]	; (8001c38 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001bb0:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bb2:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bb4:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001bb8:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001bbc:	f001 fe6a 	bl	8003894 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001bc0:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001bc4:	481d      	ldr	r0, [pc, #116]	; (8001c3c <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001bc6:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001bc8:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bca:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001bce:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001bd2:	f001 fe5f 	bl	8003894 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001bd6:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001bd8:	4819      	ldr	r0, [pc, #100]	; (8001c40 <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001bda:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001bdc:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bde:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001be2:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001be6:	f001 fe55 	bl	8003894 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001bea:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001bec:	4815      	ldr	r0, [pc, #84]	; (8001c44 <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001bee:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001bf0:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001bf2:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001bf6:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001bfa:	f001 fe4b 	bl	8003894 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001bfe:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c02:	480e      	ldr	r0, [pc, #56]	; (8001c3c <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001c04:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c06:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c08:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001c0c:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001c10:	f001 fe40 	bl	8003894 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001c14:	2058      	movs	r0, #88	; 0x58
 8001c16:	4622      	mov	r2, r4
 8001c18:	2105      	movs	r1, #5
 8001c1a:	f001 fc99 	bl	8003550 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001c1e:	2058      	movs	r0, #88	; 0x58
 8001c20:	f001 fcc8 	bl	80035b4 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001c24:	b019      	add	sp, #100	; 0x64
 8001c26:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001c28:	40016800 	.word	0x40016800
 8001c2c:	40023800 	.word	0x40023800
 8001c30:	40021400 	.word	0x40021400
 8001c34:	40020000 	.word	0x40020000
 8001c38:	40020400 	.word	0x40020400
 8001c3c:	40021800 	.word	0x40021800
 8001c40:	40020800 	.word	0x40020800
 8001c44:	40020c00 	.word	0x40020c00

08001c48 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001c48:	b510      	push	{r4, lr}
 8001c4a:	4604      	mov	r4, r0
 8001c4c:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c4e:	2214      	movs	r2, #20
 8001c50:	2100      	movs	r1, #0
 8001c52:	a803      	add	r0, sp, #12
 8001c54:	f019 fece 	bl	801b9f4 <memset>
  if(hspi->Instance==SPI5)
 8001c58:	6822      	ldr	r2, [r4, #0]
 8001c5a:	4b14      	ldr	r3, [pc, #80]	; (8001cac <HAL_SPI_MspInit+0x64>)
 8001c5c:	429a      	cmp	r2, r3
 8001c5e:	d123      	bne.n	8001ca8 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001c60:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8001c64:	2100      	movs	r1, #0
 8001c66:	9101      	str	r1, [sp, #4]
 8001c68:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c6a:	4811      	ldr	r0, [pc, #68]	; (8001cb0 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001c6c:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8001c70:	645a      	str	r2, [r3, #68]	; 0x44
 8001c72:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001c74:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8001c78:	9201      	str	r2, [sp, #4]
 8001c7a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c7c:	9102      	str	r1, [sp, #8]
 8001c7e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c80:	f042 0220 	orr.w	r2, r2, #32
 8001c84:	631a      	str	r2, [r3, #48]	; 0x30
 8001c86:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c88:	f003 0320 	and.w	r3, r3, #32
 8001c8c:	9302      	str	r3, [sp, #8]
 8001c8e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c90:	f44f 7260 	mov.w	r2, #896	; 0x380
 8001c94:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001c96:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c98:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001c9c:	2305      	movs	r3, #5
 8001c9e:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ca2:	a903      	add	r1, sp, #12
 8001ca4:	f001 fdf6 	bl	8003894 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001ca8:	b008      	add	sp, #32
 8001caa:	bd10      	pop	{r4, pc}
 8001cac:	40015000 	.word	0x40015000
 8001cb0:	40021400 	.word	0x40021400

08001cb4 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001cb4:	b510      	push	{r4, lr}
 8001cb6:	4604      	mov	r4, r0
 8001cb8:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cba:	2214      	movs	r2, #20
 8001cbc:	2100      	movs	r1, #0
 8001cbe:	a803      	add	r0, sp, #12
 8001cc0:	f019 fe98 	bl	801b9f4 <memset>
  if(huart->Instance==USART3)
 8001cc4:	6822      	ldr	r2, [r4, #0]
 8001cc6:	4b18      	ldr	r3, [pc, #96]	; (8001d28 <HAL_UART_MspInit+0x74>)
 8001cc8:	429a      	cmp	r2, r3
 8001cca:	d12b      	bne.n	8001d24 <HAL_UART_MspInit+0x70>
  {
  /* USER CODE BEGIN USART3_MspInit 0 */

  /* USER CODE END USART3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART3_CLK_ENABLE();
 8001ccc:	f503 33f8 	add.w	r3, r3, #126976	; 0x1f000
 8001cd0:	2400      	movs	r4, #0
 8001cd2:	9401      	str	r4, [sp, #4]
 8001cd4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001cd6:	4815      	ldr	r0, [pc, #84]	; (8001d2c <HAL_UART_MspInit+0x78>)
    __HAL_RCC_USART3_CLK_ENABLE();
 8001cd8:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8001cdc:	641a      	str	r2, [r3, #64]	; 0x40
 8001cde:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001ce0:	f402 2280 	and.w	r2, r2, #262144	; 0x40000
 8001ce4:	9201      	str	r2, [sp, #4]
 8001ce6:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001ce8:	9402      	str	r4, [sp, #8]
 8001cea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001cec:	f042 0204 	orr.w	r2, r2, #4
 8001cf0:	631a      	str	r2, [r3, #48]	; 0x30
 8001cf2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001cf4:	f003 0304 	and.w	r3, r3, #4
 8001cf8:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cfa:	f44f 6240 	mov.w	r2, #3072	; 0xc00
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001cfe:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d00:	2302      	movs	r3, #2
 8001d02:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 8001d06:	2103      	movs	r1, #3
 8001d08:	2307      	movs	r3, #7
 8001d0a:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d0e:	a903      	add	r1, sp, #12
 8001d10:	f001 fdc0 	bl	8003894 <HAL_GPIO_Init>

    /* USART3 interrupt Init */
    HAL_NVIC_SetPriority(USART3_IRQn, 5, 0);
 8001d14:	2027      	movs	r0, #39	; 0x27
 8001d16:	4622      	mov	r2, r4
 8001d18:	2105      	movs	r1, #5
 8001d1a:	f001 fc19 	bl	8003550 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART3_IRQn);
 8001d1e:	2027      	movs	r0, #39	; 0x27
 8001d20:	f001 fc48 	bl	80035b4 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART3_MspInit 1 */

  /* USER CODE END USART3_MspInit 1 */
  }

}
 8001d24:	b008      	add	sp, #32
 8001d26:	bd10      	pop	{r4, pc}
 8001d28:	40004800 	.word	0x40004800
 8001d2c:	40020800 	.word	0x40020800

08001d30 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001d30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001d34:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001d36:	2300      	movs	r3, #0
 8001d38:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001d3a:	4b2b      	ldr	r3, [pc, #172]	; (8001de8 <HAL_SDRAM_MspInit+0xb8>)
 8001d3c:	681c      	ldr	r4, [r3, #0]
 8001d3e:	2c00      	cmp	r4, #0
 8001d40:	d14f      	bne.n	8001de2 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8001d42:	f04f 0801 	mov.w	r8, #1
 8001d46:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d4a:	4b28      	ldr	r3, [pc, #160]	; (8001dec <HAL_SDRAM_MspInit+0xbc>)
 8001d4c:	9400      	str	r4, [sp, #0]
 8001d4e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d50:	4827      	ldr	r0, [pc, #156]	; (8001df0 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d52:	ea42 0208 	orr.w	r2, r2, r8
 8001d56:	639a      	str	r2, [r3, #56]	; 0x38
 8001d58:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001d5a:	ea03 0308 	and.w	r3, r3, r8
 8001d5e:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d60:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d62:	2603      	movs	r6, #3
 8001d64:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001d66:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d68:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d6a:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8001d6e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d72:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d76:	f001 fd8d 	bl	8003894 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d7a:	481e      	ldr	r0, [pc, #120]	; (8001df4 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d7c:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d7e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d80:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d84:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d88:	f001 fd84 	bl	8003894 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001d8c:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d90:	4819      	ldr	r0, [pc, #100]	; (8001df8 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d92:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d94:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d96:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d9a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d9e:	f001 fd79 	bl	8003894 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001da2:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001da6:	4815      	ldr	r0, [pc, #84]	; (8001dfc <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001da8:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001daa:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dac:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001db0:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001db4:	f001 fd6e 	bl	8003894 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001db8:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001dbc:	4810      	ldr	r0, [pc, #64]	; (8001e00 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dbe:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001dc0:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dc2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001dc6:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001dca:	f001 fd63 	bl	8003894 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001dce:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001dd0:	480c      	ldr	r0, [pc, #48]	; (8001e04 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001dd2:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001dd4:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dd6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001dda:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001dde:	f001 fd59 	bl	8003894 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001de2:	b006      	add	sp, #24
 8001de4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001de8:	20001800 	.word	0x20001800
 8001dec:	40023800 	.word	0x40023800
 8001df0:	40021400 	.word	0x40021400
 8001df4:	40020800 	.word	0x40020800
 8001df8:	40021800 	.word	0x40021800
 8001dfc:	40021000 	.word	0x40021000
 8001e00:	40020c00 	.word	0x40020c00
 8001e04:	40020400 	.word	0x40020400

08001e08 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001e08:	b570      	push	{r4, r5, r6, lr}
 8001e0a:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e0c:	2300      	movs	r3, #0
 8001e0e:	9302      	str	r3, [sp, #8]
 8001e10:	4b20      	ldr	r3, [pc, #128]	; (8001e94 <HAL_InitTick+0x8c>)
 8001e12:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001e14:	f042 0210 	orr.w	r2, r2, #16
 8001e18:	641a      	str	r2, [r3, #64]	; 0x40
 8001e1a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e1c:	f003 0310 	and.w	r3, r3, #16
 8001e20:	9302      	str	r3, [sp, #8]
{
 8001e22:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001e24:	a901      	add	r1, sp, #4
 8001e26:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e28:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001e2a:	f002 febd 	bl	8004ba8 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8001e2e:	9b06      	ldr	r3, [sp, #24]
 8001e30:	bb4b      	cbnz	r3, 8001e86 <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8001e32:	f002 fe99 	bl	8004b68 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001e36:	4e18      	ldr	r6, [pc, #96]	; (8001e98 <HAL_InitTick+0x90>)
 8001e38:	4b18      	ldr	r3, [pc, #96]	; (8001e9c <HAL_InitTick+0x94>)
 8001e3a:	6033      	str	r3, [r6, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001e3c:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001e40:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001e42:	4b17      	ldr	r3, [pc, #92]	; (8001ea0 <HAL_InitTick+0x98>)
 8001e44:	fbb0 f3f3 	udiv	r3, r0, r3
 8001e48:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001e4a:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8001e4c:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 8001e4e:	2300      	movs	r3, #0
 8001e50:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001e52:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001e54:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 8001e56:	f003 fcd9 	bl	800580c <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8001e5a:	4604      	mov	r4, r0
 8001e5c:	b980      	cbnz	r0, 8001e80 <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 8001e5e:	4630      	mov	r0, r6
 8001e60:	f003 fb8e 	bl	8005580 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8001e64:	4604      	mov	r4, r0
 8001e66:	b958      	cbnz	r0, 8001e80 <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001e68:	2036      	movs	r0, #54	; 0x36
 8001e6a:	f001 fba3 	bl	80035b4 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001e6e:	2d0f      	cmp	r5, #15
 8001e70:	d80d      	bhi.n	8001e8e <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8001e72:	4622      	mov	r2, r4
 8001e74:	4629      	mov	r1, r5
 8001e76:	2036      	movs	r0, #54	; 0x36
 8001e78:	f001 fb6a 	bl	8003550 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8001e7c:	4b09      	ldr	r3, [pc, #36]	; (8001ea4 <HAL_InitTick+0x9c>)
 8001e7e:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 8001e80:	4620      	mov	r0, r4
 8001e82:	b008      	add	sp, #32
 8001e84:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8001e86:	f002 fe6f 	bl	8004b68 <HAL_RCC_GetPCLK1Freq>
 8001e8a:	0040      	lsls	r0, r0, #1
 8001e8c:	e7d3      	b.n	8001e36 <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 8001e8e:	2401      	movs	r4, #1
 8001e90:	e7f6      	b.n	8001e80 <HAL_InitTick+0x78>
 8001e92:	bf00      	nop
 8001e94:	40023800 	.word	0x40023800
 8001e98:	20001804 	.word	0x20001804
 8001e9c:	40001000 	.word	0x40001000
 8001ea0:	000f4240 	.word	0x000f4240
 8001ea4:	2000007c 	.word	0x2000007c

08001ea8 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001ea8:	4770      	bx	lr

08001eaa <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001eaa:	e7fe      	b.n	8001eaa <HardFault_Handler>

08001eac <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001eac:	e7fe      	b.n	8001eac <MemManage_Handler>

08001eae <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001eae:	e7fe      	b.n	8001eae <BusFault_Handler>

08001eb0 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001eb0:	e7fe      	b.n	8001eb0 <UsageFault_Handler>

08001eb2 <DebugMon_Handler>:
 8001eb2:	4770      	bx	lr

08001eb4 <USART3_IRQHandler>:
void USART3_IRQHandler(void)
{
  /* USER CODE BEGIN USART3_IRQn 0 */

  /* USER CODE END USART3_IRQn 0 */
  HAL_UART_IRQHandler(&huart3);
 8001eb4:	4801      	ldr	r0, [pc, #4]	; (8001ebc <USART3_IRQHandler+0x8>)
 8001eb6:	f003 be75 	b.w	8005ba4 <HAL_UART_IRQHandler>
 8001eba:	bf00      	nop
 8001ebc:	200017bc 	.word	0x200017bc

08001ec0 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001ec0:	4801      	ldr	r0, [pc, #4]	; (8001ec8 <TIM6_DAC_IRQHandler+0x8>)
 8001ec2:	f003 bb9b 	b.w	80055fc <HAL_TIM_IRQHandler>
 8001ec6:	bf00      	nop
 8001ec8:	20001804 	.word	0x20001804

08001ecc <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001ecc:	4801      	ldr	r0, [pc, #4]	; (8001ed4 <LTDC_IRQHandler+0x8>)
 8001ece:	f002 bb29 	b.w	8004524 <HAL_LTDC_IRQHandler>
 8001ed2:	bf00      	nop
 8001ed4:	20001688 	.word	0x20001688

08001ed8 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001ed8:	4801      	ldr	r0, [pc, #4]	; (8001ee0 <DMA2D_IRQHandler+0x8>)
 8001eda:	f001 bc0d 	b.w	80036f8 <HAL_DMA2D_IRQHandler>
 8001ede:	bf00      	nop
 8001ee0:	200015f4 	.word	0x200015f4

08001ee4 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001ee4:	2001      	movs	r0, #1
 8001ee6:	4770      	bx	lr

08001ee8 <_kill>:

int _kill(int pid, int sig)
{
 8001ee8:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001eea:	f019 fd29 	bl	801b940 <__errno>
 8001eee:	2316      	movs	r3, #22
 8001ef0:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001ef2:	f04f 30ff 	mov.w	r0, #4294967295
 8001ef6:	bd08      	pop	{r3, pc}

08001ef8 <_exit>:

void _exit (int status)
{
 8001ef8:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001efa:	f019 fd21 	bl	801b940 <__errno>
 8001efe:	2316      	movs	r3, #22
 8001f00:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001f02:	e7fe      	b.n	8001f02 <_exit+0xa>

08001f04 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001f04:	b570      	push	{r4, r5, r6, lr}
 8001f06:	460d      	mov	r5, r1
 8001f08:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f0a:	460e      	mov	r6, r1
 8001f0c:	1b73      	subs	r3, r6, r5
 8001f0e:	429c      	cmp	r4, r3
 8001f10:	dc01      	bgt.n	8001f16 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001f12:	4620      	mov	r0, r4
 8001f14:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001f16:	f3af 8000 	nop.w
 8001f1a:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f1e:	e7f5      	b.n	8001f0c <_read+0x8>

08001f20 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001f20:	b570      	push	{r4, r5, r6, lr}
 8001f22:	460d      	mov	r5, r1
 8001f24:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f26:	460e      	mov	r6, r1
 8001f28:	1b73      	subs	r3, r6, r5
 8001f2a:	429c      	cmp	r4, r3
 8001f2c:	dc01      	bgt.n	8001f32 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001f2e:	4620      	mov	r0, r4
 8001f30:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001f32:	f816 0b01 	ldrb.w	r0, [r6], #1
 8001f36:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f3a:	e7f5      	b.n	8001f28 <_write+0x8>

08001f3c <_close>:

int _close(int file)
{
	return -1;
}
 8001f3c:	f04f 30ff 	mov.w	r0, #4294967295
 8001f40:	4770      	bx	lr

08001f42 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001f42:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001f46:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001f48:	2000      	movs	r0, #0
 8001f4a:	4770      	bx	lr

08001f4c <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001f4c:	2001      	movs	r0, #1
 8001f4e:	4770      	bx	lr

08001f50 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001f50:	2000      	movs	r0, #0
 8001f52:	4770      	bx	lr

08001f54 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001f54:	4a0a      	ldr	r2, [pc, #40]	; (8001f80 <_sbrk+0x2c>)
 8001f56:	6811      	ldr	r1, [r2, #0]
{
 8001f58:	b508      	push	{r3, lr}
 8001f5a:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001f5c:	b909      	cbnz	r1, 8001f62 <_sbrk+0xe>
		heap_end = &end;
 8001f5e:	4909      	ldr	r1, [pc, #36]	; (8001f84 <_sbrk+0x30>)
 8001f60:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8001f62:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8001f64:	4669      	mov	r1, sp
 8001f66:	4403      	add	r3, r0
 8001f68:	428b      	cmp	r3, r1
 8001f6a:	d906      	bls.n	8001f7a <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001f6c:	f019 fce8 	bl	801b940 <__errno>
 8001f70:	230c      	movs	r3, #12
 8001f72:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001f74:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001f78:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001f7a:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8001f7c:	e7fc      	b.n	8001f78 <_sbrk+0x24>
 8001f7e:	bf00      	nop
 8001f80:	2000184c 	.word	0x2000184c
 8001f84:	20012918 	.word	0x20012918

08001f88 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8001f88:	4770      	bx	lr

08001f8a <_ZN23ApplicationFontProviderD0Ev>:
 8001f8a:	b510      	push	{r4, lr}
 8001f8c:	2104      	movs	r1, #4
 8001f8e:	4604      	mov	r4, r0
 8001f90:	f019 fc76 	bl	801b880 <_ZdlPvj>
 8001f94:	4620      	mov	r0, r4
 8001f96:	bd10      	pop	{r4, pc}

08001f98 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8001f98:	2901      	cmp	r1, #1
{
 8001f9a:	b508      	push	{r3, lr}
    switch (typography)
 8001f9c:	d006      	beq.n	8001fac <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8001f9e:	2902      	cmp	r1, #2
 8001fa0:	d008      	beq.n	8001fb4 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8001fa2:	b959      	cbnz	r1, 8001fbc <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8001fa4:	f000 fe80 	bl	8002ca8 <_ZN17TypedTextDatabase8getFontsEv>
 8001fa8:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8001faa:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8001fac:	f000 fe7c 	bl	8002ca8 <_ZN17TypedTextDatabase8getFontsEv>
 8001fb0:	6840      	ldr	r0, [r0, #4]
 8001fb2:	e7fa      	b.n	8001faa <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8001fb4:	f000 fe78 	bl	8002ca8 <_ZN17TypedTextDatabase8getFontsEv>
 8001fb8:	6880      	ldr	r0, [r0, #8]
 8001fba:	e7f6      	b.n	8001faa <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8001fbc:	2000      	movs	r0, #0
 8001fbe:	e7f4      	b.n	8001faa <_ZN23ApplicationFontProvider7getFontEt+0x12>

08001fc0 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8001fc0:	4800      	ldr	r0, [pc, #0]	; (8001fc4 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8001fc2:	4770      	bx	lr
 8001fc4:	0801d128 	.word	0x0801d128

08001fc8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8001fc8:	2006      	movs	r0, #6
 8001fca:	4770      	bx	lr

08001fcc <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8001fcc:	b513      	push	{r0, r1, r4, lr}
 8001fce:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8001fd0:	b151      	cbz	r1, 8001fe8 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001fd2:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8001fd4:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8001fd6:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001fda:	aa01      	add	r2, sp, #4
 8001fdc:	689c      	ldr	r4, [r3, #8]
 8001fde:	f10d 0303 	add.w	r3, sp, #3
 8001fe2:	47a0      	blx	r4
        return glyph;
    }
 8001fe4:	b002      	add	sp, #8
 8001fe6:	bd10      	pop	{r4, pc}
            return 0;
 8001fe8:	4608      	mov	r0, r1
 8001fea:	e7fb      	b.n	8001fe4 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08001fec <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8001fec:	89c0      	ldrh	r0, [r0, #14]
 8001fee:	4770      	bx	lr

08001ff0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8001ff0:	8a00      	ldrh	r0, [r0, #16]
 8001ff2:	4770      	bx	lr

08001ff4 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8001ff4:	88c0      	ldrh	r0, [r0, #6]
 8001ff6:	4770      	bx	lr

08001ff8 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8001ff8:	8880      	ldrh	r0, [r0, #4]
 8001ffa:	4770      	bx	lr

08001ffc <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8001ffc:	7a80      	ldrb	r0, [r0, #10]
    }
 8001ffe:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002002:	4770      	bx	lr

08002004 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002004:	7a80      	ldrb	r0, [r0, #10]
    }
 8002006:	09c0      	lsrs	r0, r0, #7
 8002008:	4770      	bx	lr

0800200a <_ZN8touchgfx9TypedTextD1Ev>:
    }
 800200a:	4770      	bx	lr

0800200c <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800200c:	b510      	push	{r4, lr}
    }
 800200e:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002010:	4604      	mov	r4, r0
    }
 8002012:	f019 fc35 	bl	801b880 <_ZdlPvj>
 8002016:	4620      	mov	r0, r4
 8002018:	bd10      	pop	{r4, pc}

0800201a <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 800201a:	4770      	bx	lr

0800201c <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 800201c:	4770      	bx	lr

0800201e <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 800201e:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8002022:	6808      	ldr	r0, [r1, #0]
 8002024:	6849      	ldr	r1, [r1, #4]
 8002026:	c303      	stmia	r3!, {r0, r1}
    }
 8002028:	4770      	bx	lr

0800202a <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 800202a:	4770      	bx	lr

0800202c <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 800202c:	4770      	bx	lr

0800202e <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 800202e:	6041      	str	r1, [r0, #4]
    }
 8002030:	4770      	bx	lr

08002032 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002032:	4770      	bx	lr

08002034 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002034:	4b06      	ldr	r3, [pc, #24]	; (8002050 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8002036:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800203a:	2300      	movs	r3, #0
 800203c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002040:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8002044:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8002048:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 800204c:	4770      	bx	lr
 800204e:	bf00      	nop
 8002050:	080020f5 	.word	0x080020f5

08002054 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002054:	2301      	movs	r3, #1
 8002056:	7203      	strb	r3, [r0, #8]
    }
 8002058:	4770      	bx	lr

0800205a <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 800205a:	4770      	bx	lr

0800205c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 800205c:	4770      	bx	lr

0800205e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800205e:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8002060:	68c2      	ldr	r2, [r0, #12]
 8002062:	6841      	ldr	r1, [r0, #4]
 8002064:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002066:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8002068:	eb01 0062 	add.w	r0, r1, r2, asr #1
 800206c:	07d2      	lsls	r2, r2, #31
 800206e:	bf48      	it	mi
 8002070:	590a      	ldrmi	r2, [r1, r4]
 8002072:	689b      	ldr	r3, [r3, #8]
    }
 8002074:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002078:	bf48      	it	mi
 800207a:	58d3      	ldrmi	r3, [r2, r3]
 800207c:	4718      	bx	r3

0800207e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 800207e:	6843      	ldr	r3, [r0, #4]
 8002080:	b12b      	cbz	r3, 800208e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002082:	6883      	ldr	r3, [r0, #8]
 8002084:	b92b      	cbnz	r3, 8002092 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002086:	68c0      	ldr	r0, [r0, #12]
 8002088:	f000 0001 	and.w	r0, r0, #1
 800208c:	4770      	bx	lr
 800208e:	4618      	mov	r0, r3
 8002090:	4770      	bx	lr
 8002092:	2001      	movs	r0, #1
    }
 8002094:	4770      	bx	lr

08002096 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002096:	b510      	push	{r4, lr}
 8002098:	210c      	movs	r1, #12
 800209a:	4604      	mov	r4, r0
 800209c:	f019 fbf0 	bl	801b880 <_ZdlPvj>
 80020a0:	4620      	mov	r0, r4
 80020a2:	bd10      	pop	{r4, pc}

080020a4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80020a4:	b510      	push	{r4, lr}
 80020a6:	2110      	movs	r1, #16
 80020a8:	4604      	mov	r4, r0
 80020aa:	f019 fbe9 	bl	801b880 <_ZdlPvj>
 80020ae:	4620      	mov	r0, r4
 80020b0:	bd10      	pop	{r4, pc}

080020b2 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80020b2:	b510      	push	{r4, lr}
 80020b4:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80020b8:	4604      	mov	r4, r0
 80020ba:	f019 fbe1 	bl	801b880 <_ZdlPvj>
 80020be:	4620      	mov	r0, r4
 80020c0:	bd10      	pop	{r4, pc}

080020c2 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80020c2:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 80020c4:	f00a fdb4 	bl	800cc30 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80020c8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 80020cc:	f00b b9f8 	b.w	800d4c0 <_ZN8touchgfx11Application10invalidateEv>

080020d0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80020d0:	b510      	push	{r4, lr}
 80020d2:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80020d4:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 80020d8:	b158      	cbz	r0, 80020f2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80020da:	6803      	ldr	r3, [r0, #0]
 80020dc:	68db      	ldr	r3, [r3, #12]
 80020de:	4798      	blx	r3
 80020e0:	b138      	cbz	r0, 80020f2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80020e2:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 80020e6:	6803      	ldr	r3, [r0, #0]
 80020e8:	689b      	ldr	r3, [r3, #8]
 80020ea:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80020ec:	2300      	movs	r3, #0
 80020ee:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 80020f2:	bd10      	pop	{r4, pc}

080020f4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 80020f4:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80020f8:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80020fc:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80020fe:	68a8      	ldr	r0, [r5, #8]
 8002100:	6803      	ldr	r3, [r0, #0]
 8002102:	6a1b      	ldr	r3, [r3, #32]
 8002104:	4798      	blx	r3
 8002106:	f5b0 7f1d 	cmp.w	r0, #628	; 0x274
 800210a:	d205      	bcs.n	8002118 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 800210c:	4b45      	ldr	r3, [pc, #276]	; (8002224 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 800210e:	4a46      	ldr	r2, [pc, #280]	; (8002228 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002110:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002112:	4846      	ldr	r0, [pc, #280]	; (800222c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 8002114:	f019 fbe2 	bl	801b8dc <__assert_func>
 8002118:	6868      	ldr	r0, [r5, #4]
 800211a:	6803      	ldr	r3, [r0, #0]
 800211c:	6a1b      	ldr	r3, [r3, #32]
 800211e:	4798      	blx	r3
 8002120:	280f      	cmp	r0, #15
 8002122:	d803      	bhi.n	800212c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 8002124:	4b42      	ldr	r3, [pc, #264]	; (8002230 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 8002126:	4a40      	ldr	r2, [pc, #256]	; (8002228 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002128:	21a4      	movs	r1, #164	; 0xa4
 800212a:	e7f2      	b.n	8002112 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800212c:	68e8      	ldr	r0, [r5, #12]
 800212e:	6803      	ldr	r3, [r0, #0]
 8002130:	6a1b      	ldr	r3, [r3, #32]
 8002132:	4798      	blx	r3
 8002134:	280b      	cmp	r0, #11
 8002136:	d803      	bhi.n	8002140 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 8002138:	4b3e      	ldr	r3, [pc, #248]	; (8002234 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 800213a:	4a3b      	ldr	r2, [pc, #236]	; (8002228 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 800213c:	21a5      	movs	r1, #165	; 0xa5
 800213e:	e7e8      	b.n	8002112 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8002140:	f00a fd76 	bl	800cc30 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8002144:	f8df 90f4 	ldr.w	r9, [pc, #244]	; 800223c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8002148:	3004      	adds	r0, #4
 800214a:	f00a fd96 	bl	800cc7a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800214e:	f8d9 0000 	ldr.w	r0, [r9]
 8002152:	b110      	cbz	r0, 800215a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 8002154:	6803      	ldr	r3, [r0, #0]
 8002156:	68db      	ldr	r3, [r3, #12]
 8002158:	4798      	blx	r3
    if (*currentTrans)
 800215a:	f8d9 0000 	ldr.w	r0, [r9]
 800215e:	b110      	cbz	r0, 8002166 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8002160:	6803      	ldr	r3, [r0, #0]
 8002162:	681b      	ldr	r3, [r3, #0]
 8002164:	4798      	blx	r3
    if (*currentScreen)
 8002166:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8002240 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
 800216a:	f8d8 0000 	ldr.w	r0, [r8]
 800216e:	b110      	cbz	r0, 8002176 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8002170:	6803      	ldr	r3, [r0, #0]
 8002172:	695b      	ldr	r3, [r3, #20]
 8002174:	4798      	blx	r3
    if (*currentPresenter)
 8002176:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800217a:	b110      	cbz	r0, 8002182 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 800217c:	6803      	ldr	r3, [r0, #0]
 800217e:	685b      	ldr	r3, [r3, #4]
 8002180:	4798      	blx	r3
    if (*currentScreen)
 8002182:	f8d8 0000 	ldr.w	r0, [r8]
 8002186:	b110      	cbz	r0, 800218e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002188:	6803      	ldr	r3, [r0, #0]
 800218a:	681b      	ldr	r3, [r3, #0]
 800218c:	4798      	blx	r3
    if (*currentPresenter)
 800218e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8002192:	b110      	cbz	r0, 800219a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8002194:	6803      	ldr	r3, [r0, #0]
 8002196:	689b      	ldr	r3, [r3, #8]
 8002198:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800219a:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800219c:	6803      	ldr	r3, [r0, #0]
 800219e:	2100      	movs	r1, #0
 80021a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80021a2:	4798      	blx	r3
        : screenContainer(0), done(false)
 80021a4:	f04f 0b00 	mov.w	fp, #0
 80021a8:	4b23      	ldr	r3, [pc, #140]	; (8002238 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 80021aa:	6003      	str	r3, [r0, #0]
 80021ac:	4604      	mov	r4, r0
 80021ae:	f8c0 b004 	str.w	fp, [r0, #4]
 80021b2:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80021b6:	68a8      	ldr	r0, [r5, #8]
 80021b8:	6803      	ldr	r3, [r0, #0]
 80021ba:	4659      	mov	r1, fp
 80021bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80021be:	4798      	blx	r3
 80021c0:	4606      	mov	r6, r0
 80021c2:	f000 fea7 	bl	8002f14 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80021c6:	6868      	ldr	r0, [r5, #4]
 80021c8:	6803      	ldr	r3, [r0, #0]
 80021ca:	4659      	mov	r1, fp
 80021cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80021ce:	4798      	blx	r3
 80021d0:	4631      	mov	r1, r6
 80021d2:	4605      	mov	r5, r0
 80021d4:	f000 fe44 	bl	8002e60 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 80021d8:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80021dc:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80021e0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80021e4:	b1e5      	cbz	r5, 8002220 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12c>
 80021e6:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80021e8:	f8ca 3004 	str.w	r3, [sl, #4]
    newScreen->setupScreen();
 80021ec:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 80021ee:	f8c5 a008 	str.w	sl, [r5, #8]
 80021f2:	4630      	mov	r0, r6
 80021f4:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80021f6:	63f5      	str	r5, [r6, #60]	; 0x3c
 80021f8:	4798      	blx	r3
    newPresenter->activate();
 80021fa:	682b      	ldr	r3, [r5, #0]
 80021fc:	4628      	mov	r0, r5
 80021fe:	681b      	ldr	r3, [r3, #0]
 8002200:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002202:	4621      	mov	r1, r4
 8002204:	4630      	mov	r0, r6
 8002206:	f00c f9ab 	bl	800e560 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800220a:	6823      	ldr	r3, [r4, #0]
 800220c:	4620      	mov	r0, r4
 800220e:	691b      	ldr	r3, [r3, #16]
 8002210:	4798      	blx	r3
    newTransition->invalidate();
 8002212:	6823      	ldr	r3, [r4, #0]
 8002214:	695b      	ldr	r3, [r3, #20]
 8002216:	4620      	mov	r0, r4
}
 8002218:	b001      	add	sp, #4
 800221a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800221e:	4718      	bx	r3
    model->bind(newPresenter);
 8002220:	462b      	mov	r3, r5
 8002222:	e7e1      	b.n	80021e8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf4>
 8002224:	0801d1b0 	.word	0x0801d1b0
 8002228:	0801d23e 	.word	0x0801d23e
 800222c:	0801d342 	.word	0x0801d342
 8002230:	0801d389 	.word	0x0801d389
 8002234:	0801d42c 	.word	0x0801d42c
 8002238:	0801d53c 	.word	0x0801d53c
 800223c:	200126b0 	.word	0x200126b0
 8002240:	200126ac 	.word	0x200126ac

08002244 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002244:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002246:	4604      	mov	r4, r0
 8002248:	4617      	mov	r7, r2
 800224a:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 800224c:	f00a fdb2 	bl	800cdb4 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002250:	4b10      	ldr	r3, [pc, #64]	; (8002294 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 8002252:	2500      	movs	r5, #0
      model(m)
 8002254:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
        return instance;
 8002258:	4e0f      	ldr	r6, [pc, #60]	; (8002298 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
        instance = this;
 800225a:	601c      	str	r4, [r3, #0]
        : pobject(0), pmemfun(0)
 800225c:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 8002260:	4b0e      	ldr	r3, [pc, #56]	; (800229c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 8002262:	6830      	ldr	r0, [r6, #0]
 8002264:	6023      	str	r3, [r4, #0]
 8002266:	4b0e      	ldr	r3, [pc, #56]	; (80022a0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002268:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 800226c:	6803      	ldr	r3, [r0, #0]
 800226e:	2101      	movs	r1, #1
 8002270:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8002272:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
 8002276:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002278:	4628      	mov	r0, r5
 800227a:	f000 fcc9 	bl	8002c10 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800227e:	6833      	ldr	r3, [r6, #0]
 8002280:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8002284:	b10a      	cbz	r2, 800228a <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
 8002286:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002288:	b900      	cbnz	r0, 800228c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>
        return instance->lcdRef;
 800228a:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800228c:	f012 fbdd 	bl	8014a4a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002290:	4620      	mov	r0, r4
 8002292:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002294:	200126bc 	.word	0x200126bc
 8002298:	20012670 	.word	0x20012670
 800229c:	0801d4f0 	.word	0x0801d4f0
 80022a0:	0801d4d8 	.word	0x0801d4d8

080022a4 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80022a4:	4b06      	ldr	r3, [pc, #24]	; (80022c0 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 80022a6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80022aa:	2300      	movs	r3, #0
 80022ac:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80022b0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80022b4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80022b8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80022bc:	4770      	bx	lr
 80022be:	bf00      	nop
 80022c0:	080020f5 	.word	0x080020f5

080022c4 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80022c4:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80022c6:	4770      	bx	lr

080022c8 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80022c8:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80022ca:	4770      	bx	lr

080022cc <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80022cc:	4770      	bx	lr

080022ce <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80022ce:	888b      	ldrh	r3, [r1, #4]
 80022d0:	69c0      	ldr	r0, [r0, #28]
 80022d2:	680a      	ldr	r2, [r1, #0]
 80022d4:	0adb      	lsrs	r3, r3, #11
 80022d6:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80022da:	4410      	add	r0, r2
 80022dc:	4770      	bx	lr

080022de <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80022de:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80022e0:	b1c2      	cbz	r2, 8002314 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80022e2:	7b13      	ldrb	r3, [r2, #12]
 80022e4:	b1b3      	cbz	r3, 8002314 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80022e6:	7b54      	ldrb	r4, [r2, #13]
 80022e8:	7ad2      	ldrb	r2, [r2, #11]
 80022ea:	0224      	lsls	r4, r4, #8
 80022ec:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80022f0:	4314      	orrs	r4, r2
 80022f2:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80022f4:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80022f6:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80022fa:	8813      	ldrh	r3, [r2, #0]
 80022fc:	428b      	cmp	r3, r1
 80022fe:	d102      	bne.n	8002306 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002300:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8002304:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002306:	d805      	bhi.n	8002314 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002308:	3801      	subs	r0, #1
 800230a:	b280      	uxth	r0, r0
 800230c:	3204      	adds	r2, #4
 800230e:	2800      	cmp	r0, #0
 8002310:	d1f3      	bne.n	80022fa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002312:	e7f7      	b.n	8002304 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002314:	2000      	movs	r0, #0
 8002316:	e7f5      	b.n	8002304 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002318 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002318:	b510      	push	{r4, lr}
 800231a:	212c      	movs	r1, #44	; 0x2c
 800231c:	4604      	mov	r4, r0
 800231e:	f019 faaf 	bl	801b880 <_ZdlPvj>
 8002322:	4620      	mov	r0, r4
 8002324:	bd10      	pop	{r4, pc}
	...

08002328 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002328:	b530      	push	{r4, r5, lr}
 800232a:	b08b      	sub	sp, #44	; 0x2c
 800232c:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800232e:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8002332:	9508      	str	r5, [sp, #32]
 8002334:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8002338:	9507      	str	r5, [sp, #28]
 800233a:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800233e:	9506      	str	r5, [sp, #24]
 8002340:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8002344:	9505      	str	r5, [sp, #20]
 8002346:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800234a:	9504      	str	r5, [sp, #16]
 800234c:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8002350:	9503      	str	r5, [sp, #12]
 8002352:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8002356:	9502      	str	r5, [sp, #8]
 8002358:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 800235c:	9501      	str	r5, [sp, #4]
 800235e:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8002362:	9500      	str	r5, [sp, #0]
 8002364:	f00b fd56 	bl	800de14 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8002368:	4b06      	ldr	r3, [pc, #24]	; (8002384 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 800236a:	6023      	str	r3, [r4, #0]
 800236c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800236e:	61e3      	str	r3, [r4, #28]
 8002370:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002372:	6223      	str	r3, [r4, #32]
 8002374:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8002376:	6263      	str	r3, [r4, #36]	; 0x24
 8002378:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800237a:	62a3      	str	r3, [r4, #40]	; 0x28
}
 800237c:	4620      	mov	r0, r4
 800237e:	b00b      	add	sp, #44	; 0x2c
 8002380:	bd30      	pop	{r4, r5, pc}
 8002382:	bf00      	nop
 8002384:	0801d560 	.word	0x0801d560

08002388 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002388:	4770      	bx	lr

0800238a <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 800238a:	4770      	bx	lr

0800238c <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 800238c:	4770      	bx	lr

0800238e <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 800238e:	4770      	bx	lr

08002390 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002390:	4770      	bx	lr

08002392 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002392:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002394:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8002396:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002398:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800239a:	466d      	mov	r5, sp
 800239c:	4601      	mov	r1, r0
 800239e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 80023a2:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80023a4:	4628      	mov	r0, r5
 80023a6:	4798      	blx	r3
 80023a8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80023ac:	343c      	adds	r4, #60	; 0x3c
 80023ae:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80023b2:	b005      	add	sp, #20
 80023b4:	bd30      	pop	{r4, r5, pc}

080023b6 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80023b6:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80023b8:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80023ba:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 80023bc:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80023be:	466d      	mov	r5, sp
 80023c0:	4601      	mov	r1, r0
 80023c2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 80023c6:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80023c8:	4628      	mov	r0, r5
 80023ca:	4798      	blx	r3
 80023cc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80023d0:	343c      	adds	r4, #60	; 0x3c
 80023d2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80023d6:	b005      	add	sp, #20
 80023d8:	bd30      	pop	{r4, r5, pc}

080023da <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 80023da:	2200      	movs	r2, #0
 80023dc:	8002      	strh	r2, [r0, #0]
 80023de:	8042      	strh	r2, [r0, #2]
 80023e0:	8082      	strh	r2, [r0, #4]
 80023e2:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80023e4:	4770      	bx	lr

080023e6 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80023e6:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 80023ea:	4770      	bx	lr

080023ec <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80023ec:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80023ee:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80023f0:	4604      	mov	r4, r0
        setX(x);
 80023f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80023f4:	4615      	mov	r5, r2
        setX(x);
 80023f6:	4798      	blx	r3
        setBaselineY(baselineY);
 80023f8:	6823      	ldr	r3, [r4, #0]
 80023fa:	4629      	mov	r1, r5
 80023fc:	4620      	mov	r0, r4
 80023fe:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002400:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002404:	4718      	bx	r3

08002406 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002406:	2000      	movs	r0, #0
 8002408:	4770      	bx	lr

0800240a <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 800240a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800240c:	4770      	bx	lr

0800240e <_ZN15Screen1ViewBase17functionLedToggleEv>:
     * Virtual Action Handlers
     */
    virtual void functionLedToggle()
    {
        // Override and implement this function in Screen1
    }
 800240e:	4770      	bx	lr

08002410 <_ZN15Screen1ViewBase14functionBtDownEv>:
    virtual void functionBtDown()
    {
        // Override and implement this function in Screen1
    }
 8002410:	4770      	bx	lr

08002412 <_ZN15Screen1ViewBase12functionBtUpEv>:
    virtual void functionBtUp()
    {
        // Override and implement this function in Screen1
    }
 8002412:	4770      	bx	lr

08002414 <_ZN15Screen1ViewBaseD1Ev>:
}

Screen1ViewBase::~Screen1ViewBase()
{

}
 8002414:	4770      	bx	lr

08002416 <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{

}
 8002416:	4770      	bx	lr

08002418 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002418:	4770      	bx	lr

0800241a <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 800241a:	4770      	bx	lr

0800241c <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800241c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800241e:	68c2      	ldr	r2, [r0, #12]
 8002420:	6844      	ldr	r4, [r0, #4]
 8002422:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002424:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002426:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800242a:	07d2      	lsls	r2, r2, #31
 800242c:	bf48      	it	mi
 800242e:	5962      	ldrmi	r2, [r4, r5]
 8002430:	689b      	ldr	r3, [r3, #8]
    }
 8002432:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002434:	bf48      	it	mi
 8002436:	58d3      	ldrmi	r3, [r2, r3]
 8002438:	4718      	bx	r3

0800243a <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800243a:	6843      	ldr	r3, [r0, #4]
 800243c:	b12b      	cbz	r3, 800244a <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800243e:	6883      	ldr	r3, [r0, #8]
 8002440:	b92b      	cbnz	r3, 800244e <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002442:	68c0      	ldr	r0, [r0, #12]
 8002444:	f000 0001 	and.w	r0, r0, #1
 8002448:	4770      	bx	lr
 800244a:	4618      	mov	r0, r3
 800244c:	4770      	bx	lr
 800244e:	2001      	movs	r0, #1
    }
 8002450:	4770      	bx	lr

08002452 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002452:	b510      	push	{r4, lr}
 8002454:	214c      	movs	r1, #76	; 0x4c
 8002456:	4604      	mov	r4, r0
 8002458:	f019 fa12 	bl	801b880 <_ZdlPvj>
 800245c:	4620      	mov	r0, r4
 800245e:	bd10      	pop	{r4, pc}

08002460 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002460:	b510      	push	{r4, lr}
 8002462:	2110      	movs	r1, #16
 8002464:	4604      	mov	r4, r0
 8002466:	f019 fa0b 	bl	801b880 <_ZdlPvj>
 800246a:	4620      	mov	r0, r4
 800246c:	bd10      	pop	{r4, pc}

0800246e <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
 800246e:	b510      	push	{r4, lr}
}
 8002470:	f44f 711d 	mov.w	r1, #628	; 0x274
Screen1ViewBase::~Screen1ViewBase()
 8002474:	4604      	mov	r4, r0
}
 8002476:	f019 fa03 	bl	801b880 <_ZdlPvj>
 800247a:	4620      	mov	r0, r4
 800247c:	bd10      	pop	{r4, pc}

0800247e <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 800247e:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8002480:	f7fe fecc 	bl	800121c <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8002484:	bd08      	pop	{r3, pc}

08002486 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &toggleLED)
 8002486:	f500 73ba 	add.w	r3, r0, #372	; 0x174
 800248a:	4299      	cmp	r1, r3
{
 800248c:	b570      	push	{r4, r5, r6, lr}
 800248e:	4604      	mov	r4, r0
 8002490:	460d      	mov	r5, r1
    if (&src == &toggleLED)
 8002492:	d102      	bne.n	800249a <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    {
        //Interaction1
        //When toggleLED clicked call virtual function
        //Call functionLedToggle
        functionLedToggle();
 8002494:	6803      	ldr	r3, [r0, #0]
 8002496:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002498:	4798      	blx	r3
    }
    if (&src == &buttonDown)
 800249a:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 800249e:	429d      	cmp	r5, r3
 80024a0:	d103      	bne.n	80024aa <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x24>
    {
        //Interaction2
        //When buttonDown clicked call virtual function
        //Call functionBtDown
        functionBtDown();
 80024a2:	6823      	ldr	r3, [r4, #0]
 80024a4:	4620      	mov	r0, r4
 80024a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80024a8:	4798      	blx	r3
    }
    if (&src == &buttonUp)
 80024aa:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 80024ae:	429d      	cmp	r5, r3
 80024b0:	d105      	bne.n	80024be <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x38>
    {
        //Interaction3
        //When buttonUp clicked call virtual function
        //Call functionBtUp
        functionBtUp();
 80024b2:	6823      	ldr	r3, [r4, #0]
 80024b4:	4620      	mov	r0, r4
 80024b6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
}
 80024b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        functionBtUp();
 80024bc:	4718      	bx	r3
}
 80024be:	bd70      	pop	{r4, r5, r6, pc}

080024c0 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80024c0:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 80024c2:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80024c4:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80024c6:	4b12      	ldr	r3, [pc, #72]	; (8002510 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80024c8:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 80024ca:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80024cc:	b28d      	uxth	r5, r1
 80024ce:	b92b      	cbnz	r3, 80024dc <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80024d0:	4b10      	ldr	r3, [pc, #64]	; (8002514 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80024d2:	4a11      	ldr	r2, [pc, #68]	; (8002518 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80024d4:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80024d6:	4811      	ldr	r0, [pc, #68]	; (800251c <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80024d8:	f019 fa00 	bl	801b8dc <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80024dc:	4910      	ldr	r1, [pc, #64]	; (8002520 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80024de:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80024e0:	8809      	ldrh	r1, [r1, #0]
 80024e2:	4291      	cmp	r1, r2
 80024e4:	d803      	bhi.n	80024ee <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80024e6:	4b0f      	ldr	r3, [pc, #60]	; (8002524 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80024e8:	4a0b      	ldr	r2, [pc, #44]	; (8002518 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80024ea:	216d      	movs	r1, #109	; 0x6d
 80024ec:	e7f3      	b.n	80024d6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 80024ee:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80024f2:	4b0d      	ldr	r3, [pc, #52]	; (8002528 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80024f4:	681b      	ldr	r3, [r3, #0]
 80024f6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80024fa:	6803      	ldr	r3, [r0, #0]
 80024fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80024fe:	4798      	blx	r3
 8002500:	1a28      	subs	r0, r5, r0
 8002502:	b201      	sxth	r1, r0
 8002504:	4633      	mov	r3, r6
 8002506:	4620      	mov	r0, r4
    }
 8002508:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800250c:	4718      	bx	r3
 800250e:	bf00      	nop
 8002510:	200126c0 	.word	0x200126c0
 8002514:	0801d5b8 	.word	0x0801d5b8
 8002518:	0801d5fa 	.word	0x0801d5fa
 800251c:	0801d635 	.word	0x0801d635
 8002520:	200126c4 	.word	0x200126c4
 8002524:	0801d67c 	.word	0x0801d67c
 8002528:	200126c8 	.word	0x200126c8

0800252c <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 800252c:	2200      	movs	r2, #0
 800252e:	f04f 31ff 	mov.w	r1, #4294967295
 8002532:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002536:	6082      	str	r2, [r0, #8]
    }
 8002538:	4770      	bx	lr

0800253a <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 800253a:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800253c:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 800253e:	4604      	mov	r4, r0
        setX(x);
 8002540:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002542:	4615      	mov	r5, r2
        setX(x);
 8002544:	4798      	blx	r3
        setY(y);
 8002546:	6823      	ldr	r3, [r4, #0]
 8002548:	4629      	mov	r1, r5
 800254a:	4620      	mov	r0, r4
 800254c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 800254e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002552:	4718      	bx	r3

08002554 <_ZN8touchgfx6WidgetC1Ev>:
 8002554:	2200      	movs	r2, #0
 8002556:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800255a:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 800255e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002562:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002566:	f44f 7280 	mov.w	r2, #256	; 0x100
 800256a:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 800256c:	4a01      	ldr	r2, [pc, #4]	; (8002574 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800256e:	6002      	str	r2, [r0, #0]
 8002570:	4770      	bx	lr
 8002572:	bf00      	nop
 8002574:	0801d700 	.word	0x0801d700

08002578 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002578:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800257a:	2226      	movs	r2, #38	; 0x26
    TextArea()
 800257c:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800257e:	2100      	movs	r1, #0
 8002580:	f019 fa38 	bl	801b9f4 <memset>
 8002584:	4620      	mov	r0, r4
 8002586:	f7ff ffe5 	bl	8002554 <_ZN8touchgfx6WidgetC1Ev>
 800258a:	4b0a      	ldr	r3, [pc, #40]	; (80025b4 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 800258c:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 800258e:	4b0a      	ldr	r3, [pc, #40]	; (80025b8 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8002590:	62a3      	str	r3, [r4, #40]	; 0x28
 8002592:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002596:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002598:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 800259c:	2300      	movs	r3, #0
 800259e:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80025a2:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 80025a6:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80025aa:	8723      	strh	r3, [r4, #56]	; 0x38
 80025ac:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 80025ae:	4620      	mov	r0, r4
 80025b0:	bd10      	pop	{r4, pc}
 80025b2:	bf00      	nop
 80025b4:	0801de24 	.word	0x0801de24
 80025b8:	0801d1a8 	.word	0x0801d1a8

080025bc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 80025bc:	4b1a      	ldr	r3, [pc, #104]	; (8002628 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 80025be:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 80025c0:	881b      	ldrh	r3, [r3, #0]
 80025c2:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80025c4:	428b      	cmp	r3, r1
    void updateTextPosition()
 80025c6:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 80025c8:	d92a      	bls.n	8002620 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x64>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80025ca:	4b18      	ldr	r3, [pc, #96]	; (800262c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 80025cc:	681b      	ldr	r3, [r3, #0]
 80025ce:	b92b      	cbnz	r3, 80025dc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 80025d0:	4b17      	ldr	r3, [pc, #92]	; (8002630 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 80025d2:	4a18      	ldr	r2, [pc, #96]	; (8002634 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 80025d4:	4818      	ldr	r0, [pc, #96]	; (8002638 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 80025d6:	216c      	movs	r1, #108	; 0x6c
 80025d8:	f019 f980 	bl	801b8dc <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 80025dc:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80025e0:	4b16      	ldr	r3, [pc, #88]	; (800263c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 80025e2:	681b      	ldr	r3, [r3, #0]
 80025e4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 80025e8:	4b15      	ldr	r3, [pc, #84]	; (8002640 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 80025ea:	6818      	ldr	r0, [r3, #0]
 80025ec:	f000 fb4c 	bl	8002c88 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80025f0:	682b      	ldr	r3, [r5, #0]
 80025f2:	9001      	str	r0, [sp, #4]
 80025f4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80025f6:	4628      	mov	r0, r5
 80025f8:	4798      	blx	r3
 80025fa:	682b      	ldr	r3, [r5, #0]
 80025fc:	9901      	ldr	r1, [sp, #4]
 80025fe:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002600:	4604      	mov	r4, r0
 8002602:	4628      	mov	r0, r5
 8002604:	4798      	blx	r3
 8002606:	682b      	ldr	r3, [r5, #0]
 8002608:	9901      	ldr	r1, [sp, #4]
 800260a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800260c:	fb14 f400 	smulbb	r4, r4, r0
 8002610:	4628      	mov	r0, r5
 8002612:	4798      	blx	r3
 8002614:	b2a4      	uxth	r4, r4
 8002616:	4404      	add	r4, r0
 8002618:	f8a6 4046 	strh.w	r4, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 800261c:	b002      	add	sp, #8
 800261e:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 8002620:	2300      	movs	r3, #0
 8002622:	f8a0 3046 	strh.w	r3, [r0, #70]	; 0x46
    }
 8002626:	e7f9      	b.n	800261c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x60>
 8002628:	200126c4 	.word	0x200126c4
 800262c:	200126c0 	.word	0x200126c0
 8002630:	0801d5b8 	.word	0x0801d5b8
 8002634:	0801d5fa 	.word	0x0801d5fa
 8002638:	0801d635 	.word	0x0801d635
 800263c:	200126c8 	.word	0x200126c8
 8002640:	200126cc 	.word	0x200126cc

08002644 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8002644:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002648:	ed2d 8b02 	vpush	{d8}
 800264c:	4604      	mov	r4, r0
 800264e:	b08b      	sub	sp, #44	; 0x2c
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
 8002650:	4627      	mov	r7, r4
        : presenter(0)
 8002652:	2500      	movs	r5, #0
 8002654:	f00b fdd8 	bl	800e208 <_ZN8touchgfx6ScreenC1Ev>
 8002658:	4bc7      	ldr	r3, [pc, #796]	; (8002978 <_ZN15Screen1ViewBaseC1Ev+0x334>)
 800265a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800265c:	f847 3b40 	str.w	r3, [r7], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002660:	2226      	movs	r2, #38	; 0x26
 8002662:	4629      	mov	r1, r5
 8002664:	4638      	mov	r0, r7
 8002666:	f019 f9c5 	bl	801b9f4 <memset>
 800266a:	4638      	mov	r0, r7
 800266c:	f7ff ff72 	bl	8002554 <_ZN8touchgfx6WidgetC1Ev>
 8002670:	4bc2      	ldr	r3, [pc, #776]	; (800297c <_ZN15Screen1ViewBaseC1Ev+0x338>)
 8002672:	6423      	str	r3, [r4, #64]	; 0x40
 8002674:	f04f 08ff 	mov.w	r8, #255	; 0xff
 8002678:	f104 036c 	add.w	r3, r4, #108	; 0x6c
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 800267c:	f64f 76ff 	movw	r6, #65535	; 0xffff
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8002680:	2226      	movs	r2, #38	; 0x26
 8002682:	4629      	mov	r1, r5
 8002684:	4618      	mov	r0, r3
 8002686:	f884 8066 	strb.w	r8, [r4, #102]	; 0x66
        : color(col)
 800268a:	66a5      	str	r5, [r4, #104]	; 0x68
 800268c:	f8ad 6020 	strh.w	r6, [sp, #32]
 8002690:	f019 f9b0 	bl	801b9f4 <memset>
 8002694:	9001      	str	r0, [sp, #4]
 8002696:	f7ff ff5d 	bl	8002554 <_ZN8touchgfx6WidgetC1Ev>
    {
        Image::setBitmap(bmp);
 800269a:	9b01      	ldr	r3, [sp, #4]
        : Widget(), bitmap(bmp), alpha(255)
 800269c:	4ab8      	ldr	r2, [pc, #736]	; (8002980 <_ZN15Screen1ViewBaseC1Ev+0x33c>)
 800269e:	66e2      	str	r2, [r4, #108]	; 0x6c
 80026a0:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80026a4:	f8a4 2092 	strh.w	r2, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80026a8:	4618      	mov	r0, r3
 80026aa:	a908      	add	r1, sp, #32
        : Widget(), bitmap(bmp), alpha(255)
 80026ac:	f884 8094 	strb.w	r8, [r4, #148]	; 0x94
 80026b0:	f104 0898 	add.w	r8, r4, #152	; 0x98
        Image::setBitmap(bmp);
 80026b4:	f008 fc9d 	bl	800aff2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80026b8:	4640      	mov	r0, r8
 80026ba:	f7ff ff5d 	bl	8002578 <_ZN8touchgfx8TextAreaC1Ev>
 80026be:	f104 0be4 	add.w	fp, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80026c2:	4ab0      	ldr	r2, [pc, #704]	; (8002984 <_ZN15Screen1ViewBaseC1Ev+0x340>)
 80026c4:	f8c4 2098 	str.w	r2, [r4, #152]	; 0x98
 80026c8:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80026cc:	4658      	mov	r0, fp
 80026ce:	f504 7a96 	add.w	sl, r4, #300	; 0x12c
 80026d2:	f7ff ff51 	bl	8002578 <_ZN8touchgfx8TextAreaC1Ev>
 80026d6:	f504 79ba 	add.w	r9, r4, #372	; 0x174
 80026da:	4650      	mov	r0, sl
 80026dc:	f7ff ff4c 	bl	8002578 <_ZN8touchgfx8TextAreaC1Ev>
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 80026e0:	4629      	mov	r1, r5
 80026e2:	2226      	movs	r2, #38	; 0x26
 80026e4:	4648      	mov	r0, r9
 80026e6:	f019 f985 	bl	801b9f4 <memset>
 80026ea:	4648      	mov	r0, r9
 80026ec:	f7ff ff32 	bl	8002554 <_ZN8touchgfx6WidgetC1Ev>
        touchable = touch;
 80026f0:	f04f 0301 	mov.w	r3, #1
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 80026f4:	4aa4      	ldr	r2, [pc, #656]	; (8002988 <_ZN15Screen1ViewBaseC1Ev+0x344>)
 80026f6:	f884 3198 	strb.w	r3, [r4, #408]	; 0x198
 80026fa:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 80026fe:	f8c4 2174 	str.w	r2, [r4, #372]	; 0x174
 8002702:	f8a4 61a2 	strh.w	r6, [r4, #418]	; 0x1a2
 8002706:	f8a4 61a4 	strh.w	r6, [r4, #420]	; 0x1a4
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 800270a:	f884 61a6 	strb.w	r6, [r4, #422]	; 0x1a6
 800270e:	f8a4 61a8 	strh.w	r6, [r4, #424]	; 0x1a8
 8002712:	4618      	mov	r0, r3
 8002714:	f8c4 519c 	str.w	r5, [r4, #412]	; 0x19c
 8002718:	f884 51a0 	strb.w	r5, [r4, #416]	; 0x1a0
 800271c:	ee08 3a10 	vmov	s16, r3
 8002720:	f008 fda8 	bl	800b274 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002724:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8002728:	4618      	mov	r0, r3
 800272a:	ee08 3a90 	vmov	s17, r3
 800272e:	f008 fda1 	bl	800b274 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002732:	4a96      	ldr	r2, [pc, #600]	; (800298c <_ZN15Screen1ViewBaseC1Ev+0x348>)
 8002734:	e9c4 2499 	strd	r2, r4, [r4, #612]	; 0x264
 8002738:	4a95      	ldr	r2, [pc, #596]	; (8002990 <_ZN15Screen1ViewBaseC1Ev+0x34c>)
        setXY(x, y);
 800273a:	4638      	mov	r0, r7
 800273c:	e9c4 259b 	strd	r2, r5, [r4, #620]	; 0x26c
 8002740:	4629      	mov	r1, r5
 8002742:	462a      	mov	r2, r5
 8002744:	f7ff fef9 	bl	800253a <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002748:	4638      	mov	r0, r7
 800274a:	21f0      	movs	r1, #240	; 0xf0
 800274c:	f7fe fce2 	bl	8001114 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8002750:	4638      	mov	r0, r7
 8002752:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8002756:	f7fe fcdf 	bl	8001118 <_ZN8touchgfx8Drawable9setHeightEs>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 800275a:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 800275c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002760:	4639      	mov	r1, r7
 8002762:	66a3      	str	r3, [r4, #104]	; 0x68
 8002764:	4630      	mov	r0, r6
 8002766:	f006 fd95 	bl	8009294 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800276a:	9b01      	ldr	r3, [sp, #4]
 800276c:	462a      	mov	r2, r5
 800276e:	4618      	mov	r0, r3
 8002770:	4629      	mov	r1, r5
 8002772:	f7ff fee2 	bl	800253a <_ZN8touchgfx8Drawable5setXYEss>
 8002776:	f04f 0305 	mov.w	r3, #5
 800277a:	f8ad 3020 	strh.w	r3, [sp, #32]
    image1.setBitmap(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_BACKGROUNDS_1024X600_BURLY_ID));
 800277e:	9b01      	ldr	r3, [sp, #4]
 8002780:	a908      	add	r1, sp, #32
 8002782:	4618      	mov	r0, r3
 8002784:	f008 fc35 	bl	800aff2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002788:	9b01      	ldr	r3, [sp, #4]
 800278a:	4630      	mov	r0, r6
 800278c:	4619      	mov	r1, r3
 800278e:	f006 fd81 	bl	8009294 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(26, 177);
 8002792:	22b1      	movs	r2, #177	; 0xb1
 8002794:	211a      	movs	r1, #26
 8002796:	4640      	mov	r0, r8
 8002798:	f7ff fecf 	bl	800253a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800279c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80027a0:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80027a4:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80027a8:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80027ac:	af02      	add	r7, sp, #8
 80027ae:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80027b2:	4641      	mov	r1, r8
 80027b4:	4638      	mov	r0, r7
 80027b6:	4798      	blx	r3
 80027b8:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80027bc:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80027c0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JCXU).getText());
 80027c4:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80027c8:	9301      	str	r3, [sp, #4]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80027ca:	4b72      	ldr	r3, [pc, #456]	; (8002994 <_ZN15Screen1ViewBaseC1Ev+0x350>)
 80027cc:	681b      	ldr	r3, [r3, #0]
 80027ce:	b92b      	cbnz	r3, 80027dc <_ZN15Screen1ViewBaseC1Ev+0x198>
 80027d0:	4b71      	ldr	r3, [pc, #452]	; (8002998 <_ZN15Screen1ViewBaseC1Ev+0x354>)
 80027d2:	4a72      	ldr	r2, [pc, #456]	; (800299c <_ZN15Screen1ViewBaseC1Ev+0x358>)
 80027d4:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80027d6:	4872      	ldr	r0, [pc, #456]	; (80029a0 <_ZN15Screen1ViewBaseC1Ev+0x35c>)
 80027d8:	f019 f880 	bl	801b8dc <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80027dc:	4b71      	ldr	r3, [pc, #452]	; (80029a4 <_ZN15Screen1ViewBaseC1Ev+0x360>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80027de:	881b      	ldrh	r3, [r3, #0]
 80027e0:	2b04      	cmp	r3, #4
 80027e2:	d803      	bhi.n	80027ec <_ZN15Screen1ViewBaseC1Ev+0x1a8>
 80027e4:	4b70      	ldr	r3, [pc, #448]	; (80029a8 <_ZN15Screen1ViewBaseC1Ev+0x364>)
 80027e6:	4a6d      	ldr	r2, [pc, #436]	; (800299c <_ZN15Screen1ViewBaseC1Ev+0x358>)
 80027e8:	2161      	movs	r1, #97	; 0x61
 80027ea:	e7f4      	b.n	80027d6 <_ZN15Screen1ViewBaseC1Ev+0x192>
        return texts->getText(typedTextId);
 80027ec:	4b6f      	ldr	r3, [pc, #444]	; (80029ac <_ZN15Screen1ViewBaseC1Ev+0x368>)
 80027ee:	2104      	movs	r1, #4
 80027f0:	6818      	ldr	r0, [r3, #0]
 80027f2:	f000 fa49 	bl	8002c88 <_ZNK8touchgfx5Texts7getTextEt>
 80027f6:	4a6e      	ldr	r2, [pc, #440]	; (80029b0 <_ZN15Screen1ViewBaseC1Ev+0x36c>)
 80027f8:	4603      	mov	r3, r0
 80027fa:	2114      	movs	r1, #20
 80027fc:	9801      	ldr	r0, [sp, #4]
 80027fe:	f00d f98d 	bl	800fb1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8002802:	9b01      	ldr	r3, [sp, #4]
 8002804:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
    textArea1.resizeToCurrentText();
 8002808:	4640      	mov	r0, r8
 800280a:	f008 fa61 	bl	800acd0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800280e:	4b69      	ldr	r3, [pc, #420]	; (80029b4 <_ZN15Screen1ViewBaseC1Ev+0x370>)
 8002810:	9308      	str	r3, [sp, #32]
 8002812:	f04f 0205 	mov.w	r2, #5
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1LPB));
 8002816:	a908      	add	r1, sp, #32
 8002818:	4640      	mov	r0, r8
 800281a:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800281e:	f008 fa77 	bl	800ad10 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002822:	4641      	mov	r1, r8
 8002824:	4630      	mov	r0, r6
 8002826:	f006 fd35 	bl	8009294 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(44, 44);
 800282a:	222c      	movs	r2, #44	; 0x2c
 800282c:	4611      	mov	r1, r2
 800282e:	4658      	mov	r0, fp
 8002830:	f7ff fe83 	bl	800253a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8002834:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 8002838:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
        linespace = space;
 800283c:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8002840:	4659      	mov	r1, fp
 8002842:	4638      	mov	r0, r7
 8002844:	f007 ffbc 	bl	800a7c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002848:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800284c:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8002850:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002854:	f04f 0802 	mov.w	r8, #2
 8002858:	4b56      	ldr	r3, [pc, #344]	; (80029b4 <_ZN15Screen1ViewBaseC1Ev+0x370>)
 800285a:	9308      	str	r3, [sp, #32]
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KGHC));
 800285c:	a908      	add	r1, sp, #32
 800285e:	4658      	mov	r0, fp
 8002860:	f8ad 8024 	strh.w	r8, [sp, #36]	; 0x24
 8002864:	f008 fa54 	bl	800ad10 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002868:	4659      	mov	r1, fp
 800286a:	4630      	mov	r0, r6
 800286c:	f006 fd12 	bl	8009294 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(8, 104);
 8002870:	4650      	mov	r0, sl
 8002872:	2268      	movs	r2, #104	; 0x68
 8002874:	2108      	movs	r1, #8
 8002876:	f7ff fe60 	bl	800253a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800287a:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 800287e:	f8c4 215c 	str.w	r2, [r4, #348]	; 0x15c
        linespace = space;
 8002882:	f8a4 5160 	strh.w	r5, [r4, #352]	; 0x160
        boundingArea = calculateBoundingArea();
 8002886:	4651      	mov	r1, sl
 8002888:	4638      	mov	r0, r7
 800288a:	f007 ff99 	bl	800a7c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800288e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8002892:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 8002896:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800289a:	2703      	movs	r7, #3
 800289c:	4b45      	ldr	r3, [pc, #276]	; (80029b4 <_ZN15Screen1ViewBaseC1Ev+0x370>)
 800289e:	9308      	str	r3, [sp, #32]
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TXVV));
 80028a0:	a908      	add	r1, sp, #32
 80028a2:	4650      	mov	r0, sl
 80028a4:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 80028a8:	f008 fa32 	bl	800ad10 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80028ac:	4651      	mov	r1, sl
 80028ae:	4630      	mov	r0, r6
 80028b0:	f006 fcf0 	bl	8009294 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    toggleLED.setXY(54, 86);
 80028b4:	4648      	mov	r0, r9
 80028b6:	2256      	movs	r2, #86	; 0x56
 80028b8:	2136      	movs	r1, #54	; 0x36
 80028ba:	f7ff fe3e 	bl	800253a <_ZN8touchgfx8Drawable5setXYEss>
 80028be:	2304      	movs	r3, #4
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
    {
        originalPressed = bitmapPressed;
 80028c0:	f8a4 31a8 	strh.w	r3, [r4, #424]	; 0x1a8
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 80028c4:	aa08      	add	r2, sp, #32
 80028c6:	f8ad 701c 	strh.w	r7, [sp, #28]
 80028ca:	a907      	add	r1, sp, #28
    toggleLED.setAction(buttonCallback);
 80028cc:	f504 7719 	add.w	r7, r4, #612	; 0x264
 80028d0:	4648      	mov	r0, r9
 80028d2:	f8ad 3020 	strh.w	r3, [sp, #32]
 80028d6:	f008 fa75 	bl	800adc4 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80028da:	4649      	mov	r1, r9
 80028dc:	4630      	mov	r0, r6
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80028de:	f8c4 719c 	str.w	r7, [r4, #412]	; 0x19c
 80028e2:	f006 fcd7 	bl	8009294 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonDown.setXY(-1, 236);
 80028e6:	ee18 0a10 	vmov	r0, s16
 80028ea:	22ec      	movs	r2, #236	; 0xec
 80028ec:	f04f 31ff 	mov.w	r1, #4294967295
 80028f0:	f7ff fe23 	bl	800253a <_ZN8touchgfx8Drawable5setXYEss>
    buttonDown.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_PRESSED_ID));
 80028f4:	aa08      	add	r2, sp, #32
 80028f6:	a907      	add	r1, sp, #28
 80028f8:	ee18 0a10 	vmov	r0, s16
 80028fc:	f8ad 501c 	strh.w	r5, [sp, #28]
 8002900:	f8ad 8020 	strh.w	r8, [sp, #32]
 8002904:	f008 fa5e 	bl	800adc4 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        updateTextPosition();
 8002908:	ee18 0a10 	vmov	r0, s16
class TypedText
 800290c:	f8a4 51e4 	strh.w	r5, [r4, #484]	; 0x1e4
        color = col;
 8002910:	f04f 35ff 	mov.w	r5, #4294967295
        updateTextPosition();
 8002914:	f7ff fe52 	bl	80025bc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002918:	ee18 1a10 	vmov	r1, s16
 800291c:	4630      	mov	r0, r6
        colorPressed = col;
 800291e:	e9c4 557a 	strd	r5, r5, [r4, #488]	; 0x1e8
 8002922:	f8c4 71d4 	str.w	r7, [r4, #468]	; 0x1d4
 8002926:	f006 fcb5 	bl	8009294 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonUp.setXY(130, 236);
 800292a:	ee18 0a90 	vmov	r0, s17
 800292e:	22ec      	movs	r2, #236	; 0xec
 8002930:	2182      	movs	r1, #130	; 0x82
 8002932:	f7ff fe02 	bl	800253a <_ZN8touchgfx8Drawable5setXYEss>
 8002936:	f04f 0901 	mov.w	r9, #1
    buttonUp.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_PRESSED_ID));
 800293a:	aa08      	add	r2, sp, #32
 800293c:	a907      	add	r1, sp, #28
 800293e:	ee18 0a90 	vmov	r0, s17
 8002942:	f8ad 901c 	strh.w	r9, [sp, #28]
 8002946:	f8ad 8020 	strh.w	r8, [sp, #32]
 800294a:	f008 fa3b 	bl	800adc4 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        updateTextPosition();
 800294e:	ee18 0a90 	vmov	r0, s17
 8002952:	f8a4 922c 	strh.w	r9, [r4, #556]	; 0x22c
 8002956:	f7ff fe31 	bl	80025bc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800295a:	4630      	mov	r0, r6
        colorPressed = col;
 800295c:	e9c4 558c 	strd	r5, r5, [r4, #560]	; 0x230
 8002960:	ee18 1a90 	vmov	r1, s17
 8002964:	f8c4 721c 	str.w	r7, [r4, #540]	; 0x21c
 8002968:	f006 fc94 	bl	8009294 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800296c:	4620      	mov	r0, r4
 800296e:	b00b      	add	sp, #44	; 0x2c
 8002970:	ecbd 8b02 	vpop	{d8}
 8002974:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002978:	0801d810 	.word	0x0801d810
 800297c:	0801deb4 	.word	0x0801deb4
 8002980:	0801df1c 	.word	0x0801df1c
 8002984:	0801d768 	.word	0x0801d768
 8002988:	0801ddb0 	.word	0x0801ddb0
 800298c:	0801d7f8 	.word	0x0801d7f8
 8002990:	08002487 	.word	0x08002487
 8002994:	200126c0 	.word	0x200126c0
 8002998:	0801d5b8 	.word	0x0801d5b8
 800299c:	0801d6ba 	.word	0x0801d6ba
 80029a0:	0801d635 	.word	0x0801d635
 80029a4:	200126c4 	.word	0x200126c4
 80029a8:	0801d67c 	.word	0x0801d67c
 80029ac:	200126cc 	.word	0x200126cc
 80029b0:	0801d6f2 	.word	0x0801d6f2
 80029b4:	0801d1a8 	.word	0x0801d1a8

080029b8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80029b8:	4770      	bx	lr
	...

080029bc <_Z23getFont_verdana_10_4bppv>:
{
 80029bc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80029be:	4d16      	ldr	r5, [pc, #88]	; (8002a18 <_Z23getFont_verdana_10_4bppv+0x5c>)
 80029c0:	782c      	ldrb	r4, [r5, #0]
 80029c2:	f3bf 8f5b 	dmb	ish
 80029c6:	f014 0401 	ands.w	r4, r4, #1
{
 80029ca:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80029cc:	d120      	bne.n	8002a10 <_Z23getFont_verdana_10_4bppv+0x54>
 80029ce:	4628      	mov	r0, r5
 80029d0:	f018 ff58 	bl	801b884 <__cxa_guard_acquire>
 80029d4:	b1e0      	cbz	r0, 8002a10 <_Z23getFont_verdana_10_4bppv+0x54>
 80029d6:	233f      	movs	r3, #63	; 0x3f
 80029d8:	9309      	str	r3, [sp, #36]	; 0x24
 80029da:	4b10      	ldr	r3, [pc, #64]	; (8002a1c <_Z23getFont_verdana_10_4bppv+0x60>)
 80029dc:	9308      	str	r3, [sp, #32]
 80029de:	4b10      	ldr	r3, [pc, #64]	; (8002a20 <_Z23getFont_verdana_10_4bppv+0x64>)
 80029e0:	4910      	ldr	r1, [pc, #64]	; (8002a24 <_Z23getFont_verdana_10_4bppv+0x68>)
 80029e2:	4811      	ldr	r0, [pc, #68]	; (8002a28 <_Z23getFont_verdana_10_4bppv+0x6c>)
 80029e4:	940a      	str	r4, [sp, #40]	; 0x28
 80029e6:	2201      	movs	r2, #1
 80029e8:	e9cd 4306 	strd	r4, r3, [sp, #24]
 80029ec:	2304      	movs	r3, #4
 80029ee:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80029f2:	230a      	movs	r3, #10
 80029f4:	9300      	str	r3, [sp, #0]
 80029f6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80029fa:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80029fe:	9405      	str	r4, [sp, #20]
 8002a00:	f7ff fc92 	bl	8002328 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002a04:	4809      	ldr	r0, [pc, #36]	; (8002a2c <_Z23getFont_verdana_10_4bppv+0x70>)
 8002a06:	f018 ff87 	bl	801b918 <atexit>
 8002a0a:	4628      	mov	r0, r5
 8002a0c:	f018 ff46 	bl	801b89c <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8002a10:	4805      	ldr	r0, [pc, #20]	; (8002a28 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8002a12:	b00f      	add	sp, #60	; 0x3c
 8002a14:	bd30      	pop	{r4, r5, pc}
 8002a16:	bf00      	nop
 8002a18:	20001850 	.word	0x20001850
 8002a1c:	0801f02c 	.word	0x0801f02c
 8002a20:	0801f038 	.word	0x0801f038
 8002a24:	0801ee68 	.word	0x0801ee68
 8002a28:	20001854 	.word	0x20001854
 8002a2c:	080029b9 	.word	0x080029b9

08002a30 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 28, 24, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002a30:	4770      	bx	lr
	...

08002a34 <_Z23getFont_verdana_20_4bppv>:
{
 8002a34:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 28, 24, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002a36:	4d17      	ldr	r5, [pc, #92]	; (8002a94 <_Z23getFont_verdana_20_4bppv+0x60>)
 8002a38:	782c      	ldrb	r4, [r5, #0]
 8002a3a:	f3bf 8f5b 	dmb	ish
 8002a3e:	f014 0401 	ands.w	r4, r4, #1
{
 8002a42:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 28, 24, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8002a44:	d122      	bne.n	8002a8c <_Z23getFont_verdana_20_4bppv+0x58>
 8002a46:	4628      	mov	r0, r5
 8002a48:	f018 ff1c 	bl	801b884 <__cxa_guard_acquire>
 8002a4c:	b1f0      	cbz	r0, 8002a8c <_Z23getFont_verdana_20_4bppv+0x58>
 8002a4e:	233f      	movs	r3, #63	; 0x3f
 8002a50:	9309      	str	r3, [sp, #36]	; 0x24
 8002a52:	4b11      	ldr	r3, [pc, #68]	; (8002a98 <_Z23getFont_verdana_20_4bppv+0x64>)
 8002a54:	9308      	str	r3, [sp, #32]
 8002a56:	4b11      	ldr	r3, [pc, #68]	; (8002a9c <_Z23getFont_verdana_20_4bppv+0x68>)
 8002a58:	4911      	ldr	r1, [pc, #68]	; (8002aa0 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8002a5a:	4812      	ldr	r0, [pc, #72]	; (8002aa4 <_Z23getFont_verdana_20_4bppv+0x70>)
 8002a5c:	940a      	str	r4, [sp, #40]	; 0x28
 8002a5e:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8002a62:	2201      	movs	r2, #1
 8002a64:	2304      	movs	r3, #4
 8002a66:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8002a6a:	2314      	movs	r3, #20
 8002a6c:	9300      	str	r3, [sp, #0]
 8002a6e:	221c      	movs	r2, #28
 8002a70:	2318      	movs	r3, #24
 8002a72:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8002a76:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8002a7a:	9405      	str	r4, [sp, #20]
 8002a7c:	f7ff fc54 	bl	8002328 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002a80:	4809      	ldr	r0, [pc, #36]	; (8002aa8 <_Z23getFont_verdana_20_4bppv+0x74>)
 8002a82:	f018 ff49 	bl	801b918 <atexit>
 8002a86:	4628      	mov	r0, r5
 8002a88:	f018 ff08 	bl	801b89c <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8002a8c:	4805      	ldr	r0, [pc, #20]	; (8002aa4 <_Z23getFont_verdana_20_4bppv+0x70>)
 8002a8e:	b00f      	add	sp, #60	; 0x3c
 8002a90:	bd30      	pop	{r4, r5, pc}
 8002a92:	bf00      	nop
 8002a94:	20001880 	.word	0x20001880
 8002a98:	0801f030 	.word	0x0801f030
 8002a9c:	0801f03c 	.word	0x0801f03c
 8002aa0:	0801ee78 	.word	0x0801ee78
 8002aa4:	20001884 	.word	0x20001884
 8002aa8:	08002a31 	.word	0x08002a31

08002aac <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 3, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002aac:	4770      	bx	lr
	...

08002ab0 <_Z23getFont_verdana_40_4bppv>:
{
 8002ab0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 3, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002ab2:	4d16      	ldr	r5, [pc, #88]	; (8002b0c <_Z23getFont_verdana_40_4bppv+0x5c>)
 8002ab4:	782c      	ldrb	r4, [r5, #0]
 8002ab6:	f3bf 8f5b 	dmb	ish
 8002aba:	f014 0401 	ands.w	r4, r4, #1
{
 8002abe:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 3, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002ac0:	d121      	bne.n	8002b06 <_Z23getFont_verdana_40_4bppv+0x56>
 8002ac2:	4628      	mov	r0, r5
 8002ac4:	f018 fede 	bl	801b884 <__cxa_guard_acquire>
 8002ac8:	b1e8      	cbz	r0, 8002b06 <_Z23getFont_verdana_40_4bppv+0x56>
 8002aca:	233f      	movs	r3, #63	; 0x3f
 8002acc:	9309      	str	r3, [sp, #36]	; 0x24
 8002ace:	4b10      	ldr	r3, [pc, #64]	; (8002b10 <_Z23getFont_verdana_40_4bppv+0x60>)
 8002ad0:	9308      	str	r3, [sp, #32]
 8002ad2:	4b10      	ldr	r3, [pc, #64]	; (8002b14 <_Z23getFont_verdana_40_4bppv+0x64>)
 8002ad4:	4910      	ldr	r1, [pc, #64]	; (8002b18 <_Z23getFont_verdana_40_4bppv+0x68>)
 8002ad6:	4811      	ldr	r0, [pc, #68]	; (8002b1c <_Z23getFont_verdana_40_4bppv+0x6c>)
 8002ad8:	940a      	str	r4, [sp, #40]	; 0x28
 8002ada:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8002ade:	2201      	movs	r2, #1
 8002ae0:	2304      	movs	r3, #4
 8002ae2:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8002ae6:	2328      	movs	r3, #40	; 0x28
 8002ae8:	9300      	str	r3, [sp, #0]
 8002aea:	2203      	movs	r2, #3
 8002aec:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8002af0:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8002af4:	9405      	str	r4, [sp, #20]
 8002af6:	f7ff fc17 	bl	8002328 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002afa:	4809      	ldr	r0, [pc, #36]	; (8002b20 <_Z23getFont_verdana_40_4bppv+0x70>)
 8002afc:	f018 ff0c 	bl	801b918 <atexit>
 8002b00:	4628      	mov	r0, r5
 8002b02:	f018 fecb 	bl	801b89c <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8002b06:	4805      	ldr	r0, [pc, #20]	; (8002b1c <_Z23getFont_verdana_40_4bppv+0x6c>)
 8002b08:	b00f      	add	sp, #60	; 0x3c
 8002b0a:	bd30      	pop	{r4, r5, pc}
 8002b0c:	200018b0 	.word	0x200018b0
 8002b10:	0801f034 	.word	0x0801f034
 8002b14:	0801f040 	.word	0x0801f040
 8002b18:	0801f000 	.word	0x0801f000
 8002b1c:	200018b4 	.word	0x200018b4
 8002b20:	08002aad 	.word	0x08002aad

08002b24 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8002b24:	2000      	movs	r0, #0
 8002b26:	4770      	bx	lr

08002b28 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8002b28:	2000      	movs	r0, #0
 8002b2a:	4770      	bx	lr

08002b2c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002b2c:	b40e      	push	{r1, r2, r3}
 8002b2e:	b503      	push	{r0, r1, lr}
 8002b30:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002b32:	2100      	movs	r1, #0
{
 8002b34:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8002b38:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002b3a:	f00a ff93 	bl	800da64 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002b3e:	b002      	add	sp, #8
 8002b40:	f85d eb04 	ldr.w	lr, [sp], #4
 8002b44:	b003      	add	sp, #12
 8002b46:	4770      	bx	lr

08002b48 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002b48:	b40c      	push	{r2, r3}
 8002b4a:	b507      	push	{r0, r1, r2, lr}
 8002b4c:	ab04      	add	r3, sp, #16
 8002b4e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8002b52:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8002b54:	f00a ff86 	bl	800da64 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002b58:	b003      	add	sp, #12
 8002b5a:	f85d eb04 	ldr.w	lr, [sp], #4
 8002b5e:	b002      	add	sp, #8
 8002b60:	4770      	bx	lr
	...

08002b64 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8002b64:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8002b66:	b510      	push	{r4, lr}
 8002b68:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8002b6a:	b373      	cbz	r3, 8002bca <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8002b6c:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8002b6e:	b92b      	cbnz	r3, 8002b7c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8002b70:	4b18      	ldr	r3, [pc, #96]	; (8002bd4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8002b72:	4a19      	ldr	r2, [pc, #100]	; (8002bd8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8002b74:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8002b76:	4819      	ldr	r0, [pc, #100]	; (8002bdc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8002b78:	f018 feb0 	bl	801b8dc <__assert_func>
            return buffer[pos];
 8002b7c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8002b7e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8002b82:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8002b84:	b30b      	cbz	r3, 8002bca <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8002b86:	f00c fa1a 	bl	800efbe <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8002b8a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8002b8c:	2b01      	cmp	r3, #1
 8002b8e:	d803      	bhi.n	8002b98 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8002b90:	4b13      	ldr	r3, [pc, #76]	; (8002be0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8002b92:	4a14      	ldr	r2, [pc, #80]	; (8002be4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8002b94:	21cb      	movs	r1, #203	; 0xcb
 8002b96:	e7ee      	b.n	8002b76 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8002b98:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8002b9a:	1c53      	adds	r3, r2, #1
 8002b9c:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8002b9e:	2b09      	cmp	r3, #9
 8002ba0:	4619      	mov	r1, r3
 8002ba2:	bf88      	it	hi
 8002ba4:	f1a3 010a 	subhi.w	r1, r3, #10
 8002ba8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8002bac:	f640 103f 	movw	r0, #2367	; 0x93f
 8002bb0:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8002bb2:	4281      	cmp	r1, r0
 8002bb4:	d109      	bne.n	8002bca <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8002bb6:	2b0a      	cmp	r3, #10
 8002bb8:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8002bbc:	bf28      	it	cs
 8002bbe:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8002bc0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8002bc4:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8002bc6:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8002bc8:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8002bca:	4620      	mov	r0, r4
}
 8002bcc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8002bd0:	f00c b8f8 	b.w	800edc4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8002bd4:	0801d848 	.word	0x0801d848
 8002bd8:	0801d851 	.word	0x0801d851
 8002bdc:	0801d8fc 	.word	0x0801d8fc
 8002be0:	0801d946 	.word	0x0801d946
 8002be4:	0801d954 	.word	0x0801d954

08002be8 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8002be8:	f00c b8b3 	b.w	800ed52 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08002bec <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8002bec:	b510      	push	{r4, lr}
 8002bee:	b086      	sub	sp, #24
 8002bf0:	ac02      	add	r4, sp, #8
 8002bf2:	e884 0006 	stmia.w	r4, {r1, r2}
 8002bf6:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8002bf8:	ab0a      	add	r3, sp, #40	; 0x28
 8002bfa:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8002bfc:	9301      	str	r3, [sp, #4]
 8002bfe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002c00:	9300      	str	r3, [sp, #0]
 8002c02:	4621      	mov	r1, r4
 8002c04:	9b08      	ldr	r3, [sp, #32]
 8002c06:	f009 fbd1 	bl	800c3ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8002c0a:	b006      	add	sp, #24
 8002c0c:	bd10      	pop	{r4, pc}
	...

08002c10 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8002c10:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8002c12:	bb18      	cbnz	r0, 8002c5c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8002c14:	4b12      	ldr	r3, [pc, #72]	; (8002c60 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8002c16:	4813      	ldr	r0, [pc, #76]	; (8002c64 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8002c18:	681b      	ldr	r3, [r3, #0]
 8002c1a:	4913      	ldr	r1, [pc, #76]	; (8002c68 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8002c1c:	b1b3      	cbz	r3, 8002c4c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002c1e:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002c20:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002c22:	441a      	add	r2, r3
 8002c24:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8002c26:	685a      	ldr	r2, [r3, #4]
 8002c28:	441a      	add	r2, r3
 8002c2a:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002c2c:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8002c2e:	4b0f      	ldr	r3, [pc, #60]	; (8002c6c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8002c30:	2200      	movs	r2, #0
 8002c32:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8002c34:	f000 f838 	bl	8002ca8 <_ZN17TypedTextDatabase8getFontsEv>
 8002c38:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8002c3a:	f000 f833 	bl	8002ca4 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8002c3e:	4b0c      	ldr	r3, [pc, #48]	; (8002c70 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8002c40:	601c      	str	r4, [r3, #0]
        fonts = f;
 8002c42:	4b0c      	ldr	r3, [pc, #48]	; (8002c74 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8002c44:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8002c46:	4b0c      	ldr	r3, [pc, #48]	; (8002c78 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8002c48:	8018      	strh	r0, [r3, #0]
    }
}
 8002c4a:	e007      	b.n	8002c5c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8002c4c:	4b0b      	ldr	r3, [pc, #44]	; (8002c7c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8002c4e:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8002c50:	4b0b      	ldr	r3, [pc, #44]	; (8002c80 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8002c52:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8002c54:	4b0b      	ldr	r3, [pc, #44]	; (8002c84 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8002c56:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8002c58:	2c00      	cmp	r4, #0
 8002c5a:	d1e8      	bne.n	8002c2e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8002c5c:	bd38      	pop	{r3, r4, r5, pc}
 8002c5e:	bf00      	nop
 8002c60:	200018e0 	.word	0x200018e0
 8002c64:	200018e4 	.word	0x200018e4
 8002c68:	200018e8 	.word	0x200018e8
 8002c6c:	200018ec 	.word	0x200018ec
 8002c70:	200126c0 	.word	0x200126c0
 8002c74:	200126c8 	.word	0x200126c8
 8002c78:	200126c4 	.word	0x200126c4
 8002c7c:	0801f05c 	.word	0x0801f05c
 8002c80:	0801f044 	.word	0x0801f044
 8002c84:	0801f0bc 	.word	0x0801f0bc

08002c88 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8002c88:	4b04      	ldr	r3, [pc, #16]	; (8002c9c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8002c8a:	681b      	ldr	r3, [r3, #0]
 8002c8c:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8002c90:	4b03      	ldr	r3, [pc, #12]	; (8002ca0 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8002c92:	681b      	ldr	r3, [r3, #0]
}
 8002c94:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8002c98:	4770      	bx	lr
 8002c9a:	bf00      	nop
 8002c9c:	200018e8 	.word	0x200018e8
 8002ca0:	200018e4 	.word	0x200018e4

08002ca4 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8002ca4:	2006      	movs	r0, #6
 8002ca6:	4770      	bx	lr

08002ca8 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8002ca8:	4800      	ldr	r0, [pc, #0]	; (8002cac <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8002caa:	4770      	bx	lr
 8002cac:	200018f0 	.word	0x200018f0

08002cb0 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8002cb0:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 8002cb2:	f7ff febf 	bl	8002a34 <_Z23getFont_verdana_20_4bppv>
};
 8002cb6:	4c04      	ldr	r4, [pc, #16]	; (8002cc8 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8002cb8:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8002cba:	f7ff fef9 	bl	8002ab0 <_Z23getFont_verdana_40_4bppv>
};
 8002cbe:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8002cc0:	f7ff fe7c 	bl	80029bc <_Z23getFont_verdana_10_4bppv>
};
 8002cc4:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8002cc6:	bd10      	pop	{r4, pc}
 8002cc8:	200018f0 	.word	0x200018f0

08002ccc <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8002ccc:	4770      	bx	lr

08002cce <_ZN19FrontendApplicationD0Ev>:
 8002cce:	b510      	push	{r4, lr}
 8002cd0:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8002cd4:	4604      	mov	r4, r0
 8002cd6:	f018 fdd3 	bl	801b880 <_ZdlPvj>
 8002cda:	4620      	mov	r0, r4
 8002cdc:	bd10      	pop	{r4, pc}

08002cde <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8002cde:	b510      	push	{r4, lr}
 8002ce0:	4604      	mov	r4, r0
    {
        model.tick();
 8002ce2:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 8002ce6:	f000 f865 	bl	8002db4 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8002cea:	4620      	mov	r0, r4
    }
 8002cec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8002cf0:	f00a b820 	b.w	800cd34 <_ZN8touchgfx11Application15handleTickEventEv>

08002cf4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8002cf4:	b510      	push	{r4, lr}
 8002cf6:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8002cf8:	f7ff faa4 	bl	8002244 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8002cfc:	4b01      	ldr	r3, [pc, #4]	; (8002d04 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8002cfe:	6023      	str	r3, [r4, #0]
{

}
 8002d00:	4620      	mov	r0, r4
 8002d02:	bd10      	pop	{r4, pc}
 8002d04:	0801da30 	.word	0x0801da30

08002d08 <_ZN5Model18LedToggleRequestedEb>:
		ModbusQuery(&ModbusH, telegram[0]);
		xSemaphoreGive((QueueHandle_t)ModbusH.ModBusSphrHandle);
	}
}
void Model::LedToggleRequested(bool value)
{
 8002d08:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
	modbus_t telegram[1];
	ModbusDATARX[0] 		= value;
 8002d0a:	4b09      	ldr	r3, [pc, #36]	; (8002d30 <_ZN5Model18LedToggleRequestedEb+0x28>)
	telegram[0].u8id 		= 1;
	telegram[0].u8fct 		= MB_FC_WRITE_COIL;
	telegram[0].u16RegAdd 	= 0x01;
	telegram[0].u16CoilsNo 	= 1;
	telegram[0].u16reg 		= ModbusDATATX;
	ModbusQueryInject(&ModbusH, telegram[0]);
 8002d0c:	4809      	ldr	r0, [pc, #36]	; (8002d34 <_ZN5Model18LedToggleRequestedEb+0x2c>)
	ModbusDATARX[0] 		= value;
 8002d0e:	8019      	strh	r1, [r3, #0]
	telegram[0].u8id 		= 1;
 8002d10:	4b09      	ldr	r3, [pc, #36]	; (8002d38 <_ZN5Model18LedToggleRequestedEb+0x30>)
 8002d12:	9302      	str	r3, [sp, #8]
	telegram[0].u16CoilsNo 	= 1;
 8002d14:	2301      	movs	r3, #1
 8002d16:	f8ad 300c 	strh.w	r3, [sp, #12]
	telegram[0].u16reg 		= ModbusDATATX;
 8002d1a:	4b08      	ldr	r3, [pc, #32]	; (8002d3c <_ZN5Model18LedToggleRequestedEb+0x34>)
 8002d1c:	9304      	str	r3, [sp, #16]
	ModbusQueryInject(&ModbusH, telegram[0]);
 8002d1e:	9b05      	ldr	r3, [sp, #20]
 8002d20:	9300      	str	r3, [sp, #0]
 8002d22:	ab02      	add	r3, sp, #8
 8002d24:	cb0e      	ldmia	r3, {r1, r2, r3}
 8002d26:	f003 fb29 	bl	800637c <ModbusQueryInject>
}
 8002d2a:	b007      	add	sp, #28
 8002d2c:	f85d fb04 	ldr.w	pc, [sp], #4
 8002d30:	20001484 	.word	0x20001484
 8002d34:	200014a4 	.word	0x200014a4
 8002d38:	00010501 	.word	0x00010501
 8002d3c:	20001494 	.word	0x20001494

08002d40 <_ZN5Model14RegisterUpDownEi>:
{
 8002d40:	b570      	push	{r4, r5, r6, lr}
	if(xSemaphoreTake((QueueHandle_t)ModbusH.ModBusSphrHandle,300)==pdTRUE)
 8002d42:	4e14      	ldr	r6, [pc, #80]	; (8002d94 <_ZN5Model14RegisterUpDownEi+0x54>)
{
 8002d44:	b086      	sub	sp, #24
 8002d46:	4605      	mov	r5, r0
 8002d48:	460c      	mov	r4, r1
	if(xSemaphoreTake((QueueHandle_t)ModbusH.ModBusSphrHandle,300)==pdTRUE)
 8002d4a:	f8d6 00b8 	ldr.w	r0, [r6, #184]	; 0xb8
 8002d4e:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8002d52:	f005 f845 	bl	8007de0 <xQueueSemaphoreTake>
 8002d56:	2801      	cmp	r0, #1
 8002d58:	d11a      	bne.n	8002d90 <_ZN5Model14RegisterUpDownEi+0x50>
		reg = reg + value;
 8002d5a:	6929      	ldr	r1, [r5, #16]
		ModbusDATATX[0] = reg;
 8002d5c:	4b0e      	ldr	r3, [pc, #56]	; (8002d98 <_ZN5Model14RegisterUpDownEi+0x58>)
		telegram[0].u16reg 		= ModbusDATATX;
 8002d5e:	9304      	str	r3, [sp, #16]
		reg = reg + value;
 8002d60:	4421      	add	r1, r4
		ModbusDATATX[0] = reg;
 8002d62:	8019      	strh	r1, [r3, #0]
		telegram[0].u8id 		= 1;
 8002d64:	4a0d      	ldr	r2, [pc, #52]	; (8002d9c <_ZN5Model14RegisterUpDownEi+0x5c>)
		ModbusQuery(&ModbusH, telegram[0]);
 8002d66:	9b05      	ldr	r3, [sp, #20]
		telegram[0].u16CoilsNo 	= 1;
 8002d68:	f8ad 000c 	strh.w	r0, [sp, #12]
		ModbusQuery(&ModbusH, telegram[0]);
 8002d6c:	9300      	str	r3, [sp, #0]
		telegram[0].u8id 		= 1;
 8002d6e:	9202      	str	r2, [sp, #8]
		ModbusQuery(&ModbusH, telegram[0]);
 8002d70:	ab02      	add	r3, sp, #8
		reg = reg + value;
 8002d72:	6129      	str	r1, [r5, #16]
		ModbusQuery(&ModbusH, telegram[0]);
 8002d74:	4630      	mov	r0, r6
 8002d76:	cb0e      	ldmia	r3, {r1, r2, r3}
 8002d78:	f003 fae8 	bl	800634c <ModbusQuery>
		xSemaphoreGive((QueueHandle_t)ModbusH.ModBusSphrHandle);
 8002d7c:	2300      	movs	r3, #0
 8002d7e:	f8d6 00b8 	ldr.w	r0, [r6, #184]	; 0xb8
 8002d82:	461a      	mov	r2, r3
 8002d84:	4619      	mov	r1, r3
}
 8002d86:	b006      	add	sp, #24
 8002d88:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		xSemaphoreGive((QueueHandle_t)ModbusH.ModBusSphrHandle);
 8002d8c:	f004 be20 	b.w	80079d0 <xQueueGenericSend>
}
 8002d90:	b006      	add	sp, #24
 8002d92:	bd70      	pop	{r4, r5, r6, pc}
 8002d94:	200014a4 	.word	0x200014a4
 8002d98:	20001494 	.word	0x20001494
 8002d9c:	00010601 	.word	0x00010601

08002da0 <_ZN5ModelC1Ev>:
Model::Model() : modelListener(0)
 8002da0:	4a03      	ldr	r2, [pc, #12]	; (8002db0 <_ZN5ModelC1Ev+0x10>)
 8002da2:	6002      	str	r2, [r0, #0]
 8002da4:	2200      	movs	r2, #0
	reg		= 0;	//KOM
 8002da6:	e9c0 2203 	strd	r2, r2, [r0, #12]
Model::Model() : modelListener(0)
 8002daa:	6042      	str	r2, [r0, #4]
}
 8002dac:	4770      	bx	lr
 8002dae:	bf00      	nop
 8002db0:	0801da7c 	.word	0x0801da7c

08002db4 <_ZN5Model4tickEv>:
{
 8002db4:	b5f0      	push	{r4, r5, r6, r7, lr}
	if(counter >= 10)
 8002db6:	68c3      	ldr	r3, [r0, #12]
 8002db8:	2b09      	cmp	r3, #9
{
 8002dba:	b087      	sub	sp, #28
 8002dbc:	4604      	mov	r4, r0
	if(counter >= 10)
 8002dbe:	dd25      	ble.n	8002e0c <_ZN5Model4tickEv+0x58>
		if(xSemaphoreTake((QueueHandle_t)ModbusH.ModBusSphrHandle,300)==pdTRUE)
 8002dc0:	4d15      	ldr	r5, [pc, #84]	; (8002e18 <_ZN5Model4tickEv+0x64>)
		counter = 0;
 8002dc2:	2700      	movs	r7, #0
 8002dc4:	60c7      	str	r7, [r0, #12]
		if(xSemaphoreTake((QueueHandle_t)ModbusH.ModBusSphrHandle,300)==pdTRUE)
 8002dc6:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8002dca:	f8d5 00b8 	ldr.w	r0, [r5, #184]	; 0xb8
 8002dce:	f005 f807 	bl	8007de0 <xQueueSemaphoreTake>
 8002dd2:	2801      	cmp	r0, #1
 8002dd4:	d11a      	bne.n	8002e0c <_ZN5Model4tickEv+0x58>
			telegram[0].u8id 		= 1;
 8002dd6:	4b11      	ldr	r3, [pc, #68]	; (8002e1c <_ZN5Model4tickEv+0x68>)
			telegram[0].u16reg 		= ModbusDATARX;
 8002dd8:	4e11      	ldr	r6, [pc, #68]	; (8002e20 <_ZN5Model4tickEv+0x6c>)
			telegram[0].u8id 		= 1;
 8002dda:	9302      	str	r3, [sp, #8]
			ModbusQuery(&ModbusH, telegram[0]);
 8002ddc:	9b05      	ldr	r3, [sp, #20]
			telegram[0].u16CoilsNo 	= 1;
 8002dde:	f8ad 000c 	strh.w	r0, [sp, #12]
			ModbusQuery(&ModbusH, telegram[0]);
 8002de2:	9300      	str	r3, [sp, #0]
			telegram[0].u16reg 		= ModbusDATARX;
 8002de4:	9604      	str	r6, [sp, #16]
			ModbusQuery(&ModbusH, telegram[0]);
 8002de6:	ab02      	add	r3, sp, #8
 8002de8:	cb0e      	ldmia	r3, {r1, r2, r3}
 8002dea:	4628      	mov	r0, r5
 8002dec:	f003 faae 	bl	800634c <ModbusQuery>
			modelListener->registerUpdate(ModbusDATARX[0]);
 8002df0:	6860      	ldr	r0, [r4, #4]
 8002df2:	8831      	ldrh	r1, [r6, #0]
 8002df4:	6803      	ldr	r3, [r0, #0]
 8002df6:	689b      	ldr	r3, [r3, #8]
 8002df8:	4798      	blx	r3
			reg = ModbusDATARX[0];
 8002dfa:	8833      	ldrh	r3, [r6, #0]
 8002dfc:	6123      	str	r3, [r4, #16]
			xSemaphoreGive((QueueHandle_t)ModbusH.ModBusSphrHandle);
 8002dfe:	f8d5 00b8 	ldr.w	r0, [r5, #184]	; 0xb8
 8002e02:	463b      	mov	r3, r7
 8002e04:	463a      	mov	r2, r7
 8002e06:	4639      	mov	r1, r7
 8002e08:	f004 fde2 	bl	80079d0 <xQueueGenericSend>
	counter++;
 8002e0c:	68e3      	ldr	r3, [r4, #12]
 8002e0e:	3301      	adds	r3, #1
 8002e10:	60e3      	str	r3, [r4, #12]
}
 8002e12:	b007      	add	sp, #28
 8002e14:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002e16:	bf00      	nop
 8002e18:	200014a4 	.word	0x200014a4
 8002e1c:	00010301 	.word	0x00010301
 8002e20:	20001484 	.word	0x20001484

08002e24 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8002e24:	4770      	bx	lr

08002e26 <_ZThn4_N16Screen1PresenterD1Ev>:
 8002e26:	3804      	subs	r0, #4
 8002e28:	4770      	bx	lr

08002e2a <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8002e2a:	4770      	bx	lr

08002e2c <_ZN16Screen1Presenter18LedToggleRequestedEb>:
{

}
void Screen1Presenter::LedToggleRequested(bool value)
{
	model->LedToggleRequested(value);
 8002e2c:	6880      	ldr	r0, [r0, #8]
 8002e2e:	6803      	ldr	r3, [r0, #0]
 8002e30:	681b      	ldr	r3, [r3, #0]
 8002e32:	4718      	bx	r3

08002e34 <_ZN16Screen1Presenter14RegisterUpDownEi>:
}
void Screen1Presenter::RegisterUpDown(int value)
{
	model->RegisterUpDown(value);
 8002e34:	6880      	ldr	r0, [r0, #8]
 8002e36:	6803      	ldr	r3, [r0, #0]
 8002e38:	685b      	ldr	r3, [r3, #4]
 8002e3a:	4718      	bx	r3

08002e3c <_ZN16Screen1Presenter14registerUpdateEi>:
}
void Screen1Presenter::registerUpdate(int value)
{
	view.registerUpdate(value);
 8002e3c:	68c0      	ldr	r0, [r0, #12]
 8002e3e:	6803      	ldr	r3, [r0, #0]
 8002e40:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002e42:	4718      	bx	r3

08002e44 <_ZThn4_N16Screen1Presenter14registerUpdateEi>:

    virtual void LedToggleRequested(bool value);
    virtual void RegisterUpDown(int value);

    virtual void registerUpdate(int value);
 8002e44:	f1a0 0004 	sub.w	r0, r0, #4
 8002e48:	f7ff bff8 	b.w	8002e3c <_ZN16Screen1Presenter14registerUpdateEi>

08002e4c <_ZN16Screen1PresenterD0Ev>:
    virtual ~Screen1Presenter() {};
 8002e4c:	b510      	push	{r4, lr}
 8002e4e:	2110      	movs	r1, #16
 8002e50:	4604      	mov	r4, r0
 8002e52:	f018 fd15 	bl	801b880 <_ZdlPvj>
 8002e56:	4620      	mov	r0, r4
 8002e58:	bd10      	pop	{r4, pc}

08002e5a <_ZThn4_N16Screen1PresenterD0Ev>:
 8002e5a:	f1a0 0004 	sub.w	r0, r0, #4
 8002e5e:	e7f5      	b.n	8002e4c <_ZN16Screen1PresenterD0Ev>

08002e60 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8002e60:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8002e62:	2200      	movs	r2, #0
 8002e64:	6082      	str	r2, [r0, #8]
    : view(v)
 8002e66:	4a04      	ldr	r2, [pc, #16]	; (8002e78 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8002e68:	60c1      	str	r1, [r0, #12]
 8002e6a:	f102 0408 	add.w	r4, r2, #8
 8002e6e:	322c      	adds	r2, #44	; 0x2c
 8002e70:	6004      	str	r4, [r0, #0]
 8002e72:	6042      	str	r2, [r0, #4]
}
 8002e74:	bd10      	pop	{r4, pc}
 8002e76:	bf00      	nop
 8002e78:	0801da84 	.word	0x0801da84

08002e7c <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8002e7c:	4770      	bx	lr

08002e7e <_ZN11Screen1View14functionBtDownEv>:
	}

}
void Screen1View::functionBtDown()
{
	presenter->RegisterUpDown(-1);
 8002e7e:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8002e80:	6803      	ldr	r3, [r0, #0]
 8002e82:	f04f 31ff 	mov.w	r1, #4294967295
 8002e86:	695b      	ldr	r3, [r3, #20]
 8002e88:	4718      	bx	r3

08002e8a <_ZN11Screen1View12functionBtUpEv>:
}
void Screen1View::functionBtUp()
{
	presenter->RegisterUpDown(1);
 8002e8a:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8002e8c:	6803      	ldr	r3, [r0, #0]
 8002e8e:	2101      	movs	r1, #1
 8002e90:	695b      	ldr	r3, [r3, #20]
 8002e92:	4718      	bx	r3

08002e94 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8002e94:	b510      	push	{r4, lr}
 8002e96:	4b03      	ldr	r3, [pc, #12]	; (8002ea4 <_ZN11Screen1ViewD1Ev+0x10>)
 8002e98:	6003      	str	r3, [r0, #0]
 8002e9a:	4604      	mov	r4, r0
 8002e9c:	f7ff faba 	bl	8002414 <_ZN15Screen1ViewBaseD1Ev>
 8002ea0:	4620      	mov	r0, r4
 8002ea2:	bd10      	pop	{r4, pc}
 8002ea4:	0801db7c 	.word	0x0801db7c

08002ea8 <_ZN11Screen1ViewD0Ev>:
 8002ea8:	b510      	push	{r4, lr}
 8002eaa:	4604      	mov	r4, r0
 8002eac:	f7ff fff2 	bl	8002e94 <_ZN11Screen1ViewD1Ev>
 8002eb0:	4620      	mov	r0, r4
 8002eb2:	f44f 711d 	mov.w	r1, #628	; 0x274
 8002eb6:	f018 fce3 	bl	801b880 <_ZdlPvj>
 8002eba:	4620      	mov	r0, r4
 8002ebc:	bd10      	pop	{r4, pc}
	...

08002ec0 <_ZNK8touchgfx6Bitmap5getIdEv>:
    /**
     * Gets the id of this Bitmap.
     *
     * @return The id of this Bitmap.
     */
    BitmapId getId() const
 8002ec0:	b508      	push	{r3, lr}
    {
        assert(bitmaps != 0 && "Bitmap database has not been initialized.");
 8002ec2:	4b05      	ldr	r3, [pc, #20]	; (8002ed8 <_ZNK8touchgfx6Bitmap5getIdEv+0x18>)
 8002ec4:	681b      	ldr	r3, [r3, #0]
 8002ec6:	b92b      	cbnz	r3, 8002ed4 <_ZNK8touchgfx6Bitmap5getIdEv+0x14>
 8002ec8:	4b04      	ldr	r3, [pc, #16]	; (8002edc <_ZNK8touchgfx6Bitmap5getIdEv+0x1c>)
 8002eca:	4a05      	ldr	r2, [pc, #20]	; (8002ee0 <_ZNK8touchgfx6Bitmap5getIdEv+0x20>)
 8002ecc:	4805      	ldr	r0, [pc, #20]	; (8002ee4 <_ZNK8touchgfx6Bitmap5getIdEv+0x24>)
 8002ece:	2187      	movs	r1, #135	; 0x87
 8002ed0:	f018 fd04 	bl	801b8dc <__assert_func>
        return bitmapId;
    }
 8002ed4:	8800      	ldrh	r0, [r0, #0]
 8002ed6:	bd08      	pop	{r3, pc}
 8002ed8:	200126f8 	.word	0x200126f8
 8002edc:	0801dabc 	.word	0x0801dabc
 8002ee0:	0801daf8 	.word	0x0801daf8
 8002ee4:	0801db2b 	.word	0x0801db2b

08002ee8 <_ZN11Screen1View17functionLedToggleEv>:
{
 8002ee8:	b570      	push	{r4, r5, r6, lr}
 8002eea:	4604      	mov	r4, r0
     * @return True if the button has been toggled, i.e. the pressed state is shown when the
     *         button is not pressed.
     */
    bool getState() const
    {
        return up.getId() == originalPressed.getId();
 8002eec:	f500 70d1 	add.w	r0, r0, #418	; 0x1a2
 8002ef0:	f7ff ffe6 	bl	8002ec0 <_ZNK8touchgfx6Bitmap5getIdEv>
 8002ef4:	4605      	mov	r5, r0
 8002ef6:	f504 70d4 	add.w	r0, r4, #424	; 0x1a8
 8002efa:	f7ff ffe1 	bl	8002ec0 <_ZNK8touchgfx6Bitmap5getIdEv>
		presenter->LedToggleRequested(1);
 8002efe:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8002f00:	681a      	ldr	r2, [r3, #0]
	if(toggleLED.getState() == true)
 8002f02:	4285      	cmp	r5, r0
		presenter->LedToggleRequested(1);
 8002f04:	6912      	ldr	r2, [r2, #16]
}
 8002f06:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		presenter->LedToggleRequested(1);
 8002f0a:	bf0c      	ite	eq
 8002f0c:	2101      	moveq	r1, #1
		presenter->LedToggleRequested(0);
 8002f0e:	2100      	movne	r1, #0
 8002f10:	4618      	mov	r0, r3
 8002f12:	4710      	bx	r2

08002f14 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8002f14:	b510      	push	{r4, lr}
 8002f16:	4604      	mov	r4, r0
 8002f18:	f7ff fb94 	bl	8002644 <_ZN15Screen1ViewBaseC1Ev>
 8002f1c:	4b01      	ldr	r3, [pc, #4]	; (8002f24 <_ZN11Screen1ViewC1Ev+0x10>)
 8002f1e:	6023      	str	r3, [r4, #0]
}
 8002f20:	4620      	mov	r0, r4
 8002f22:	bd10      	pop	{r4, pc}
 8002f24:	0801db7c 	.word	0x0801db7c

08002f28 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8002f28:	f7ff ba75 	b.w	8002416 <_ZN15Screen1ViewBase11setupScreenEv>

08002f2c <_ZN11Screen1View14registerUpdateEi>:
}
void Screen1View::registerUpdate(int value)
{
 8002f2c:	b510      	push	{r4, lr}
 8002f2e:	460b      	mov	r3, r1
 8002f30:	4604      	mov	r4, r0
	//memset(&textArea1Buffer,0,TEXTAREA1_SIZE);
	Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%d",value);
 8002f32:	4a06      	ldr	r2, [pc, #24]	; (8002f4c <_ZN11Screen1View14registerUpdateEi+0x20>)
 8002f34:	2114      	movs	r1, #20
 8002f36:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8002f3a:	f00c fdef 	bl	800fb1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea1.invalidate();
 8002f3e:	f104 0098 	add.w	r0, r4, #152	; 0x98
}
 8002f42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textArea1.invalidate();
 8002f46:	f00a beb7 	b.w	800dcb8 <_ZNK8touchgfx8Drawable10invalidateEv>
 8002f4a:	bf00      	nop
 8002f4c:	0801db6f 	.word	0x0801db6f

08002f50 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8002f50:	20f0      	movs	r0, #240	; 0xf0
 8002f52:	4770      	bx	lr

08002f54 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8002f54:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8002f58:	4770      	bx	lr

08002f5a <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8002f5a:	2029      	movs	r0, #41	; 0x29
 8002f5c:	f7fe bc86 	b.w	800186c <LCD_IO_WriteReg>

08002f60 <ili9341_DisplayOff>:
 8002f60:	2028      	movs	r0, #40	; 0x28
 8002f62:	f7fe bc83 	b.w	800186c <LCD_IO_WriteReg>

08002f66 <ili9341_Init>:
{
 8002f66:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8002f68:	f7fe fc54 	bl	8001814 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8002f6c:	20ca      	movs	r0, #202	; 0xca
 8002f6e:	f7fe fc7d 	bl	800186c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002f72:	20c3      	movs	r0, #195	; 0xc3
 8002f74:	f7fe fc5e 	bl	8001834 <LCD_IO_WriteData>
 8002f78:	2008      	movs	r0, #8
 8002f7a:	f7fe fc5b 	bl	8001834 <LCD_IO_WriteData>
 8002f7e:	2050      	movs	r0, #80	; 0x50
 8002f80:	f7fe fc58 	bl	8001834 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002f84:	20cf      	movs	r0, #207	; 0xcf
 8002f86:	f7fe fc71 	bl	800186c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002f8a:	2000      	movs	r0, #0
 8002f8c:	f7fe fc52 	bl	8001834 <LCD_IO_WriteData>
 8002f90:	20c1      	movs	r0, #193	; 0xc1
 8002f92:	f7fe fc4f 	bl	8001834 <LCD_IO_WriteData>
 8002f96:	2030      	movs	r0, #48	; 0x30
 8002f98:	f7fe fc4c 	bl	8001834 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002f9c:	20ed      	movs	r0, #237	; 0xed
 8002f9e:	f7fe fc65 	bl	800186c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002fa2:	2064      	movs	r0, #100	; 0x64
 8002fa4:	f7fe fc46 	bl	8001834 <LCD_IO_WriteData>
 8002fa8:	2003      	movs	r0, #3
 8002faa:	f7fe fc43 	bl	8001834 <LCD_IO_WriteData>
 8002fae:	2012      	movs	r0, #18
 8002fb0:	f7fe fc40 	bl	8001834 <LCD_IO_WriteData>
 8002fb4:	2081      	movs	r0, #129	; 0x81
 8002fb6:	f7fe fc3d 	bl	8001834 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002fba:	20e8      	movs	r0, #232	; 0xe8
 8002fbc:	f7fe fc56 	bl	800186c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002fc0:	2085      	movs	r0, #133	; 0x85
 8002fc2:	f7fe fc37 	bl	8001834 <LCD_IO_WriteData>
 8002fc6:	2000      	movs	r0, #0
 8002fc8:	f7fe fc34 	bl	8001834 <LCD_IO_WriteData>
 8002fcc:	2078      	movs	r0, #120	; 0x78
 8002fce:	f7fe fc31 	bl	8001834 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002fd2:	20cb      	movs	r0, #203	; 0xcb
 8002fd4:	f7fe fc4a 	bl	800186c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002fd8:	2039      	movs	r0, #57	; 0x39
 8002fda:	f7fe fc2b 	bl	8001834 <LCD_IO_WriteData>
 8002fde:	202c      	movs	r0, #44	; 0x2c
 8002fe0:	f7fe fc28 	bl	8001834 <LCD_IO_WriteData>
 8002fe4:	2000      	movs	r0, #0
 8002fe6:	f7fe fc25 	bl	8001834 <LCD_IO_WriteData>
 8002fea:	2034      	movs	r0, #52	; 0x34
 8002fec:	f7fe fc22 	bl	8001834 <LCD_IO_WriteData>
 8002ff0:	2002      	movs	r0, #2
 8002ff2:	f7fe fc1f 	bl	8001834 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8002ff6:	20f7      	movs	r0, #247	; 0xf7
 8002ff8:	f7fe fc38 	bl	800186c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8002ffc:	2020      	movs	r0, #32
 8002ffe:	f7fe fc19 	bl	8001834 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003002:	20ea      	movs	r0, #234	; 0xea
 8003004:	f7fe fc32 	bl	800186c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003008:	2000      	movs	r0, #0
 800300a:	f7fe fc13 	bl	8001834 <LCD_IO_WriteData>
 800300e:	2000      	movs	r0, #0
 8003010:	f7fe fc10 	bl	8001834 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003014:	20b1      	movs	r0, #177	; 0xb1
 8003016:	f7fe fc29 	bl	800186c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800301a:	2000      	movs	r0, #0
 800301c:	f7fe fc0a 	bl	8001834 <LCD_IO_WriteData>
 8003020:	201b      	movs	r0, #27
 8003022:	f7fe fc07 	bl	8001834 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003026:	20b6      	movs	r0, #182	; 0xb6
 8003028:	f7fe fc20 	bl	800186c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800302c:	200a      	movs	r0, #10
 800302e:	f7fe fc01 	bl	8001834 <LCD_IO_WriteData>
 8003032:	20a2      	movs	r0, #162	; 0xa2
 8003034:	f7fe fbfe 	bl	8001834 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003038:	20c0      	movs	r0, #192	; 0xc0
 800303a:	f7fe fc17 	bl	800186c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800303e:	2010      	movs	r0, #16
 8003040:	f7fe fbf8 	bl	8001834 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003044:	20c1      	movs	r0, #193	; 0xc1
 8003046:	f7fe fc11 	bl	800186c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800304a:	2010      	movs	r0, #16
 800304c:	f7fe fbf2 	bl	8001834 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003050:	20c5      	movs	r0, #197	; 0xc5
 8003052:	f7fe fc0b 	bl	800186c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003056:	2045      	movs	r0, #69	; 0x45
 8003058:	f7fe fbec 	bl	8001834 <LCD_IO_WriteData>
 800305c:	2015      	movs	r0, #21
 800305e:	f7fe fbe9 	bl	8001834 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003062:	20c7      	movs	r0, #199	; 0xc7
 8003064:	f7fe fc02 	bl	800186c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003068:	2090      	movs	r0, #144	; 0x90
 800306a:	f7fe fbe3 	bl	8001834 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800306e:	2036      	movs	r0, #54	; 0x36
 8003070:	f7fe fbfc 	bl	800186c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003074:	20c8      	movs	r0, #200	; 0xc8
 8003076:	f7fe fbdd 	bl	8001834 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800307a:	20f2      	movs	r0, #242	; 0xf2
 800307c:	f7fe fbf6 	bl	800186c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003080:	2000      	movs	r0, #0
 8003082:	f7fe fbd7 	bl	8001834 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003086:	20b0      	movs	r0, #176	; 0xb0
 8003088:	f7fe fbf0 	bl	800186c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800308c:	20c2      	movs	r0, #194	; 0xc2
 800308e:	f7fe fbd1 	bl	8001834 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003092:	20b6      	movs	r0, #182	; 0xb6
 8003094:	f7fe fbea 	bl	800186c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003098:	200a      	movs	r0, #10
 800309a:	f7fe fbcb 	bl	8001834 <LCD_IO_WriteData>
 800309e:	20a7      	movs	r0, #167	; 0xa7
 80030a0:	f7fe fbc8 	bl	8001834 <LCD_IO_WriteData>
 80030a4:	2027      	movs	r0, #39	; 0x27
 80030a6:	f7fe fbc5 	bl	8001834 <LCD_IO_WriteData>
 80030aa:	2004      	movs	r0, #4
 80030ac:	f7fe fbc2 	bl	8001834 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80030b0:	202a      	movs	r0, #42	; 0x2a
 80030b2:	f7fe fbdb 	bl	800186c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80030b6:	2000      	movs	r0, #0
 80030b8:	f7fe fbbc 	bl	8001834 <LCD_IO_WriteData>
 80030bc:	2000      	movs	r0, #0
 80030be:	f7fe fbb9 	bl	8001834 <LCD_IO_WriteData>
 80030c2:	2000      	movs	r0, #0
 80030c4:	f7fe fbb6 	bl	8001834 <LCD_IO_WriteData>
 80030c8:	20ef      	movs	r0, #239	; 0xef
 80030ca:	f7fe fbb3 	bl	8001834 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80030ce:	202b      	movs	r0, #43	; 0x2b
 80030d0:	f7fe fbcc 	bl	800186c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80030d4:	2000      	movs	r0, #0
 80030d6:	f7fe fbad 	bl	8001834 <LCD_IO_WriteData>
 80030da:	2000      	movs	r0, #0
 80030dc:	f7fe fbaa 	bl	8001834 <LCD_IO_WriteData>
 80030e0:	2001      	movs	r0, #1
 80030e2:	f7fe fba7 	bl	8001834 <LCD_IO_WriteData>
 80030e6:	203f      	movs	r0, #63	; 0x3f
 80030e8:	f7fe fba4 	bl	8001834 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80030ec:	20f6      	movs	r0, #246	; 0xf6
 80030ee:	f7fe fbbd 	bl	800186c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80030f2:	2001      	movs	r0, #1
 80030f4:	f7fe fb9e 	bl	8001834 <LCD_IO_WriteData>
 80030f8:	2000      	movs	r0, #0
 80030fa:	f7fe fb9b 	bl	8001834 <LCD_IO_WriteData>
 80030fe:	2006      	movs	r0, #6
 8003100:	f7fe fb98 	bl	8001834 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8003104:	202c      	movs	r0, #44	; 0x2c
 8003106:	f7fe fbb1 	bl	800186c <LCD_IO_WriteReg>
  LCD_Delay(200);
 800310a:	20c8      	movs	r0, #200	; 0xc8
 800310c:	f7fe fbfc 	bl	8001908 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8003110:	2026      	movs	r0, #38	; 0x26
 8003112:	f7fe fbab 	bl	800186c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003116:	2001      	movs	r0, #1
 8003118:	f7fe fb8c 	bl	8001834 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800311c:	20e0      	movs	r0, #224	; 0xe0
 800311e:	f7fe fba5 	bl	800186c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003122:	200f      	movs	r0, #15
 8003124:	f7fe fb86 	bl	8001834 <LCD_IO_WriteData>
 8003128:	2029      	movs	r0, #41	; 0x29
 800312a:	f7fe fb83 	bl	8001834 <LCD_IO_WriteData>
 800312e:	2024      	movs	r0, #36	; 0x24
 8003130:	f7fe fb80 	bl	8001834 <LCD_IO_WriteData>
 8003134:	200c      	movs	r0, #12
 8003136:	f7fe fb7d 	bl	8001834 <LCD_IO_WriteData>
 800313a:	200e      	movs	r0, #14
 800313c:	f7fe fb7a 	bl	8001834 <LCD_IO_WriteData>
 8003140:	2009      	movs	r0, #9
 8003142:	f7fe fb77 	bl	8001834 <LCD_IO_WriteData>
 8003146:	204e      	movs	r0, #78	; 0x4e
 8003148:	f7fe fb74 	bl	8001834 <LCD_IO_WriteData>
 800314c:	2078      	movs	r0, #120	; 0x78
 800314e:	f7fe fb71 	bl	8001834 <LCD_IO_WriteData>
 8003152:	203c      	movs	r0, #60	; 0x3c
 8003154:	f7fe fb6e 	bl	8001834 <LCD_IO_WriteData>
 8003158:	2009      	movs	r0, #9
 800315a:	f7fe fb6b 	bl	8001834 <LCD_IO_WriteData>
 800315e:	2013      	movs	r0, #19
 8003160:	f7fe fb68 	bl	8001834 <LCD_IO_WriteData>
 8003164:	2005      	movs	r0, #5
 8003166:	f7fe fb65 	bl	8001834 <LCD_IO_WriteData>
 800316a:	2017      	movs	r0, #23
 800316c:	f7fe fb62 	bl	8001834 <LCD_IO_WriteData>
 8003170:	2011      	movs	r0, #17
 8003172:	f7fe fb5f 	bl	8001834 <LCD_IO_WriteData>
 8003176:	2000      	movs	r0, #0
 8003178:	f7fe fb5c 	bl	8001834 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800317c:	20e1      	movs	r0, #225	; 0xe1
 800317e:	f7fe fb75 	bl	800186c <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8003182:	2000      	movs	r0, #0
 8003184:	f7fe fb56 	bl	8001834 <LCD_IO_WriteData>
 8003188:	2016      	movs	r0, #22
 800318a:	f7fe fb53 	bl	8001834 <LCD_IO_WriteData>
 800318e:	201b      	movs	r0, #27
 8003190:	f7fe fb50 	bl	8001834 <LCD_IO_WriteData>
 8003194:	2004      	movs	r0, #4
 8003196:	f7fe fb4d 	bl	8001834 <LCD_IO_WriteData>
 800319a:	2011      	movs	r0, #17
 800319c:	f7fe fb4a 	bl	8001834 <LCD_IO_WriteData>
 80031a0:	2007      	movs	r0, #7
 80031a2:	f7fe fb47 	bl	8001834 <LCD_IO_WriteData>
 80031a6:	2031      	movs	r0, #49	; 0x31
 80031a8:	f7fe fb44 	bl	8001834 <LCD_IO_WriteData>
 80031ac:	2033      	movs	r0, #51	; 0x33
 80031ae:	f7fe fb41 	bl	8001834 <LCD_IO_WriteData>
 80031b2:	2042      	movs	r0, #66	; 0x42
 80031b4:	f7fe fb3e 	bl	8001834 <LCD_IO_WriteData>
 80031b8:	2005      	movs	r0, #5
 80031ba:	f7fe fb3b 	bl	8001834 <LCD_IO_WriteData>
 80031be:	200c      	movs	r0, #12
 80031c0:	f7fe fb38 	bl	8001834 <LCD_IO_WriteData>
 80031c4:	200a      	movs	r0, #10
 80031c6:	f7fe fb35 	bl	8001834 <LCD_IO_WriteData>
 80031ca:	2028      	movs	r0, #40	; 0x28
 80031cc:	f7fe fb32 	bl	8001834 <LCD_IO_WriteData>
 80031d0:	202f      	movs	r0, #47	; 0x2f
 80031d2:	f7fe fb2f 	bl	8001834 <LCD_IO_WriteData>
 80031d6:	200f      	movs	r0, #15
 80031d8:	f7fe fb2c 	bl	8001834 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80031dc:	2011      	movs	r0, #17
 80031de:	f7fe fb45 	bl	800186c <LCD_IO_WriteReg>
  LCD_Delay(200);
 80031e2:	20c8      	movs	r0, #200	; 0xc8
 80031e4:	f7fe fb90 	bl	8001908 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80031e8:	2029      	movs	r0, #41	; 0x29
 80031ea:	f7fe fb3f 	bl	800186c <LCD_IO_WriteReg>
}
 80031ee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 80031f2:	202c      	movs	r0, #44	; 0x2c
 80031f4:	f7fe bb3a 	b.w	800186c <LCD_IO_WriteReg>

080031f8 <ili9341_ReadID>:
{
 80031f8:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80031fa:	f7fe fb0b 	bl	8001814 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 80031fe:	2103      	movs	r1, #3
 8003200:	20d3      	movs	r0, #211	; 0xd3
 8003202:	f7fe fb4f 	bl	80018a4 <LCD_IO_ReadData>
}
 8003206:	b280      	uxth	r0, r0
 8003208:	bd08      	pop	{r3, pc}

0800320a <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 800320a:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800320c:	b2c4      	uxtb	r4, r0
 800320e:	2202      	movs	r2, #2
 8003210:	2103      	movs	r1, #3
 8003212:	4620      	mov	r0, r4
 8003214:	f7fe fab4 	bl	8001780 <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8003218:	200a      	movs	r0, #10
 800321a:	f7fe faf9 	bl	8001810 <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800321e:	4620      	mov	r0, r4
 8003220:	2200      	movs	r2, #0
 8003222:	2103      	movs	r1, #3
 8003224:	f7fe faac 	bl	8001780 <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8003228:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800322c:	2002      	movs	r0, #2
 800322e:	f7fe baef 	b.w	8001810 <IOE_Delay>

08003232 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8003232:	b538      	push	{r3, r4, r5, lr}
 8003234:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003236:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8003238:	f7fe faa0 	bl	800177c <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800323c:	2100      	movs	r1, #0
 800323e:	4620      	mov	r0, r4
 8003240:	f7fe fab6 	bl	80017b0 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8003244:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8003246:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8003248:	4620      	mov	r0, r4
 800324a:	f7fe fab1 	bl	80017b0 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800324e:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8003252:	b280      	uxth	r0, r0
 8003254:	bd38      	pop	{r3, r4, r5, pc}

08003256 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8003256:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8003258:	b2c4      	uxtb	r4, r0
 800325a:	2140      	movs	r1, #64	; 0x40
 800325c:	4620      	mov	r0, r4
 800325e:	f7fe faa7 	bl	80017b0 <IOE_Read>
  
  if(state > 0)
 8003262:	0603      	lsls	r3, r0, #24
 8003264:	d507      	bpl.n	8003276 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8003266:	214c      	movs	r1, #76	; 0x4c
 8003268:	4620      	mov	r0, r4
 800326a:	f7fe faa1 	bl	80017b0 <IOE_Read>
    {
      ret = 1;
 800326e:	3800      	subs	r0, #0
 8003270:	bf18      	it	ne
 8003272:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8003274:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003276:	2201      	movs	r2, #1
 8003278:	214b      	movs	r1, #75	; 0x4b
 800327a:	4620      	mov	r0, r4
 800327c:	f7fe fa80 	bl	8001780 <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8003280:	4620      	mov	r0, r4
 8003282:	2200      	movs	r2, #0
 8003284:	214b      	movs	r1, #75	; 0x4b
 8003286:	f7fe fa7b 	bl	8001780 <IOE_Write>
  uint8_t ret = 0;
 800328a:	2000      	movs	r0, #0
 800328c:	e7f2      	b.n	8003274 <stmpe811_TS_DetectTouch+0x1e>

0800328e <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 800328e:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8003290:	2304      	movs	r3, #4
 8003292:	b2c4      	uxtb	r4, r0
{
 8003294:	460e      	mov	r6, r1
 8003296:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8003298:	21d7      	movs	r1, #215	; 0xd7
 800329a:	eb0d 0203 	add.w	r2, sp, r3
 800329e:	4620      	mov	r0, r4
 80032a0:	f7fe faa0 	bl	80017e4 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 80032a4:	9b01      	ldr	r3, [sp, #4]
 80032a6:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80032a8:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80032aa:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80032ae:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80032b0:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80032b2:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80032b4:	2201      	movs	r2, #1
 80032b6:	214b      	movs	r1, #75	; 0x4b
 80032b8:	f7fe fa62 	bl	8001780 <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80032bc:	2200      	movs	r2, #0
 80032be:	214b      	movs	r1, #75	; 0x4b
 80032c0:	4620      	mov	r0, r4
 80032c2:	f7fe fa5d 	bl	8001780 <IOE_Write>
}
 80032c6:	b002      	add	sp, #8
 80032c8:	bd70      	pop	{r4, r5, r6, pc}
	...

080032cc <stmpe811_Init>:
{
 80032cc:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 80032ce:	4b0a      	ldr	r3, [pc, #40]	; (80032f8 <stmpe811_Init+0x2c>)
 80032d0:	781a      	ldrb	r2, [r3, #0]
 80032d2:	4290      	cmp	r0, r2
{
 80032d4:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 80032d6:	d00d      	beq.n	80032f4 <stmpe811_Init+0x28>
 80032d8:	7859      	ldrb	r1, [r3, #1]
 80032da:	4288      	cmp	r0, r1
 80032dc:	d00a      	beq.n	80032f4 <stmpe811_Init+0x28>
 80032de:	b10a      	cbz	r2, 80032e4 <stmpe811_Init+0x18>
 80032e0:	b941      	cbnz	r1, 80032f4 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 80032e2:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 80032e4:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 80032e6:	f7fe fa49 	bl	800177c <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 80032ea:	4620      	mov	r0, r4
}
 80032ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 80032f0:	f7ff bf8b 	b.w	800320a <stmpe811_Reset>
}
 80032f4:	bd10      	pop	{r4, pc}
 80032f6:	bf00      	nop
 80032f8:	200018fc 	.word	0x200018fc

080032fc <stmpe811_EnableGlobalIT>:
{
 80032fc:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80032fe:	b2c4      	uxtb	r4, r0
 8003300:	2109      	movs	r1, #9
 8003302:	4620      	mov	r0, r4
 8003304:	f7fe fa54 	bl	80017b0 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8003308:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 800330c:	b2c2      	uxtb	r2, r0
 800330e:	2109      	movs	r1, #9
 8003310:	4620      	mov	r0, r4
}
 8003312:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8003316:	f7fe ba33 	b.w	8001780 <IOE_Write>

0800331a <stmpe811_DisableGlobalIT>:
{
 800331a:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800331c:	b2c4      	uxtb	r4, r0
 800331e:	2109      	movs	r1, #9
 8003320:	4620      	mov	r0, r4
 8003322:	f7fe fa45 	bl	80017b0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8003326:	2109      	movs	r1, #9
 8003328:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 800332c:	4620      	mov	r0, r4
}
 800332e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8003332:	f7fe ba25 	b.w	8001780 <IOE_Write>

08003336 <stmpe811_EnableITSource>:
{
 8003336:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003338:	b2c4      	uxtb	r4, r0
{
 800333a:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 800333c:	4620      	mov	r0, r4
 800333e:	210a      	movs	r1, #10
 8003340:	f7fe fa36 	bl	80017b0 <IOE_Read>
  tmp |= Source; 
 8003344:	4328      	orrs	r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003346:	b2c2      	uxtb	r2, r0
 8003348:	210a      	movs	r1, #10
 800334a:	4620      	mov	r0, r4
}
 800334c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003350:	f7fe ba16 	b.w	8001780 <IOE_Write>

08003354 <stmpe811_TS_EnableIT>:
{
 8003354:	b507      	push	{r0, r1, r2, lr}
 8003356:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 8003358:	f7fe fa11 	bl	800177e <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 800335c:	9801      	ldr	r0, [sp, #4]
 800335e:	211f      	movs	r1, #31
 8003360:	f7ff ffe9 	bl	8003336 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8003364:	9801      	ldr	r0, [sp, #4]
}
 8003366:	b003      	add	sp, #12
 8003368:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 800336c:	f7ff bfc6 	b.w	80032fc <stmpe811_EnableGlobalIT>

08003370 <stmpe811_DisableITSource>:
{
 8003370:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003372:	b2c4      	uxtb	r4, r0
{
 8003374:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8003376:	4620      	mov	r0, r4
 8003378:	210a      	movs	r1, #10
 800337a:	f7fe fa19 	bl	80017b0 <IOE_Read>
  tmp &= ~Source; 
 800337e:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8003382:	b2c2      	uxtb	r2, r0
 8003384:	210a      	movs	r1, #10
 8003386:	4620      	mov	r0, r4
}
 8003388:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800338c:	f7fe b9f8 	b.w	8001780 <IOE_Write>

08003390 <stmpe811_TS_DisableIT>:
{
 8003390:	b510      	push	{r4, lr}
 8003392:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8003394:	f7ff ffc1 	bl	800331a <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8003398:	4620      	mov	r0, r4
 800339a:	211f      	movs	r1, #31
}
 800339c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 80033a0:	f7ff bfe6 	b.w	8003370 <stmpe811_DisableITSource>

080033a4 <stmpe811_ReadGITStatus>:
{
 80033a4:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 80033a6:	b2c0      	uxtb	r0, r0
{
 80033a8:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 80033aa:	210b      	movs	r1, #11
 80033ac:	f7fe fa00 	bl	80017b0 <IOE_Read>
}
 80033b0:	4020      	ands	r0, r4
 80033b2:	bd10      	pop	{r4, pc}

080033b4 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 80033b4:	211f      	movs	r1, #31
 80033b6:	f7ff bff5 	b.w	80033a4 <stmpe811_ReadGITStatus>

080033ba <stmpe811_ClearGlobalIT>:
{
 80033ba:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 80033bc:	b2c0      	uxtb	r0, r0
 80033be:	210b      	movs	r1, #11
 80033c0:	f7fe b9de 	b.w	8001780 <IOE_Write>

080033c4 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 80033c4:	211f      	movs	r1, #31
 80033c6:	f7ff bff8 	b.w	80033ba <stmpe811_ClearGlobalIT>

080033ca <stmpe811_IO_EnableAF>:
{
 80033ca:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 80033cc:	b2c4      	uxtb	r4, r0
{
 80033ce:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 80033d0:	4620      	mov	r0, r4
 80033d2:	2117      	movs	r1, #23
 80033d4:	f7fe f9ec 	bl	80017b0 <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 80033d8:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 80033dc:	b2c2      	uxtb	r2, r0
 80033de:	2117      	movs	r1, #23
 80033e0:	4620      	mov	r0, r4
}
 80033e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 80033e6:	f7fe b9cb 	b.w	8001780 <IOE_Write>

080033ea <stmpe811_TS_Start>:
{
 80033ea:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80033ec:	b2c4      	uxtb	r4, r0
{
 80033ee:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80033f0:	2104      	movs	r1, #4
 80033f2:	4620      	mov	r0, r4
 80033f4:	f7fe f9dc 	bl	80017b0 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80033f8:	2104      	movs	r1, #4
 80033fa:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80033fe:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8003400:	4620      	mov	r0, r4
 8003402:	f7fe f9bd 	bl	8001780 <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8003406:	4630      	mov	r0, r6
 8003408:	21f0      	movs	r1, #240	; 0xf0
 800340a:	f7ff ffde 	bl	80033ca <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800340e:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8003412:	4620      	mov	r0, r4
 8003414:	2104      	movs	r1, #4
 8003416:	f7fe f9b3 	bl	8001780 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 800341a:	2249      	movs	r2, #73	; 0x49
 800341c:	2120      	movs	r1, #32
 800341e:	4620      	mov	r0, r4
 8003420:	f7fe f9ae 	bl	8001780 <IOE_Write>
  IOE_Delay(2); 
 8003424:	2002      	movs	r0, #2
 8003426:	f7fe f9f3 	bl	8001810 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 800342a:	4620      	mov	r0, r4
 800342c:	2201      	movs	r2, #1
 800342e:	2121      	movs	r1, #33	; 0x21
 8003430:	f7fe f9a6 	bl	8001780 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8003434:	4620      	mov	r0, r4
 8003436:	229a      	movs	r2, #154	; 0x9a
 8003438:	2141      	movs	r1, #65	; 0x41
 800343a:	f7fe f9a1 	bl	8001780 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 800343e:	4620      	mov	r0, r4
 8003440:	2201      	movs	r2, #1
 8003442:	214a      	movs	r1, #74	; 0x4a
 8003444:	f7fe f99c 	bl	8001780 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8003448:	4620      	mov	r0, r4
 800344a:	2201      	movs	r2, #1
 800344c:	214b      	movs	r1, #75	; 0x4b
 800344e:	f7fe f997 	bl	8001780 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8003452:	4620      	mov	r0, r4
 8003454:	2200      	movs	r2, #0
 8003456:	214b      	movs	r1, #75	; 0x4b
 8003458:	f7fe f992 	bl	8001780 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 800345c:	4620      	mov	r0, r4
 800345e:	2201      	movs	r2, #1
 8003460:	2156      	movs	r1, #86	; 0x56
 8003462:	f7fe f98d 	bl	8001780 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8003466:	4620      	mov	r0, r4
 8003468:	2201      	movs	r2, #1
 800346a:	2158      	movs	r1, #88	; 0x58
 800346c:	f7fe f988 	bl	8001780 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8003470:	4620      	mov	r0, r4
 8003472:	2201      	movs	r2, #1
 8003474:	2140      	movs	r1, #64	; 0x40
 8003476:	f7fe f983 	bl	8001780 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 800347a:	4620      	mov	r0, r4
 800347c:	22ff      	movs	r2, #255	; 0xff
 800347e:	210b      	movs	r1, #11
 8003480:	f7fe f97e 	bl	8001780 <IOE_Write>
}
 8003484:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8003488:	2002      	movs	r0, #2
 800348a:	f7fe b9c1 	b.w	8001810 <IOE_Delay>
	...

08003490 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8003490:	4b05      	ldr	r3, [pc, #20]	; (80034a8 <SystemInit+0x18>)
 8003492:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8003496:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800349a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800349e:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80034a2:	609a      	str	r2, [r3, #8]
#endif
}
 80034a4:	4770      	bx	lr
 80034a6:	bf00      	nop
 80034a8:	e000ed00 	.word	0xe000ed00

080034ac <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80034ac:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 80034ae:	4b0b      	ldr	r3, [pc, #44]	; (80034dc <HAL_Init+0x30>)
 80034b0:	681a      	ldr	r2, [r3, #0]
 80034b2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80034b6:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 80034b8:	681a      	ldr	r2, [r3, #0]
 80034ba:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80034be:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80034c0:	681a      	ldr	r2, [r3, #0]
 80034c2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80034c6:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80034c8:	2003      	movs	r0, #3
 80034ca:	f000 f82f 	bl	800352c <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80034ce:	2000      	movs	r0, #0
 80034d0:	f7fe fc9a 	bl	8001e08 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80034d4:	f7fe fa26 	bl	8001924 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 80034d8:	2000      	movs	r0, #0
 80034da:	bd08      	pop	{r3, pc}
 80034dc:	40023c00 	.word	0x40023c00

080034e0 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80034e0:	4a03      	ldr	r2, [pc, #12]	; (80034f0 <HAL_IncTick+0x10>)
 80034e2:	4b04      	ldr	r3, [pc, #16]	; (80034f4 <HAL_IncTick+0x14>)
 80034e4:	6811      	ldr	r1, [r2, #0]
 80034e6:	781b      	ldrb	r3, [r3, #0]
 80034e8:	440b      	add	r3, r1
 80034ea:	6013      	str	r3, [r2, #0]
}
 80034ec:	4770      	bx	lr
 80034ee:	bf00      	nop
 80034f0:	20001900 	.word	0x20001900
 80034f4:	20000078 	.word	0x20000078

080034f8 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80034f8:	4b01      	ldr	r3, [pc, #4]	; (8003500 <HAL_GetTick+0x8>)
 80034fa:	6818      	ldr	r0, [r3, #0]
}
 80034fc:	4770      	bx	lr
 80034fe:	bf00      	nop
 8003500:	20001900 	.word	0x20001900

08003504 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8003504:	b538      	push	{r3, r4, r5, lr}
 8003506:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8003508:	f7ff fff6 	bl	80034f8 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800350c:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 800350e:	bf1c      	itt	ne
 8003510:	4b05      	ldrne	r3, [pc, #20]	; (8003528 <HAL_Delay+0x24>)
 8003512:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8003514:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8003516:	bf18      	it	ne
 8003518:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800351a:	f7ff ffed 	bl	80034f8 <HAL_GetTick>
 800351e:	1b43      	subs	r3, r0, r5
 8003520:	42a3      	cmp	r3, r4
 8003522:	d3fa      	bcc.n	800351a <HAL_Delay+0x16>
  {
  }
}
 8003524:	bd38      	pop	{r3, r4, r5, pc}
 8003526:	bf00      	nop
 8003528:	20000078 	.word	0x20000078

0800352c <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800352c:	4907      	ldr	r1, [pc, #28]	; (800354c <HAL_NVIC_SetPriorityGrouping+0x20>)
 800352e:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003530:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003534:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003536:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003538:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800353c:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800353e:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8003540:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8003544:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8003548:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800354a:	4770      	bx	lr
 800354c:	e000ed00 	.word	0xe000ed00

08003550 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003550:	4b16      	ldr	r3, [pc, #88]	; (80035ac <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8003552:	b530      	push	{r4, r5, lr}
 8003554:	68dc      	ldr	r4, [r3, #12]
 8003556:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800355a:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800355e:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003560:	2d04      	cmp	r5, #4
 8003562:	bf28      	it	cs
 8003564:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003566:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003568:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800356c:	bf8c      	ite	hi
 800356e:	3c03      	subhi	r4, #3
 8003570:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003572:	fa03 f505 	lsl.w	r5, r3, r5
 8003576:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800357a:	40a3      	lsls	r3, r4
 800357c:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003580:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8003582:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003584:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003588:	bfac      	ite	ge
 800358a:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800358e:	4a08      	ldrlt	r2, [pc, #32]	; (80035b0 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003590:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003594:	bfb8      	it	lt
 8003596:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800359a:	b2db      	uxtb	r3, r3
 800359c:	bfaa      	itet	ge
 800359e:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80035a2:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80035a4:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 80035a8:	bd30      	pop	{r4, r5, pc}
 80035aa:	bf00      	nop
 80035ac:	e000ed00 	.word	0xe000ed00
 80035b0:	e000ed14 	.word	0xe000ed14

080035b4 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80035b4:	2800      	cmp	r0, #0
 80035b6:	db08      	blt.n	80035ca <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80035b8:	0942      	lsrs	r2, r0, #5
 80035ba:	2301      	movs	r3, #1
 80035bc:	f000 001f 	and.w	r0, r0, #31
 80035c0:	fa03 f000 	lsl.w	r0, r3, r0
 80035c4:	4b01      	ldr	r3, [pc, #4]	; (80035cc <HAL_NVIC_EnableIRQ+0x18>)
 80035c6:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 80035ca:	4770      	bx	lr
 80035cc:	e000e100 	.word	0xe000e100

080035d0 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 80035d0:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80035d2:	4604      	mov	r4, r0
 80035d4:	b150      	cbz	r0, 80035ec <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 80035d6:	7943      	ldrb	r3, [r0, #5]
 80035d8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80035dc:	b913      	cbnz	r3, 80035e4 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 80035de:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 80035e0:	f7fe f9c0 	bl	8001964 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 80035e4:	2301      	movs	r3, #1
 80035e6:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 80035e8:	2000      	movs	r0, #0
}
 80035ea:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80035ec:	2001      	movs	r0, #1
 80035ee:	e7fc      	b.n	80035ea <HAL_CRC_Init+0x1a>

080035f0 <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
 80035f0:	b570      	push	{r4, r5, r6, lr}
 80035f2:	4604      	mov	r4, r0
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 80035f4:	6d86      	ldr	r6, [r0, #88]	; 0x58
  
  uint32_t tickstart = HAL_GetTick();
 80035f6:	f7ff ff7f 	bl	80034f8 <HAL_GetTick>
  
  if(hdma->State != HAL_DMA_STATE_BUSY)
 80035fa:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 80035fe:	2b02      	cmp	r3, #2
  uint32_t tickstart = HAL_GetTick();
 8003600:	4605      	mov	r5, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8003602:	d006      	beq.n	8003612 <HAL_DMA_Abort+0x22>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8003604:	2380      	movs	r3, #128	; 0x80
 8003606:	6563      	str	r3, [r4, #84]	; 0x54
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8003608:	2300      	movs	r3, #0
 800360a:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    
    return HAL_ERROR;
 800360e:	2001      	movs	r0, #1
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
  }
  return HAL_OK;
}
 8003610:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8003612:	6823      	ldr	r3, [r4, #0]
 8003614:	681a      	ldr	r2, [r3, #0]
 8003616:	f022 0216 	bic.w	r2, r2, #22
 800361a:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 800361c:	695a      	ldr	r2, [r3, #20]
 800361e:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003622:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8003624:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8003626:	b90a      	cbnz	r2, 800362c <HAL_DMA_Abort+0x3c>
 8003628:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800362a:	b11a      	cbz	r2, 8003634 <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 800362c:	681a      	ldr	r2, [r3, #0]
 800362e:	f022 0208 	bic.w	r2, r2, #8
 8003632:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 8003634:	681a      	ldr	r2, [r3, #0]
 8003636:	f022 0201 	bic.w	r2, r2, #1
 800363a:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 800363c:	6823      	ldr	r3, [r4, #0]
 800363e:	681b      	ldr	r3, [r3, #0]
 8003640:	f013 0301 	ands.w	r3, r3, #1
 8003644:	d10a      	bne.n	800365c <HAL_DMA_Abort+0x6c>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003646:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8003648:	223f      	movs	r2, #63	; 0x3f
 800364a:	408a      	lsls	r2, r1
 800364c:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 800364e:	2201      	movs	r2, #1
 8003650:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 8003654:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  return HAL_OK;
 8003658:	4618      	mov	r0, r3
 800365a:	e7d9      	b.n	8003610 <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800365c:	f7ff ff4c 	bl	80034f8 <HAL_GetTick>
 8003660:	1b40      	subs	r0, r0, r5
 8003662:	2805      	cmp	r0, #5
 8003664:	d9ea      	bls.n	800363c <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8003666:	2320      	movs	r3, #32
 8003668:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800366a:	2003      	movs	r0, #3
        __HAL_UNLOCK(hdma);
 800366c:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800366e:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 8003672:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 8003676:	e7cb      	b.n	8003610 <HAL_DMA_Abort+0x20>

08003678 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8003678:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800367c:	2b02      	cmp	r3, #2
 800367e:	d003      	beq.n	8003688 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8003680:	2380      	movs	r3, #128	; 0x80
 8003682:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8003684:	2001      	movs	r0, #1
 8003686:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8003688:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800368a:	2305      	movs	r3, #5
 800368c:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 8003690:	6813      	ldr	r3, [r2, #0]
 8003692:	f023 0301 	bic.w	r3, r3, #1
 8003696:	6013      	str	r3, [r2, #0]
  }

  return HAL_OK;
 8003698:	2000      	movs	r0, #0
}
 800369a:	4770      	bx	lr

0800369c <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800369c:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 800369e:	4604      	mov	r4, r0
 80036a0:	b330      	cbz	r0, 80036f0 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 80036a2:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 80036a6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80036aa:	b91b      	cbnz	r3, 80036b4 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 80036ac:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 80036b0:	f7fe f970 	bl	8001994 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80036b4:	6822      	ldr	r2, [r4, #0]
 80036b6:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80036b8:	2302      	movs	r3, #2
 80036ba:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80036be:	6813      	ldr	r3, [r2, #0]
 80036c0:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80036c4:	430b      	orrs	r3, r1
 80036c6:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 80036c8:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80036ca:	68a1      	ldr	r1, [r4, #8]
 80036cc:	f023 0307 	bic.w	r3, r3, #7
 80036d0:	430b      	orrs	r3, r1
 80036d2:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80036d4:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80036d6:	68e1      	ldr	r1, [r4, #12]
 80036d8:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 80036dc:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80036e0:	430b      	orrs	r3, r1
 80036e2:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80036e4:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80036e6:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80036e8:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80036ea:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 80036ee:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80036f0:	2001      	movs	r0, #1
 80036f2:	e7fc      	b.n	80036ee <HAL_DMA2D_Init+0x52>

080036f4 <HAL_DMA2D_LineEventCallback>:
 80036f4:	4770      	bx	lr

080036f6 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 80036f6:	4770      	bx	lr

080036f8 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80036f8:	6803      	ldr	r3, [r0, #0]
{
 80036fa:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80036fc:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80036fe:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8003700:	07f2      	lsls	r2, r6, #31
{
 8003702:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8003704:	d514      	bpl.n	8003730 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8003706:	05e9      	lsls	r1, r5, #23
 8003708:	d512      	bpl.n	8003730 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 800370a:	681a      	ldr	r2, [r3, #0]
 800370c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003710:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8003712:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8003714:	f042 0201 	orr.w	r2, r2, #1
 8003718:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800371a:	2201      	movs	r2, #1
 800371c:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800371e:	2304      	movs	r3, #4
 8003720:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003724:	2300      	movs	r3, #0
 8003726:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800372a:	6943      	ldr	r3, [r0, #20]
 800372c:	b103      	cbz	r3, 8003730 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800372e:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8003730:	06b2      	lsls	r2, r6, #26
 8003732:	d516      	bpl.n	8003762 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8003734:	04ab      	lsls	r3, r5, #18
 8003736:	d514      	bpl.n	8003762 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8003738:	6823      	ldr	r3, [r4, #0]
 800373a:	681a      	ldr	r2, [r3, #0]
 800373c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8003740:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8003742:	2220      	movs	r2, #32
 8003744:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8003746:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003748:	f043 0302 	orr.w	r3, r3, #2
 800374c:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800374e:	2304      	movs	r3, #4
 8003750:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003754:	2300      	movs	r3, #0
 8003756:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800375a:	6963      	ldr	r3, [r4, #20]
 800375c:	b10b      	cbz	r3, 8003762 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800375e:	4620      	mov	r0, r4
 8003760:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8003762:	0730      	lsls	r0, r6, #28
 8003764:	d516      	bpl.n	8003794 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8003766:	0529      	lsls	r1, r5, #20
 8003768:	d514      	bpl.n	8003794 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800376a:	6823      	ldr	r3, [r4, #0]
 800376c:	681a      	ldr	r2, [r3, #0]
 800376e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003772:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8003774:	2208      	movs	r2, #8
 8003776:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8003778:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800377a:	f043 0304 	orr.w	r3, r3, #4
 800377e:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003780:	2304      	movs	r3, #4
 8003782:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003786:	2300      	movs	r3, #0
 8003788:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800378c:	6963      	ldr	r3, [r4, #20]
 800378e:	b10b      	cbz	r3, 8003794 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8003790:	4620      	mov	r0, r4
 8003792:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8003794:	0772      	lsls	r2, r6, #29
 8003796:	d50b      	bpl.n	80037b0 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8003798:	056b      	lsls	r3, r5, #21
 800379a:	d509      	bpl.n	80037b0 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800379c:	6823      	ldr	r3, [r4, #0]
 800379e:	681a      	ldr	r2, [r3, #0]
 80037a0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80037a4:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 80037a6:	2204      	movs	r2, #4
 80037a8:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 80037aa:	4620      	mov	r0, r4
 80037ac:	f7ff ffa2 	bl	80036f4 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 80037b0:	07b0      	lsls	r0, r6, #30
 80037b2:	d514      	bpl.n	80037de <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 80037b4:	05a9      	lsls	r1, r5, #22
 80037b6:	d512      	bpl.n	80037de <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 80037b8:	6823      	ldr	r3, [r4, #0]
 80037ba:	681a      	ldr	r2, [r3, #0]
 80037bc:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 80037c0:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 80037c2:	2202      	movs	r2, #2
 80037c4:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80037c6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80037c8:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80037ca:	2301      	movs	r3, #1
 80037cc:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80037d0:	2300      	movs	r3, #0
 80037d2:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 80037d6:	6923      	ldr	r3, [r4, #16]
 80037d8:	b10b      	cbz	r3, 80037de <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 80037da:	4620      	mov	r0, r4
 80037dc:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 80037de:	06f2      	lsls	r2, r6, #27
 80037e0:	d513      	bpl.n	800380a <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 80037e2:	04eb      	lsls	r3, r5, #19
 80037e4:	d511      	bpl.n	800380a <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80037e6:	6823      	ldr	r3, [r4, #0]
 80037e8:	681a      	ldr	r2, [r3, #0]
 80037ea:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80037ee:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80037f0:	2210      	movs	r2, #16
 80037f2:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80037f4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80037f6:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80037f8:	2301      	movs	r3, #1
 80037fa:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80037fe:	2300      	movs	r3, #0
 8003800:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8003804:	4620      	mov	r0, r4
 8003806:	f7ff ff76 	bl	80036f6 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 800380a:	bd70      	pop	{r4, r5, r6, pc}

0800380c <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 800380c:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800380e:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8003812:	2b01      	cmp	r3, #1
 8003814:	f04f 0302 	mov.w	r3, #2
 8003818:	d02b      	beq.n	8003872 <HAL_DMA2D_ConfigLayer+0x66>
 800381a:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800381c:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8003820:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8003824:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 8003828:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 800382c:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 800382e:	4f18      	ldr	r7, [pc, #96]	; (8003890 <HAL_DMA2D_ConfigLayer+0x84>)
 8003830:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003834:	3c09      	subs	r4, #9
 8003836:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8003838:	bf9c      	itt	ls
 800383a:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 800383e:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8003840:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8003844:	6803      	ldr	r3, [r0, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8003846:	bf88      	it	hi
 8003848:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 800384c:	b999      	cbnz	r1, 8003876 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800384e:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8003850:	4039      	ands	r1, r7
 8003852:	430a      	orrs	r2, r1
 8003854:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003856:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8003858:	6982      	ldr	r2, [r0, #24]
 800385a:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800385c:	d803      	bhi.n	8003866 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800385e:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8003860:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8003864:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003866:	2301      	movs	r3, #1
 8003868:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800386c:	2300      	movs	r3, #0
 800386e:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8003872:	4618      	mov	r0, r3

  return HAL_OK;
}
 8003874:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8003876:	69d9      	ldr	r1, [r3, #28]
 8003878:	4039      	ands	r1, r7
 800387a:	430a      	orrs	r2, r1
 800387c:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800387e:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003880:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8003882:	6992      	ldr	r2, [r2, #24]
 8003884:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8003886:	bf9c      	itt	ls
 8003888:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 800388c:	621d      	strls	r5, [r3, #32]
 800388e:	e7ea      	b.n	8003866 <HAL_DMA2D_ConfigLayer+0x5a>
 8003890:	00fcfff0 	.word	0x00fcfff0

08003894 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003894:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003898:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8003a5c <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800389c:	4a6d      	ldr	r2, [pc, #436]	; (8003a54 <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 800389e:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80038a0:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 80038a2:	2401      	movs	r4, #1
 80038a4:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80038a6:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 80038aa:	43ac      	bics	r4, r5
 80038ac:	f040 80b9 	bne.w	8003a22 <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80038b0:	684d      	ldr	r5, [r1, #4]
 80038b2:	f005 0403 	and.w	r4, r5, #3
 80038b6:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80038ba:	2603      	movs	r6, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80038bc:	1e67      	subs	r7, r4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80038be:	fa06 f608 	lsl.w	r6, r6, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80038c2:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80038c4:	ea6f 0606 	mvn.w	r6, r6
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80038c8:	d834      	bhi.n	8003934 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 80038ca:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80038cc:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 80038d0:	68cf      	ldr	r7, [r1, #12]
 80038d2:	fa07 f708 	lsl.w	r7, r7, r8
 80038d6:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 80038da:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 80038dc:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80038de:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80038e2:	f3c5 1700 	ubfx	r7, r5, #4, #1
 80038e6:	409f      	lsls	r7, r3
 80038e8:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 80038ec:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 80038ee:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80038f0:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 80038f4:	688f      	ldr	r7, [r1, #8]
 80038f6:	fa07 f708 	lsl.w	r7, r7, r8
 80038fa:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80038fe:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 8003900:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8003902:	d119      	bne.n	8003938 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 8003904:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8003908:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800390c:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8003910:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8003914:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8003918:	f04f 0e0f 	mov.w	lr, #15
 800391c:	fa0e fe0b 	lsl.w	lr, lr, fp
 8003920:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8003924:	690f      	ldr	r7, [r1, #16]
 8003926:	fa07 f70b 	lsl.w	r7, r7, fp
 800392a:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 800392e:	f8ca 7020 	str.w	r7, [sl, #32]
 8003932:	e001      	b.n	8003938 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8003934:	2c03      	cmp	r4, #3
 8003936:	d1da      	bne.n	80038ee <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8003938:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800393a:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800393e:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8003940:	4326      	orrs	r6, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8003942:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 8003946:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8003948:	d06b      	beq.n	8003a22 <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800394a:	f04f 0a00 	mov.w	sl, #0
 800394e:	f8cd a004 	str.w	sl, [sp, #4]
 8003952:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8003956:	4c40      	ldr	r4, [pc, #256]	; (8003a58 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003958:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 800395c:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 8003960:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 8003964:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 8003968:	9601      	str	r6, [sp, #4]
 800396a:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 800396c:	f023 0603 	bic.w	r6, r3, #3
 8003970:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 8003974:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8003978:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800397c:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8003980:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8003984:	270f      	movs	r7, #15
 8003986:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800398a:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800398c:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8003990:	d04e      	beq.n	8003a30 <HAL_GPIO_Init+0x19c>
 8003992:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8003996:	42a0      	cmp	r0, r4
 8003998:	d04c      	beq.n	8003a34 <HAL_GPIO_Init+0x1a0>
 800399a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800399e:	42a0      	cmp	r0, r4
 80039a0:	d04a      	beq.n	8003a38 <HAL_GPIO_Init+0x1a4>
 80039a2:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80039a6:	42a0      	cmp	r0, r4
 80039a8:	d048      	beq.n	8003a3c <HAL_GPIO_Init+0x1a8>
 80039aa:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80039ae:	42a0      	cmp	r0, r4
 80039b0:	d046      	beq.n	8003a40 <HAL_GPIO_Init+0x1ac>
 80039b2:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80039b6:	42a0      	cmp	r0, r4
 80039b8:	d044      	beq.n	8003a44 <HAL_GPIO_Init+0x1b0>
 80039ba:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80039be:	42a0      	cmp	r0, r4
 80039c0:	d042      	beq.n	8003a48 <HAL_GPIO_Init+0x1b4>
 80039c2:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80039c6:	42a0      	cmp	r0, r4
 80039c8:	d040      	beq.n	8003a4c <HAL_GPIO_Init+0x1b8>
 80039ca:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80039ce:	42a0      	cmp	r0, r4
 80039d0:	d03e      	beq.n	8003a50 <HAL_GPIO_Init+0x1bc>
 80039d2:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80039d6:	42a0      	cmp	r0, r4
 80039d8:	bf0c      	ite	eq
 80039da:	2409      	moveq	r4, #9
 80039dc:	240a      	movne	r4, #10
 80039de:	fa04 f40e 	lsl.w	r4, r4, lr
 80039e2:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 80039e4:	60b4      	str	r4, [r6, #8]
        temp = EXTI->RTSR;
 80039e6:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 80039e8:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80039ec:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 80039ee:	bf54      	ite	pl
 80039f0:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 80039f2:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 80039f6:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 80039f8:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80039fa:	02af      	lsls	r7, r5, #10
        temp &= ~((uint32_t)iocurrent);
 80039fc:	bf54      	ite	pl
 80039fe:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8003a00:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 8003a04:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 8003a06:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8003a08:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 8003a0a:	bf54      	ite	pl
 8003a0c:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8003a0e:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 8003a12:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8003a14:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8003a16:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 8003a18:	bf54      	ite	pl
 8003a1a:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8003a1c:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 8003a20:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003a22:	3301      	adds	r3, #1
 8003a24:	2b10      	cmp	r3, #16
 8003a26:	f47f af3b 	bne.w	80038a0 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 8003a2a:	b003      	add	sp, #12
 8003a2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8003a30:	4654      	mov	r4, sl
 8003a32:	e7d4      	b.n	80039de <HAL_GPIO_Init+0x14a>
 8003a34:	2401      	movs	r4, #1
 8003a36:	e7d2      	b.n	80039de <HAL_GPIO_Init+0x14a>
 8003a38:	2402      	movs	r4, #2
 8003a3a:	e7d0      	b.n	80039de <HAL_GPIO_Init+0x14a>
 8003a3c:	2403      	movs	r4, #3
 8003a3e:	e7ce      	b.n	80039de <HAL_GPIO_Init+0x14a>
 8003a40:	2404      	movs	r4, #4
 8003a42:	e7cc      	b.n	80039de <HAL_GPIO_Init+0x14a>
 8003a44:	2405      	movs	r4, #5
 8003a46:	e7ca      	b.n	80039de <HAL_GPIO_Init+0x14a>
 8003a48:	2406      	movs	r4, #6
 8003a4a:	e7c8      	b.n	80039de <HAL_GPIO_Init+0x14a>
 8003a4c:	2407      	movs	r4, #7
 8003a4e:	e7c6      	b.n	80039de <HAL_GPIO_Init+0x14a>
 8003a50:	2408      	movs	r4, #8
 8003a52:	e7c4      	b.n	80039de <HAL_GPIO_Init+0x14a>
 8003a54:	40013c00 	.word	0x40013c00
 8003a58:	40020000 	.word	0x40020000
 8003a5c:	40023800 	.word	0x40023800

08003a60 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8003a60:	6903      	ldr	r3, [r0, #16]
 8003a62:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8003a64:	bf14      	ite	ne
 8003a66:	2001      	movne	r0, #1
 8003a68:	2000      	moveq	r0, #0
 8003a6a:	4770      	bx	lr

08003a6c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8003a6c:	b10a      	cbz	r2, 8003a72 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8003a6e:	6181      	str	r1, [r0, #24]
  }
}
 8003a70:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8003a72:	0409      	lsls	r1, r1, #16
 8003a74:	e7fb      	b.n	8003a6e <HAL_GPIO_WritePin+0x2>

08003a76 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8003a76:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8003a78:	ea01 0203 	and.w	r2, r1, r3
 8003a7c:	ea21 0103 	bic.w	r1, r1, r3
 8003a80:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8003a84:	6181      	str	r1, [r0, #24]
}
 8003a86:	4770      	bx	lr

08003a88 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8003a88:	6801      	ldr	r1, [r0, #0]
 8003a8a:	694b      	ldr	r3, [r1, #20]
 8003a8c:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8003a90:	f04f 0200 	mov.w	r2, #0
 8003a94:	d010      	beq.n	8003ab8 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8003a96:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8003a9a:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8003a9c:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8003a9e:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8003aa0:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003aa4:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8003aa8:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8003aaa:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8003aae:	f043 0304 	orr.w	r3, r3, #4
 8003ab2:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8003ab4:	2001      	movs	r0, #1
 8003ab6:	4770      	bx	lr
  }
  return HAL_OK;
 8003ab8:	4618      	mov	r0, r3
}
 8003aba:	4770      	bx	lr

08003abc <I2C_WaitOnFlagUntilTimeout>:
{
 8003abc:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8003ac0:	4606      	mov	r6, r0
 8003ac2:	460f      	mov	r7, r1
 8003ac4:	4691      	mov	r9, r2
 8003ac6:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8003ac8:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8003acc:	6833      	ldr	r3, [r6, #0]
 8003ace:	f1ba 0f01 	cmp.w	sl, #1
 8003ad2:	bf0c      	ite	eq
 8003ad4:	695c      	ldreq	r4, [r3, #20]
 8003ad6:	699c      	ldrne	r4, [r3, #24]
 8003ad8:	ea27 0404 	bic.w	r4, r7, r4
 8003adc:	b2a4      	uxth	r4, r4
 8003ade:	fab4 f484 	clz	r4, r4
 8003ae2:	0964      	lsrs	r4, r4, #5
 8003ae4:	45a1      	cmp	r9, r4
 8003ae6:	d001      	beq.n	8003aec <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8003ae8:	2000      	movs	r0, #0
 8003aea:	e017      	b.n	8003b1c <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8003aec:	1c6a      	adds	r2, r5, #1
 8003aee:	d0ee      	beq.n	8003ace <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003af0:	f7ff fd02 	bl	80034f8 <HAL_GetTick>
 8003af4:	9b08      	ldr	r3, [sp, #32]
 8003af6:	1ac0      	subs	r0, r0, r3
 8003af8:	42a8      	cmp	r0, r5
 8003afa:	d801      	bhi.n	8003b00 <I2C_WaitOnFlagUntilTimeout+0x44>
 8003afc:	2d00      	cmp	r5, #0
 8003afe:	d1e5      	bne.n	8003acc <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8003b00:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8003b02:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8003b04:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8003b06:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8003b0a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8003b0e:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8003b10:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8003b14:	f042 0220 	orr.w	r2, r2, #32
 8003b18:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 8003b1a:	2001      	movs	r0, #1
}
 8003b1c:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08003b20 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8003b20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003b24:	4604      	mov	r4, r0
 8003b26:	460f      	mov	r7, r1
 8003b28:	4616      	mov	r6, r2
 8003b2a:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8003b2c:	6825      	ldr	r5, [r4, #0]
 8003b2e:	6968      	ldr	r0, [r5, #20]
 8003b30:	ea27 0000 	bic.w	r0, r7, r0
 8003b34:	b280      	uxth	r0, r0
 8003b36:	b1b8      	cbz	r0, 8003b68 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8003b38:	696b      	ldr	r3, [r5, #20]
 8003b3a:	055a      	lsls	r2, r3, #21
 8003b3c:	d516      	bpl.n	8003b6c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003b3e:	682b      	ldr	r3, [r5, #0]
 8003b40:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8003b44:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8003b46:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8003b4a:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8003b4c:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8003b4e:	2300      	movs	r3, #0
 8003b50:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8003b52:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003b56:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8003b5a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8003b5c:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8003b60:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8003b62:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8003b66:	2001      	movs	r0, #1
}
 8003b68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8003b6c:	1c73      	adds	r3, r6, #1
 8003b6e:	d0de      	beq.n	8003b2e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003b70:	f7ff fcc2 	bl	80034f8 <HAL_GetTick>
 8003b74:	eba0 0008 	sub.w	r0, r0, r8
 8003b78:	42b0      	cmp	r0, r6
 8003b7a:	d801      	bhi.n	8003b80 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8003b7c:	2e00      	cmp	r6, #0
 8003b7e:	d1d5      	bne.n	8003b2c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8003b80:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8003b82:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8003b84:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8003b86:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003b8a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8003b8e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8003b90:	f042 0220 	orr.w	r2, r2, #32
 8003b94:	e7e4      	b.n	8003b60 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08003b96 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8003b96:	b570      	push	{r4, r5, r6, lr}
 8003b98:	4604      	mov	r4, r0
 8003b9a:	460d      	mov	r5, r1
 8003b9c:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8003b9e:	6821      	ldr	r1, [r4, #0]
 8003ba0:	694b      	ldr	r3, [r1, #20]
 8003ba2:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8003ba6:	d001      	beq.n	8003bac <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8003ba8:	2000      	movs	r0, #0
 8003baa:	e010      	b.n	8003bce <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8003bac:	694a      	ldr	r2, [r1, #20]
 8003bae:	06d2      	lsls	r2, r2, #27
 8003bb0:	d50e      	bpl.n	8003bd0 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8003bb2:	f06f 0210 	mvn.w	r2, #16
 8003bb6:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8003bb8:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8003bba:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8003bbc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003bc0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8003bc4:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8003bc6:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8003bc8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 8003bcc:	2001      	movs	r0, #1
}
 8003bce:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003bd0:	f7ff fc92 	bl	80034f8 <HAL_GetTick>
 8003bd4:	1b80      	subs	r0, r0, r6
 8003bd6:	42a8      	cmp	r0, r5
 8003bd8:	d801      	bhi.n	8003bde <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8003bda:	2d00      	cmp	r5, #0
 8003bdc:	d1df      	bne.n	8003b9e <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8003bde:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 8003be0:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8003be2:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8003be4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003be8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8003bec:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8003bee:	f042 0220 	orr.w	r2, r2, #32
 8003bf2:	e7e8      	b.n	8003bc6 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

08003bf4 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 8003bf4:	b570      	push	{r4, r5, r6, lr}
 8003bf6:	4604      	mov	r4, r0
 8003bf8:	460d      	mov	r5, r1
 8003bfa:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8003bfc:	6823      	ldr	r3, [r4, #0]
 8003bfe:	695b      	ldr	r3, [r3, #20]
 8003c00:	075b      	lsls	r3, r3, #29
 8003c02:	d501      	bpl.n	8003c08 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8003c04:	2000      	movs	r0, #0
}
 8003c06:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8003c08:	4620      	mov	r0, r4
 8003c0a:	f7ff ff3d 	bl	8003a88 <I2C_IsAcknowledgeFailed>
 8003c0e:	b9a8      	cbnz	r0, 8003c3c <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8003c10:	1c6a      	adds	r2, r5, #1
 8003c12:	d0f3      	beq.n	8003bfc <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003c14:	f7ff fc70 	bl	80034f8 <HAL_GetTick>
 8003c18:	1b80      	subs	r0, r0, r6
 8003c1a:	42a8      	cmp	r0, r5
 8003c1c:	d801      	bhi.n	8003c22 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8003c1e:	2d00      	cmp	r5, #0
 8003c20:	d1ec      	bne.n	8003bfc <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8003c22:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8003c24:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8003c26:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8003c28:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003c2c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8003c30:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8003c32:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8003c36:	f042 0220 	orr.w	r2, r2, #32
 8003c3a:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8003c3c:	2001      	movs	r0, #1
 8003c3e:	e7e2      	b.n	8003c06 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08003c40 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8003c40:	b570      	push	{r4, r5, r6, lr}
 8003c42:	4604      	mov	r4, r0
 8003c44:	460d      	mov	r5, r1
 8003c46:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8003c48:	6823      	ldr	r3, [r4, #0]
 8003c4a:	695b      	ldr	r3, [r3, #20]
 8003c4c:	061b      	lsls	r3, r3, #24
 8003c4e:	d501      	bpl.n	8003c54 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8003c50:	2000      	movs	r0, #0
}
 8003c52:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8003c54:	4620      	mov	r0, r4
 8003c56:	f7ff ff17 	bl	8003a88 <I2C_IsAcknowledgeFailed>
 8003c5a:	b9a8      	cbnz	r0, 8003c88 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8003c5c:	1c6a      	adds	r2, r5, #1
 8003c5e:	d0f3      	beq.n	8003c48 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003c60:	f7ff fc4a 	bl	80034f8 <HAL_GetTick>
 8003c64:	1b80      	subs	r0, r0, r6
 8003c66:	42a8      	cmp	r0, r5
 8003c68:	d801      	bhi.n	8003c6e <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8003c6a:	2d00      	cmp	r5, #0
 8003c6c:	d1ec      	bne.n	8003c48 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8003c6e:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8003c70:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8003c72:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8003c74:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003c78:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8003c7c:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8003c7e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8003c82:	f042 0220 	orr.w	r2, r2, #32
 8003c86:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8003c88:	2001      	movs	r0, #1
 8003c8a:	e7e2      	b.n	8003c52 <I2C_WaitOnTXEFlagUntilTimeout+0x12>

08003c8c <I2C_RequestMemoryWrite>:
{
 8003c8c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003c90:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003c92:	6802      	ldr	r2, [r0, #0]
{
 8003c94:	b085      	sub	sp, #20
 8003c96:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 8003c9a:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003c9c:	6813      	ldr	r3, [r2, #0]
 8003c9e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003ca2:	6013      	str	r3, [r2, #0]
{
 8003ca4:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8003ca6:	463b      	mov	r3, r7
 8003ca8:	f8cd 8000 	str.w	r8, [sp]
 8003cac:	2200      	movs	r2, #0
 8003cae:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8003cb2:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8003cb4:	f7ff ff02 	bl	8003abc <I2C_WaitOnFlagUntilTimeout>
 8003cb8:	6823      	ldr	r3, [r4, #0]
 8003cba:	b138      	cbz	r0, 8003ccc <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8003cbc:	681b      	ldr	r3, [r3, #0]
 8003cbe:	05db      	lsls	r3, r3, #23
 8003cc0:	d502      	bpl.n	8003cc8 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8003cc2:	f44f 7300 	mov.w	r3, #512	; 0x200
 8003cc6:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8003cc8:	2003      	movs	r0, #3
 8003cca:	e00a      	b.n	8003ce2 <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8003ccc:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8003cd0:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8003cd2:	4919      	ldr	r1, [pc, #100]	; (8003d38 <I2C_RequestMemoryWrite+0xac>)
 8003cd4:	4643      	mov	r3, r8
 8003cd6:	463a      	mov	r2, r7
 8003cd8:	4620      	mov	r0, r4
 8003cda:	f7ff ff21 	bl	8003b20 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003cde:	b118      	cbz	r0, 8003ce8 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 8003ce0:	2001      	movs	r0, #1
}
 8003ce2:	b005      	add	sp, #20
 8003ce4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003ce8:	6823      	ldr	r3, [r4, #0]
 8003cea:	9003      	str	r0, [sp, #12]
 8003cec:	695a      	ldr	r2, [r3, #20]
 8003cee:	9203      	str	r2, [sp, #12]
 8003cf0:	699b      	ldr	r3, [r3, #24]
 8003cf2:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003cf4:	4642      	mov	r2, r8
 8003cf6:	4639      	mov	r1, r7
 8003cf8:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003cfa:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003cfc:	f7ff ffa0 	bl	8003c40 <I2C_WaitOnTXEFlagUntilTimeout>
 8003d00:	b140      	cbz	r0, 8003d14 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8003d02:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003d04:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003d06:	bf01      	itttt	eq
 8003d08:	6822      	ldreq	r2, [r4, #0]
 8003d0a:	6813      	ldreq	r3, [r2, #0]
 8003d0c:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8003d10:	6013      	streq	r3, [r2, #0]
 8003d12:	e7e5      	b.n	8003ce0 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8003d14:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003d18:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8003d1a:	d102      	bne.n	8003d22 <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8003d1c:	b2ed      	uxtb	r5, r5
 8003d1e:	611d      	str	r5, [r3, #16]
 8003d20:	e7df      	b.n	8003ce2 <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8003d22:	0a2a      	lsrs	r2, r5, #8
 8003d24:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003d26:	4639      	mov	r1, r7
 8003d28:	4642      	mov	r2, r8
 8003d2a:	4620      	mov	r0, r4
 8003d2c:	f7ff ff88 	bl	8003c40 <I2C_WaitOnTXEFlagUntilTimeout>
 8003d30:	2800      	cmp	r0, #0
 8003d32:	d1e6      	bne.n	8003d02 <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8003d34:	6823      	ldr	r3, [r4, #0]
 8003d36:	e7f1      	b.n	8003d1c <I2C_RequestMemoryWrite+0x90>
 8003d38:	00010002 	.word	0x00010002

08003d3c <I2C_RequestMemoryRead>:
{
 8003d3c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8003d40:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8003d42:	6803      	ldr	r3, [r0, #0]
{
 8003d44:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8003d46:	681a      	ldr	r2, [r3, #0]
 8003d48:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8003d4c:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003d4e:	681a      	ldr	r2, [r3, #0]
{
 8003d50:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003d54:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003d58:	601a      	str	r2, [r3, #0]
{
 8003d5a:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8003d5c:	463b      	mov	r3, r7
 8003d5e:	f8cd 8000 	str.w	r8, [sp]
 8003d62:	2200      	movs	r2, #0
 8003d64:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8003d68:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8003d6a:	f7ff fea7 	bl	8003abc <I2C_WaitOnFlagUntilTimeout>
 8003d6e:	6823      	ldr	r3, [r4, #0]
 8003d70:	b148      	cbz	r0, 8003d86 <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8003d72:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8003d74:	05db      	lsls	r3, r3, #23
 8003d76:	d502      	bpl.n	8003d7e <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8003d78:	f44f 7300 	mov.w	r3, #512	; 0x200
 8003d7c:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8003d7e:	2003      	movs	r0, #3
}
 8003d80:	b004      	add	sp, #16
 8003d82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8003d86:	fa5f f986 	uxtb.w	r9, r6
 8003d8a:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8003d8e:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8003d90:	492a      	ldr	r1, [pc, #168]	; (8003e3c <I2C_RequestMemoryRead+0x100>)
 8003d92:	4643      	mov	r3, r8
 8003d94:	463a      	mov	r2, r7
 8003d96:	4620      	mov	r0, r4
 8003d98:	f7ff fec2 	bl	8003b20 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003d9c:	b108      	cbz	r0, 8003da2 <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 8003d9e:	2001      	movs	r0, #1
 8003da0:	e7ee      	b.n	8003d80 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003da2:	6823      	ldr	r3, [r4, #0]
 8003da4:	9003      	str	r0, [sp, #12]
 8003da6:	695a      	ldr	r2, [r3, #20]
 8003da8:	9203      	str	r2, [sp, #12]
 8003daa:	699b      	ldr	r3, [r3, #24]
 8003dac:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003dae:	4642      	mov	r2, r8
 8003db0:	4639      	mov	r1, r7
 8003db2:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003db4:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003db6:	f7ff ff43 	bl	8003c40 <I2C_WaitOnTXEFlagUntilTimeout>
 8003dba:	b140      	cbz	r0, 8003dce <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8003dbc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003dbe:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003dc0:	bf01      	itttt	eq
 8003dc2:	6822      	ldreq	r2, [r4, #0]
 8003dc4:	6813      	ldreq	r3, [r2, #0]
 8003dc6:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8003dca:	6013      	streq	r3, [r2, #0]
 8003dcc:	e7e7      	b.n	8003d9e <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8003dce:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003dd2:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8003dd4:	d11a      	bne.n	8003e0c <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8003dd6:	b2ed      	uxtb	r5, r5
 8003dd8:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003dda:	4642      	mov	r2, r8
 8003ddc:	4639      	mov	r1, r7
 8003dde:	4620      	mov	r0, r4
 8003de0:	f7ff ff2e 	bl	8003c40 <I2C_WaitOnTXEFlagUntilTimeout>
 8003de4:	2800      	cmp	r0, #0
 8003de6:	d1e9      	bne.n	8003dbc <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003de8:	6822      	ldr	r2, [r4, #0]
 8003dea:	6813      	ldr	r3, [r2, #0]
 8003dec:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003df0:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8003df2:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8003df6:	4602      	mov	r2, r0
 8003df8:	f8cd 8000 	str.w	r8, [sp]
 8003dfc:	463b      	mov	r3, r7
 8003dfe:	4620      	mov	r0, r4
 8003e00:	f7ff fe5c 	bl	8003abc <I2C_WaitOnFlagUntilTimeout>
 8003e04:	6822      	ldr	r2, [r4, #0]
 8003e06:	b160      	cbz	r0, 8003e22 <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8003e08:	6813      	ldr	r3, [r2, #0]
 8003e0a:	e7b3      	b.n	8003d74 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8003e0c:	0a2a      	lsrs	r2, r5, #8
 8003e0e:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003e10:	4639      	mov	r1, r7
 8003e12:	4642      	mov	r2, r8
 8003e14:	4620      	mov	r0, r4
 8003e16:	f7ff ff13 	bl	8003c40 <I2C_WaitOnTXEFlagUntilTimeout>
 8003e1a:	2800      	cmp	r0, #0
 8003e1c:	d1ce      	bne.n	8003dbc <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8003e1e:	6823      	ldr	r3, [r4, #0]
 8003e20:	e7d9      	b.n	8003dd6 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8003e22:	f049 0301 	orr.w	r3, r9, #1
 8003e26:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8003e28:	4904      	ldr	r1, [pc, #16]	; (8003e3c <I2C_RequestMemoryRead+0x100>)
 8003e2a:	4643      	mov	r3, r8
 8003e2c:	463a      	mov	r2, r7
 8003e2e:	4620      	mov	r0, r4
 8003e30:	f7ff fe76 	bl	8003b20 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8003e34:	3800      	subs	r0, #0
 8003e36:	bf18      	it	ne
 8003e38:	2001      	movne	r0, #1
 8003e3a:	e7a1      	b.n	8003d80 <I2C_RequestMemoryRead+0x44>
 8003e3c:	00010002 	.word	0x00010002

08003e40 <HAL_I2C_Init>:
{
 8003e40:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8003e42:	4604      	mov	r4, r0
 8003e44:	b908      	cbnz	r0, 8003e4a <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8003e46:	2001      	movs	r0, #1
}
 8003e48:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8003e4a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8003e4e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003e52:	b91b      	cbnz	r3, 8003e5c <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8003e54:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8003e58:	f7fd fdbe 	bl	80019d8 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8003e5c:	2324      	movs	r3, #36	; 0x24
 8003e5e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8003e62:	6823      	ldr	r3, [r4, #0]
 8003e64:	681a      	ldr	r2, [r3, #0]
 8003e66:	f022 0201 	bic.w	r2, r2, #1
 8003e6a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8003e6c:	681a      	ldr	r2, [r3, #0]
 8003e6e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8003e72:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8003e74:	681a      	ldr	r2, [r3, #0]
 8003e76:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8003e7a:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8003e7c:	f000 fe74 	bl	8004b68 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8003e80:	4b3f      	ldr	r3, [pc, #252]	; (8003f80 <HAL_I2C_Init+0x140>)
 8003e82:	6865      	ldr	r5, [r4, #4]
 8003e84:	429d      	cmp	r5, r3
 8003e86:	bf94      	ite	ls
 8003e88:	4b3e      	ldrls	r3, [pc, #248]	; (8003f84 <HAL_I2C_Init+0x144>)
 8003e8a:	4b3f      	ldrhi	r3, [pc, #252]	; (8003f88 <HAL_I2C_Init+0x148>)
 8003e8c:	4298      	cmp	r0, r3
 8003e8e:	bf8c      	ite	hi
 8003e90:	2300      	movhi	r3, #0
 8003e92:	2301      	movls	r3, #1
 8003e94:	2b00      	cmp	r3, #0
 8003e96:	d1d6      	bne.n	8003e46 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8003e98:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8003e9a:	4e39      	ldr	r6, [pc, #228]	; (8003f80 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8003e9c:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8003e9e:	493b      	ldr	r1, [pc, #236]	; (8003f8c <HAL_I2C_Init+0x14c>)
 8003ea0:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8003ea4:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8003ea8:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8003eaa:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8003eac:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8003eae:	bf88      	it	hi
 8003eb0:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 8003eb4:	6a13      	ldr	r3, [r2, #32]
 8003eb6:	bf88      	it	hi
 8003eb8:	4371      	mulhi	r1, r6
 8003eba:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8003ebe:	bf84      	itt	hi
 8003ec0:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8003ec4:	fbb1 f1f6 	udivhi	r1, r1, r6
 8003ec8:	3101      	adds	r1, #1
 8003eca:	4319      	orrs	r1, r3
 8003ecc:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8003ece:	69d1      	ldr	r1, [r2, #28]
 8003ed0:	1e43      	subs	r3, r0, #1
 8003ed2:	482b      	ldr	r0, [pc, #172]	; (8003f80 <HAL_I2C_Init+0x140>)
 8003ed4:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8003ed8:	4285      	cmp	r5, r0
 8003eda:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8003ede:	d832      	bhi.n	8003f46 <HAL_I2C_Init+0x106>
 8003ee0:	006d      	lsls	r5, r5, #1
 8003ee2:	f640 70fc 	movw	r0, #4092	; 0xffc
 8003ee6:	fbb3 f3f5 	udiv	r3, r3, r5
 8003eea:	3301      	adds	r3, #1
 8003eec:	4203      	tst	r3, r0
 8003eee:	d042      	beq.n	8003f76 <HAL_I2C_Init+0x136>
 8003ef0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003ef4:	430b      	orrs	r3, r1
 8003ef6:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8003ef8:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8003efc:	6811      	ldr	r1, [r2, #0]
 8003efe:	4303      	orrs	r3, r0
 8003f00:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8003f04:	430b      	orrs	r3, r1
 8003f06:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8003f08:	6891      	ldr	r1, [r2, #8]
 8003f0a:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8003f0e:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8003f12:	4303      	orrs	r3, r0
 8003f14:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8003f18:	430b      	orrs	r3, r1
 8003f1a:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8003f1c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8003f20:	68d1      	ldr	r1, [r2, #12]
 8003f22:	4303      	orrs	r3, r0
 8003f24:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8003f28:	430b      	orrs	r3, r1
 8003f2a:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8003f2c:	6813      	ldr	r3, [r2, #0]
 8003f2e:	f043 0301 	orr.w	r3, r3, #1
 8003f32:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003f34:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8003f36:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003f38:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8003f3a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8003f3e:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8003f40:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8003f44:	e780      	b.n	8003e48 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8003f46:	68a0      	ldr	r0, [r4, #8]
 8003f48:	b950      	cbnz	r0, 8003f60 <HAL_I2C_Init+0x120>
 8003f4a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003f4e:	fbb3 f3f5 	udiv	r3, r3, r5
 8003f52:	3301      	adds	r3, #1
 8003f54:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003f58:	b17b      	cbz	r3, 8003f7a <HAL_I2C_Init+0x13a>
 8003f5a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003f5e:	e7c9      	b.n	8003ef4 <HAL_I2C_Init+0xb4>
 8003f60:	2019      	movs	r0, #25
 8003f62:	4345      	muls	r5, r0
 8003f64:	fbb3 f3f5 	udiv	r3, r3, r5
 8003f68:	3301      	adds	r3, #1
 8003f6a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003f6e:	b123      	cbz	r3, 8003f7a <HAL_I2C_Init+0x13a>
 8003f70:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8003f74:	e7be      	b.n	8003ef4 <HAL_I2C_Init+0xb4>
 8003f76:	2304      	movs	r3, #4
 8003f78:	e7bc      	b.n	8003ef4 <HAL_I2C_Init+0xb4>
 8003f7a:	2301      	movs	r3, #1
 8003f7c:	e7ba      	b.n	8003ef4 <HAL_I2C_Init+0xb4>
 8003f7e:	bf00      	nop
 8003f80:	000186a0 	.word	0x000186a0
 8003f84:	001e847f 	.word	0x001e847f
 8003f88:	003d08ff 	.word	0x003d08ff
 8003f8c:	000f4240 	.word	0x000f4240

08003f90 <HAL_I2C_Mem_Write>:
{
 8003f90:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8003f94:	4604      	mov	r4, r0
 8003f96:	4699      	mov	r9, r3
 8003f98:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8003f9a:	460f      	mov	r7, r1
 8003f9c:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8003f9e:	f7ff faab 	bl	80034f8 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8003fa2:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8003fa6:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8003fa8:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8003faa:	d003      	beq.n	8003fb4 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8003fac:	2002      	movs	r0, #2
}
 8003fae:	b003      	add	sp, #12
 8003fb0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8003fb4:	9000      	str	r0, [sp, #0]
 8003fb6:	493c      	ldr	r1, [pc, #240]	; (80040a8 <HAL_I2C_Mem_Write+0x118>)
 8003fb8:	2319      	movs	r3, #25
 8003fba:	2201      	movs	r2, #1
 8003fbc:	4620      	mov	r0, r4
 8003fbe:	f7ff fd7d 	bl	8003abc <I2C_WaitOnFlagUntilTimeout>
 8003fc2:	2800      	cmp	r0, #0
 8003fc4:	d1f2      	bne.n	8003fac <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8003fc6:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8003fca:	2b01      	cmp	r3, #1
 8003fcc:	d0ee      	beq.n	8003fac <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8003fce:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8003fd0:	2301      	movs	r3, #1
 8003fd2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8003fd6:	6803      	ldr	r3, [r0, #0]
 8003fd8:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8003fda:	bf5e      	ittt	pl
 8003fdc:	6803      	ldrpl	r3, [r0, #0]
 8003fde:	f043 0301 	orrpl.w	r3, r3, #1
 8003fe2:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8003fe4:	6803      	ldr	r3, [r0, #0]
 8003fe6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8003fea:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8003fec:	2321      	movs	r3, #33	; 0x21
 8003fee:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8003ff2:	2340      	movs	r3, #64	; 0x40
 8003ff4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003ff8:	2300      	movs	r3, #0
 8003ffa:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8003ffc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003ffe:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8004000:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8004004:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004006:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004008:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800400a:	4b28      	ldr	r3, [pc, #160]	; (80040ac <HAL_I2C_Mem_Write+0x11c>)
 800400c:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800400e:	e9cd 6500 	strd	r6, r5, [sp]
 8004012:	464b      	mov	r3, r9
 8004014:	4642      	mov	r2, r8
 8004016:	4639      	mov	r1, r7
 8004018:	4620      	mov	r0, r4
 800401a:	f7ff fe37 	bl	8003c8c <I2C_RequestMemoryWrite>
 800401e:	2800      	cmp	r0, #0
 8004020:	d02a      	beq.n	8004078 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8004022:	2001      	movs	r0, #1
 8004024:	e7c3      	b.n	8003fae <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004026:	f7ff fe0b 	bl	8003c40 <I2C_WaitOnTXEFlagUntilTimeout>
 800402a:	b140      	cbz	r0, 800403e <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800402c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800402e:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004030:	bf01      	itttt	eq
 8004032:	6822      	ldreq	r2, [r4, #0]
 8004034:	6813      	ldreq	r3, [r2, #0]
 8004036:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800403a:	6013      	streq	r3, [r2, #0]
 800403c:	e7f1      	b.n	8004022 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800403e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004040:	6827      	ldr	r7, [r4, #0]
 8004042:	461a      	mov	r2, r3
 8004044:	f812 1b01 	ldrb.w	r1, [r2], #1
 8004048:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 800404a:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800404c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800404e:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8004050:	3a01      	subs	r2, #1
 8004052:	b292      	uxth	r2, r2
 8004054:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004056:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8004058:	1e48      	subs	r0, r1, #1
 800405a:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800405c:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 800405e:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004060:	d50a      	bpl.n	8004078 <HAL_I2C_Mem_Write+0xe8>
 8004062:	b148      	cbz	r0, 8004078 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004064:	785a      	ldrb	r2, [r3, #1]
 8004066:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8004068:	3302      	adds	r3, #2
 800406a:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800406c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800406e:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8004070:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8004072:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8004074:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8004076:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8004078:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800407a:	462a      	mov	r2, r5
 800407c:	4631      	mov	r1, r6
 800407e:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8004080:	2b00      	cmp	r3, #0
 8004082:	d1d0      	bne.n	8004026 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004084:	f7ff fdb6 	bl	8003bf4 <I2C_WaitOnBTFFlagUntilTimeout>
 8004088:	2800      	cmp	r0, #0
 800408a:	d1cf      	bne.n	800402c <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800408c:	6822      	ldr	r2, [r4, #0]
 800408e:	6813      	ldr	r3, [r2, #0]
 8004090:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004094:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8004096:	2320      	movs	r3, #32
 8004098:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800409c:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80040a0:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 80040a4:	e783      	b.n	8003fae <HAL_I2C_Mem_Write+0x1e>
 80040a6:	bf00      	nop
 80040a8:	00100002 	.word	0x00100002
 80040ac:	ffff0000 	.word	0xffff0000

080040b0 <HAL_I2C_Mem_Read>:
{
 80040b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80040b4:	4604      	mov	r4, r0
 80040b6:	b087      	sub	sp, #28
 80040b8:	4699      	mov	r9, r3
 80040ba:	9f10      	ldr	r7, [sp, #64]	; 0x40
 80040bc:	460d      	mov	r5, r1
 80040be:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80040c0:	f7ff fa1a 	bl	80034f8 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80040c4:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 80040c8:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80040ca:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80040cc:	d004      	beq.n	80040d8 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 80040ce:	2502      	movs	r5, #2
}
 80040d0:	4628      	mov	r0, r5
 80040d2:	b007      	add	sp, #28
 80040d4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80040d8:	9000      	str	r0, [sp, #0]
 80040da:	4976      	ldr	r1, [pc, #472]	; (80042b4 <HAL_I2C_Mem_Read+0x204>)
 80040dc:	2319      	movs	r3, #25
 80040de:	2201      	movs	r2, #1
 80040e0:	4620      	mov	r0, r4
 80040e2:	f7ff fceb 	bl	8003abc <I2C_WaitOnFlagUntilTimeout>
 80040e6:	2800      	cmp	r0, #0
 80040e8:	d1f1      	bne.n	80040ce <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 80040ea:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80040ee:	2b01      	cmp	r3, #1
 80040f0:	d0ed      	beq.n	80040ce <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80040f2:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 80040f4:	2301      	movs	r3, #1
 80040f6:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 80040fa:	6803      	ldr	r3, [r0, #0]
 80040fc:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 80040fe:	bf5e      	ittt	pl
 8004100:	6803      	ldrpl	r3, [r0, #0]
 8004102:	f043 0301 	orrpl.w	r3, r3, #1
 8004106:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004108:	6803      	ldr	r3, [r0, #0]
 800410a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800410e:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8004110:	2322      	movs	r3, #34	; 0x22
 8004112:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004116:	2340      	movs	r3, #64	; 0x40
 8004118:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800411c:	2300      	movs	r3, #0
 800411e:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8004120:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004122:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8004124:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8004128:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800412a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800412c:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800412e:	4b62      	ldr	r3, [pc, #392]	; (80042b8 <HAL_I2C_Mem_Read+0x208>)
 8004130:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8004132:	4629      	mov	r1, r5
 8004134:	e9cd 7600 	strd	r7, r6, [sp]
 8004138:	464b      	mov	r3, r9
 800413a:	4642      	mov	r2, r8
 800413c:	4620      	mov	r0, r4
 800413e:	f7ff fdfd 	bl	8003d3c <I2C_RequestMemoryRead>
 8004142:	4605      	mov	r5, r0
 8004144:	b108      	cbz	r0, 800414a <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8004146:	2501      	movs	r5, #1
 8004148:	e7c2      	b.n	80040d0 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 800414a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800414c:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 800414e:	b9b2      	cbnz	r2, 800417e <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004150:	9002      	str	r0, [sp, #8]
 8004152:	695a      	ldr	r2, [r3, #20]
 8004154:	9202      	str	r2, [sp, #8]
 8004156:	699a      	ldr	r2, [r3, #24]
 8004158:	9202      	str	r2, [sp, #8]
 800415a:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800415c:	681a      	ldr	r2, [r3, #0]
 800415e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004162:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004164:	f8df 8154 	ldr.w	r8, [pc, #340]	; 80042bc <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8004168:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800416a:	2b00      	cmp	r3, #0
 800416c:	d12c      	bne.n	80041c8 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 800416e:	2220      	movs	r2, #32
 8004170:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8004174:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004178:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800417c:	e7a8      	b.n	80040d0 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 800417e:	2a01      	cmp	r2, #1
 8004180:	d10a      	bne.n	8004198 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004182:	681a      	ldr	r2, [r3, #0]
 8004184:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004188:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800418a:	9003      	str	r0, [sp, #12]
 800418c:	695a      	ldr	r2, [r3, #20]
 800418e:	9203      	str	r2, [sp, #12]
 8004190:	699a      	ldr	r2, [r3, #24]
 8004192:	9203      	str	r2, [sp, #12]
 8004194:	9a03      	ldr	r2, [sp, #12]
 8004196:	e7e1      	b.n	800415c <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8004198:	2a02      	cmp	r2, #2
 800419a:	d10e      	bne.n	80041ba <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800419c:	681a      	ldr	r2, [r3, #0]
 800419e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80041a2:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80041a4:	681a      	ldr	r2, [r3, #0]
 80041a6:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80041aa:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80041ac:	9004      	str	r0, [sp, #16]
 80041ae:	695a      	ldr	r2, [r3, #20]
 80041b0:	9204      	str	r2, [sp, #16]
 80041b2:	699b      	ldr	r3, [r3, #24]
 80041b4:	9304      	str	r3, [sp, #16]
 80041b6:	9b04      	ldr	r3, [sp, #16]
 80041b8:	e7d4      	b.n	8004164 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80041ba:	9005      	str	r0, [sp, #20]
 80041bc:	695a      	ldr	r2, [r3, #20]
 80041be:	9205      	str	r2, [sp, #20]
 80041c0:	699b      	ldr	r3, [r3, #24]
 80041c2:	9305      	str	r3, [sp, #20]
 80041c4:	9b05      	ldr	r3, [sp, #20]
 80041c6:	e7cd      	b.n	8004164 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 80041c8:	2b03      	cmp	r3, #3
 80041ca:	d856      	bhi.n	800427a <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 80041cc:	2b01      	cmp	r3, #1
 80041ce:	d115      	bne.n	80041fc <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80041d0:	4632      	mov	r2, r6
 80041d2:	4639      	mov	r1, r7
 80041d4:	4620      	mov	r0, r4
 80041d6:	f7ff fcde 	bl	8003b96 <I2C_WaitOnRXNEFlagUntilTimeout>
 80041da:	2800      	cmp	r0, #0
 80041dc:	d1b3      	bne.n	8004146 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80041de:	6823      	ldr	r3, [r4, #0]
 80041e0:	691a      	ldr	r2, [r3, #16]
 80041e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80041e4:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80041e6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80041e8:	3301      	adds	r3, #1
 80041ea:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80041ec:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80041ee:	3b01      	subs	r3, #1
 80041f0:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80041f2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80041f4:	3b01      	subs	r3, #1
 80041f6:	b29b      	uxth	r3, r3
 80041f8:	8563      	strh	r3, [r4, #42]	; 0x2a
 80041fa:	e7b5      	b.n	8004168 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 80041fc:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80041fe:	9600      	str	r6, [sp, #0]
 8004200:	463b      	mov	r3, r7
 8004202:	f04f 0200 	mov.w	r2, #0
 8004206:	4641      	mov	r1, r8
 8004208:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 800420a:	d119      	bne.n	8004240 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800420c:	f7ff fc56 	bl	8003abc <I2C_WaitOnFlagUntilTimeout>
 8004210:	2800      	cmp	r0, #0
 8004212:	d198      	bne.n	8004146 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004214:	6823      	ldr	r3, [r4, #0]
 8004216:	681a      	ldr	r2, [r3, #0]
 8004218:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800421c:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800421e:	691a      	ldr	r2, [r3, #16]
 8004220:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004222:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8004224:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004226:	1c53      	adds	r3, r2, #1
 8004228:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800422a:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800422c:	3b01      	subs	r3, #1
 800422e:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8004230:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004232:	3b01      	subs	r3, #1
 8004234:	b29b      	uxth	r3, r3
 8004236:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004238:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800423a:	691b      	ldr	r3, [r3, #16]
 800423c:	7053      	strb	r3, [r2, #1]
 800423e:	e7d2      	b.n	80041e6 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004240:	f7ff fc3c 	bl	8003abc <I2C_WaitOnFlagUntilTimeout>
 8004244:	2800      	cmp	r0, #0
 8004246:	f47f af7e 	bne.w	8004146 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800424a:	6823      	ldr	r3, [r4, #0]
 800424c:	681a      	ldr	r2, [r3, #0]
 800424e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004252:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004254:	691a      	ldr	r2, [r3, #16]
 8004256:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004258:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800425a:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800425c:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 800425e:	3301      	adds	r3, #1
 8004260:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8004262:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8004264:	3b01      	subs	r3, #1
 8004266:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8004268:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800426a:	3b01      	subs	r3, #1
 800426c:	b29b      	uxth	r3, r3
 800426e:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004270:	4602      	mov	r2, r0
 8004272:	463b      	mov	r3, r7
 8004274:	4641      	mov	r1, r8
 8004276:	4620      	mov	r0, r4
 8004278:	e7c8      	b.n	800420c <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800427a:	4632      	mov	r2, r6
 800427c:	4639      	mov	r1, r7
 800427e:	4620      	mov	r0, r4
 8004280:	f7ff fc89 	bl	8003b96 <I2C_WaitOnRXNEFlagUntilTimeout>
 8004284:	2800      	cmp	r0, #0
 8004286:	f47f af5e 	bne.w	8004146 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800428a:	6823      	ldr	r3, [r4, #0]
 800428c:	691a      	ldr	r2, [r3, #16]
 800428e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004290:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8004292:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004294:	1c53      	adds	r3, r2, #1
 8004296:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8004298:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800429a:	3b01      	subs	r3, #1
 800429c:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800429e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80042a0:	3b01      	subs	r3, #1
 80042a2:	b29b      	uxth	r3, r3
 80042a4:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80042a6:	6823      	ldr	r3, [r4, #0]
 80042a8:	6959      	ldr	r1, [r3, #20]
 80042aa:	0749      	lsls	r1, r1, #29
 80042ac:	f57f af5c 	bpl.w	8004168 <HAL_I2C_Mem_Read+0xb8>
 80042b0:	e7c3      	b.n	800423a <HAL_I2C_Mem_Read+0x18a>
 80042b2:	bf00      	nop
 80042b4:	00100002 	.word	0x00100002
 80042b8:	ffff0000 	.word	0xffff0000
 80042bc:	00010004 	.word	0x00010004

080042c0 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 80042c0:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80042c2:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80042c6:	2b20      	cmp	r3, #32
 80042c8:	b2dc      	uxtb	r4, r3
 80042ca:	d116      	bne.n	80042fa <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 80042cc:	2324      	movs	r3, #36	; 0x24
 80042ce:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80042d2:	6803      	ldr	r3, [r0, #0]
 80042d4:	681a      	ldr	r2, [r3, #0]
 80042d6:	f022 0201 	bic.w	r2, r2, #1
 80042da:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 80042dc:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80042de:	f022 0210 	bic.w	r2, r2, #16
 80042e2:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 80042e4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80042e6:	4311      	orrs	r1, r2
 80042e8:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 80042ea:	681a      	ldr	r2, [r3, #0]
 80042ec:	f042 0201 	orr.w	r2, r2, #1
 80042f0:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80042f2:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 80042f6:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 80042f8:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 80042fa:	2002      	movs	r0, #2
 80042fc:	e7fc      	b.n	80042f8 <HAL_I2CEx_ConfigAnalogFilter+0x38>

080042fe <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 80042fe:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004300:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8004304:	2b20      	cmp	r3, #32
 8004306:	b2dc      	uxtb	r4, r3
 8004308:	d116      	bne.n	8004338 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800430a:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800430c:	2324      	movs	r3, #36	; 0x24
 800430e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8004312:	6813      	ldr	r3, [r2, #0]
 8004314:	f023 0301 	bic.w	r3, r3, #1
 8004318:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 800431a:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 800431c:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 8004320:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8004322:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8004324:	b29b      	uxth	r3, r3
 8004326:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8004328:	6813      	ldr	r3, [r2, #0]
 800432a:	f043 0301 	orr.w	r3, r3, #1
 800432e:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004330:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8004334:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8004336:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8004338:	2002      	movs	r0, #2
 800433a:	e7fc      	b.n	8004336 <HAL_I2CEx_ConfigDigitalFilter+0x38>

0800433c <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800433c:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800433e:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004342:	01d2      	lsls	r2, r2, #7
 8004344:	3284      	adds	r2, #132	; 0x84
 8004346:	1883      	adds	r3, r0, r2
{
 8004348:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800434c:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800434e:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004350:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8004352:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004356:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 800435a:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800435c:	68c5      	ldr	r5, [r0, #12]
 800435e:	f10c 0701 	add.w	r7, ip, #1
 8004362:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004366:	f3c6 460b 	ubfx	r6, r6, #16, #12
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800436a:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800436c:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800436e:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8004372:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8004374:	68c5      	ldr	r5, [r0, #12]
 8004376:	68ce      	ldr	r6, [r1, #12]
 8004378:	f3c5 050a 	ubfx	r5, r5, #0, #11
 800437c:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800437e:	689d      	ldr	r5, [r3, #8]
 8004380:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8004384:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8004386:	68c7      	ldr	r7, [r0, #12]
 8004388:	688d      	ldr	r5, [r1, #8]
 800438a:	f3c7 070a 	ubfx	r7, r7, #0, #11
 800438e:	3501      	adds	r5, #1
 8004390:	443d      	add	r5, r7
 8004392:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8004396:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8004398:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800439a:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800439c:	f025 0507 	bic.w	r5, r5, #7
 80043a0:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80043a2:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80043a6:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80043a8:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80043aa:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 80043ae:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80043b2:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 80043b6:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 80043ba:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 80043be:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 80043c2:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 80043c6:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 80043c8:	695d      	ldr	r5, [r3, #20]
 80043ca:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 80043ce:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 80043d0:	694d      	ldr	r5, [r1, #20]
 80043d2:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 80043d4:	69dd      	ldr	r5, [r3, #28]
 80043d6:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 80043da:	f025 0507 	bic.w	r5, r5, #7
 80043de:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 80043e0:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 80043e4:	433d      	orrs	r5, r7
 80043e6:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80043e8:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80043ea:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80043ec:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80043f0:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80043f2:	b31e      	cbz	r6, 800443c <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80043f4:	2e01      	cmp	r6, #1
 80043f6:	d023      	beq.n	8004440 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80043f8:	1eb5      	subs	r5, r6, #2
 80043fa:	2d02      	cmp	r5, #2
 80043fc:	d922      	bls.n	8004444 <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 80043fe:	2e07      	cmp	r6, #7
 8004400:	bf0c      	ite	eq
 8004402:	2502      	moveq	r5, #2
 8004404:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8004406:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8004408:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 800440c:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800440e:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8004412:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8004414:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8004416:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8004418:	436e      	muls	r6, r5
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800441a:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800441c:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8004420:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8004422:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8004424:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8004428:	f024 0407 	bic.w	r4, r4, #7
 800442c:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800442e:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8004430:	5883      	ldr	r3, [r0, r2]
 8004432:	f043 0301 	orr.w	r3, r3, #1
 8004436:	5083      	str	r3, [r0, r2]
}
 8004438:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 800443c:	2504      	movs	r5, #4
 800443e:	e7e2      	b.n	8004406 <LTDC_SetConfig+0xca>
    tmp = 3U;
 8004440:	2503      	movs	r5, #3
 8004442:	e7e0      	b.n	8004406 <LTDC_SetConfig+0xca>
    tmp = 2U;
 8004444:	2502      	movs	r5, #2
 8004446:	e7de      	b.n	8004406 <LTDC_SetConfig+0xca>

08004448 <HAL_LTDC_Init>:
{
 8004448:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800444a:	4604      	mov	r4, r0
 800444c:	2800      	cmp	r0, #0
 800444e:	d063      	beq.n	8004518 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8004450:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8004454:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004458:	b91b      	cbnz	r3, 8004462 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800445a:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800445e:	f7fd fb17 	bl	8001a90 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004462:	2302      	movs	r3, #2
 8004464:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8004468:	6823      	ldr	r3, [r4, #0]
 800446a:	699a      	ldr	r2, [r3, #24]
 800446c:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8004470:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8004472:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8004476:	4302      	orrs	r2, r0
 8004478:	68e0      	ldr	r0, [r4, #12]
 800447a:	6999      	ldr	r1, [r3, #24]
 800447c:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800447e:	6920      	ldr	r0, [r4, #16]
 8004480:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8004482:	430a      	orrs	r2, r1
 8004484:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8004486:	689a      	ldr	r2, [r3, #8]
 8004488:	4924      	ldr	r1, [pc, #144]	; (800451c <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800448a:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800448c:	400a      	ands	r2, r1
 800448e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8004490:	689a      	ldr	r2, [r3, #8]
 8004492:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8004496:	69a0      	ldr	r0, [r4, #24]
 8004498:	4302      	orrs	r2, r0
 800449a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800449c:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800449e:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80044a0:	400a      	ands	r2, r1
 80044a2:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80044a4:	68da      	ldr	r2, [r3, #12]
 80044a6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80044aa:	6a20      	ldr	r0, [r4, #32]
 80044ac:	4302      	orrs	r2, r0
 80044ae:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80044b0:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 80044b2:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80044b4:	400a      	ands	r2, r1
 80044b6:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 80044b8:	691a      	ldr	r2, [r3, #16]
 80044ba:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80044be:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80044c0:	4302      	orrs	r2, r0
 80044c2:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80044c4:	695a      	ldr	r2, [r3, #20]
 80044c6:	4011      	ands	r1, r2
 80044c8:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80044ca:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 80044cc:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80044ce:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80044d2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80044d4:	430a      	orrs	r2, r1
 80044d6:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80044d8:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 80044da:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 80044de:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80044e2:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 80044e6:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80044e8:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80044ea:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 80044ee:	430a      	orrs	r2, r1
 80044f0:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80044f4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80044f8:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80044fa:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80044fc:	f042 0206 	orr.w	r2, r2, #6
 8004500:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8004502:	699a      	ldr	r2, [r3, #24]
 8004504:	f042 0201 	orr.w	r2, r2, #1
 8004508:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800450a:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800450c:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800450e:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8004512:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 8004516:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8004518:	2001      	movs	r0, #1
 800451a:	e7fc      	b.n	8004516 <HAL_LTDC_Init+0xce>
 800451c:	f000f800 	.word	0xf000f800

08004520 <HAL_LTDC_ErrorCallback>:
 8004520:	4770      	bx	lr

08004522 <HAL_LTDC_ReloadEventCallback>:
 8004522:	4770      	bx	lr

08004524 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8004524:	6803      	ldr	r3, [r0, #0]
{
 8004526:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8004528:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800452a:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800452c:	0772      	lsls	r2, r6, #29
{
 800452e:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8004530:	d514      	bpl.n	800455c <HAL_LTDC_IRQHandler+0x38>
 8004532:	0769      	lsls	r1, r5, #29
 8004534:	d512      	bpl.n	800455c <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8004536:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004538:	f022 0204 	bic.w	r2, r2, #4
 800453c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800453e:	2204      	movs	r2, #4
 8004540:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8004542:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8004546:	f043 0301 	orr.w	r3, r3, #1
 800454a:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800454e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8004550:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8004554:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8004558:	f7ff ffe2 	bl	8004520 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800455c:	07b2      	lsls	r2, r6, #30
 800455e:	d516      	bpl.n	800458e <HAL_LTDC_IRQHandler+0x6a>
 8004560:	07ab      	lsls	r3, r5, #30
 8004562:	d514      	bpl.n	800458e <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8004564:	6823      	ldr	r3, [r4, #0]
 8004566:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004568:	f022 0202 	bic.w	r2, r2, #2
 800456c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800456e:	2202      	movs	r2, #2
 8004570:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8004572:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8004576:	4313      	orrs	r3, r2
 8004578:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800457c:	2304      	movs	r3, #4
 800457e:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8004582:	2300      	movs	r3, #0
 8004584:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8004588:	4620      	mov	r0, r4
 800458a:	f7ff ffc9 	bl	8004520 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800458e:	07f0      	lsls	r0, r6, #31
 8004590:	d510      	bpl.n	80045b4 <HAL_LTDC_IRQHandler+0x90>
 8004592:	07e9      	lsls	r1, r5, #31
 8004594:	d50e      	bpl.n	80045b4 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8004596:	6823      	ldr	r3, [r4, #0]
 8004598:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800459a:	f022 0201 	bic.w	r2, r2, #1
 800459e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 80045a0:	2201      	movs	r2, #1
 80045a2:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 80045a4:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 80045a6:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80045aa:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 80045ae:	4620      	mov	r0, r4
 80045b0:	f7fc fe5a 	bl	8001268 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 80045b4:	0732      	lsls	r2, r6, #28
 80045b6:	d511      	bpl.n	80045dc <HAL_LTDC_IRQHandler+0xb8>
 80045b8:	072b      	lsls	r3, r5, #28
 80045ba:	d50f      	bpl.n	80045dc <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80045bc:	6823      	ldr	r3, [r4, #0]
 80045be:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80045c0:	f022 0208 	bic.w	r2, r2, #8
 80045c4:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 80045c6:	2208      	movs	r2, #8
 80045c8:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 80045ca:	2301      	movs	r3, #1
 80045cc:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80045d0:	2300      	movs	r3, #0
 80045d2:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 80045d6:	4620      	mov	r0, r4
 80045d8:	f7ff ffa3 	bl	8004522 <HAL_LTDC_ReloadEventCallback>
}
 80045dc:	bd70      	pop	{r4, r5, r6, pc}

080045de <HAL_LTDC_ConfigLayer>:
{
 80045de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 80045e2:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80045e6:	2b01      	cmp	r3, #1
{
 80045e8:	4606      	mov	r6, r0
 80045ea:	460f      	mov	r7, r1
 80045ec:	4694      	mov	ip, r2
 80045ee:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 80045f2:	d01f      	beq.n	8004634 <HAL_LTDC_ConfigLayer+0x56>
 80045f4:	f04f 0801 	mov.w	r8, #1
 80045f8:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80045fc:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8004600:	2434      	movs	r4, #52	; 0x34
 8004602:	460d      	mov	r5, r1
 8004604:	fb04 6402 	mla	r4, r4, r2, r6
 8004608:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800460a:	3438      	adds	r4, #56	; 0x38
 800460c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800460e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004610:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004612:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004614:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004616:	682b      	ldr	r3, [r5, #0]
 8004618:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800461a:	4630      	mov	r0, r6
 800461c:	4662      	mov	r2, ip
 800461e:	4639      	mov	r1, r7
 8004620:	f7ff fe8c 	bl	800433c <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8004624:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8004626:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8004628:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800462c:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8004630:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 8004634:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08004638 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8004638:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800463c:	2b01      	cmp	r3, #1
 800463e:	f04f 0302 	mov.w	r3, #2
 8004642:	d012      	beq.n	800466a <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004644:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8004648:	6803      	ldr	r3, [r0, #0]
 800464a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800464c:	f022 0201 	bic.w	r2, r2, #1
 8004650:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8004652:	4a07      	ldr	r2, [pc, #28]	; (8004670 <HAL_LTDC_ProgramLineEvent+0x38>)
 8004654:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8004656:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004658:	f042 0201 	orr.w	r2, r2, #1
 800465c:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800465e:	2301      	movs	r3, #1
 8004660:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8004664:	2300      	movs	r3, #0
 8004666:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 800466a:	4618      	mov	r0, r3
}
 800466c:	4770      	bx	lr
 800466e:	bf00      	nop
 8004670:	40016800 	.word	0x40016800

08004674 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8004674:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8004678:	4604      	mov	r4, r0
 800467a:	b340      	cbz	r0, 80046ce <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800467c:	6803      	ldr	r3, [r0, #0]
 800467e:	07dd      	lsls	r5, r3, #31
 8004680:	d410      	bmi.n	80046a4 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8004682:	6823      	ldr	r3, [r4, #0]
 8004684:	0798      	lsls	r0, r3, #30
 8004686:	d45e      	bmi.n	8004746 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8004688:	6823      	ldr	r3, [r4, #0]
 800468a:	071a      	lsls	r2, r3, #28
 800468c:	f100 80a0 	bmi.w	80047d0 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8004690:	6823      	ldr	r3, [r4, #0]
 8004692:	075b      	lsls	r3, r3, #29
 8004694:	f100 80c0 	bmi.w	8004818 <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8004698:	69a0      	ldr	r0, [r4, #24]
 800469a:	2800      	cmp	r0, #0
 800469c:	f040 8128 	bne.w	80048f0 <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 80046a0:	2000      	movs	r0, #0
 80046a2:	e02b      	b.n	80046fc <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 80046a4:	4b8f      	ldr	r3, [pc, #572]	; (80048e4 <HAL_RCC_OscConfig+0x270>)
 80046a6:	689a      	ldr	r2, [r3, #8]
 80046a8:	f002 020c 	and.w	r2, r2, #12
 80046ac:	2a04      	cmp	r2, #4
 80046ae:	d007      	beq.n	80046c0 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80046b0:	689a      	ldr	r2, [r3, #8]
 80046b2:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 80046b6:	2a08      	cmp	r2, #8
 80046b8:	d10b      	bne.n	80046d2 <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80046ba:	685a      	ldr	r2, [r3, #4]
 80046bc:	0251      	lsls	r1, r2, #9
 80046be:	d508      	bpl.n	80046d2 <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80046c0:	4b88      	ldr	r3, [pc, #544]	; (80048e4 <HAL_RCC_OscConfig+0x270>)
 80046c2:	681b      	ldr	r3, [r3, #0]
 80046c4:	039a      	lsls	r2, r3, #14
 80046c6:	d5dc      	bpl.n	8004682 <HAL_RCC_OscConfig+0xe>
 80046c8:	6863      	ldr	r3, [r4, #4]
 80046ca:	2b00      	cmp	r3, #0
 80046cc:	d1d9      	bne.n	8004682 <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 80046ce:	2001      	movs	r0, #1
 80046d0:	e014      	b.n	80046fc <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80046d2:	6862      	ldr	r2, [r4, #4]
 80046d4:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 80046d8:	d113      	bne.n	8004702 <HAL_RCC_OscConfig+0x8e>
 80046da:	681a      	ldr	r2, [r3, #0]
 80046dc:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80046e0:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80046e2:	f7fe ff09 	bl	80034f8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80046e6:	4e7f      	ldr	r6, [pc, #508]	; (80048e4 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 80046e8:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80046ea:	6833      	ldr	r3, [r6, #0]
 80046ec:	039b      	lsls	r3, r3, #14
 80046ee:	d4c8      	bmi.n	8004682 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80046f0:	f7fe ff02 	bl	80034f8 <HAL_GetTick>
 80046f4:	1b40      	subs	r0, r0, r5
 80046f6:	2864      	cmp	r0, #100	; 0x64
 80046f8:	d9f7      	bls.n	80046ea <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 80046fa:	2003      	movs	r0, #3
}
 80046fc:	b002      	add	sp, #8
 80046fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8004702:	4d78      	ldr	r5, [pc, #480]	; (80048e4 <HAL_RCC_OscConfig+0x270>)
 8004704:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8004708:	682b      	ldr	r3, [r5, #0]
 800470a:	d107      	bne.n	800471c <HAL_RCC_OscConfig+0xa8>
 800470c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8004710:	602b      	str	r3, [r5, #0]
 8004712:	682b      	ldr	r3, [r5, #0]
 8004714:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004718:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800471a:	e7e2      	b.n	80046e2 <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800471c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004720:	602b      	str	r3, [r5, #0]
 8004722:	682b      	ldr	r3, [r5, #0]
 8004724:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004728:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800472a:	2a00      	cmp	r2, #0
 800472c:	d1d9      	bne.n	80046e2 <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 800472e:	f7fe fee3 	bl	80034f8 <HAL_GetTick>
 8004732:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8004734:	682b      	ldr	r3, [r5, #0]
 8004736:	039f      	lsls	r7, r3, #14
 8004738:	d5a3      	bpl.n	8004682 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800473a:	f7fe fedd 	bl	80034f8 <HAL_GetTick>
 800473e:	1b80      	subs	r0, r0, r6
 8004740:	2864      	cmp	r0, #100	; 0x64
 8004742:	d9f7      	bls.n	8004734 <HAL_RCC_OscConfig+0xc0>
 8004744:	e7d9      	b.n	80046fa <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8004746:	4b67      	ldr	r3, [pc, #412]	; (80048e4 <HAL_RCC_OscConfig+0x270>)
 8004748:	689a      	ldr	r2, [r3, #8]
 800474a:	f012 0f0c 	tst.w	r2, #12
 800474e:	d007      	beq.n	8004760 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8004750:	689a      	ldr	r2, [r3, #8]
 8004752:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8004756:	2a08      	cmp	r2, #8
 8004758:	d111      	bne.n	800477e <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800475a:	685b      	ldr	r3, [r3, #4]
 800475c:	025e      	lsls	r6, r3, #9
 800475e:	d40e      	bmi.n	800477e <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8004760:	4a60      	ldr	r2, [pc, #384]	; (80048e4 <HAL_RCC_OscConfig+0x270>)
 8004762:	6813      	ldr	r3, [r2, #0]
 8004764:	079d      	lsls	r5, r3, #30
 8004766:	d502      	bpl.n	800476e <HAL_RCC_OscConfig+0xfa>
 8004768:	68e3      	ldr	r3, [r4, #12]
 800476a:	2b01      	cmp	r3, #1
 800476c:	d1af      	bne.n	80046ce <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800476e:	6813      	ldr	r3, [r2, #0]
 8004770:	6921      	ldr	r1, [r4, #16]
 8004772:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8004776:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800477a:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800477c:	e784      	b.n	8004688 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800477e:	68e2      	ldr	r2, [r4, #12]
 8004780:	4b59      	ldr	r3, [pc, #356]	; (80048e8 <HAL_RCC_OscConfig+0x274>)
 8004782:	b1b2      	cbz	r2, 80047b2 <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 8004784:	2201      	movs	r2, #1
 8004786:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8004788:	f7fe feb6 	bl	80034f8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800478c:	4d55      	ldr	r5, [pc, #340]	; (80048e4 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800478e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004790:	682b      	ldr	r3, [r5, #0]
 8004792:	0798      	lsls	r0, r3, #30
 8004794:	d507      	bpl.n	80047a6 <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8004796:	682b      	ldr	r3, [r5, #0]
 8004798:	6922      	ldr	r2, [r4, #16]
 800479a:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800479e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80047a2:	602b      	str	r3, [r5, #0]
 80047a4:	e770      	b.n	8004688 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80047a6:	f7fe fea7 	bl	80034f8 <HAL_GetTick>
 80047aa:	1b80      	subs	r0, r0, r6
 80047ac:	2802      	cmp	r0, #2
 80047ae:	d9ef      	bls.n	8004790 <HAL_RCC_OscConfig+0x11c>
 80047b0:	e7a3      	b.n	80046fa <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 80047b2:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80047b4:	f7fe fea0 	bl	80034f8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80047b8:	4e4a      	ldr	r6, [pc, #296]	; (80048e4 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 80047ba:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80047bc:	6833      	ldr	r3, [r6, #0]
 80047be:	0799      	lsls	r1, r3, #30
 80047c0:	f57f af62 	bpl.w	8004688 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80047c4:	f7fe fe98 	bl	80034f8 <HAL_GetTick>
 80047c8:	1b40      	subs	r0, r0, r5
 80047ca:	2802      	cmp	r0, #2
 80047cc:	d9f6      	bls.n	80047bc <HAL_RCC_OscConfig+0x148>
 80047ce:	e794      	b.n	80046fa <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 80047d0:	6962      	ldr	r2, [r4, #20]
 80047d2:	4b45      	ldr	r3, [pc, #276]	; (80048e8 <HAL_RCC_OscConfig+0x274>)
 80047d4:	b182      	cbz	r2, 80047f8 <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 80047d6:	2201      	movs	r2, #1
 80047d8:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 80047dc:	f7fe fe8c 	bl	80034f8 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80047e0:	4e40      	ldr	r6, [pc, #256]	; (80048e4 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 80047e2:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80047e4:	6f73      	ldr	r3, [r6, #116]	; 0x74
 80047e6:	079f      	lsls	r7, r3, #30
 80047e8:	f53f af52 	bmi.w	8004690 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80047ec:	f7fe fe84 	bl	80034f8 <HAL_GetTick>
 80047f0:	1b40      	subs	r0, r0, r5
 80047f2:	2802      	cmp	r0, #2
 80047f4:	d9f6      	bls.n	80047e4 <HAL_RCC_OscConfig+0x170>
 80047f6:	e780      	b.n	80046fa <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 80047f8:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 80047fc:	f7fe fe7c 	bl	80034f8 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8004800:	4e38      	ldr	r6, [pc, #224]	; (80048e4 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8004802:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8004804:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8004806:	0798      	lsls	r0, r3, #30
 8004808:	f57f af42 	bpl.w	8004690 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800480c:	f7fe fe74 	bl	80034f8 <HAL_GetTick>
 8004810:	1b40      	subs	r0, r0, r5
 8004812:	2802      	cmp	r0, #2
 8004814:	d9f6      	bls.n	8004804 <HAL_RCC_OscConfig+0x190>
 8004816:	e770      	b.n	80046fa <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8004818:	4b32      	ldr	r3, [pc, #200]	; (80048e4 <HAL_RCC_OscConfig+0x270>)
 800481a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800481c:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 8004820:	d128      	bne.n	8004874 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 8004822:	9201      	str	r2, [sp, #4]
 8004824:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004826:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800482a:	641a      	str	r2, [r3, #64]	; 0x40
 800482c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800482e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004832:	9301      	str	r3, [sp, #4]
 8004834:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8004836:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004838:	4d2c      	ldr	r5, [pc, #176]	; (80048ec <HAL_RCC_OscConfig+0x278>)
 800483a:	682b      	ldr	r3, [r5, #0]
 800483c:	05d9      	lsls	r1, r3, #23
 800483e:	d51b      	bpl.n	8004878 <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8004840:	68a3      	ldr	r3, [r4, #8]
 8004842:	4d28      	ldr	r5, [pc, #160]	; (80048e4 <HAL_RCC_OscConfig+0x270>)
 8004844:	2b01      	cmp	r3, #1
 8004846:	d127      	bne.n	8004898 <HAL_RCC_OscConfig+0x224>
 8004848:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800484a:	f043 0301 	orr.w	r3, r3, #1
 800484e:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8004850:	f7fe fe52 	bl	80034f8 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004854:	4e23      	ldr	r6, [pc, #140]	; (80048e4 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8004856:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8004858:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800485c:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800485e:	079b      	lsls	r3, r3, #30
 8004860:	d539      	bpl.n	80048d6 <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 8004862:	2f00      	cmp	r7, #0
 8004864:	f43f af18 	beq.w	8004698 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8004868:	4a1e      	ldr	r2, [pc, #120]	; (80048e4 <HAL_RCC_OscConfig+0x270>)
 800486a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800486c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8004870:	6413      	str	r3, [r2, #64]	; 0x40
 8004872:	e711      	b.n	8004698 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8004874:	2700      	movs	r7, #0
 8004876:	e7df      	b.n	8004838 <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8004878:	682b      	ldr	r3, [r5, #0]
 800487a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800487e:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8004880:	f7fe fe3a 	bl	80034f8 <HAL_GetTick>
 8004884:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004886:	682b      	ldr	r3, [r5, #0]
 8004888:	05da      	lsls	r2, r3, #23
 800488a:	d4d9      	bmi.n	8004840 <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800488c:	f7fe fe34 	bl	80034f8 <HAL_GetTick>
 8004890:	1b80      	subs	r0, r0, r6
 8004892:	2802      	cmp	r0, #2
 8004894:	d9f7      	bls.n	8004886 <HAL_RCC_OscConfig+0x212>
 8004896:	e730      	b.n	80046fa <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8004898:	2b05      	cmp	r3, #5
 800489a:	d104      	bne.n	80048a6 <HAL_RCC_OscConfig+0x232>
 800489c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800489e:	f043 0304 	orr.w	r3, r3, #4
 80048a2:	672b      	str	r3, [r5, #112]	; 0x70
 80048a4:	e7d0      	b.n	8004848 <HAL_RCC_OscConfig+0x1d4>
 80048a6:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 80048a8:	f022 0201 	bic.w	r2, r2, #1
 80048ac:	672a      	str	r2, [r5, #112]	; 0x70
 80048ae:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 80048b0:	f022 0204 	bic.w	r2, r2, #4
 80048b4:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 80048b6:	2b00      	cmp	r3, #0
 80048b8:	d1ca      	bne.n	8004850 <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 80048ba:	f7fe fe1d 	bl	80034f8 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80048be:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 80048c2:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80048c4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80048c6:	0798      	lsls	r0, r3, #30
 80048c8:	d5cb      	bpl.n	8004862 <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80048ca:	f7fe fe15 	bl	80034f8 <HAL_GetTick>
 80048ce:	1b80      	subs	r0, r0, r6
 80048d0:	4540      	cmp	r0, r8
 80048d2:	d9f7      	bls.n	80048c4 <HAL_RCC_OscConfig+0x250>
 80048d4:	e711      	b.n	80046fa <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80048d6:	f7fe fe0f 	bl	80034f8 <HAL_GetTick>
 80048da:	1b40      	subs	r0, r0, r5
 80048dc:	4540      	cmp	r0, r8
 80048de:	d9bd      	bls.n	800485c <HAL_RCC_OscConfig+0x1e8>
 80048e0:	e70b      	b.n	80046fa <HAL_RCC_OscConfig+0x86>
 80048e2:	bf00      	nop
 80048e4:	40023800 	.word	0x40023800
 80048e8:	42470000 	.word	0x42470000
 80048ec:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 80048f0:	4d36      	ldr	r5, [pc, #216]	; (80049cc <HAL_RCC_OscConfig+0x358>)
 80048f2:	68ab      	ldr	r3, [r5, #8]
 80048f4:	f003 030c 	and.w	r3, r3, #12
 80048f8:	2b08      	cmp	r3, #8
 80048fa:	d03d      	beq.n	8004978 <HAL_RCC_OscConfig+0x304>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80048fc:	4b34      	ldr	r3, [pc, #208]	; (80049d0 <HAL_RCC_OscConfig+0x35c>)
 80048fe:	2200      	movs	r2, #0
 8004900:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8004902:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8004904:	d12b      	bne.n	800495e <HAL_RCC_OscConfig+0x2ea>
        tickstart = HAL_GetTick();
 8004906:	f7fe fdf7 	bl	80034f8 <HAL_GetTick>
 800490a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800490c:	682b      	ldr	r3, [r5, #0]
 800490e:	0199      	lsls	r1, r3, #6
 8004910:	d41f      	bmi.n	8004952 <HAL_RCC_OscConfig+0x2de>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8004912:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8004916:	4313      	orrs	r3, r2
 8004918:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800491a:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800491e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8004920:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8004924:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8004926:	0852      	lsrs	r2, r2, #1
 8004928:	3a01      	subs	r2, #1
 800492a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800492e:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8004930:	4b27      	ldr	r3, [pc, #156]	; (80049d0 <HAL_RCC_OscConfig+0x35c>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8004932:	4d26      	ldr	r5, [pc, #152]	; (80049cc <HAL_RCC_OscConfig+0x358>)
        __HAL_RCC_PLL_ENABLE();
 8004934:	2201      	movs	r2, #1
 8004936:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 8004938:	f7fe fdde 	bl	80034f8 <HAL_GetTick>
 800493c:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800493e:	682b      	ldr	r3, [r5, #0]
 8004940:	019a      	lsls	r2, r3, #6
 8004942:	f53f aead 	bmi.w	80046a0 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8004946:	f7fe fdd7 	bl	80034f8 <HAL_GetTick>
 800494a:	1b00      	subs	r0, r0, r4
 800494c:	2802      	cmp	r0, #2
 800494e:	d9f6      	bls.n	800493e <HAL_RCC_OscConfig+0x2ca>
 8004950:	e6d3      	b.n	80046fa <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8004952:	f7fe fdd1 	bl	80034f8 <HAL_GetTick>
 8004956:	1b80      	subs	r0, r0, r6
 8004958:	2802      	cmp	r0, #2
 800495a:	d9d7      	bls.n	800490c <HAL_RCC_OscConfig+0x298>
 800495c:	e6cd      	b.n	80046fa <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 800495e:	f7fe fdcb 	bl	80034f8 <HAL_GetTick>
 8004962:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8004964:	682b      	ldr	r3, [r5, #0]
 8004966:	019b      	lsls	r3, r3, #6
 8004968:	f57f ae9a 	bpl.w	80046a0 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800496c:	f7fe fdc4 	bl	80034f8 <HAL_GetTick>
 8004970:	1b00      	subs	r0, r0, r4
 8004972:	2802      	cmp	r0, #2
 8004974:	d9f6      	bls.n	8004964 <HAL_RCC_OscConfig+0x2f0>
 8004976:	e6c0      	b.n	80046fa <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8004978:	2801      	cmp	r0, #1
 800497a:	f43f aebf 	beq.w	80046fc <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 800497e:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8004980:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8004982:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8004986:	4291      	cmp	r1, r2
 8004988:	f47f aea1 	bne.w	80046ce <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800498c:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800498e:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8004992:	428a      	cmp	r2, r1
 8004994:	f47f ae9b 	bne.w	80046ce <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8004998:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800499a:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800499e:	401a      	ands	r2, r3
 80049a0:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 80049a4:	f47f ae93 	bne.w	80046ce <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80049a8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80049aa:	0852      	lsrs	r2, r2, #1
 80049ac:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 80049b0:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 80049b2:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 80049b6:	f47f ae8a 	bne.w	80046ce <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 80049ba:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80049bc:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 80049c0:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 80049c4:	f43f ae6c 	beq.w	80046a0 <HAL_RCC_OscConfig+0x2c>
 80049c8:	e681      	b.n	80046ce <HAL_RCC_OscConfig+0x5a>
 80049ca:	bf00      	nop
 80049cc:	40023800 	.word	0x40023800
 80049d0:	42470000 	.word	0x42470000

080049d4 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80049d4:	4913      	ldr	r1, [pc, #76]	; (8004a24 <HAL_RCC_GetSysClockFreq+0x50>)
{
 80049d6:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80049d8:	688b      	ldr	r3, [r1, #8]
 80049da:	f003 030c 	and.w	r3, r3, #12
 80049de:	2b04      	cmp	r3, #4
 80049e0:	d01c      	beq.n	8004a1c <HAL_RCC_GetSysClockFreq+0x48>
 80049e2:	2b08      	cmp	r3, #8
 80049e4:	d11c      	bne.n	8004a20 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80049e6:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80049e8:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80049ea:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80049ec:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80049f0:	bf14      	ite	ne
 80049f2:	480d      	ldrne	r0, [pc, #52]	; (8004a28 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80049f4:	480d      	ldreq	r0, [pc, #52]	; (8004a2c <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80049f6:	f3c1 1188 	ubfx	r1, r1, #6, #9
 80049fa:	bf18      	it	ne
 80049fc:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80049fe:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8004a02:	fba1 0100 	umull	r0, r1, r1, r0
 8004a06:	f7fb fc43 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8004a0a:	4b06      	ldr	r3, [pc, #24]	; (8004a24 <HAL_RCC_GetSysClockFreq+0x50>)
 8004a0c:	685b      	ldr	r3, [r3, #4]
 8004a0e:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8004a12:	3301      	adds	r3, #1
 8004a14:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8004a16:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8004a1a:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8004a1c:	4802      	ldr	r0, [pc, #8]	; (8004a28 <HAL_RCC_GetSysClockFreq+0x54>)
 8004a1e:	e7fc      	b.n	8004a1a <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8004a20:	4802      	ldr	r0, [pc, #8]	; (8004a2c <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8004a22:	e7fa      	b.n	8004a1a <HAL_RCC_GetSysClockFreq+0x46>
 8004a24:	40023800 	.word	0x40023800
 8004a28:	007a1200 	.word	0x007a1200
 8004a2c:	00f42400 	.word	0x00f42400

08004a30 <HAL_RCC_ClockConfig>:
{
 8004a30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004a34:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8004a36:	4604      	mov	r4, r0
 8004a38:	b910      	cbnz	r0, 8004a40 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8004a3a:	2001      	movs	r0, #1
}
 8004a3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8004a40:	4b44      	ldr	r3, [pc, #272]	; (8004b54 <HAL_RCC_ClockConfig+0x124>)
 8004a42:	681a      	ldr	r2, [r3, #0]
 8004a44:	f002 020f 	and.w	r2, r2, #15
 8004a48:	428a      	cmp	r2, r1
 8004a4a:	d328      	bcc.n	8004a9e <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8004a4c:	6822      	ldr	r2, [r4, #0]
 8004a4e:	0797      	lsls	r7, r2, #30
 8004a50:	d42d      	bmi.n	8004aae <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8004a52:	07d0      	lsls	r0, r2, #31
 8004a54:	d441      	bmi.n	8004ada <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8004a56:	4b3f      	ldr	r3, [pc, #252]	; (8004b54 <HAL_RCC_ClockConfig+0x124>)
 8004a58:	681a      	ldr	r2, [r3, #0]
 8004a5a:	f002 020f 	and.w	r2, r2, #15
 8004a5e:	42aa      	cmp	r2, r5
 8004a60:	d866      	bhi.n	8004b30 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8004a62:	6822      	ldr	r2, [r4, #0]
 8004a64:	0751      	lsls	r1, r2, #29
 8004a66:	d46c      	bmi.n	8004b42 <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8004a68:	0713      	lsls	r3, r2, #28
 8004a6a:	d507      	bpl.n	8004a7c <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8004a6c:	4a3a      	ldr	r2, [pc, #232]	; (8004b58 <HAL_RCC_ClockConfig+0x128>)
 8004a6e:	6921      	ldr	r1, [r4, #16]
 8004a70:	6893      	ldr	r3, [r2, #8]
 8004a72:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8004a76:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8004a7a:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8004a7c:	f7ff ffaa 	bl	80049d4 <HAL_RCC_GetSysClockFreq>
 8004a80:	4b35      	ldr	r3, [pc, #212]	; (8004b58 <HAL_RCC_ClockConfig+0x128>)
 8004a82:	4a36      	ldr	r2, [pc, #216]	; (8004b5c <HAL_RCC_ClockConfig+0x12c>)
 8004a84:	689b      	ldr	r3, [r3, #8]
 8004a86:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8004a8a:	5cd3      	ldrb	r3, [r2, r3]
 8004a8c:	40d8      	lsrs	r0, r3
 8004a8e:	4b34      	ldr	r3, [pc, #208]	; (8004b60 <HAL_RCC_ClockConfig+0x130>)
 8004a90:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8004a92:	4b34      	ldr	r3, [pc, #208]	; (8004b64 <HAL_RCC_ClockConfig+0x134>)
 8004a94:	6818      	ldr	r0, [r3, #0]
 8004a96:	f7fd f9b7 	bl	8001e08 <HAL_InitTick>
  return HAL_OK;
 8004a9a:	2000      	movs	r0, #0
 8004a9c:	e7ce      	b.n	8004a3c <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004a9e:	b2ca      	uxtb	r2, r1
 8004aa0:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8004aa2:	681b      	ldr	r3, [r3, #0]
 8004aa4:	f003 030f 	and.w	r3, r3, #15
 8004aa8:	428b      	cmp	r3, r1
 8004aaa:	d1c6      	bne.n	8004a3a <HAL_RCC_ClockConfig+0xa>
 8004aac:	e7ce      	b.n	8004a4c <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8004aae:	4b2a      	ldr	r3, [pc, #168]	; (8004b58 <HAL_RCC_ClockConfig+0x128>)
 8004ab0:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8004ab4:	bf1e      	ittt	ne
 8004ab6:	6899      	ldrne	r1, [r3, #8]
 8004ab8:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8004abc:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8004abe:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8004ac0:	bf42      	ittt	mi
 8004ac2:	6899      	ldrmi	r1, [r3, #8]
 8004ac4:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8004ac8:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8004aca:	4923      	ldr	r1, [pc, #140]	; (8004b58 <HAL_RCC_ClockConfig+0x128>)
 8004acc:	68a0      	ldr	r0, [r4, #8]
 8004ace:	688b      	ldr	r3, [r1, #8]
 8004ad0:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8004ad4:	4303      	orrs	r3, r0
 8004ad6:	608b      	str	r3, [r1, #8]
 8004ad8:	e7bb      	b.n	8004a52 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8004ada:	6862      	ldr	r2, [r4, #4]
 8004adc:	4b1e      	ldr	r3, [pc, #120]	; (8004b58 <HAL_RCC_ClockConfig+0x128>)
 8004ade:	2a01      	cmp	r2, #1
 8004ae0:	d11c      	bne.n	8004b1c <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8004ae2:	681b      	ldr	r3, [r3, #0]
 8004ae4:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004ae8:	d0a7      	beq.n	8004a3a <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8004aea:	4e1b      	ldr	r6, [pc, #108]	; (8004b58 <HAL_RCC_ClockConfig+0x128>)
 8004aec:	68b3      	ldr	r3, [r6, #8]
 8004aee:	f023 0303 	bic.w	r3, r3, #3
 8004af2:	4313      	orrs	r3, r2
 8004af4:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8004af6:	f7fe fcff 	bl	80034f8 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8004afa:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8004afe:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8004b00:	68b3      	ldr	r3, [r6, #8]
 8004b02:	6862      	ldr	r2, [r4, #4]
 8004b04:	f003 030c 	and.w	r3, r3, #12
 8004b08:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8004b0c:	d0a3      	beq.n	8004a56 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8004b0e:	f7fe fcf3 	bl	80034f8 <HAL_GetTick>
 8004b12:	1bc0      	subs	r0, r0, r7
 8004b14:	4540      	cmp	r0, r8
 8004b16:	d9f3      	bls.n	8004b00 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8004b18:	2003      	movs	r0, #3
 8004b1a:	e78f      	b.n	8004a3c <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8004b1c:	1e91      	subs	r1, r2, #2
 8004b1e:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8004b20:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8004b22:	d802      	bhi.n	8004b2a <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8004b24:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8004b28:	e7de      	b.n	8004ae8 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004b2a:	f013 0f02 	tst.w	r3, #2
 8004b2e:	e7db      	b.n	8004ae8 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004b30:	b2ea      	uxtb	r2, r5
 8004b32:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8004b34:	681b      	ldr	r3, [r3, #0]
 8004b36:	f003 030f 	and.w	r3, r3, #15
 8004b3a:	42ab      	cmp	r3, r5
 8004b3c:	f47f af7d 	bne.w	8004a3a <HAL_RCC_ClockConfig+0xa>
 8004b40:	e78f      	b.n	8004a62 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8004b42:	4905      	ldr	r1, [pc, #20]	; (8004b58 <HAL_RCC_ClockConfig+0x128>)
 8004b44:	68e0      	ldr	r0, [r4, #12]
 8004b46:	688b      	ldr	r3, [r1, #8]
 8004b48:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8004b4c:	4303      	orrs	r3, r0
 8004b4e:	608b      	str	r3, [r1, #8]
 8004b50:	e78a      	b.n	8004a68 <HAL_RCC_ClockConfig+0x38>
 8004b52:	bf00      	nop
 8004b54:	40023c00 	.word	0x40023c00
 8004b58:	40023800 	.word	0x40023800
 8004b5c:	0801dbb8 	.word	0x0801dbb8
 8004b60:	20000074 	.word	0x20000074
 8004b64:	2000007c 	.word	0x2000007c

08004b68 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8004b68:	4b04      	ldr	r3, [pc, #16]	; (8004b7c <HAL_RCC_GetPCLK1Freq+0x14>)
 8004b6a:	4a05      	ldr	r2, [pc, #20]	; (8004b80 <HAL_RCC_GetPCLK1Freq+0x18>)
 8004b6c:	689b      	ldr	r3, [r3, #8]
 8004b6e:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8004b72:	5cd3      	ldrb	r3, [r2, r3]
 8004b74:	4a03      	ldr	r2, [pc, #12]	; (8004b84 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8004b76:	6810      	ldr	r0, [r2, #0]
}
 8004b78:	40d8      	lsrs	r0, r3
 8004b7a:	4770      	bx	lr
 8004b7c:	40023800 	.word	0x40023800
 8004b80:	0801dbc8 	.word	0x0801dbc8
 8004b84:	20000074 	.word	0x20000074

08004b88 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 8004b88:	4b04      	ldr	r3, [pc, #16]	; (8004b9c <HAL_RCC_GetPCLK2Freq+0x14>)
 8004b8a:	4a05      	ldr	r2, [pc, #20]	; (8004ba0 <HAL_RCC_GetPCLK2Freq+0x18>)
 8004b8c:	689b      	ldr	r3, [r3, #8]
 8004b8e:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8004b92:	5cd3      	ldrb	r3, [r2, r3]
 8004b94:	4a03      	ldr	r2, [pc, #12]	; (8004ba4 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8004b96:	6810      	ldr	r0, [r2, #0]
}
 8004b98:	40d8      	lsrs	r0, r3
 8004b9a:	4770      	bx	lr
 8004b9c:	40023800 	.word	0x40023800
 8004ba0:	0801dbc8 	.word	0x0801dbc8
 8004ba4:	20000074 	.word	0x20000074

08004ba8 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8004ba8:	230f      	movs	r3, #15
 8004baa:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8004bac:	4b0b      	ldr	r3, [pc, #44]	; (8004bdc <HAL_RCC_GetClockConfig+0x34>)
 8004bae:	689a      	ldr	r2, [r3, #8]
 8004bb0:	f002 0203 	and.w	r2, r2, #3
 8004bb4:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8004bb6:	689a      	ldr	r2, [r3, #8]
 8004bb8:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8004bbc:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8004bbe:	689a      	ldr	r2, [r3, #8]
 8004bc0:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8004bc4:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8004bc6:	689b      	ldr	r3, [r3, #8]
 8004bc8:	08db      	lsrs	r3, r3, #3
 8004bca:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8004bce:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8004bd0:	4b03      	ldr	r3, [pc, #12]	; (8004be0 <HAL_RCC_GetClockConfig+0x38>)
 8004bd2:	681b      	ldr	r3, [r3, #0]
 8004bd4:	f003 030f 	and.w	r3, r3, #15
 8004bd8:	600b      	str	r3, [r1, #0]
}
 8004bda:	4770      	bx	lr
 8004bdc:	40023800 	.word	0x40023800
 8004be0:	40023c00 	.word	0x40023c00

08004be4 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8004be4:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8004be6:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 8004bea:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004bec:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8004bee:	f040 808c 	bne.w	8004d0a <HAL_RCCEx_PeriphCLKConfig+0x126>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8004bf2:	6823      	ldr	r3, [r4, #0]
 8004bf4:	f013 0f0c 	tst.w	r3, #12
 8004bf8:	d045      	beq.n	8004c86 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8004bfa:	4b8b      	ldr	r3, [pc, #556]	; (8004e28 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8004bfc:	4d8b      	ldr	r5, [pc, #556]	; (8004e2c <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_DISABLE();
 8004bfe:	2200      	movs	r2, #0
 8004c00:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8004c02:	f7fe fc79 	bl	80034f8 <HAL_GetTick>
 8004c06:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8004c08:	682b      	ldr	r3, [r5, #0]
 8004c0a:	009f      	lsls	r7, r3, #2
 8004c0c:	f100 80cf 	bmi.w	8004dae <HAL_RCCEx_PeriphCLKConfig+0x1ca>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8004c10:	6821      	ldr	r1, [r4, #0]
 8004c12:	074e      	lsls	r6, r1, #29
 8004c14:	d515      	bpl.n	8004c42 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8004c16:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8004c1a:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8004c1e:	061b      	lsls	r3, r3, #24
 8004c20:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8004c24:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8004c28:	4313      	orrs	r3, r2
 8004c2a:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8004c2e:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 8004c32:	6a22      	ldr	r2, [r4, #32]
 8004c34:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8004c38:	3a01      	subs	r2, #1
 8004c3a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8004c3e:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8004c42:	070d      	lsls	r5, r1, #28
 8004c44:	d514      	bpl.n	8004c70 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8004c46:	4a79      	ldr	r2, [pc, #484]	; (8004e2c <HAL_RCCEx_PeriphCLKConfig+0x248>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8004c48:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8004c4a:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8004c4e:	6920      	ldr	r0, [r4, #16]
 8004c50:	071b      	lsls	r3, r3, #28
 8004c52:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 8004c56:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8004c5a:	430b      	orrs	r3, r1
 8004c5c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8004c60:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8004c64:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8004c66:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8004c6a:	430b      	orrs	r3, r1
 8004c6c:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8004c70:	4b6d      	ldr	r3, [pc, #436]	; (8004e28 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8004c72:	4e6e      	ldr	r6, [pc, #440]	; (8004e2c <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_ENABLE();
 8004c74:	2201      	movs	r2, #1
 8004c76:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8004c78:	f7fe fc3e 	bl	80034f8 <HAL_GetTick>
 8004c7c:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8004c7e:	6833      	ldr	r3, [r6, #0]
 8004c80:	0098      	lsls	r0, r3, #2
 8004c82:	f140 809b 	bpl.w	8004dbc <HAL_RCCEx_PeriphCLKConfig+0x1d8>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8004c86:	6823      	ldr	r3, [r4, #0]
 8004c88:	069b      	lsls	r3, r3, #26
 8004c8a:	d533      	bpl.n	8004cf4 <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8004c8c:	2300      	movs	r3, #0
 8004c8e:	9301      	str	r3, [sp, #4]
 8004c90:	4b66      	ldr	r3, [pc, #408]	; (8004e2c <HAL_RCCEx_PeriphCLKConfig+0x248>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8004c92:	4d67      	ldr	r5, [pc, #412]	; (8004e30 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8004c94:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004c96:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8004c9a:	641a      	str	r2, [r3, #64]	; 0x40
 8004c9c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004c9e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004ca2:	9301      	str	r3, [sp, #4]
 8004ca4:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8004ca6:	682b      	ldr	r3, [r5, #0]
 8004ca8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004cac:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8004cae:	f7fe fc23 	bl	80034f8 <HAL_GetTick>
 8004cb2:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8004cb4:	682b      	ldr	r3, [r5, #0]
 8004cb6:	05d9      	lsls	r1, r3, #23
 8004cb8:	f140 8087 	bpl.w	8004dca <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8004cbc:	4d5b      	ldr	r5, [pc, #364]	; (8004e2c <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8004cbe:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8004cc0:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8004cc4:	f040 8088 	bne.w	8004dd8 <HAL_RCCEx_PeriphCLKConfig+0x1f4>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8004cc8:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8004cca:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8004cce:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8004cd2:	4a56      	ldr	r2, [pc, #344]	; (8004e2c <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8004cd4:	f040 80a4 	bne.w	8004e20 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8004cd8:	6891      	ldr	r1, [r2, #8]
 8004cda:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8004cde:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8004ce2:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8004ce6:	4301      	orrs	r1, r0
 8004ce8:	6091      	str	r1, [r2, #8]
 8004cea:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8004cec:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004cf0:	430b      	orrs	r3, r1
 8004cf2:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8004cf4:	6820      	ldr	r0, [r4, #0]
 8004cf6:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8004cfa:	bf1f      	itttt	ne
 8004cfc:	4b4d      	ldrne	r3, [pc, #308]	; (8004e34 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 8004cfe:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 8004d02:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 8004d06:	2000      	movne	r0, #0
 8004d08:	e04f      	b.n	8004daa <HAL_RCCEx_PeriphCLKConfig+0x1c6>
    __HAL_RCC_PLLI2S_DISABLE();
 8004d0a:	4b47      	ldr	r3, [pc, #284]	; (8004e28 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8004d0c:	4e47      	ldr	r6, [pc, #284]	; (8004e2c <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_DISABLE();
 8004d0e:	2200      	movs	r2, #0
 8004d10:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8004d12:	f7fe fbf1 	bl	80034f8 <HAL_GetTick>
 8004d16:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8004d18:	6833      	ldr	r3, [r6, #0]
 8004d1a:	011f      	lsls	r7, r3, #4
 8004d1c:	d43f      	bmi.n	8004d9e <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8004d1e:	6821      	ldr	r1, [r4, #0]
 8004d20:	07cd      	lsls	r5, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8004d22:	bf41      	itttt	mi
 8004d24:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8004d28:	071b      	lslmi	r3, r3, #28
 8004d2a:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8004d2e:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8004d32:	0788      	lsls	r0, r1, #30
 8004d34:	d515      	bpl.n	8004d62 <HAL_RCCEx_PeriphCLKConfig+0x17e>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8004d36:	4a3d      	ldr	r2, [pc, #244]	; (8004e2c <HAL_RCCEx_PeriphCLKConfig+0x248>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8004d38:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8004d3a:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8004d3e:	6865      	ldr	r5, [r4, #4]
 8004d40:	061b      	lsls	r3, r3, #24
 8004d42:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8004d46:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8004d4a:	4303      	orrs	r3, r0
 8004d4c:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8004d50:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8004d54:	69e3      	ldr	r3, [r4, #28]
 8004d56:	f020 001f 	bic.w	r0, r0, #31
 8004d5a:	3b01      	subs	r3, #1
 8004d5c:	4303      	orrs	r3, r0
 8004d5e:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8004d62:	0649      	lsls	r1, r1, #25
 8004d64:	d50a      	bpl.n	8004d7c <HAL_RCCEx_PeriphCLKConfig+0x198>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8004d66:	68e3      	ldr	r3, [r4, #12]
 8004d68:	6862      	ldr	r2, [r4, #4]
 8004d6a:	061b      	lsls	r3, r3, #24
 8004d6c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8004d70:	68a2      	ldr	r2, [r4, #8]
 8004d72:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8004d76:	4a2d      	ldr	r2, [pc, #180]	; (8004e2c <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8004d78:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8004d7c:	4b2a      	ldr	r3, [pc, #168]	; (8004e28 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8004d7e:	4e2b      	ldr	r6, [pc, #172]	; (8004e2c <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_ENABLE();
 8004d80:	2201      	movs	r2, #1
 8004d82:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8004d84:	f7fe fbb8 	bl	80034f8 <HAL_GetTick>
 8004d88:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8004d8a:	6833      	ldr	r3, [r6, #0]
 8004d8c:	011a      	lsls	r2, r3, #4
 8004d8e:	f53f af30 	bmi.w	8004bf2 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8004d92:	f7fe fbb1 	bl	80034f8 <HAL_GetTick>
 8004d96:	1b40      	subs	r0, r0, r5
 8004d98:	2802      	cmp	r0, #2
 8004d9a:	d9f6      	bls.n	8004d8a <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 8004d9c:	e004      	b.n	8004da8 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8004d9e:	f7fe fbab 	bl	80034f8 <HAL_GetTick>
 8004da2:	1b40      	subs	r0, r0, r5
 8004da4:	2802      	cmp	r0, #2
 8004da6:	d9b7      	bls.n	8004d18 <HAL_RCCEx_PeriphCLKConfig+0x134>
        return HAL_TIMEOUT;
 8004da8:	2003      	movs	r0, #3
}
 8004daa:	b003      	add	sp, #12
 8004dac:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8004dae:	f7fe fba3 	bl	80034f8 <HAL_GetTick>
 8004db2:	1b80      	subs	r0, r0, r6
 8004db4:	2802      	cmp	r0, #2
 8004db6:	f67f af27 	bls.w	8004c08 <HAL_RCCEx_PeriphCLKConfig+0x24>
 8004dba:	e7f5      	b.n	8004da8 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8004dbc:	f7fe fb9c 	bl	80034f8 <HAL_GetTick>
 8004dc0:	1b40      	subs	r0, r0, r5
 8004dc2:	2802      	cmp	r0, #2
 8004dc4:	f67f af5b 	bls.w	8004c7e <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8004dc8:	e7ee      	b.n	8004da8 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8004dca:	f7fe fb95 	bl	80034f8 <HAL_GetTick>
 8004dce:	1b80      	subs	r0, r0, r6
 8004dd0:	2802      	cmp	r0, #2
 8004dd2:	f67f af6f 	bls.w	8004cb4 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8004dd6:	e7e7      	b.n	8004da8 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8004dd8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8004dda:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8004dde:	4293      	cmp	r3, r2
 8004de0:	f43f af72 	beq.w	8004cc8 <HAL_RCCEx_PeriphCLKConfig+0xe4>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8004de4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8004de6:	4a10      	ldr	r2, [pc, #64]	; (8004e28 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 8004de8:	2101      	movs	r1, #1
 8004dea:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8004dee:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8004df2:	2100      	movs	r1, #0
 8004df4:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 8004df8:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8004dfa:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8004dfc:	07da      	lsls	r2, r3, #31
 8004dfe:	f57f af63 	bpl.w	8004cc8 <HAL_RCCEx_PeriphCLKConfig+0xe4>
        tickstart = HAL_GetTick();
 8004e02:	f7fe fb79 	bl	80034f8 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8004e06:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8004e0a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004e0c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8004e0e:	079b      	lsls	r3, r3, #30
 8004e10:	f53f af5a 	bmi.w	8004cc8 <HAL_RCCEx_PeriphCLKConfig+0xe4>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8004e14:	f7fe fb70 	bl	80034f8 <HAL_GetTick>
 8004e18:	1b80      	subs	r0, r0, r6
 8004e1a:	42b8      	cmp	r0, r7
 8004e1c:	d9f6      	bls.n	8004e0c <HAL_RCCEx_PeriphCLKConfig+0x228>
 8004e1e:	e7c3      	b.n	8004da8 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8004e20:	6891      	ldr	r1, [r2, #8]
 8004e22:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8004e26:	e75f      	b.n	8004ce8 <HAL_RCCEx_PeriphCLKConfig+0x104>
 8004e28:	42470000 	.word	0x42470000
 8004e2c:	40023800 	.word	0x40023800
 8004e30:	40007000 	.word	0x40007000
 8004e34:	42471000 	.word	0x42471000

08004e38 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8004e38:	b538      	push	{r3, r4, r5, lr}
 8004e3a:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8004e3c:	4604      	mov	r4, r0
 8004e3e:	b1c8      	cbz	r0, 8004e74 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8004e40:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8004e44:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004e48:	b91b      	cbnz	r3, 8004e52 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8004e4a:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8004e4e:	f7fc ff6f 	bl	8001d30 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8004e52:	2302      	movs	r3, #2
 8004e54:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8004e58:	1d21      	adds	r1, r4, #4
 8004e5a:	6820      	ldr	r0, [r4, #0]
 8004e5c:	f001 f85b 	bl	8005f16 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8004e60:	6862      	ldr	r2, [r4, #4]
 8004e62:	6820      	ldr	r0, [r4, #0]
 8004e64:	4629      	mov	r1, r5
 8004e66:	f001 f891 	bl	8005f8c <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8004e6a:	2301      	movs	r3, #1
 8004e6c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 8004e70:	2000      	movs	r0, #0
}
 8004e72:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8004e74:	2001      	movs	r0, #1
 8004e76:	e7fc      	b.n	8004e72 <HAL_SDRAM_Init+0x3a>

08004e78 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8004e78:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8004e7a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 8004e7e:	2b02      	cmp	r3, #2
{
 8004e80:	4605      	mov	r5, r0
 8004e82:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8004e84:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 8004e86:	d012      	beq.n	8004eae <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 8004e88:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 8004e8c:	2c01      	cmp	r4, #1
 8004e8e:	d10f      	bne.n	8004eb0 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8004e90:	2302      	movs	r3, #2
 8004e92:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8004e96:	6828      	ldr	r0, [r5, #0]
 8004e98:	f001 f8ae 	bl	8005ff8 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8004e9c:	6833      	ldr	r3, [r6, #0]
 8004e9e:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8004ea0:	bf06      	itte	eq
 8004ea2:	2305      	moveq	r3, #5
 8004ea4:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 8004ea8:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8004eac:	2000      	movs	r0, #0
}
 8004eae:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 8004eb0:	2001      	movs	r0, #1
 8004eb2:	e7fc      	b.n	8004eae <HAL_SDRAM_SendCommand+0x36>

08004eb4 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8004eb4:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8004eb6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8004eba:	2b02      	cmp	r3, #2
{
 8004ebc:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8004ebe:	b2d8      	uxtb	r0, r3
 8004ec0:	d00d      	beq.n	8004ede <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8004ec2:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8004ec6:	2b01      	cmp	r3, #1
 8004ec8:	b2dd      	uxtb	r5, r3
 8004eca:	d109      	bne.n	8004ee0 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8004ecc:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8004ece:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8004ed0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8004ed4:	f001 f8b6 	bl	8006044 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 8004ed8:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8004edc:	2000      	movs	r0, #0
}
 8004ede:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8004ee0:	2001      	movs	r0, #1
 8004ee2:	e7fc      	b.n	8004ede <HAL_SDRAM_ProgramRefreshRate+0x2a>

08004ee4 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 8004ee4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8004ee8:	461d      	mov	r5, r3
 8004eea:	4617      	mov	r7, r2
 8004eec:	4688      	mov	r8, r1
 8004eee:	4606      	mov	r6, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8004ef0:	f7fe fb02 	bl	80034f8 <HAL_GetTick>
 8004ef4:	443d      	add	r5, r7
 8004ef6:	1a2c      	subs	r4, r5, r0
  tmp_tickstart = HAL_GetTick();
 8004ef8:	f7fe fafe 	bl	80034f8 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8004efc:	4b22      	ldr	r3, [pc, #136]	; (8004f88 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa4>)
 8004efe:	681b      	ldr	r3, [r3, #0]
 8004f00:	f3c3 33cb 	ubfx	r3, r3, #15, #12
  tmp_tickstart = HAL_GetTick();
 8004f04:	4605      	mov	r5, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8004f06:	4363      	muls	r3, r4

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8004f08:	6832      	ldr	r2, [r6, #0]
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
      {
        tmp_timeout = 0U;
      }
      count--;
 8004f0a:	9301      	str	r3, [sp, #4]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8004f0c:	6893      	ldr	r3, [r2, #8]
 8004f0e:	ea38 0303 	bics.w	r3, r8, r3
 8004f12:	d001      	beq.n	8004f18 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x34>
    }
  }

  return HAL_OK;
 8004f14:	2000      	movs	r0, #0
 8004f16:	e02d      	b.n	8004f74 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
    if (Timeout != HAL_MAX_DELAY)
 8004f18:	1c7b      	adds	r3, r7, #1
 8004f1a:	d0f7      	beq.n	8004f0c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x28>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8004f1c:	f7fe faec 	bl	80034f8 <HAL_GetTick>
 8004f20:	1b40      	subs	r0, r0, r5
 8004f22:	42a0      	cmp	r0, r4
 8004f24:	d329      	bcc.n	8004f7a <SPI_WaitFlagStateUntilTimeout.constprop.0+0x96>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8004f26:	6833      	ldr	r3, [r6, #0]
 8004f28:	685a      	ldr	r2, [r3, #4]
 8004f2a:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8004f2e:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8004f30:	6872      	ldr	r2, [r6, #4]
 8004f32:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8004f36:	d10a      	bne.n	8004f4e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x6a>
 8004f38:	68b2      	ldr	r2, [r6, #8]
 8004f3a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8004f3e:	d002      	beq.n	8004f46 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x62>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8004f40:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8004f44:	d103      	bne.n	8004f4e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x6a>
          __HAL_SPI_DISABLE(hspi);
 8004f46:	681a      	ldr	r2, [r3, #0]
 8004f48:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004f4c:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8004f4e:	6ab2      	ldr	r2, [r6, #40]	; 0x28
 8004f50:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 8004f54:	d107      	bne.n	8004f66 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x82>
          SPI_RESET_CRC(hspi);
 8004f56:	681a      	ldr	r2, [r3, #0]
 8004f58:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8004f5c:	601a      	str	r2, [r3, #0]
 8004f5e:	681a      	ldr	r2, [r3, #0]
 8004f60:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8004f64:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8004f66:	2301      	movs	r3, #1
 8004f68:	f886 3051 	strb.w	r3, [r6, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 8004f6c:	2300      	movs	r3, #0
 8004f6e:	f886 3050 	strb.w	r3, [r6, #80]	; 0x50
        return HAL_TIMEOUT;
 8004f72:	2003      	movs	r0, #3
}
 8004f74:	b002      	add	sp, #8
 8004f76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if (count == 0U)
 8004f7a:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 8004f7c:	2b00      	cmp	r3, #0
      count--;
 8004f7e:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 8004f80:	bf08      	it	eq
 8004f82:	2400      	moveq	r4, #0
      count--;
 8004f84:	3b01      	subs	r3, #1
 8004f86:	e7bf      	b.n	8004f08 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x24>
 8004f88:	20000074 	.word	0x20000074

08004f8c <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8004f8c:	b538      	push	{r3, r4, r5, lr}
 8004f8e:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8004f90:	6842      	ldr	r2, [r0, #4]
 8004f92:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8004f96:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8004f98:	d11f      	bne.n	8004fda <SPI_EndRxTransaction+0x4e>
 8004f9a:	6882      	ldr	r2, [r0, #8]
 8004f9c:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8004fa0:	d002      	beq.n	8004fa8 <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8004fa2:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8004fa6:	d107      	bne.n	8004fb8 <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8004fa8:	6825      	ldr	r5, [r4, #0]
 8004faa:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8004fac:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 8004fb0:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 8004fb4:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8004fb6:	d007      	beq.n	8004fc8 <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8004fb8:	460a      	mov	r2, r1
 8004fba:	2180      	movs	r1, #128	; 0x80
 8004fbc:	4620      	mov	r0, r4
 8004fbe:	f7ff ff91 	bl	8004ee4 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8004fc2:	b920      	cbnz	r0, 8004fce <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 8004fc4:	2000      	movs	r0, #0
}
 8004fc6:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8004fc8:	460a      	mov	r2, r1
 8004fca:	2101      	movs	r1, #1
 8004fcc:	e7f6      	b.n	8004fbc <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8004fce:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8004fd0:	f043 0320 	orr.w	r3, r3, #32
 8004fd4:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8004fd6:	2003      	movs	r0, #3
 8004fd8:	e7f5      	b.n	8004fc6 <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8004fda:	460a      	mov	r2, r1
 8004fdc:	2101      	movs	r1, #1
 8004fde:	e7ee      	b.n	8004fbe <SPI_EndRxTransaction+0x32>

08004fe0 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8004fe0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004fe2:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8004fe4:	4a12      	ldr	r2, [pc, #72]	; (8005030 <SPI_EndRxTxTransaction+0x50>)
 8004fe6:	6815      	ldr	r5, [r2, #0]
 8004fe8:	4a12      	ldr	r2, [pc, #72]	; (8005034 <SPI_EndRxTxTransaction+0x54>)
 8004fea:	fbb5 f5f2 	udiv	r5, r5, r2
 8004fee:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8004ff2:	4355      	muls	r5, r2
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8004ff4:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8004ff6:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8004ff8:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8004ffc:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8004ffe:	d10b      	bne.n	8005018 <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8005000:	460a      	mov	r2, r1
 8005002:	2180      	movs	r1, #128	; 0x80
 8005004:	f7ff ff6e 	bl	8004ee4 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8005008:	b178      	cbz	r0, 800502a <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800500a:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800500c:	f043 0320 	orr.w	r3, r3, #32
 8005010:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8005012:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8005014:	b003      	add	sp, #12
 8005016:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 8005018:	9b01      	ldr	r3, [sp, #4]
 800501a:	b133      	cbz	r3, 800502a <SPI_EndRxTxTransaction+0x4a>
      count--;
 800501c:	9b01      	ldr	r3, [sp, #4]
 800501e:	3b01      	subs	r3, #1
 8005020:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8005022:	6823      	ldr	r3, [r4, #0]
 8005024:	689b      	ldr	r3, [r3, #8]
 8005026:	061b      	lsls	r3, r3, #24
 8005028:	d4f6      	bmi.n	8005018 <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 800502a:	2000      	movs	r0, #0
 800502c:	e7f2      	b.n	8005014 <SPI_EndRxTxTransaction+0x34>
 800502e:	bf00      	nop
 8005030:	20000074 	.word	0x20000074
 8005034:	016e3600 	.word	0x016e3600

08005038 <HAL_SPI_Init>:
{
 8005038:	b510      	push	{r4, lr}
  if (hspi == NULL)
 800503a:	4604      	mov	r4, r0
 800503c:	2800      	cmp	r0, #0
 800503e:	d055      	beq.n	80050ec <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8005040:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8005042:	2b00      	cmp	r3, #0
 8005044:	d14e      	bne.n	80050e4 <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005046:	6842      	ldr	r2, [r0, #4]
 8005048:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 800504c:	d000      	beq.n	8005050 <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800504e:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8005050:	2300      	movs	r3, #0
 8005052:	62a3      	str	r3, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8005054:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8005058:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800505c:	b923      	cbnz	r3, 8005068 <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 800505e:	f884 2050 	strb.w	r2, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 8005062:	4620      	mov	r0, r4
 8005064:	f7fc fdf0 	bl	8001c48 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8005068:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800506a:	68a0      	ldr	r0, [r4, #8]
 800506c:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 800506e:	2302      	movs	r3, #2
 8005070:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 8005074:	680b      	ldr	r3, [r1, #0]
 8005076:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800507a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800507c:	6863      	ldr	r3, [r4, #4]
 800507e:	f400 4004 	and.w	r0, r0, #33792	; 0x8400
 8005082:	f403 7382 	and.w	r3, r3, #260	; 0x104
 8005086:	4303      	orrs	r3, r0
 8005088:	68e0      	ldr	r0, [r4, #12]
 800508a:	f400 6000 	and.w	r0, r0, #2048	; 0x800
 800508e:	4303      	orrs	r3, r0
 8005090:	6920      	ldr	r0, [r4, #16]
 8005092:	f000 0002 	and.w	r0, r0, #2
 8005096:	4303      	orrs	r3, r0
 8005098:	6960      	ldr	r0, [r4, #20]
 800509a:	f000 0001 	and.w	r0, r0, #1
 800509e:	4303      	orrs	r3, r0
 80050a0:	f402 7000 	and.w	r0, r2, #512	; 0x200
 80050a4:	4303      	orrs	r3, r0
 80050a6:	69e0      	ldr	r0, [r4, #28]
 80050a8:	f000 0038 	and.w	r0, r0, #56	; 0x38
 80050ac:	4303      	orrs	r3, r0
 80050ae:	6a20      	ldr	r0, [r4, #32]
 80050b0:	f000 0080 	and.w	r0, r0, #128	; 0x80
 80050b4:	4303      	orrs	r3, r0
 80050b6:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80050b8:	f400 5000 	and.w	r0, r0, #8192	; 0x2000
 80050bc:	4303      	orrs	r3, r0
 80050be:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 80050c0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80050c2:	0c12      	lsrs	r2, r2, #16
 80050c4:	f003 0310 	and.w	r3, r3, #16
 80050c8:	f002 0204 	and.w	r2, r2, #4
 80050cc:	431a      	orrs	r2, r3
 80050ce:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 80050d0:	69cb      	ldr	r3, [r1, #28]
 80050d2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80050d6:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80050d8:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 80050da:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80050dc:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 80050de:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 80050e2:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 80050e4:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 80050e6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80050ea:	e7b1      	b.n	8005050 <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 80050ec:	2001      	movs	r0, #1
 80050ee:	e7f8      	b.n	80050e2 <HAL_SPI_Init+0xaa>

080050f0 <HAL_SPI_Transmit>:
{
 80050f0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80050f4:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 80050f6:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 80050fa:	2b01      	cmp	r3, #1
{
 80050fc:	4604      	mov	r4, r0
 80050fe:	460d      	mov	r5, r1
 8005100:	4617      	mov	r7, r2
  __HAL_LOCK(hspi);
 8005102:	f000 80a1 	beq.w	8005248 <HAL_SPI_Transmit+0x158>
 8005106:	2301      	movs	r3, #1
 8005108:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 800510c:	f7fe f9f4 	bl	80034f8 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8005110:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8005114:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8005116:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8005118:	b2d8      	uxtb	r0, r3
 800511a:	f040 8093 	bne.w	8005244 <HAL_SPI_Transmit+0x154>
  if ((pData == NULL) || (Size == 0U))
 800511e:	2d00      	cmp	r5, #0
 8005120:	d05e      	beq.n	80051e0 <HAL_SPI_Transmit+0xf0>
 8005122:	2f00      	cmp	r7, #0
 8005124:	d05c      	beq.n	80051e0 <HAL_SPI_Transmit+0xf0>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005126:	68a2      	ldr	r2, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8005128:	6325      	str	r5, [r4, #48]	; 0x30
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800512a:	2303      	movs	r3, #3
 800512c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005130:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005134:	f04f 0300 	mov.w	r3, #0
 8005138:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 800513a:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 800513e:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8005140:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 8005142:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 8005144:	87e3      	strh	r3, [r4, #62]	; 0x3e
  hspi->TxXferSize  = Size;
 8005146:	86a7      	strh	r7, [r4, #52]	; 0x34
    __HAL_SPI_DISABLE(hspi);
 8005148:	6823      	ldr	r3, [r4, #0]
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800514a:	d107      	bne.n	800515c <HAL_SPI_Transmit+0x6c>
    __HAL_SPI_DISABLE(hspi);
 800514c:	681a      	ldr	r2, [r3, #0]
 800514e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005152:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 8005154:	681a      	ldr	r2, [r3, #0]
 8005156:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800515a:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800515c:	681a      	ldr	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800515e:	68e1      	ldr	r1, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005160:	0652      	lsls	r2, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8005162:	bf5e      	ittt	pl
 8005164:	681a      	ldrpl	r2, [r3, #0]
 8005166:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 800516a:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800516c:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005170:	6862      	ldr	r2, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005172:	d141      	bne.n	80051f8 <HAL_SPI_Transmit+0x108>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005174:	b10a      	cbz	r2, 800517a <HAL_SPI_Transmit+0x8a>
 8005176:	2f01      	cmp	r7, #1
 8005178:	d107      	bne.n	800518a <HAL_SPI_Transmit+0x9a>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800517a:	f835 2b02 	ldrh.w	r2, [r5], #2
 800517e:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8005180:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8005182:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005184:	3b01      	subs	r3, #1
 8005186:	b29b      	uxth	r3, r3
 8005188:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800518a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800518c:	b29b      	uxth	r3, r3
 800518e:	b9a3      	cbnz	r3, 80051ba <HAL_SPI_Transmit+0xca>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8005190:	4642      	mov	r2, r8
 8005192:	4631      	mov	r1, r6
 8005194:	4620      	mov	r0, r4
 8005196:	f7ff ff23 	bl	8004fe0 <SPI_EndRxTxTransaction>
 800519a:	2800      	cmp	r0, #0
 800519c:	d14f      	bne.n	800523e <HAL_SPI_Transmit+0x14e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800519e:	68a3      	ldr	r3, [r4, #8]
 80051a0:	b933      	cbnz	r3, 80051b0 <HAL_SPI_Transmit+0xc0>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80051a2:	9301      	str	r3, [sp, #4]
 80051a4:	6823      	ldr	r3, [r4, #0]
 80051a6:	68da      	ldr	r2, [r3, #12]
 80051a8:	9201      	str	r2, [sp, #4]
 80051aa:	689b      	ldr	r3, [r3, #8]
 80051ac:	9301      	str	r3, [sp, #4]
 80051ae:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80051b0:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 80051b2:	3800      	subs	r0, #0
 80051b4:	bf18      	it	ne
 80051b6:	2001      	movne	r0, #1
error:
 80051b8:	e012      	b.n	80051e0 <HAL_SPI_Transmit+0xf0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80051ba:	6822      	ldr	r2, [r4, #0]
 80051bc:	6893      	ldr	r3, [r2, #8]
 80051be:	0798      	lsls	r0, r3, #30
 80051c0:	d505      	bpl.n	80051ce <HAL_SPI_Transmit+0xde>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80051c2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80051c4:	f833 1b02 	ldrh.w	r1, [r3], #2
 80051c8:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80051ca:	6323      	str	r3, [r4, #48]	; 0x30
 80051cc:	e7d9      	b.n	8005182 <HAL_SPI_Transmit+0x92>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80051ce:	f7fe f993 	bl	80034f8 <HAL_GetTick>
 80051d2:	eba0 0008 	sub.w	r0, r0, r8
 80051d6:	42b0      	cmp	r0, r6
 80051d8:	d30b      	bcc.n	80051f2 <HAL_SPI_Transmit+0x102>
 80051da:	1c71      	adds	r1, r6, #1
 80051dc:	d0d5      	beq.n	800518a <HAL_SPI_Transmit+0x9a>
          errorcode = HAL_TIMEOUT;
 80051de:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 80051e0:	2301      	movs	r3, #1
 80051e2:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 80051e6:	2300      	movs	r3, #0
 80051e8:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 80051ec:	b002      	add	sp, #8
 80051ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80051f2:	2e00      	cmp	r6, #0
 80051f4:	d1c9      	bne.n	800518a <HAL_SPI_Transmit+0x9a>
 80051f6:	e7f2      	b.n	80051de <HAL_SPI_Transmit+0xee>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80051f8:	b10a      	cbz	r2, 80051fe <HAL_SPI_Transmit+0x10e>
 80051fa:	2f01      	cmp	r7, #1
 80051fc:	d108      	bne.n	8005210 <HAL_SPI_Transmit+0x120>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80051fe:	782a      	ldrb	r2, [r5, #0]
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8005200:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8005202:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005204:	3301      	adds	r3, #1
 8005206:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8005208:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800520a:	3b01      	subs	r3, #1
 800520c:	b29b      	uxth	r3, r3
 800520e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8005210:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005212:	b29b      	uxth	r3, r3
 8005214:	2b00      	cmp	r3, #0
 8005216:	d0bb      	beq.n	8005190 <HAL_SPI_Transmit+0xa0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8005218:	6823      	ldr	r3, [r4, #0]
 800521a:	689a      	ldr	r2, [r3, #8]
 800521c:	0792      	lsls	r2, r2, #30
 800521e:	d502      	bpl.n	8005226 <HAL_SPI_Transmit+0x136>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8005220:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8005222:	7812      	ldrb	r2, [r2, #0]
 8005224:	e7ec      	b.n	8005200 <HAL_SPI_Transmit+0x110>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005226:	f7fe f967 	bl	80034f8 <HAL_GetTick>
 800522a:	eba0 0008 	sub.w	r0, r0, r8
 800522e:	42b0      	cmp	r0, r6
 8005230:	d302      	bcc.n	8005238 <HAL_SPI_Transmit+0x148>
 8005232:	1c73      	adds	r3, r6, #1
 8005234:	d0ec      	beq.n	8005210 <HAL_SPI_Transmit+0x120>
 8005236:	e7d2      	b.n	80051de <HAL_SPI_Transmit+0xee>
 8005238:	2e00      	cmp	r6, #0
 800523a:	d1e9      	bne.n	8005210 <HAL_SPI_Transmit+0x120>
 800523c:	e7cf      	b.n	80051de <HAL_SPI_Transmit+0xee>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800523e:	2320      	movs	r3, #32
 8005240:	6563      	str	r3, [r4, #84]	; 0x54
 8005242:	e7ac      	b.n	800519e <HAL_SPI_Transmit+0xae>
    errorcode = HAL_BUSY;
 8005244:	2002      	movs	r0, #2
 8005246:	e7cb      	b.n	80051e0 <HAL_SPI_Transmit+0xf0>
  __HAL_LOCK(hspi);
 8005248:	2002      	movs	r0, #2
 800524a:	e7cf      	b.n	80051ec <HAL_SPI_Transmit+0xfc>

0800524c <HAL_SPI_TransmitReceive>:
{
 800524c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005250:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8005252:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 8005256:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 8005258:	2b01      	cmp	r3, #1
{
 800525a:	4604      	mov	r4, r0
 800525c:	460d      	mov	r5, r1
 800525e:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 8005260:	f000 80e6 	beq.w	8005430 <HAL_SPI_TransmitReceive+0x1e4>
 8005264:	2301      	movs	r3, #1
 8005266:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 800526a:	f7fe f945 	bl	80034f8 <HAL_GetTick>
  tmp_state           = hspi->State;
 800526e:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 8005272:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8005274:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8005276:	4680      	mov	r8, r0
  tmp_state           = hspi->State;
 8005278:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800527a:	d00a      	beq.n	8005292 <HAL_SPI_TransmitReceive+0x46>
 800527c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8005280:	f040 80d4 	bne.w	800542c <HAL_SPI_TransmitReceive+0x1e0>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8005284:	68a3      	ldr	r3, [r4, #8]
 8005286:	2b00      	cmp	r3, #0
 8005288:	f040 80d0 	bne.w	800542c <HAL_SPI_TransmitReceive+0x1e0>
 800528c:	2904      	cmp	r1, #4
 800528e:	f040 80cd 	bne.w	800542c <HAL_SPI_TransmitReceive+0x1e0>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8005292:	2d00      	cmp	r5, #0
 8005294:	d040      	beq.n	8005318 <HAL_SPI_TransmitReceive+0xcc>
 8005296:	f1b9 0f00 	cmp.w	r9, #0
 800529a:	d03d      	beq.n	8005318 <HAL_SPI_TransmitReceive+0xcc>
 800529c:	2e00      	cmp	r6, #0
 800529e:	d03b      	beq.n	8005318 <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 80052a0:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 80052a4:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 80052a8:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 80052aa:	bf1c      	itt	ne
 80052ac:	2305      	movne	r3, #5
 80052ae:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80052b2:	2300      	movs	r3, #0
 80052b4:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 80052b6:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80052ba:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 80052bc:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 80052be:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80052c0:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 80052c2:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80052c4:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 80052c6:	bf58      	it	pl
 80052c8:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 80052ca:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 80052cc:	bf58      	it	pl
 80052ce:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 80052d2:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 80052d4:	bf58      	it	pl
 80052d6:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80052d8:	68e1      	ldr	r1, [r4, #12]
 80052da:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 80052de:	d152      	bne.n	8005386 <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80052e0:	b10a      	cbz	r2, 80052e6 <HAL_SPI_TransmitReceive+0x9a>
 80052e2:	2e01      	cmp	r6, #1
 80052e4:	d107      	bne.n	80052f6 <HAL_SPI_TransmitReceive+0xaa>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80052e6:	f835 2b02 	ldrh.w	r2, [r5], #2
 80052ea:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 80052ec:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80052ee:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 80052f0:	3b01      	subs	r3, #1
 80052f2:	b29b      	uxth	r3, r3
 80052f4:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 80052f6:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80052f8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80052fa:	b29b      	uxth	r3, r3
 80052fc:	b973      	cbnz	r3, 800531c <HAL_SPI_TransmitReceive+0xd0>
 80052fe:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005300:	b29b      	uxth	r3, r3
 8005302:	b95b      	cbnz	r3, 800531c <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8005304:	4642      	mov	r2, r8
 8005306:	4639      	mov	r1, r7
 8005308:	4620      	mov	r0, r4
 800530a:	f7ff fe69 	bl	8004fe0 <SPI_EndRxTxTransaction>
 800530e:	2800      	cmp	r0, #0
 8005310:	f000 8081 	beq.w	8005416 <HAL_SPI_TransmitReceive+0x1ca>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8005314:	2320      	movs	r3, #32
 8005316:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 8005318:	2001      	movs	r0, #1
 800531a:	e02b      	b.n	8005374 <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800531c:	6821      	ldr	r1, [r4, #0]
 800531e:	688b      	ldr	r3, [r1, #8]
 8005320:	079e      	lsls	r6, r3, #30
 8005322:	d50d      	bpl.n	8005340 <HAL_SPI_TransmitReceive+0xf4>
 8005324:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005326:	b29b      	uxth	r3, r3
 8005328:	b153      	cbz	r3, 8005340 <HAL_SPI_TransmitReceive+0xf4>
 800532a:	b14d      	cbz	r5, 8005340 <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800532c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800532e:	f833 2b02 	ldrh.w	r2, [r3], #2
 8005332:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8005334:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8005336:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005338:	3b01      	subs	r3, #1
 800533a:	b29b      	uxth	r3, r3
 800533c:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800533e:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8005340:	688a      	ldr	r2, [r1, #8]
 8005342:	f012 0201 	ands.w	r2, r2, #1
 8005346:	d00c      	beq.n	8005362 <HAL_SPI_TransmitReceive+0x116>
 8005348:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800534a:	b29b      	uxth	r3, r3
 800534c:	b14b      	cbz	r3, 8005362 <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800534e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8005350:	68c9      	ldr	r1, [r1, #12]
 8005352:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8005356:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8005358:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800535a:	3b01      	subs	r3, #1
 800535c:	b29b      	uxth	r3, r3
 800535e:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8005360:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8005362:	f7fe f8c9 	bl	80034f8 <HAL_GetTick>
 8005366:	eba0 0008 	sub.w	r0, r0, r8
 800536a:	42b8      	cmp	r0, r7
 800536c:	d3c4      	bcc.n	80052f8 <HAL_SPI_TransmitReceive+0xac>
 800536e:	1c78      	adds	r0, r7, #1
 8005370:	d0c2      	beq.n	80052f8 <HAL_SPI_TransmitReceive+0xac>
        errorcode = HAL_TIMEOUT;
 8005372:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8005374:	2301      	movs	r3, #1
 8005376:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800537a:	2300      	movs	r3, #0
 800537c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8005380:	b003      	add	sp, #12
 8005382:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005386:	b10a      	cbz	r2, 800538c <HAL_SPI_TransmitReceive+0x140>
 8005388:	2e01      	cmp	r6, #1
 800538a:	d108      	bne.n	800539e <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800538c:	782a      	ldrb	r2, [r5, #0]
 800538e:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8005390:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8005392:	3301      	adds	r3, #1
 8005394:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8005396:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005398:	3b01      	subs	r3, #1
 800539a:	b29b      	uxth	r3, r3
 800539c:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 800539e:	2501      	movs	r5, #1
 80053a0:	e02d      	b.n	80053fe <HAL_SPI_TransmitReceive+0x1b2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80053a2:	6822      	ldr	r2, [r4, #0]
 80053a4:	6893      	ldr	r3, [r2, #8]
 80053a6:	0799      	lsls	r1, r3, #30
 80053a8:	d50e      	bpl.n	80053c8 <HAL_SPI_TransmitReceive+0x17c>
 80053aa:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80053ac:	b29b      	uxth	r3, r3
 80053ae:	b15b      	cbz	r3, 80053c8 <HAL_SPI_TransmitReceive+0x17c>
 80053b0:	b155      	cbz	r5, 80053c8 <HAL_SPI_TransmitReceive+0x17c>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 80053b2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80053b4:	781b      	ldrb	r3, [r3, #0]
 80053b6:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 80053b8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80053ba:	3301      	adds	r3, #1
 80053bc:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 80053be:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80053c0:	3b01      	subs	r3, #1
 80053c2:	b29b      	uxth	r3, r3
 80053c4:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 80053c6:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80053c8:	6822      	ldr	r2, [r4, #0]
 80053ca:	6891      	ldr	r1, [r2, #8]
 80053cc:	f011 0101 	ands.w	r1, r1, #1
 80053d0:	d00d      	beq.n	80053ee <HAL_SPI_TransmitReceive+0x1a2>
 80053d2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80053d4:	b29b      	uxth	r3, r3
 80053d6:	b153      	cbz	r3, 80053ee <HAL_SPI_TransmitReceive+0x1a2>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 80053d8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80053da:	68d2      	ldr	r2, [r2, #12]
 80053dc:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 80053de:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80053e0:	3301      	adds	r3, #1
 80053e2:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80053e4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80053e6:	3b01      	subs	r3, #1
 80053e8:	b29b      	uxth	r3, r3
 80053ea:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 80053ec:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 80053ee:	f7fe f883 	bl	80034f8 <HAL_GetTick>
 80053f2:	eba0 0008 	sub.w	r0, r0, r8
 80053f6:	42b8      	cmp	r0, r7
 80053f8:	d30a      	bcc.n	8005410 <HAL_SPI_TransmitReceive+0x1c4>
 80053fa:	1c7b      	adds	r3, r7, #1
 80053fc:	d1b9      	bne.n	8005372 <HAL_SPI_TransmitReceive+0x126>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80053fe:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8005400:	b29b      	uxth	r3, r3
 8005402:	2b00      	cmp	r3, #0
 8005404:	d1cd      	bne.n	80053a2 <HAL_SPI_TransmitReceive+0x156>
 8005406:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005408:	b29b      	uxth	r3, r3
 800540a:	2b00      	cmp	r3, #0
 800540c:	d1c9      	bne.n	80053a2 <HAL_SPI_TransmitReceive+0x156>
 800540e:	e779      	b.n	8005304 <HAL_SPI_TransmitReceive+0xb8>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8005410:	2f00      	cmp	r7, #0
 8005412:	d1f4      	bne.n	80053fe <HAL_SPI_TransmitReceive+0x1b2>
 8005414:	e7ad      	b.n	8005372 <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8005416:	68a3      	ldr	r3, [r4, #8]
 8005418:	2b00      	cmp	r3, #0
 800541a:	d1ab      	bne.n	8005374 <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800541c:	6823      	ldr	r3, [r4, #0]
 800541e:	9001      	str	r0, [sp, #4]
 8005420:	68da      	ldr	r2, [r3, #12]
 8005422:	9201      	str	r2, [sp, #4]
 8005424:	689b      	ldr	r3, [r3, #8]
 8005426:	9301      	str	r3, [sp, #4]
 8005428:	9b01      	ldr	r3, [sp, #4]
 800542a:	e7a3      	b.n	8005374 <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 800542c:	2002      	movs	r0, #2
 800542e:	e7a1      	b.n	8005374 <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 8005430:	2002      	movs	r0, #2
 8005432:	e7a5      	b.n	8005380 <HAL_SPI_TransmitReceive+0x134>

08005434 <HAL_SPI_Receive>:
{
 8005434:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8005438:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800543a:	6843      	ldr	r3, [r0, #4]
 800543c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 8005440:	4604      	mov	r4, r0
 8005442:	4689      	mov	r9, r1
 8005444:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8005446:	d10c      	bne.n	8005462 <HAL_SPI_Receive+0x2e>
 8005448:	6883      	ldr	r3, [r0, #8]
 800544a:	b953      	cbnz	r3, 8005462 <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800544c:	2304      	movs	r3, #4
 800544e:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8005452:	4613      	mov	r3, r2
 8005454:	9500      	str	r5, [sp, #0]
 8005456:	460a      	mov	r2, r1
 8005458:	f7ff fef8 	bl	800524c <HAL_SPI_TransmitReceive>
}
 800545c:	b003      	add	sp, #12
 800545e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hspi);
 8005462:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8005466:	2b01      	cmp	r3, #1
 8005468:	f000 8086 	beq.w	8005578 <HAL_SPI_Receive+0x144>
 800546c:	2301      	movs	r3, #1
 800546e:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 8005472:	f7fe f841 	bl	80034f8 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8005476:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800547a:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800547c:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800547e:	b2d8      	uxtb	r0, r3
 8005480:	d178      	bne.n	8005574 <HAL_SPI_Receive+0x140>
  if ((pData == NULL) || (Size == 0U))
 8005482:	f1b9 0f00 	cmp.w	r9, #0
 8005486:	d05c      	beq.n	8005542 <HAL_SPI_Receive+0x10e>
 8005488:	2f00      	cmp	r7, #0
 800548a:	d05a      	beq.n	8005542 <HAL_SPI_Receive+0x10e>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800548c:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800548e:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005492:	2600      	movs	r6, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8005494:	2304      	movs	r3, #4
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005496:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800549a:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800549e:	e9c4 6610 	strd	r6, r6, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80054a2:	6566      	str	r6, [r4, #84]	; 0x54
    __HAL_SPI_DISABLE(hspi);
 80054a4:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 80054a6:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->RxXferSize  = Size;
 80054a8:	87a7      	strh	r7, [r4, #60]	; 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 80054aa:	6326      	str	r6, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 80054ac:	86a6      	strh	r6, [r4, #52]	; 0x34
  hspi->TxXferCount = 0U;
 80054ae:	86e6      	strh	r6, [r4, #54]	; 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80054b0:	d107      	bne.n	80054c2 <HAL_SPI_Receive+0x8e>
    __HAL_SPI_DISABLE(hspi);
 80054b2:	681a      	ldr	r2, [r3, #0]
 80054b4:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80054b8:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 80054ba:	681a      	ldr	r2, [r3, #0]
 80054bc:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 80054c0:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80054c2:	681a      	ldr	r2, [r3, #0]
 80054c4:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 80054c6:	bf5e      	ittt	pl
 80054c8:	681a      	ldrpl	r2, [r3, #0]
 80054ca:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 80054ce:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 80054d0:	68e3      	ldr	r3, [r4, #12]
 80054d2:	b1f3      	cbz	r3, 8005512 <HAL_SPI_Receive+0xde>
    while (hspi->RxXferCount > 0U)
 80054d4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80054d6:	b29b      	uxth	r3, r3
 80054d8:	b1fb      	cbz	r3, 800551a <HAL_SPI_Receive+0xe6>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80054da:	6823      	ldr	r3, [r4, #0]
 80054dc:	689a      	ldr	r2, [r3, #8]
 80054de:	07d2      	lsls	r2, r2, #31
 80054e0:	d539      	bpl.n	8005556 <HAL_SPI_Receive+0x122>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80054e2:	68da      	ldr	r2, [r3, #12]
 80054e4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80054e6:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80054ea:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80054ec:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80054ee:	3b01      	subs	r3, #1
 80054f0:	b29b      	uxth	r3, r3
 80054f2:	87e3      	strh	r3, [r4, #62]	; 0x3e
 80054f4:	e7ee      	b.n	80054d4 <HAL_SPI_Receive+0xa0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80054f6:	6823      	ldr	r3, [r4, #0]
 80054f8:	689a      	ldr	r2, [r3, #8]
 80054fa:	07d0      	lsls	r0, r2, #31
 80054fc:	d518      	bpl.n	8005530 <HAL_SPI_Receive+0xfc>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 80054fe:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8005500:	7b1b      	ldrb	r3, [r3, #12]
 8005502:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8005504:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8005506:	3301      	adds	r3, #1
 8005508:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800550a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800550c:	3b01      	subs	r3, #1
 800550e:	b29b      	uxth	r3, r3
 8005510:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 8005512:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8005514:	b29b      	uxth	r3, r3
 8005516:	2b00      	cmp	r3, #0
 8005518:	d1ed      	bne.n	80054f6 <HAL_SPI_Receive+0xc2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800551a:	4642      	mov	r2, r8
 800551c:	4629      	mov	r1, r5
 800551e:	4620      	mov	r0, r4
 8005520:	f7ff fd34 	bl	8004f8c <SPI_EndRxTransaction>
 8005524:	bb18      	cbnz	r0, 800556e <HAL_SPI_Receive+0x13a>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8005526:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8005528:	3800      	subs	r0, #0
 800552a:	bf18      	it	ne
 800552c:	2001      	movne	r0, #1
error :
 800552e:	e008      	b.n	8005542 <HAL_SPI_Receive+0x10e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005530:	f7fd ffe2 	bl	80034f8 <HAL_GetTick>
 8005534:	eba0 0008 	sub.w	r0, r0, r8
 8005538:	42a8      	cmp	r0, r5
 800553a:	d309      	bcc.n	8005550 <HAL_SPI_Receive+0x11c>
 800553c:	1c69      	adds	r1, r5, #1
 800553e:	d0e8      	beq.n	8005512 <HAL_SPI_Receive+0xde>
          errorcode = HAL_TIMEOUT;
 8005540:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8005542:	2301      	movs	r3, #1
 8005544:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8005548:	2300      	movs	r3, #0
 800554a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 800554e:	e785      	b.n	800545c <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005550:	2d00      	cmp	r5, #0
 8005552:	d1de      	bne.n	8005512 <HAL_SPI_Receive+0xde>
 8005554:	e7f4      	b.n	8005540 <HAL_SPI_Receive+0x10c>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005556:	f7fd ffcf 	bl	80034f8 <HAL_GetTick>
 800555a:	eba0 0008 	sub.w	r0, r0, r8
 800555e:	42a8      	cmp	r0, r5
 8005560:	d302      	bcc.n	8005568 <HAL_SPI_Receive+0x134>
 8005562:	1c6b      	adds	r3, r5, #1
 8005564:	d0b6      	beq.n	80054d4 <HAL_SPI_Receive+0xa0>
 8005566:	e7eb      	b.n	8005540 <HAL_SPI_Receive+0x10c>
 8005568:	2d00      	cmp	r5, #0
 800556a:	d1b3      	bne.n	80054d4 <HAL_SPI_Receive+0xa0>
 800556c:	e7e8      	b.n	8005540 <HAL_SPI_Receive+0x10c>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800556e:	2320      	movs	r3, #32
 8005570:	6563      	str	r3, [r4, #84]	; 0x54
 8005572:	e7d8      	b.n	8005526 <HAL_SPI_Receive+0xf2>
    errorcode = HAL_BUSY;
 8005574:	2002      	movs	r0, #2
 8005576:	e7e4      	b.n	8005542 <HAL_SPI_Receive+0x10e>
  __HAL_LOCK(hspi);
 8005578:	2002      	movs	r0, #2
 800557a:	e76f      	b.n	800545c <HAL_SPI_Receive+0x28>

0800557c <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 800557c:	4770      	bx	lr
	...

08005580 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8005580:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8005584:	2b01      	cmp	r3, #1
 8005586:	d130      	bne.n	80055ea <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8005588:	2302      	movs	r3, #2
 800558a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800558e:	6803      	ldr	r3, [r0, #0]
 8005590:	68da      	ldr	r2, [r3, #12]
 8005592:	f042 0201 	orr.w	r2, r2, #1
 8005596:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8005598:	4a15      	ldr	r2, [pc, #84]	; (80055f0 <HAL_TIM_Base_Start_IT+0x70>)
 800559a:	4293      	cmp	r3, r2
 800559c:	d01a      	beq.n	80055d4 <HAL_TIM_Base_Start_IT+0x54>
 800559e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80055a2:	d017      	beq.n	80055d4 <HAL_TIM_Base_Start_IT+0x54>
 80055a4:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80055a8:	4293      	cmp	r3, r2
 80055aa:	d013      	beq.n	80055d4 <HAL_TIM_Base_Start_IT+0x54>
 80055ac:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80055b0:	4293      	cmp	r3, r2
 80055b2:	d00f      	beq.n	80055d4 <HAL_TIM_Base_Start_IT+0x54>
 80055b4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80055b8:	4293      	cmp	r3, r2
 80055ba:	d00b      	beq.n	80055d4 <HAL_TIM_Base_Start_IT+0x54>
 80055bc:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80055c0:	4293      	cmp	r3, r2
 80055c2:	d007      	beq.n	80055d4 <HAL_TIM_Base_Start_IT+0x54>
 80055c4:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 80055c8:	4293      	cmp	r3, r2
 80055ca:	d003      	beq.n	80055d4 <HAL_TIM_Base_Start_IT+0x54>
 80055cc:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 80055d0:	4293      	cmp	r3, r2
 80055d2:	d104      	bne.n	80055de <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80055d4:	689a      	ldr	r2, [r3, #8]
 80055d6:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80055da:	2a06      	cmp	r2, #6
 80055dc:	d003      	beq.n	80055e6 <HAL_TIM_Base_Start_IT+0x66>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 80055de:	681a      	ldr	r2, [r3, #0]
 80055e0:	f042 0201 	orr.w	r2, r2, #1
 80055e4:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 80055e6:	2000      	movs	r0, #0
}
 80055e8:	4770      	bx	lr
    return HAL_ERROR;
 80055ea:	2001      	movs	r0, #1
 80055ec:	4770      	bx	lr
 80055ee:	bf00      	nop
 80055f0:	40010000 	.word	0x40010000

080055f4 <HAL_TIM_OC_DelayElapsedCallback>:
 80055f4:	4770      	bx	lr

080055f6 <HAL_TIM_IC_CaptureCallback>:
 80055f6:	4770      	bx	lr

080055f8 <HAL_TIM_PWM_PulseFinishedCallback>:
 80055f8:	4770      	bx	lr

080055fa <HAL_TIM_TriggerCallback>:
 80055fa:	4770      	bx	lr

080055fc <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80055fc:	6803      	ldr	r3, [r0, #0]
 80055fe:	691a      	ldr	r2, [r3, #16]
 8005600:	0791      	lsls	r1, r2, #30
{
 8005602:	b510      	push	{r4, lr}
 8005604:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8005606:	d50e      	bpl.n	8005626 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8005608:	68da      	ldr	r2, [r3, #12]
 800560a:	0792      	lsls	r2, r2, #30
 800560c:	d50b      	bpl.n	8005626 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800560e:	f06f 0202 	mvn.w	r2, #2
 8005612:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8005614:	2201      	movs	r2, #1
 8005616:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8005618:	699b      	ldr	r3, [r3, #24]
 800561a:	079b      	lsls	r3, r3, #30
 800561c:	d077      	beq.n	800570e <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 800561e:	f7ff ffea 	bl	80055f6 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8005622:	2300      	movs	r3, #0
 8005624:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8005626:	6823      	ldr	r3, [r4, #0]
 8005628:	691a      	ldr	r2, [r3, #16]
 800562a:	0750      	lsls	r0, r2, #29
 800562c:	d510      	bpl.n	8005650 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800562e:	68da      	ldr	r2, [r3, #12]
 8005630:	0751      	lsls	r1, r2, #29
 8005632:	d50d      	bpl.n	8005650 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8005634:	f06f 0204 	mvn.w	r2, #4
 8005638:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800563a:	2202      	movs	r2, #2
 800563c:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800563e:	699b      	ldr	r3, [r3, #24]
 8005640:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8005644:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8005646:	d068      	beq.n	800571a <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 8005648:	f7ff ffd5 	bl	80055f6 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800564c:	2300      	movs	r3, #0
 800564e:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8005650:	6823      	ldr	r3, [r4, #0]
 8005652:	691a      	ldr	r2, [r3, #16]
 8005654:	0712      	lsls	r2, r2, #28
 8005656:	d50f      	bpl.n	8005678 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8005658:	68da      	ldr	r2, [r3, #12]
 800565a:	0710      	lsls	r0, r2, #28
 800565c:	d50c      	bpl.n	8005678 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800565e:	f06f 0208 	mvn.w	r2, #8
 8005662:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8005664:	2204      	movs	r2, #4
 8005666:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8005668:	69db      	ldr	r3, [r3, #28]
 800566a:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800566c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800566e:	d05a      	beq.n	8005726 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8005670:	f7ff ffc1 	bl	80055f6 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8005674:	2300      	movs	r3, #0
 8005676:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8005678:	6823      	ldr	r3, [r4, #0]
 800567a:	691a      	ldr	r2, [r3, #16]
 800567c:	06d2      	lsls	r2, r2, #27
 800567e:	d510      	bpl.n	80056a2 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8005680:	68da      	ldr	r2, [r3, #12]
 8005682:	06d0      	lsls	r0, r2, #27
 8005684:	d50d      	bpl.n	80056a2 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8005686:	f06f 0210 	mvn.w	r2, #16
 800568a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800568c:	2208      	movs	r2, #8
 800568e:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8005690:	69db      	ldr	r3, [r3, #28]
 8005692:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8005696:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8005698:	d04b      	beq.n	8005732 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 800569a:	f7ff ffac 	bl	80055f6 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800569e:	2300      	movs	r3, #0
 80056a0:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 80056a2:	6823      	ldr	r3, [r4, #0]
 80056a4:	691a      	ldr	r2, [r3, #16]
 80056a6:	07d1      	lsls	r1, r2, #31
 80056a8:	d508      	bpl.n	80056bc <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 80056aa:	68da      	ldr	r2, [r3, #12]
 80056ac:	07d2      	lsls	r2, r2, #31
 80056ae:	d505      	bpl.n	80056bc <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 80056b0:	f06f 0201 	mvn.w	r2, #1
 80056b4:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 80056b6:	4620      	mov	r0, r4
 80056b8:	f7fc f928 	bl	800190c <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 80056bc:	6823      	ldr	r3, [r4, #0]
 80056be:	691a      	ldr	r2, [r3, #16]
 80056c0:	0610      	lsls	r0, r2, #24
 80056c2:	d508      	bpl.n	80056d6 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 80056c4:	68da      	ldr	r2, [r3, #12]
 80056c6:	0611      	lsls	r1, r2, #24
 80056c8:	d505      	bpl.n	80056d6 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 80056ca:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80056ce:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 80056d0:	4620      	mov	r0, r4
 80056d2:	f000 f8c8 	bl	8005866 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 80056d6:	6823      	ldr	r3, [r4, #0]
 80056d8:	691a      	ldr	r2, [r3, #16]
 80056da:	0652      	lsls	r2, r2, #25
 80056dc:	d508      	bpl.n	80056f0 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 80056de:	68da      	ldr	r2, [r3, #12]
 80056e0:	0650      	lsls	r0, r2, #25
 80056e2:	d505      	bpl.n	80056f0 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 80056e4:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80056e8:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 80056ea:	4620      	mov	r0, r4
 80056ec:	f7ff ff85 	bl	80055fa <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 80056f0:	6823      	ldr	r3, [r4, #0]
 80056f2:	691a      	ldr	r2, [r3, #16]
 80056f4:	0691      	lsls	r1, r2, #26
 80056f6:	d522      	bpl.n	800573e <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 80056f8:	68da      	ldr	r2, [r3, #12]
 80056fa:	0692      	lsls	r2, r2, #26
 80056fc:	d51f      	bpl.n	800573e <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80056fe:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8005702:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8005704:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8005706:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800570a:	f000 b8ab 	b.w	8005864 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800570e:	f7ff ff71 	bl	80055f4 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8005712:	4620      	mov	r0, r4
 8005714:	f7ff ff70 	bl	80055f8 <HAL_TIM_PWM_PulseFinishedCallback>
 8005718:	e783      	b.n	8005622 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800571a:	f7ff ff6b 	bl	80055f4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800571e:	4620      	mov	r0, r4
 8005720:	f7ff ff6a 	bl	80055f8 <HAL_TIM_PWM_PulseFinishedCallback>
 8005724:	e792      	b.n	800564c <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8005726:	f7ff ff65 	bl	80055f4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800572a:	4620      	mov	r0, r4
 800572c:	f7ff ff64 	bl	80055f8 <HAL_TIM_PWM_PulseFinishedCallback>
 8005730:	e7a0      	b.n	8005674 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8005732:	f7ff ff5f 	bl	80055f4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8005736:	4620      	mov	r0, r4
 8005738:	f7ff ff5e 	bl	80055f8 <HAL_TIM_PWM_PulseFinishedCallback>
 800573c:	e7af      	b.n	800569e <HAL_TIM_IRQHandler+0xa2>
}
 800573e:	bd10      	pop	{r4, pc}

08005740 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8005740:	4a30      	ldr	r2, [pc, #192]	; (8005804 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 8005742:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8005744:	4290      	cmp	r0, r2
 8005746:	d012      	beq.n	800576e <TIM_Base_SetConfig+0x2e>
 8005748:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800574c:	d00f      	beq.n	800576e <TIM_Base_SetConfig+0x2e>
 800574e:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8005752:	4290      	cmp	r0, r2
 8005754:	d00b      	beq.n	800576e <TIM_Base_SetConfig+0x2e>
 8005756:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800575a:	4290      	cmp	r0, r2
 800575c:	d007      	beq.n	800576e <TIM_Base_SetConfig+0x2e>
 800575e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8005762:	4290      	cmp	r0, r2
 8005764:	d003      	beq.n	800576e <TIM_Base_SetConfig+0x2e>
 8005766:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800576a:	4290      	cmp	r0, r2
 800576c:	d119      	bne.n	80057a2 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 800576e:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8005770:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8005774:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8005776:	4a23      	ldr	r2, [pc, #140]	; (8005804 <TIM_Base_SetConfig+0xc4>)
 8005778:	4290      	cmp	r0, r2
 800577a:	d029      	beq.n	80057d0 <TIM_Base_SetConfig+0x90>
 800577c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8005780:	d026      	beq.n	80057d0 <TIM_Base_SetConfig+0x90>
 8005782:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8005786:	4290      	cmp	r0, r2
 8005788:	d022      	beq.n	80057d0 <TIM_Base_SetConfig+0x90>
 800578a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800578e:	4290      	cmp	r0, r2
 8005790:	d01e      	beq.n	80057d0 <TIM_Base_SetConfig+0x90>
 8005792:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8005796:	4290      	cmp	r0, r2
 8005798:	d01a      	beq.n	80057d0 <TIM_Base_SetConfig+0x90>
 800579a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800579e:	4290      	cmp	r0, r2
 80057a0:	d016      	beq.n	80057d0 <TIM_Base_SetConfig+0x90>
 80057a2:	4a19      	ldr	r2, [pc, #100]	; (8005808 <TIM_Base_SetConfig+0xc8>)
 80057a4:	4290      	cmp	r0, r2
 80057a6:	d013      	beq.n	80057d0 <TIM_Base_SetConfig+0x90>
 80057a8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80057ac:	4290      	cmp	r0, r2
 80057ae:	d00f      	beq.n	80057d0 <TIM_Base_SetConfig+0x90>
 80057b0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80057b4:	4290      	cmp	r0, r2
 80057b6:	d00b      	beq.n	80057d0 <TIM_Base_SetConfig+0x90>
 80057b8:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 80057bc:	4290      	cmp	r0, r2
 80057be:	d007      	beq.n	80057d0 <TIM_Base_SetConfig+0x90>
 80057c0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80057c4:	4290      	cmp	r0, r2
 80057c6:	d003      	beq.n	80057d0 <TIM_Base_SetConfig+0x90>
 80057c8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80057cc:	4290      	cmp	r0, r2
 80057ce:	d103      	bne.n	80057d8 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80057d0:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 80057d2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80057d6:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80057d8:	694a      	ldr	r2, [r1, #20]
 80057da:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80057de:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 80057e0:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80057e2:	688b      	ldr	r3, [r1, #8]
 80057e4:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80057e6:	680b      	ldr	r3, [r1, #0]
 80057e8:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80057ea:	4b06      	ldr	r3, [pc, #24]	; (8005804 <TIM_Base_SetConfig+0xc4>)
 80057ec:	4298      	cmp	r0, r3
 80057ee:	d003      	beq.n	80057f8 <TIM_Base_SetConfig+0xb8>
 80057f0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80057f4:	4298      	cmp	r0, r3
 80057f6:	d101      	bne.n	80057fc <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80057f8:	690b      	ldr	r3, [r1, #16]
 80057fa:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80057fc:	2301      	movs	r3, #1
 80057fe:	6143      	str	r3, [r0, #20]
}
 8005800:	4770      	bx	lr
 8005802:	bf00      	nop
 8005804:	40010000 	.word	0x40010000
 8005808:	40014000 	.word	0x40014000

0800580c <HAL_TIM_Base_Init>:
{
 800580c:	b510      	push	{r4, lr}
  if (htim == NULL)
 800580e:	4604      	mov	r4, r0
 8005810:	b330      	cbz	r0, 8005860 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 8005812:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8005816:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800581a:	b91b      	cbnz	r3, 8005824 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800581c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8005820:	f7ff feac 	bl	800557c <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8005824:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8005826:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8005828:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800582c:	1d21      	adds	r1, r4, #4
 800582e:	f7ff ff87 	bl	8005740 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8005832:	2301      	movs	r3, #1
 8005834:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 8005838:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800583a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800583e:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 8005842:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8005846:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800584a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800584e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8005852:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8005856:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800585a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 800585e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005860:	2001      	movs	r0, #1
 8005862:	e7fc      	b.n	800585e <HAL_TIM_Base_Init+0x52>

08005864 <HAL_TIMEx_CommutCallback>:
 8005864:	4770      	bx	lr

08005866 <HAL_TIMEx_BreakCallback>:
 8005866:	4770      	bx	lr

08005868 <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8005868:	6802      	ldr	r2, [r0, #0]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800586a:	f102 030c 	add.w	r3, r2, #12
 800586e:	e853 3f00 	ldrex	r3, [r3]
 8005872:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8005876:	320c      	adds	r2, #12
 8005878:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 800587c:	6802      	ldr	r2, [r0, #0]
 800587e:	2900      	cmp	r1, #0
 8005880:	d1f2      	bne.n	8005868 <UART_EndRxTransfer>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8005882:	f102 0314 	add.w	r3, r2, #20
 8005886:	e853 3f00 	ldrex	r3, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800588a:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800588e:	f102 0c14 	add.w	ip, r2, #20
 8005892:	e84c 3100 	strex	r1, r3, [ip]
 8005896:	2900      	cmp	r1, #0
 8005898:	d1f3      	bne.n	8005882 <UART_EndRxTransfer+0x1a>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800589a:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800589c:	2b01      	cmp	r3, #1
 800589e:	d10b      	bne.n	80058b8 <UART_EndRxTransfer+0x50>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80058a0:	f102 030c 	add.w	r3, r2, #12
 80058a4:	e853 3f00 	ldrex	r3, [r3]
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80058a8:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80058ac:	f102 0c0c 	add.w	ip, r2, #12
 80058b0:	e84c 3100 	strex	r1, r3, [ip]
 80058b4:	2900      	cmp	r1, #0
 80058b6:	d1f3      	bne.n	80058a0 <UART_EndRxTransfer+0x38>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 80058b8:	2320      	movs	r3, #32
 80058ba:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80058be:	2300      	movs	r3, #0
 80058c0:	6303      	str	r3, [r0, #48]	; 0x30
}
 80058c2:	4770      	bx	lr

080058c4 <UART_SetConfig>:
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80058c4:	6802      	ldr	r2, [r0, #0]
 80058c6:	68c1      	ldr	r1, [r0, #12]
 80058c8:	6913      	ldr	r3, [r2, #16]
 80058ca:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80058ce:	430b      	orrs	r3, r1
{
 80058d0:	b570      	push	{r4, r5, r6, lr}
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80058d2:	6113      	str	r3, [r2, #16]
{
 80058d4:	4605      	mov	r5, r0
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 80058d6:	6883      	ldr	r3, [r0, #8]
 80058d8:	6900      	ldr	r0, [r0, #16]
  MODIFY_REG(huart->Instance->CR1,
 80058da:	68d1      	ldr	r1, [r2, #12]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 80058dc:	4303      	orrs	r3, r0
 80058de:	6968      	ldr	r0, [r5, #20]
 80058e0:	4303      	orrs	r3, r0
 80058e2:	69e8      	ldr	r0, [r5, #28]
  MODIFY_REG(huart->Instance->CR1,
 80058e4:	f421 4116 	bic.w	r1, r1, #38400	; 0x9600
 80058e8:	f021 010c 	bic.w	r1, r1, #12
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 80058ec:	4303      	orrs	r3, r0
  MODIFY_REG(huart->Instance->CR1,
 80058ee:	430b      	orrs	r3, r1
 80058f0:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 80058f2:	6953      	ldr	r3, [r2, #20]
 80058f4:	69a9      	ldr	r1, [r5, #24]
 80058f6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80058fa:	430b      	orrs	r3, r1
 80058fc:	6153      	str	r3, [r2, #20]
    if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) || (huart->Instance == UART10))
    {
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 80058fe:	4b1f      	ldr	r3, [pc, #124]	; (800597c <UART_SetConfig+0xb8>)
 8005900:	429a      	cmp	r2, r3
 8005902:	d003      	beq.n	800590c <UART_SetConfig+0x48>
 8005904:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8005908:	429a      	cmp	r2, r3
 800590a:	d123      	bne.n	8005954 <UART_SetConfig+0x90>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 800590c:	f7ff f93c 	bl	8004b88 <HAL_RCC_GetPCLK2Freq>
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
    }
  /*-------------------------- USART BRR Configuration ---------------------*/
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8005910:	69eb      	ldr	r3, [r5, #28]
  {
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8005912:	2119      	movs	r1, #25
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8005914:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8005918:	e9d5 4600 	ldrd	r4, r6, [r5]
 800591c:	fba0 0101 	umull	r0, r1, r0, r1
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8005920:	d11b      	bne.n	800595a <UART_SetConfig+0x96>
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8005922:	19b2      	adds	r2, r6, r6
 8005924:	f04f 0300 	mov.w	r3, #0
 8005928:	415b      	adcs	r3, r3
 800592a:	f7fa fcb1 	bl	8000290 <__aeabi_uldivmod>
 800592e:	2164      	movs	r1, #100	; 0x64
 8005930:	fbb0 f5f1 	udiv	r5, r0, r1
 8005934:	fb01 0315 	mls	r3, r1, r5, r0
 8005938:	00db      	lsls	r3, r3, #3
 800593a:	3332      	adds	r3, #50	; 0x32
 800593c:	fbb3 f3f1 	udiv	r3, r3, r1
 8005940:	f003 0207 	and.w	r2, r3, #7
 8005944:	005b      	lsls	r3, r3, #1
 8005946:	eb02 1205 	add.w	r2, r2, r5, lsl #4
 800594a:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 800594e:	4413      	add	r3, r2
  }
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8005950:	60a3      	str	r3, [r4, #8]
  }
}
 8005952:	bd70      	pop	{r4, r5, r6, pc}
      pclk = HAL_RCC_GetPCLK1Freq();
 8005954:	f7ff f908 	bl	8004b68 <HAL_RCC_GetPCLK1Freq>
 8005958:	e7da      	b.n	8005910 <UART_SetConfig+0x4c>
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 800595a:	00b2      	lsls	r2, r6, #2
 800595c:	0fb3      	lsrs	r3, r6, #30
 800595e:	f7fa fc97 	bl	8000290 <__aeabi_uldivmod>
 8005962:	2264      	movs	r2, #100	; 0x64
 8005964:	fbb0 f1f2 	udiv	r1, r0, r2
 8005968:	fb02 0311 	mls	r3, r2, r1, r0
 800596c:	011b      	lsls	r3, r3, #4
 800596e:	3332      	adds	r3, #50	; 0x32
 8005970:	fbb3 f3f2 	udiv	r3, r3, r2
 8005974:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 8005978:	e7ea      	b.n	8005950 <UART_SetConfig+0x8c>
 800597a:	bf00      	nop
 800597c:	40011000 	.word	0x40011000

08005980 <HAL_UART_Init>:
{
 8005980:	b510      	push	{r4, lr}
  if (huart == NULL)
 8005982:	4604      	mov	r4, r0
 8005984:	b340      	cbz	r0, 80059d8 <HAL_UART_Init+0x58>
  if (huart->gState == HAL_UART_STATE_RESET)
 8005986:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800598a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800598e:	b91b      	cbnz	r3, 8005998 <HAL_UART_Init+0x18>
    huart->Lock = HAL_UNLOCKED;
 8005990:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_UART_MspInit(huart);
 8005994:	f7fc f98e 	bl	8001cb4 <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 8005998:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 800599a:	2324      	movs	r3, #36	; 0x24
 800599c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_UART_DISABLE(huart);
 80059a0:	68d3      	ldr	r3, [r2, #12]
 80059a2:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80059a6:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 80059a8:	4620      	mov	r0, r4
 80059aa:	f7ff ff8b 	bl	80058c4 <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 80059ae:	6823      	ldr	r3, [r4, #0]
 80059b0:	691a      	ldr	r2, [r3, #16]
 80059b2:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80059b6:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 80059b8:	695a      	ldr	r2, [r3, #20]
 80059ba:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80059be:	615a      	str	r2, [r3, #20]
  __HAL_UART_ENABLE(huart);
 80059c0:	68da      	ldr	r2, [r3, #12]
 80059c2:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80059c6:	60da      	str	r2, [r3, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 80059c8:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 80059ca:	2320      	movs	r3, #32
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 80059cc:	6420      	str	r0, [r4, #64]	; 0x40
  huart->gState = HAL_UART_STATE_READY;
 80059ce:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  huart->RxState = HAL_UART_STATE_READY;
 80059d2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
}
 80059d6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80059d8:	2001      	movs	r0, #1
 80059da:	e7fc      	b.n	80059d6 <HAL_UART_Init+0x56>

080059dc <HAL_UART_Transmit_IT>:
  if (huart->gState == HAL_UART_STATE_READY)
 80059dc:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80059e0:	2b20      	cmp	r3, #32
 80059e2:	d118      	bne.n	8005a16 <HAL_UART_Transmit_IT+0x3a>
    if ((pData == NULL) || (Size == 0U))
 80059e4:	b1a9      	cbz	r1, 8005a12 <HAL_UART_Transmit_IT+0x36>
 80059e6:	b1a2      	cbz	r2, 8005a12 <HAL_UART_Transmit_IT+0x36>
    __HAL_LOCK(huart);
 80059e8:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 80059ec:	2b01      	cmp	r3, #1
 80059ee:	d012      	beq.n	8005a16 <HAL_UART_Transmit_IT+0x3a>
    huart->TxXferCount = Size;
 80059f0:	84c2      	strh	r2, [r0, #38]	; 0x26
    huart->pTxBuffPtr = pData;
 80059f2:	6201      	str	r1, [r0, #32]
    huart->TxXferSize = Size;
 80059f4:	8482      	strh	r2, [r0, #36]	; 0x24
    __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 80059f6:	6801      	ldr	r1, [r0, #0]
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 80059f8:	2300      	movs	r3, #0
    huart->gState = HAL_UART_STATE_BUSY_TX;
 80059fa:	2221      	movs	r2, #33	; 0x21
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 80059fc:	6403      	str	r3, [r0, #64]	; 0x40
    __HAL_UNLOCK(huart);
 80059fe:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8005a02:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 8005a06:	68ca      	ldr	r2, [r1, #12]
 8005a08:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8005a0c:	60ca      	str	r2, [r1, #12]
    return HAL_OK;
 8005a0e:	4618      	mov	r0, r3
 8005a10:	4770      	bx	lr
      return HAL_ERROR;
 8005a12:	2001      	movs	r0, #1
 8005a14:	4770      	bx	lr
    return HAL_BUSY;
 8005a16:	2002      	movs	r0, #2
}
 8005a18:	4770      	bx	lr

08005a1a <HAL_UART_ErrorCallback>:
 8005a1a:	4770      	bx	lr

08005a1c <UART_DMAAbortOnError>:
{
 8005a1c:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8005a1e:	6b80      	ldr	r0, [r0, #56]	; 0x38
  huart->RxXferCount = 0x00U;
 8005a20:	2300      	movs	r3, #0
 8005a22:	85c3      	strh	r3, [r0, #46]	; 0x2e
  huart->TxXferCount = 0x00U;
 8005a24:	84c3      	strh	r3, [r0, #38]	; 0x26
  HAL_UART_ErrorCallback(huart);
 8005a26:	f7ff fff8 	bl	8005a1a <HAL_UART_ErrorCallback>
}
 8005a2a:	bd08      	pop	{r3, pc}

08005a2c <HAL_UART_AbortReceiveCpltCallback>:
 8005a2c:	4770      	bx	lr
	...

08005a30 <HAL_UART_AbortReceive_IT>:
{
 8005a30:	b510      	push	{r4, lr}
 8005a32:	4604      	mov	r4, r0
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8005a34:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8005a36:	f102 030c 	add.w	r3, r2, #12
 8005a3a:	e853 3f00 	ldrex	r3, [r3]
 8005a3e:	f423 7390 	bic.w	r3, r3, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8005a42:	320c      	adds	r2, #12
 8005a44:	e842 3100 	strex	r1, r3, [r2]
   return(result);
 8005a48:	6823      	ldr	r3, [r4, #0]
 8005a4a:	2900      	cmp	r1, #0
 8005a4c:	d1f2      	bne.n	8005a34 <HAL_UART_AbortReceive_IT+0x4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8005a4e:	f103 0214 	add.w	r2, r3, #20
 8005a52:	e852 2f00 	ldrex	r2, [r2]
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8005a56:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8005a5a:	f103 0014 	add.w	r0, r3, #20
 8005a5e:	e840 2100 	strex	r1, r2, [r0]
 8005a62:	2900      	cmp	r1, #0
 8005a64:	d1f3      	bne.n	8005a4e <HAL_UART_AbortReceive_IT+0x1e>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8005a66:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8005a68:	2a01      	cmp	r2, #1
 8005a6a:	d10b      	bne.n	8005a84 <HAL_UART_AbortReceive_IT+0x54>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8005a6c:	f103 020c 	add.w	r2, r3, #12
 8005a70:	e852 2f00 	ldrex	r2, [r2]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 8005a74:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8005a78:	f103 000c 	add.w	r0, r3, #12
 8005a7c:	e840 2100 	strex	r1, r2, [r0]
 8005a80:	2900      	cmp	r1, #0
 8005a82:	d1f3      	bne.n	8005a6c <HAL_UART_AbortReceive_IT+0x3c>
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8005a84:	695a      	ldr	r2, [r3, #20]
 8005a86:	f012 0240 	ands.w	r2, r2, #64	; 0x40
 8005a8a:	d020      	beq.n	8005ace <HAL_UART_AbortReceive_IT+0x9e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8005a8c:	f103 0214 	add.w	r2, r3, #20
 8005a90:	e852 2f00 	ldrex	r2, [r2]
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8005a94:	f022 0240 	bic.w	r2, r2, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8005a98:	f103 0014 	add.w	r0, r3, #20
 8005a9c:	e840 2100 	strex	r1, r2, [r0]
 8005aa0:	2900      	cmp	r1, #0
 8005aa2:	d1f3      	bne.n	8005a8c <HAL_UART_AbortReceive_IT+0x5c>
    if (huart->hdmarx != NULL)
 8005aa4:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8005aa6:	b148      	cbz	r0, 8005abc <HAL_UART_AbortReceive_IT+0x8c>
      huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
 8005aa8:	4b0c      	ldr	r3, [pc, #48]	; (8005adc <HAL_UART_AbortReceive_IT+0xac>)
 8005aaa:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8005aac:	f7fd fde4 	bl	8003678 <HAL_DMA_Abort_IT>
 8005ab0:	b110      	cbz	r0, 8005ab8 <HAL_UART_AbortReceive_IT+0x88>
        huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8005ab2:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8005ab4:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8005ab6:	4798      	blx	r3
}
 8005ab8:	2000      	movs	r0, #0
 8005aba:	bd10      	pop	{r4, pc}
      huart->RxState = HAL_UART_STATE_READY;
 8005abc:	2320      	movs	r3, #32
      huart->RxXferCount = 0x00U;
 8005abe:	85e0      	strh	r0, [r4, #46]	; 0x2e
      huart->RxState = HAL_UART_STATE_READY;
 8005ac0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8005ac4:	6320      	str	r0, [r4, #48]	; 0x30
    HAL_UART_AbortReceiveCpltCallback(huart);
 8005ac6:	4620      	mov	r0, r4
 8005ac8:	f7ff ffb0 	bl	8005a2c <HAL_UART_AbortReceiveCpltCallback>
 8005acc:	e7f4      	b.n	8005ab8 <HAL_UART_AbortReceive_IT+0x88>
    huart->RxState = HAL_UART_STATE_READY;
 8005ace:	2320      	movs	r3, #32
    huart->RxXferCount = 0x00U;
 8005ad0:	85e2      	strh	r2, [r4, #46]	; 0x2e
    huart->RxState = HAL_UART_STATE_READY;
 8005ad2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8005ad6:	6322      	str	r2, [r4, #48]	; 0x30
 8005ad8:	e7f5      	b.n	8005ac6 <HAL_UART_AbortReceive_IT+0x96>
 8005ada:	bf00      	nop
 8005adc:	08005ae1 	.word	0x08005ae1

08005ae0 <UART_DMARxOnlyAbortCallback>:
{
 8005ae0:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8005ae2:	6b80      	ldr	r0, [r0, #56]	; 0x38
  huart->RxXferCount = 0x00U;
 8005ae4:	2300      	movs	r3, #0
  huart->RxState = HAL_UART_STATE_READY;
 8005ae6:	2220      	movs	r2, #32
  huart->RxXferCount = 0x00U;
 8005ae8:	85c3      	strh	r3, [r0, #46]	; 0x2e
  huart->RxState = HAL_UART_STATE_READY;
 8005aea:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8005aee:	6303      	str	r3, [r0, #48]	; 0x30
  HAL_UART_AbortReceiveCpltCallback(huart);
 8005af0:	f7ff ff9c 	bl	8005a2c <HAL_UART_AbortReceiveCpltCallback>
}
 8005af4:	bd08      	pop	{r3, pc}

08005af6 <HAL_UARTEx_RxEventCallback>:
}
 8005af6:	4770      	bx	lr

08005af8 <UART_Receive_IT.part.0.isra.0>:
static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
 8005af8:	b507      	push	{r0, r1, r2, lr}
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8005afa:	6881      	ldr	r1, [r0, #8]
      pdata16bits = (uint16_t *) huart->pRxBuffPtr;
 8005afc:	6a83      	ldr	r3, [r0, #40]	; 0x28
      *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 8005afe:	6802      	ldr	r2, [r0, #0]
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8005b00:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
 8005b04:	d13e      	bne.n	8005b84 <UART_Receive_IT.part.0.isra.0+0x8c>
 8005b06:	6901      	ldr	r1, [r0, #16]
 8005b08:	2900      	cmp	r1, #0
 8005b0a:	d13e      	bne.n	8005b8a <UART_Receive_IT.part.0.isra.0+0x92>
      *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 8005b0c:	6852      	ldr	r2, [r2, #4]
 8005b0e:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8005b12:	f823 2b02 	strh.w	r2, [r3], #2
      huart->pRxBuffPtr += 1U;
 8005b16:	6283      	str	r3, [r0, #40]	; 0x28
    if (--huart->RxXferCount == 0U)
 8005b18:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8005b1a:	3b01      	subs	r3, #1
 8005b1c:	b29b      	uxth	r3, r3
 8005b1e:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8005b20:	2b00      	cmp	r3, #0
 8005b22:	d12c      	bne.n	8005b7e <UART_Receive_IT.part.0.isra.0+0x86>
      __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 8005b24:	6802      	ldr	r2, [r0, #0]
 8005b26:	68d1      	ldr	r1, [r2, #12]
 8005b28:	f021 0120 	bic.w	r1, r1, #32
 8005b2c:	60d1      	str	r1, [r2, #12]
      __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 8005b2e:	68d1      	ldr	r1, [r2, #12]
 8005b30:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 8005b34:	60d1      	str	r1, [r2, #12]
      __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 8005b36:	6951      	ldr	r1, [r2, #20]
 8005b38:	f021 0101 	bic.w	r1, r1, #1
 8005b3c:	6151      	str	r1, [r2, #20]
      huart->RxState = HAL_UART_STATE_READY;
 8005b3e:	2220      	movs	r2, #32
 8005b40:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8005b44:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8005b46:	2a01      	cmp	r2, #1
 8005b48:	6802      	ldr	r2, [r0, #0]
 8005b4a:	d128      	bne.n	8005b9e <UART_Receive_IT.part.0.isra.0+0xa6>
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8005b4c:	6303      	str	r3, [r0, #48]	; 0x30
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8005b4e:	f102 030c 	add.w	r3, r2, #12
 8005b52:	e853 3f00 	ldrex	r3, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8005b56:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8005b5a:	f102 0c0c 	add.w	ip, r2, #12
 8005b5e:	e84c 3100 	strex	r1, r3, [ip]
 8005b62:	2900      	cmp	r1, #0
 8005b64:	d1f3      	bne.n	8005b4e <UART_Receive_IT.part.0.isra.0+0x56>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
 8005b66:	6813      	ldr	r3, [r2, #0]
 8005b68:	06db      	lsls	r3, r3, #27
 8005b6a:	d505      	bpl.n	8005b78 <UART_Receive_IT.part.0.isra.0+0x80>
          __HAL_UART_CLEAR_IDLEFLAG(huart);
 8005b6c:	9101      	str	r1, [sp, #4]
 8005b6e:	6813      	ldr	r3, [r2, #0]
 8005b70:	9301      	str	r3, [sp, #4]
 8005b72:	6853      	ldr	r3, [r2, #4]
 8005b74:	9301      	str	r3, [sp, #4]
 8005b76:	9b01      	ldr	r3, [sp, #4]
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 8005b78:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8005b7a:	f7ff ffbc 	bl	8005af6 <HAL_UARTEx_RxEventCallback>
}
 8005b7e:	b003      	add	sp, #12
 8005b80:	f85d fb04 	ldr.w	pc, [sp], #4
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORDLENGTH_8B) && (huart->Init.Parity == UART_PARITY_NONE)))
 8005b84:	b939      	cbnz	r1, 8005b96 <UART_Receive_IT.part.0.isra.0+0x9e>
 8005b86:	6901      	ldr	r1, [r0, #16]
 8005b88:	b929      	cbnz	r1, 8005b96 <UART_Receive_IT.part.0.isra.0+0x9e>
        *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 8005b8a:	6852      	ldr	r2, [r2, #4]
 8005b8c:	b2d2      	uxtb	r2, r2
 8005b8e:	701a      	strb	r2, [r3, #0]
      huart->pRxBuffPtr += 1U;
 8005b90:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8005b92:	3301      	adds	r3, #1
 8005b94:	e7bf      	b.n	8005b16 <UART_Receive_IT.part.0.isra.0+0x1e>
        *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 8005b96:	6852      	ldr	r2, [r2, #4]
 8005b98:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8005b9c:	e7f7      	b.n	8005b8e <UART_Receive_IT.part.0.isra.0+0x96>
        HAL_UART_RxCpltCallback(huart);
 8005b9e:	f001 f889 	bl	8006cb4 <HAL_UART_RxCpltCallback>
 8005ba2:	e7ec      	b.n	8005b7e <UART_Receive_IT.part.0.isra.0+0x86>

08005ba4 <HAL_UART_IRQHandler>:
  uint32_t isrflags   = READ_REG(huart->Instance->SR);
 8005ba4:	6803      	ldr	r3, [r0, #0]
{
 8005ba6:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t isrflags   = READ_REG(huart->Instance->SR);
 8005ba8:	681a      	ldr	r2, [r3, #0]
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 8005baa:	68d9      	ldr	r1, [r3, #12]
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 8005bac:	695d      	ldr	r5, [r3, #20]
  if (errorflags == RESET)
 8005bae:	f012 0f0f 	tst.w	r2, #15
{
 8005bb2:	4604      	mov	r4, r0
  if (errorflags == RESET)
 8005bb4:	d10c      	bne.n	8005bd0 <HAL_UART_IRQHandler+0x2c>
    if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 8005bb6:	0695      	lsls	r5, r2, #26
 8005bb8:	d570      	bpl.n	8005c9c <HAL_UART_IRQHandler+0xf8>
 8005bba:	068d      	lsls	r5, r1, #26
 8005bbc:	d56e      	bpl.n	8005c9c <HAL_UART_IRQHandler+0xf8>
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8005bbe:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
 8005bc2:	2b22      	cmp	r3, #34	; 0x22
 8005bc4:	d164      	bne.n	8005c90 <HAL_UART_IRQHandler+0xec>
}
 8005bc6:	b003      	add	sp, #12
 8005bc8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8005bcc:	f7ff bf94 	b.w	8005af8 <UART_Receive_IT.part.0.isra.0>
  if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET)
 8005bd0:	f005 0001 	and.w	r0, r5, #1
                                || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 8005bd4:	f401 7590 	and.w	r5, r1, #288	; 0x120
 8005bd8:	4305      	orrs	r5, r0
 8005bda:	d05f      	beq.n	8005c9c <HAL_UART_IRQHandler+0xf8>
    if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 8005bdc:	07d5      	lsls	r5, r2, #31
 8005bde:	d505      	bpl.n	8005bec <HAL_UART_IRQHandler+0x48>
 8005be0:	05cb      	lsls	r3, r1, #23
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 8005be2:	bf42      	ittt	mi
 8005be4:	6c23      	ldrmi	r3, [r4, #64]	; 0x40
 8005be6:	f043 0301 	orrmi.w	r3, r3, #1
 8005bea:	6423      	strmi	r3, [r4, #64]	; 0x40
    if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 8005bec:	0755      	lsls	r5, r2, #29
 8005bee:	d504      	bpl.n	8005bfa <HAL_UART_IRQHandler+0x56>
 8005bf0:	b118      	cbz	r0, 8005bfa <HAL_UART_IRQHandler+0x56>
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 8005bf2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005bf4:	f043 0302 	orr.w	r3, r3, #2
 8005bf8:	6423      	str	r3, [r4, #64]	; 0x40
    if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 8005bfa:	0793      	lsls	r3, r2, #30
 8005bfc:	d504      	bpl.n	8005c08 <HAL_UART_IRQHandler+0x64>
 8005bfe:	b118      	cbz	r0, 8005c08 <HAL_UART_IRQHandler+0x64>
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 8005c00:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005c02:	f043 0304 	orr.w	r3, r3, #4
 8005c06:	6423      	str	r3, [r4, #64]	; 0x40
    if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET)
 8005c08:	0715      	lsls	r5, r2, #28
 8005c0a:	d507      	bpl.n	8005c1c <HAL_UART_IRQHandler+0x78>
 8005c0c:	f001 0320 	and.w	r3, r1, #32
 8005c10:	4303      	orrs	r3, r0
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 8005c12:	bf1e      	ittt	ne
 8005c14:	6c23      	ldrne	r3, [r4, #64]	; 0x40
 8005c16:	f043 0308 	orrne.w	r3, r3, #8
 8005c1a:	6423      	strne	r3, [r4, #64]	; 0x40
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 8005c1c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005c1e:	2b00      	cmp	r3, #0
 8005c20:	d036      	beq.n	8005c90 <HAL_UART_IRQHandler+0xec>
      if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 8005c22:	0690      	lsls	r0, r2, #26
 8005c24:	d508      	bpl.n	8005c38 <HAL_UART_IRQHandler+0x94>
 8005c26:	068a      	lsls	r2, r1, #26
 8005c28:	d506      	bpl.n	8005c38 <HAL_UART_IRQHandler+0x94>
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8005c2a:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 8005c2e:	2b22      	cmp	r3, #34	; 0x22
 8005c30:	d102      	bne.n	8005c38 <HAL_UART_IRQHandler+0x94>
 8005c32:	4620      	mov	r0, r4
 8005c34:	f7ff ff60 	bl	8005af8 <UART_Receive_IT.part.0.isra.0>
      dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 8005c38:	6823      	ldr	r3, [r4, #0]
 8005c3a:	695b      	ldr	r3, [r3, #20]
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 8005c3c:	6c25      	ldr	r5, [r4, #64]	; 0x40
      dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 8005c3e:	f003 0340 	and.w	r3, r3, #64	; 0x40
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 8005c42:	f005 0508 	and.w	r5, r5, #8
 8005c46:	431d      	orrs	r5, r3
        UART_EndRxTransfer(huart);
 8005c48:	4620      	mov	r0, r4
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 8005c4a:	d023      	beq.n	8005c94 <HAL_UART_IRQHandler+0xf0>
        UART_EndRxTransfer(huart);
 8005c4c:	f7ff fe0c 	bl	8005868 <UART_EndRxTransfer>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8005c50:	6822      	ldr	r2, [r4, #0]
 8005c52:	6953      	ldr	r3, [r2, #20]
 8005c54:	065b      	lsls	r3, r3, #25
 8005c56:	d518      	bpl.n	8005c8a <HAL_UART_IRQHandler+0xe6>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8005c58:	f102 0314 	add.w	r3, r2, #20
 8005c5c:	e853 3f00 	ldrex	r3, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8005c60:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8005c64:	f102 0014 	add.w	r0, r2, #20
 8005c68:	e840 3100 	strex	r1, r3, [r0]
 8005c6c:	2900      	cmp	r1, #0
 8005c6e:	d1f3      	bne.n	8005c58 <HAL_UART_IRQHandler+0xb4>
          if (huart->hdmarx != NULL)
 8005c70:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8005c72:	b150      	cbz	r0, 8005c8a <HAL_UART_IRQHandler+0xe6>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 8005c74:	4b72      	ldr	r3, [pc, #456]	; (8005e40 <HAL_UART_IRQHandler+0x29c>)
 8005c76:	6503      	str	r3, [r0, #80]	; 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8005c78:	f7fd fcfe 	bl	8003678 <HAL_DMA_Abort_IT>
 8005c7c:	b140      	cbz	r0, 8005c90 <HAL_UART_IRQHandler+0xec>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8005c7e:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8005c80:	6d03      	ldr	r3, [r0, #80]	; 0x50
}
 8005c82:	b003      	add	sp, #12
 8005c84:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8005c88:	4718      	bx	r3
            HAL_UART_ErrorCallback(huart);
 8005c8a:	4620      	mov	r0, r4
 8005c8c:	f7ff fec5 	bl	8005a1a <HAL_UART_ErrorCallback>
}
 8005c90:	b003      	add	sp, #12
 8005c92:	bd30      	pop	{r4, r5, pc}
        HAL_UART_ErrorCallback(huart);
 8005c94:	f7ff fec1 	bl	8005a1a <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8005c98:	6425      	str	r5, [r4, #64]	; 0x40
 8005c9a:	e7f9      	b.n	8005c90 <HAL_UART_IRQHandler+0xec>
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8005c9c:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8005c9e:	2801      	cmp	r0, #1
 8005ca0:	f040 8091 	bne.w	8005dc6 <HAL_UART_IRQHandler+0x222>
      && ((isrflags & USART_SR_IDLE) != 0U)
 8005ca4:	06d5      	lsls	r5, r2, #27
 8005ca6:	f140 808e 	bpl.w	8005dc6 <HAL_UART_IRQHandler+0x222>
      && ((cr1its & USART_SR_IDLE) != 0U))
 8005caa:	06c8      	lsls	r0, r1, #27
 8005cac:	f140 808b 	bpl.w	8005dc6 <HAL_UART_IRQHandler+0x222>
    __HAL_UART_CLEAR_IDLEFLAG(huart);
 8005cb0:	2200      	movs	r2, #0
 8005cb2:	9201      	str	r2, [sp, #4]
 8005cb4:	681a      	ldr	r2, [r3, #0]
 8005cb6:	9201      	str	r2, [sp, #4]
 8005cb8:	685a      	ldr	r2, [r3, #4]
 8005cba:	9201      	str	r2, [sp, #4]
 8005cbc:	9a01      	ldr	r2, [sp, #4]
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8005cbe:	695a      	ldr	r2, [r3, #20]
 8005cc0:	0655      	lsls	r5, r2, #25
 8005cc2:	d54c      	bpl.n	8005d5e <HAL_UART_IRQHandler+0x1ba>
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 8005cc4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8005cc6:	680a      	ldr	r2, [r1, #0]
 8005cc8:	6852      	ldr	r2, [r2, #4]
 8005cca:	b292      	uxth	r2, r2
      if ((nb_remaining_rx_data > 0U)
 8005ccc:	2a00      	cmp	r2, #0
 8005cce:	d0df      	beq.n	8005c90 <HAL_UART_IRQHandler+0xec>
          && (nb_remaining_rx_data < huart->RxXferSize))
 8005cd0:	8da0      	ldrh	r0, [r4, #44]	; 0x2c
 8005cd2:	4290      	cmp	r0, r2
 8005cd4:	d9dc      	bls.n	8005c90 <HAL_UART_IRQHandler+0xec>
        huart->RxXferCount = nb_remaining_rx_data;
 8005cd6:	85e2      	strh	r2, [r4, #46]	; 0x2e
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 8005cd8:	69ca      	ldr	r2, [r1, #28]
 8005cda:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 8005cde:	d036      	beq.n	8005d4e <HAL_UART_IRQHandler+0x1aa>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8005ce0:	f103 020c 	add.w	r2, r3, #12
 8005ce4:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8005ce8:	f422 7280 	bic.w	r2, r2, #256	; 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8005cec:	f103 000c 	add.w	r0, r3, #12
 8005cf0:	e840 2100 	strex	r1, r2, [r0]
 8005cf4:	2900      	cmp	r1, #0
 8005cf6:	d1f3      	bne.n	8005ce0 <HAL_UART_IRQHandler+0x13c>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8005cf8:	f103 0214 	add.w	r2, r3, #20
 8005cfc:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8005d00:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8005d04:	f103 0014 	add.w	r0, r3, #20
 8005d08:	e840 2100 	strex	r1, r2, [r0]
 8005d0c:	2900      	cmp	r1, #0
 8005d0e:	d1f3      	bne.n	8005cf8 <HAL_UART_IRQHandler+0x154>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8005d10:	f103 0214 	add.w	r2, r3, #20
 8005d14:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8005d18:	f022 0240 	bic.w	r2, r2, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8005d1c:	f103 0014 	add.w	r0, r3, #20
 8005d20:	e840 2100 	strex	r1, r2, [r0]
 8005d24:	2900      	cmp	r1, #0
 8005d26:	d1f3      	bne.n	8005d10 <HAL_UART_IRQHandler+0x16c>
          huart->RxState = HAL_UART_STATE_READY;
 8005d28:	2220      	movs	r2, #32
 8005d2a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8005d2e:	6321      	str	r1, [r4, #48]	; 0x30
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8005d30:	f103 020c 	add.w	r2, r3, #12
 8005d34:	e852 2f00 	ldrex	r2, [r2]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8005d38:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8005d3c:	f103 000c 	add.w	r0, r3, #12
 8005d40:	e840 2100 	strex	r1, r2, [r0]
 8005d44:	2900      	cmp	r1, #0
 8005d46:	d1f3      	bne.n	8005d30 <HAL_UART_IRQHandler+0x18c>
          (void)HAL_DMA_Abort(huart->hdmarx);
 8005d48:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8005d4a:	f7fd fc51 	bl	80035f0 <HAL_DMA_Abort>
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 8005d4e:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8005d50:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8005d52:	1ac9      	subs	r1, r1, r3
 8005d54:	b289      	uxth	r1, r1
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 8005d56:	4620      	mov	r0, r4
 8005d58:	f7ff fecd 	bl	8005af6 <HAL_UARTEx_RxEventCallback>
 8005d5c:	e798      	b.n	8005c90 <HAL_UART_IRQHandler+0xec>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8005d5e:	8de1      	ldrh	r1, [r4, #46]	; 0x2e
 8005d60:	b28a      	uxth	r2, r1
      if ((huart->RxXferCount > 0U)
 8005d62:	8de1      	ldrh	r1, [r4, #46]	; 0x2e
 8005d64:	b289      	uxth	r1, r1
 8005d66:	2900      	cmp	r1, #0
 8005d68:	d092      	beq.n	8005c90 <HAL_UART_IRQHandler+0xec>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8005d6a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8005d6c:	1a89      	subs	r1, r1, r2
 8005d6e:	b289      	uxth	r1, r1
          && (nb_rx_data > 0U))
 8005d70:	2900      	cmp	r1, #0
 8005d72:	d08d      	beq.n	8005c90 <HAL_UART_IRQHandler+0xec>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8005d74:	f103 020c 	add.w	r2, r3, #12
 8005d78:	e852 2f00 	ldrex	r2, [r2]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8005d7c:	f422 7290 	bic.w	r2, r2, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8005d80:	f103 050c 	add.w	r5, r3, #12
 8005d84:	e845 2000 	strex	r0, r2, [r5]
 8005d88:	2800      	cmp	r0, #0
 8005d8a:	d1f3      	bne.n	8005d74 <HAL_UART_IRQHandler+0x1d0>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8005d8c:	f103 0214 	add.w	r2, r3, #20
 8005d90:	e852 2f00 	ldrex	r2, [r2]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8005d94:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8005d98:	f103 0514 	add.w	r5, r3, #20
 8005d9c:	e845 2000 	strex	r0, r2, [r5]
 8005da0:	2800      	cmp	r0, #0
 8005da2:	d1f3      	bne.n	8005d8c <HAL_UART_IRQHandler+0x1e8>
        huart->RxState = HAL_UART_STATE_READY;
 8005da4:	2220      	movs	r2, #32
 8005da6:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8005daa:	6320      	str	r0, [r4, #48]	; 0x30
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8005dac:	f103 020c 	add.w	r2, r3, #12
 8005db0:	e852 2f00 	ldrex	r2, [r2]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8005db4:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8005db8:	f103 050c 	add.w	r5, r3, #12
 8005dbc:	e845 2000 	strex	r0, r2, [r5]
 8005dc0:	2800      	cmp	r0, #0
 8005dc2:	d1f3      	bne.n	8005dac <HAL_UART_IRQHandler+0x208>
 8005dc4:	e7c7      	b.n	8005d56 <HAL_UART_IRQHandler+0x1b2>
  if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 8005dc6:	0610      	lsls	r0, r2, #24
 8005dc8:	d528      	bpl.n	8005e1c <HAL_UART_IRQHandler+0x278>
 8005dca:	060d      	lsls	r5, r1, #24
 8005dcc:	d526      	bpl.n	8005e1c <HAL_UART_IRQHandler+0x278>
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 8005dce:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 8005dd2:	2a21      	cmp	r2, #33	; 0x21
 8005dd4:	f47f af5c 	bne.w	8005c90 <HAL_UART_IRQHandler+0xec>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8005dd8:	68a1      	ldr	r1, [r4, #8]
      tmp = (const uint16_t *) huart->pTxBuffPtr;
 8005dda:	6a22      	ldr	r2, [r4, #32]
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8005ddc:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
 8005de0:	d117      	bne.n	8005e12 <HAL_UART_IRQHandler+0x26e>
 8005de2:	6921      	ldr	r1, [r4, #16]
 8005de4:	b9a9      	cbnz	r1, 8005e12 <HAL_UART_IRQHandler+0x26e>
      huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 8005de6:	f832 1b02 	ldrh.w	r1, [r2], #2
 8005dea:	f3c1 0108 	ubfx	r1, r1, #0, #9
 8005dee:	6059      	str	r1, [r3, #4]
      huart->pTxBuffPtr += 2U;
 8005df0:	6222      	str	r2, [r4, #32]
    if (--huart->TxXferCount == 0U)
 8005df2:	8ce2      	ldrh	r2, [r4, #38]	; 0x26
 8005df4:	3a01      	subs	r2, #1
 8005df6:	b292      	uxth	r2, r2
 8005df8:	84e2      	strh	r2, [r4, #38]	; 0x26
 8005dfa:	2a00      	cmp	r2, #0
 8005dfc:	f47f af48 	bne.w	8005c90 <HAL_UART_IRQHandler+0xec>
      __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 8005e00:	68da      	ldr	r2, [r3, #12]
 8005e02:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8005e06:	60da      	str	r2, [r3, #12]
      __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 8005e08:	68da      	ldr	r2, [r3, #12]
 8005e0a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8005e0e:	60da      	str	r2, [r3, #12]
 8005e10:	e73e      	b.n	8005c90 <HAL_UART_IRQHandler+0xec>
      huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 8005e12:	1c51      	adds	r1, r2, #1
 8005e14:	6221      	str	r1, [r4, #32]
 8005e16:	7812      	ldrb	r2, [r2, #0]
 8005e18:	605a      	str	r2, [r3, #4]
 8005e1a:	e7ea      	b.n	8005df2 <HAL_UART_IRQHandler+0x24e>
  if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 8005e1c:	0650      	lsls	r0, r2, #25
 8005e1e:	f57f af37 	bpl.w	8005c90 <HAL_UART_IRQHandler+0xec>
 8005e22:	064a      	lsls	r2, r1, #25
 8005e24:	f57f af34 	bpl.w	8005c90 <HAL_UART_IRQHandler+0xec>
  __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 8005e28:	68da      	ldr	r2, [r3, #12]
 8005e2a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005e2e:	60da      	str	r2, [r3, #12]
  huart->gState = HAL_UART_STATE_READY;
 8005e30:	2320      	movs	r3, #32
 8005e32:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  HAL_UART_TxCpltCallback(huart);
 8005e36:	4620      	mov	r0, r4
 8005e38:	f000 ff10 	bl	8006c5c <HAL_UART_TxCpltCallback>
  return HAL_OK;
 8005e3c:	e728      	b.n	8005c90 <HAL_UART_IRQHandler+0xec>
 8005e3e:	bf00      	nop
 8005e40:	08005a1d 	.word	0x08005a1d

08005e44 <HAL_HalfDuplex_EnableTransmitter>:
  __HAL_LOCK(huart);
 8005e44:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8005e48:	2b01      	cmp	r3, #1
 8005e4a:	d011      	beq.n	8005e70 <HAL_HalfDuplex_EnableTransmitter+0x2c>
  tmpreg = huart->Instance->CR1;
 8005e4c:	6802      	ldr	r2, [r0, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8005e4e:	2324      	movs	r3, #36	; 0x24
 8005e50:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  tmpreg = huart->Instance->CR1;
 8005e54:	68d3      	ldr	r3, [r2, #12]
  tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 8005e56:	f023 030c 	bic.w	r3, r3, #12
  tmpreg |= (uint32_t)USART_CR1_TE;
 8005e5a:	f043 0308 	orr.w	r3, r3, #8
  WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 8005e5e:	60d3      	str	r3, [r2, #12]
  huart->gState = HAL_UART_STATE_READY;
 8005e60:	2320      	movs	r3, #32
 8005e62:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_UNLOCK(huart);
 8005e66:	2300      	movs	r3, #0
 8005e68:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 8005e6c:	4618      	mov	r0, r3
 8005e6e:	4770      	bx	lr
  __HAL_LOCK(huart);
 8005e70:	2002      	movs	r0, #2
}
 8005e72:	4770      	bx	lr

08005e74 <HAL_HalfDuplex_EnableReceiver>:
  __HAL_LOCK(huart);
 8005e74:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8005e78:	2b01      	cmp	r3, #1
 8005e7a:	d011      	beq.n	8005ea0 <HAL_HalfDuplex_EnableReceiver+0x2c>
  tmpreg = huart->Instance->CR1;
 8005e7c:	6802      	ldr	r2, [r0, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8005e7e:	2324      	movs	r3, #36	; 0x24
 8005e80:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  tmpreg = huart->Instance->CR1;
 8005e84:	68d3      	ldr	r3, [r2, #12]
  tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 8005e86:	f023 030c 	bic.w	r3, r3, #12
  tmpreg |= (uint32_t)USART_CR1_RE;
 8005e8a:	f043 0304 	orr.w	r3, r3, #4
  WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 8005e8e:	60d3      	str	r3, [r2, #12]
  huart->gState = HAL_UART_STATE_READY;
 8005e90:	2320      	movs	r3, #32
 8005e92:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_UNLOCK(huart);
 8005e96:	2300      	movs	r3, #0
 8005e98:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 8005e9c:	4618      	mov	r0, r3
 8005e9e:	4770      	bx	lr
  __HAL_LOCK(huart);
 8005ea0:	2002      	movs	r0, #2
}
 8005ea2:	4770      	bx	lr

08005ea4 <HAL_UART_GetState>:
  temp1 = huart->gState;
 8005ea4:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  temp2 = huart->RxState;
 8005ea8:	f890 003e 	ldrb.w	r0, [r0, #62]	; 0x3e
}
 8005eac:	4310      	orrs	r0, r2
 8005eae:	4770      	bx	lr

08005eb0 <UART_Start_Receive_IT>:
  huart->RxXferCount = Size;
 8005eb0:	85c2      	strh	r2, [r0, #46]	; 0x2e
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8005eb2:	2300      	movs	r3, #0
  huart->RxXferSize = Size;
 8005eb4:	8582      	strh	r2, [r0, #44]	; 0x2c
  huart->RxState = HAL_UART_STATE_BUSY_RX;
 8005eb6:	2222      	movs	r2, #34	; 0x22
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8005eb8:	6403      	str	r3, [r0, #64]	; 0x40
  huart->RxState = HAL_UART_STATE_BUSY_RX;
 8005eba:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
  if (huart->Init.Parity != UART_PARITY_NONE)
 8005ebe:	6902      	ldr	r2, [r0, #16]
  __HAL_UNLOCK(huart);
 8005ec0:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  huart->pRxBuffPtr = pData;
 8005ec4:	6281      	str	r1, [r0, #40]	; 0x28
    __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 8005ec6:	6803      	ldr	r3, [r0, #0]
  if (huart->Init.Parity != UART_PARITY_NONE)
 8005ec8:	b11a      	cbz	r2, 8005ed2 <UART_Start_Receive_IT+0x22>
    __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 8005eca:	68da      	ldr	r2, [r3, #12]
 8005ecc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005ed0:	60da      	str	r2, [r3, #12]
  __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 8005ed2:	695a      	ldr	r2, [r3, #20]
 8005ed4:	f042 0201 	orr.w	r2, r2, #1
 8005ed8:	615a      	str	r2, [r3, #20]
  __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 8005eda:	68da      	ldr	r2, [r3, #12]
 8005edc:	f042 0220 	orr.w	r2, r2, #32
 8005ee0:	60da      	str	r2, [r3, #12]
}
 8005ee2:	2000      	movs	r0, #0
 8005ee4:	4770      	bx	lr

08005ee6 <HAL_UART_Receive_IT>:
{
 8005ee6:	b470      	push	{r4, r5, r6}
  if (huart->RxState == HAL_UART_STATE_READY)
 8005ee8:	f890 603e 	ldrb.w	r6, [r0, #62]	; 0x3e
 8005eec:	2e20      	cmp	r6, #32
 8005eee:	d110      	bne.n	8005f12 <HAL_UART_Receive_IT+0x2c>
    if ((pData == NULL) || (Size == 0U))
 8005ef0:	b161      	cbz	r1, 8005f0c <HAL_UART_Receive_IT+0x26>
 8005ef2:	b15a      	cbz	r2, 8005f0c <HAL_UART_Receive_IT+0x26>
    __HAL_LOCK(huart);
 8005ef4:	f890 403c 	ldrb.w	r4, [r0, #60]	; 0x3c
 8005ef8:	2c01      	cmp	r4, #1
 8005efa:	d00a      	beq.n	8005f12 <HAL_UART_Receive_IT+0x2c>
 8005efc:	2401      	movs	r4, #1
 8005efe:	f880 403c 	strb.w	r4, [r0, #60]	; 0x3c
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8005f02:	2400      	movs	r4, #0
 8005f04:	6304      	str	r4, [r0, #48]	; 0x30
}
 8005f06:	bc70      	pop	{r4, r5, r6}
    return (UART_Start_Receive_IT(huart, pData, Size));
 8005f08:	f7ff bfd2 	b.w	8005eb0 <UART_Start_Receive_IT>
      return HAL_ERROR;
 8005f0c:	2001      	movs	r0, #1
}
 8005f0e:	bc70      	pop	{r4, r5, r6}
 8005f10:	4770      	bx	lr
    return HAL_BUSY;
 8005f12:	2002      	movs	r0, #2
 8005f14:	e7fb      	b.n	8005f0e <HAL_UART_Receive_IT+0x28>

08005f16 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8005f16:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8005f1a:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8005f1e:	680a      	ldr	r2, [r1, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8005f20:	f8d1 9024 	ldr.w	r9, [r1, #36]	; 0x24
 8005f24:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 8005f28:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 8005f2c:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
 8005f30:	4323      	orrs	r3, r4
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8005f32:	b9a2      	cbnz	r2, 8005f5e <FMC_SDRAM_Init+0x48>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8005f34:	ea43 0209 	orr.w	r2, r3, r9
 8005f38:	432a      	orrs	r2, r5
 8005f3a:	ea42 0308 	orr.w	r3, r2, r8
 8005f3e:	6801      	ldr	r1, [r0, #0]
 8005f40:	ea43 030e 	orr.w	r3, r3, lr
 8005f44:	ea43 030c 	orr.w	r3, r3, ip
 8005f48:	433b      	orrs	r3, r7
 8005f4a:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
 8005f4e:	4333      	orrs	r3, r6
 8005f50:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
 8005f54:	430b      	orrs	r3, r1
 8005f56:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 8005f58:	2000      	movs	r0, #0
 8005f5a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8005f5e:	6802      	ldr	r2, [r0, #0]
 8005f60:	ea43 0309 	orr.w	r3, r3, r9
 8005f64:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 8005f68:	4313      	orrs	r3, r2
 8005f6a:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 8005f6c:	ea45 0308 	orr.w	r3, r5, r8
 8005f70:	6842      	ldr	r2, [r0, #4]
 8005f72:	ea43 030e 	orr.w	r3, r3, lr
 8005f76:	ea43 030c 	orr.w	r3, r3, ip
 8005f7a:	433b      	orrs	r3, r7
 8005f7c:	f422 42ff 	bic.w	r2, r2, #32640	; 0x7f80
 8005f80:	4333      	orrs	r3, r6
 8005f82:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 8005f86:	4313      	orrs	r3, r2
 8005f88:	6043      	str	r3, [r0, #4]
 8005f8a:	e7e5      	b.n	8005f58 <FMC_SDRAM_Init+0x42>

08005f8c <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8005f8c:	68cb      	ldr	r3, [r1, #12]
 8005f8e:	f103 3cff 	add.w	ip, r3, #4294967295
 8005f92:	694b      	ldr	r3, [r1, #20]
{
 8005f94:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8005f96:	680f      	ldr	r7, [r1, #0]
 8005f98:	684c      	ldr	r4, [r1, #4]
 8005f9a:	688e      	ldr	r6, [r1, #8]
 8005f9c:	690d      	ldr	r5, [r1, #16]
 8005f9e:	6989      	ldr	r1, [r1, #24]
 8005fa0:	3b01      	subs	r3, #1
 8005fa2:	051b      	lsls	r3, r3, #20
 8005fa4:	3c01      	subs	r4, #1
 8005fa6:	3e01      	subs	r6, #1
 8005fa8:	3d01      	subs	r5, #1
 8005faa:	3901      	subs	r1, #1
 8005fac:	3f01      	subs	r7, #1
 8005fae:	0124      	lsls	r4, r4, #4
 8005fb0:	0236      	lsls	r6, r6, #8
 8005fb2:	042d      	lsls	r5, r5, #16
 8005fb4:	0609      	lsls	r1, r1, #24
 8005fb6:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8005fba:	b95a      	cbnz	r2, 8005fd4 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8005fbc:	433b      	orrs	r3, r7
 8005fbe:	4323      	orrs	r3, r4
 8005fc0:	6882      	ldr	r2, [r0, #8]
 8005fc2:	4333      	orrs	r3, r6
 8005fc4:	432b      	orrs	r3, r5
 8005fc6:	430b      	orrs	r3, r1
 8005fc8:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 8005fcc:	4313      	orrs	r3, r2
 8005fce:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 8005fd0:	2000      	movs	r0, #0
 8005fd2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8005fd4:	6882      	ldr	r2, [r0, #8]
 8005fd6:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8005fda:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 8005fde:	431a      	orrs	r2, r3
 8005fe0:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8005fe2:	ea44 0306 	orr.w	r3, r4, r6
 8005fe6:	68c2      	ldr	r2, [r0, #12]
 8005fe8:	433b      	orrs	r3, r7
 8005fea:	432b      	orrs	r3, r5
 8005fec:	430b      	orrs	r3, r1
 8005fee:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 8005ff2:	4313      	orrs	r3, r2
 8005ff4:	60c3      	str	r3, [r0, #12]
 8005ff6:	e7eb      	b.n	8005fd0 <FMC_SDRAM_Timing_Init+0x44>

08005ff8 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8005ff8:	b570      	push	{r4, r5, r6, lr}
 8005ffa:	4604      	mov	r4, r0
 8005ffc:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8005ffe:	6902      	ldr	r2, [r0, #16]
 8006000:	e9d1 3000 	ldrd	r3, r0, [r1]
 8006004:	4303      	orrs	r3, r0
 8006006:	68c8      	ldr	r0, [r1, #12]
 8006008:	0d92      	lsrs	r2, r2, #22
 800600a:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 800600e:	0592      	lsls	r2, r2, #22
 8006010:	4313      	orrs	r3, r2
 8006012:	688a      	ldr	r2, [r1, #8]
 8006014:	3a01      	subs	r2, #1
 8006016:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800601a:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800601c:	f7fd fa6c 	bl	80034f8 <HAL_GetTick>
 8006020:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8006022:	69a3      	ldr	r3, [r4, #24]
 8006024:	f013 0320 	ands.w	r3, r3, #32
 8006028:	d101      	bne.n	800602e <FMC_SDRAM_SendCommand+0x36>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800602a:	4618      	mov	r0, r3
 800602c:	e003      	b.n	8006036 <FMC_SDRAM_SendCommand+0x3e>
    if (Timeout != HAL_MAX_DELAY)
 800602e:	1c6b      	adds	r3, r5, #1
 8006030:	d0f7      	beq.n	8006022 <FMC_SDRAM_SendCommand+0x2a>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8006032:	b90d      	cbnz	r5, 8006038 <FMC_SDRAM_SendCommand+0x40>
        return HAL_TIMEOUT;
 8006034:	2003      	movs	r0, #3
}
 8006036:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8006038:	f7fd fa5e 	bl	80034f8 <HAL_GetTick>
 800603c:	1b80      	subs	r0, r0, r6
 800603e:	42a8      	cmp	r0, r5
 8006040:	d9ef      	bls.n	8006022 <FMC_SDRAM_SendCommand+0x2a>
 8006042:	e7f7      	b.n	8006034 <FMC_SDRAM_SendCommand+0x3c>

08006044 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 8006044:	6943      	ldr	r3, [r0, #20]
 8006046:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800604a:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800604e:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8006052:	6141      	str	r1, [r0, #20]

  return HAL_OK;
}
 8006054:	2000      	movs	r0, #0
 8006056:	4770      	bx	lr

08006058 <vTimerCallbackT35>:
}
#endif


void vTimerCallbackT35(TimerHandle_t *pxTimer)
{
 8006058:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
	//Notify that a stream has just arrived
	int i;
	//TimerHandle_t aux;
	for(i = 0; i < numberHandlers; i++)
 800605c:	2400      	movs	r4, #0
 800605e:	4d13      	ldr	r5, [pc, #76]	; (80060ac <vTimerCallbackT35+0x54>)
 8006060:	4f13      	ldr	r7, [pc, #76]	; (80060b0 <vTimerCallbackT35+0x58>)
{
 8006062:	4606      	mov	r6, r0
		if( (TimerHandle_t *)mHandlers[i]->xTimerT35 ==  pxTimer ){
			if(mHandlers[i]->uModbusType == MB_MASTER)
			{
				xTimerStop(mHandlers[i]->xTimerTimeout,0);
			}
			xTaskNotify(mHandlers[i]->myTaskModbusAHandle, 0, eSetValueWithOverwrite);
 8006064:	46a0      	mov	r8, r4
	for(i = 0; i < numberHandlers; i++)
 8006066:	783b      	ldrb	r3, [r7, #0]
 8006068:	42a3      	cmp	r3, r4
 800606a:	dc02      	bgt.n	8006072 <vTimerCallbackT35+0x1a>
		}

	}
}
 800606c:	b002      	add	sp, #8
 800606e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		if( (TimerHandle_t *)mHandlers[i]->xTimerT35 ==  pxTimer ){
 8006072:	6828      	ldr	r0, [r5, #0]
 8006074:	f8d0 30b0 	ldr.w	r3, [r0, #176]	; 0xb0
 8006078:	42b3      	cmp	r3, r6
 800607a:	d113      	bne.n	80060a4 <vTimerCallbackT35+0x4c>
			if(mHandlers[i]->uModbusType == MB_MASTER)
 800607c:	7803      	ldrb	r3, [r0, #0]
 800607e:	2b04      	cmp	r3, #4
 8006080:	d108      	bne.n	8006094 <vTimerCallbackT35+0x3c>
				xTimerStop(mHandlers[i]->xTimerTimeout,0);
 8006082:	f8cd 8000 	str.w	r8, [sp]
 8006086:	2300      	movs	r3, #0
 8006088:	f8d0 00b4 	ldr.w	r0, [r0, #180]	; 0xb4
 800608c:	461a      	mov	r2, r3
 800608e:	2103      	movs	r1, #3
 8006090:	f002 ff60 	bl	8008f54 <xTimerGenericCommand>
			xTaskNotify(mHandlers[i]->myTaskModbusAHandle, 0, eSetValueWithOverwrite);
 8006094:	6828      	ldr	r0, [r5, #0]
 8006096:	2300      	movs	r3, #0
 8006098:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 800609c:	2203      	movs	r2, #3
 800609e:	4619      	mov	r1, r3
 80060a0:	f002 fd94 	bl	8008bcc <xTaskGenericNotify>
	for(i = 0; i < numberHandlers; i++)
 80060a4:	3401      	adds	r4, #1
 80060a6:	3504      	adds	r5, #4
 80060a8:	e7dd      	b.n	8006066 <vTimerCallbackT35+0xe>
 80060aa:	bf00      	nop
 80060ac:	20001904 	.word	0x20001904
 80060b0:	2000190c 	.word	0x2000190c

080060b4 <vTimerCallbackTimeout>:

void vTimerCallbackTimeout(TimerHandle_t *pxTimer)
{
 80060b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80060b6:	4e0c      	ldr	r6, [pc, #48]	; (80060e8 <vTimerCallbackTimeout+0x34>)
	//Notify that a stream has just arrived
	int i;
	//TimerHandle_t aux;
	for(i = 0; i < numberHandlers; i++)
 80060b8:	4f0c      	ldr	r7, [pc, #48]	; (80060ec <vTimerCallbackTimeout+0x38>)
{
 80060ba:	4605      	mov	r5, r0
	for(i = 0; i < numberHandlers; i++)
 80060bc:	2400      	movs	r4, #0
 80060be:	783b      	ldrb	r3, [r7, #0]
 80060c0:	42a3      	cmp	r3, r4
 80060c2:	dc00      	bgt.n	80060c6 <vTimerCallbackTimeout+0x12>
				xTaskNotify(mHandlers[i]->myTaskModbusAHandle, ERR_TIME_OUT, eSetValueWithOverwrite);
		}

	}

}
 80060c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		if( (TimerHandle_t *)mHandlers[i]->xTimerTimeout ==  pxTimer ){
 80060c6:	f856 0b04 	ldr.w	r0, [r6], #4
 80060ca:	f8d0 30b4 	ldr.w	r3, [r0, #180]	; 0xb4
 80060ce:	42ab      	cmp	r3, r5
 80060d0:	d107      	bne.n	80060e2 <vTimerCallbackTimeout+0x2e>
				xTaskNotify(mHandlers[i]->myTaskModbusAHandle, ERR_TIME_OUT, eSetValueWithOverwrite);
 80060d2:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 80060d6:	2300      	movs	r3, #0
 80060d8:	2203      	movs	r2, #3
 80060da:	f06f 0107 	mvn.w	r1, #7
 80060de:	f002 fd75 	bl	8008bcc <xTaskGenericNotify>
	for(i = 0; i < numberHandlers; i++)
 80060e2:	3401      	adds	r4, #1
 80060e4:	e7eb      	b.n	80060be <vTimerCallbackTimeout+0xa>
 80060e6:	bf00      	nop
 80060e8:	20001904 	.word	0x20001904
 80060ec:	2000190c 	.word	0x2000190c

080060f0 <RingAdd>:
	xRingBuffer->uxBuffer[xRingBuffer->u8end] = u8Val;
 80060f0:	f890 3081 	ldrb.w	r3, [r0, #129]	; 0x81
 80060f4:	54c1      	strb	r1, [r0, r3]
	xRingBuffer->u8end = (xRingBuffer->u8end + 1) % MAX_BUFFER;
 80060f6:	3301      	adds	r3, #1
 80060f8:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80060fc:	f880 3081 	strb.w	r3, [r0, #129]	; 0x81
	if (xRingBuffer->u8available == MAX_BUFFER)
 8006100:	f890 3082 	ldrb.w	r3, [r0, #130]	; 0x82
 8006104:	2b80      	cmp	r3, #128	; 0x80
 8006106:	d10a      	bne.n	800611e <RingAdd+0x2e>
		xRingBuffer->overflow = true;
 8006108:	2301      	movs	r3, #1
 800610a:	f880 3083 	strb.w	r3, [r0, #131]	; 0x83
		xRingBuffer->u8start = (xRingBuffer->u8start + 1) % MAX_BUFFER;
 800610e:	f890 3080 	ldrb.w	r3, [r0, #128]	; 0x80
 8006112:	3301      	adds	r3, #1
 8006114:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8006118:	f880 3080 	strb.w	r3, [r0, #128]	; 0x80
 800611c:	4770      	bx	lr
		xRingBuffer->overflow = false;
 800611e:	2200      	movs	r2, #0
		xRingBuffer->u8available++;
 8006120:	3301      	adds	r3, #1
		xRingBuffer->overflow = false;
 8006122:	f880 2083 	strb.w	r2, [r0, #131]	; 0x83
		xRingBuffer->u8available++;
 8006126:	f880 3082 	strb.w	r3, [r0, #130]	; 0x82
}
 800612a:	4770      	bx	lr

0800612c <RingGetNBytes>:
{
 800612c:	b510      	push	{r4, lr}
	if(xRingBuffer->u8available == 0  || uNumber == 0 ) return 0;
 800612e:	f890 3082 	ldrb.w	r3, [r0, #130]	; 0x82
 8006132:	b30b      	cbz	r3, 8006178 <RingGetNBytes+0x4c>
 8006134:	1e53      	subs	r3, r2, #1
 8006136:	061b      	lsls	r3, r3, #24
 8006138:	d420      	bmi.n	800617c <RingGetNBytes+0x50>
 800613a:	3901      	subs	r1, #1
	for(uCounter = 0; uCounter < uNumber && uCounter< xRingBuffer->u8available ; uCounter++)
 800613c:	2300      	movs	r3, #0
		buffer[uCounter] = xRingBuffer->uxBuffer[xRingBuffer->u8start];
 800613e:	f890 4080 	ldrb.w	r4, [r0, #128]	; 0x80
 8006142:	5d04      	ldrb	r4, [r0, r4]
 8006144:	f801 4f01 	strb.w	r4, [r1, #1]!
		xRingBuffer->u8start = (xRingBuffer->u8start + 1) % MAX_BUFFER;
 8006148:	f890 4080 	ldrb.w	r4, [r0, #128]	; 0x80
	for(uCounter = 0; uCounter < uNumber && uCounter< xRingBuffer->u8available ; uCounter++)
 800614c:	3301      	adds	r3, #1
		xRingBuffer->u8start = (xRingBuffer->u8start + 1) % MAX_BUFFER;
 800614e:	3401      	adds	r4, #1
	for(uCounter = 0; uCounter < uNumber && uCounter< xRingBuffer->u8available ; uCounter++)
 8006150:	b2db      	uxtb	r3, r3
		xRingBuffer->u8start = (xRingBuffer->u8start + 1) % MAX_BUFFER;
 8006152:	f004 047f 	and.w	r4, r4, #127	; 0x7f
	for(uCounter = 0; uCounter < uNumber && uCounter< xRingBuffer->u8available ; uCounter++)
 8006156:	429a      	cmp	r2, r3
		xRingBuffer->u8start = (xRingBuffer->u8start + 1) % MAX_BUFFER;
 8006158:	f880 4080 	strb.w	r4, [r0, #128]	; 0x80
	for(uCounter = 0; uCounter < uNumber && uCounter< xRingBuffer->u8available ; uCounter++)
 800615c:	d003      	beq.n	8006166 <RingGetNBytes+0x3a>
 800615e:	f890 4082 	ldrb.w	r4, [r0, #130]	; 0x82
 8006162:	429c      	cmp	r4, r3
 8006164:	d8eb      	bhi.n	800613e <RingGetNBytes+0x12>
	xRingBuffer->overflow = false;
 8006166:	2200      	movs	r2, #0
 8006168:	f880 2083 	strb.w	r2, [r0, #131]	; 0x83
xRingBuffer->u8start = 0;
 800616c:	f880 2080 	strb.w	r2, [r0, #128]	; 0x80
xRingBuffer->u8end = 0;
 8006170:	f880 2081 	strb.w	r2, [r0, #129]	; 0x81
xRingBuffer->u8available = 0;
 8006174:	f880 2082 	strb.w	r2, [r0, #130]	; 0x82
}
 8006178:	4618      	mov	r0, r3
 800617a:	bd10      	pop	{r4, pc}
	if(xRingBuffer->u8available == 0  || uNumber == 0 ) return 0;
 800617c:	2300      	movs	r3, #0
 800617e:	e7fb      	b.n	8006178 <RingGetNBytes+0x4c>

08006180 <RingGetAllBytes>:
	return RingGetNBytes(xRingBuffer, buffer, xRingBuffer->u8available);
 8006180:	f890 2082 	ldrb.w	r2, [r0, #130]	; 0x82
 8006184:	f7ff bfd2 	b.w	800612c <RingGetNBytes>

08006188 <getRxBuffer>:
 *
 * @return buffer size if OK, ERR_BUFF_OVERFLOW if u8BufferSize >= MAX_BUFFER
 * @ingroup buffer
 */
int16_t getRxBuffer(modbusHandler_t *modH)
{
 8006188:	b538      	push	{r3, r4, r5, lr}

    int16_t i16result;

    if(modH->xTypeHW == USART_HW)
 800618a:	f890 3140 	ldrb.w	r3, [r0, #320]	; 0x140
 800618e:	2b01      	cmp	r3, #1
{
 8006190:	4604      	mov	r4, r0
    if(modH->xTypeHW == USART_HW)
 8006192:	d102      	bne.n	800619a <getRxBuffer+0x12>
    {
    	HAL_UART_AbortReceive_IT(modH->port); // disable interrupts to avoid race conditions on serial port
 8006194:	6840      	ldr	r0, [r0, #4]
 8006196:	f7ff fc4b 	bl	8005a30 <HAL_UART_AbortReceive_IT>
    }

	if (modH->xBufferRX.overflow)
 800619a:	f894 313f 	ldrb.w	r3, [r4, #319]	; 0x13f
 800619e:	b1ab      	cbz	r3, 80061cc <getRxBuffer+0x44>
xRingBuffer->u8start = 0;
 80061a0:	2300      	movs	r3, #0
 80061a2:	f884 313c 	strb.w	r3, [r4, #316]	; 0x13c
xRingBuffer->u8end = 0;
 80061a6:	f884 313d 	strb.w	r3, [r4, #317]	; 0x13d
xRingBuffer->u8available = 0;
 80061aa:	f884 313e 	strb.w	r3, [r4, #318]	; 0x13e
xRingBuffer->overflow = false;
 80061ae:	f884 313f 	strb.w	r3, [r4, #319]	; 0x13f
    {
       	RingClear(&modH->xBufferRX); // clean up the overflowed buffer
       	i16result =  ERR_BUFF_OVERFLOW;
 80061b2:	f06f 0502 	mvn.w	r5, #2
		modH->u8BufferSize = RingGetAllBytes(&modH->xBufferRX, modH->u8Buffer);
		modH->u16InCnt++;
		i16result = modH->u8BufferSize;
	}

	if(modH->xTypeHW == USART_HW)
 80061b6:	f894 2140 	ldrb.w	r2, [r4, #320]	; 0x140
 80061ba:	2a01      	cmp	r2, #1
 80061bc:	d104      	bne.n	80061c8 <getRxBuffer+0x40>
	{
		HAL_UART_Receive_IT(modH->port, &modH->dataRX, 1);
 80061be:	6860      	ldr	r0, [r4, #4]
 80061c0:	f104 01a6 	add.w	r1, r4, #166	; 0xa6
 80061c4:	f7ff fe8f 	bl	8005ee6 <HAL_UART_Receive_IT>
	}

    return i16result;
}
 80061c8:	4628      	mov	r0, r5
 80061ca:	bd38      	pop	{r3, r4, r5, pc}
		modH->u8BufferSize = RingGetAllBytes(&modH->xBufferRX, modH->u8Buffer);
 80061cc:	f104 0113 	add.w	r1, r4, #19
 80061d0:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 80061d4:	f7ff ffd4 	bl	8006180 <RingGetAllBytes>
		modH->u16InCnt++;
 80061d8:	f8b4 309c 	ldrh.w	r3, [r4, #156]	; 0x9c
		modH->u8BufferSize = RingGetAllBytes(&modH->xBufferRX, modH->u8Buffer);
 80061dc:	f884 0093 	strb.w	r0, [r4, #147]	; 0x93
		modH->u16InCnt++;
 80061e0:	3301      	adds	r3, #1
 80061e2:	f8a4 309c 	strh.w	r3, [r4, #156]	; 0x9c
		i16result = modH->u8BufferSize;
 80061e6:	b205      	sxth	r5, r0
 80061e8:	e7e5      	b.n	80061b6 <getRxBuffer+0x2e>
	...

080061ec <ModbusInit>:
{
 80061ec:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if (numberHandlers < MAX_M_HANDLERS)
 80061ee:	4e2e      	ldr	r6, [pc, #184]	; (80062a8 <ModbusInit+0xbc>)
 80061f0:	7833      	ldrb	r3, [r6, #0]
 80061f2:	2b01      	cmp	r3, #1
{
 80061f4:	4604      	mov	r4, r0
  if (numberHandlers < MAX_M_HANDLERS)
 80061f6:	d856      	bhi.n	80062a6 <ModbusInit+0xba>
	  if(modH->uModbusType == MB_SLAVE)
 80061f8:	7803      	ldrb	r3, [r0, #0]
xRingBuffer->u8start = 0;
 80061fa:	2500      	movs	r5, #0
	  if(modH->uModbusType == MB_SLAVE)
 80061fc:	2b03      	cmp	r3, #3
xRingBuffer->u8start = 0;
 80061fe:	f880 513c 	strb.w	r5, [r0, #316]	; 0x13c
xRingBuffer->u8end = 0;
 8006202:	f880 513d 	strb.w	r5, [r0, #317]	; 0x13d
xRingBuffer->u8available = 0;
 8006206:	f880 513e 	strb.w	r5, [r0, #318]	; 0x13e
xRingBuffer->overflow = false;
 800620a:	f880 513f 	strb.w	r5, [r0, #319]	; 0x13f
	  if(modH->uModbusType == MB_SLAVE)
 800620e:	d10a      	bne.n	8006226 <ModbusInit+0x3a>
		  modH->myTaskModbusAHandle = osThreadNew(StartTaskModbusSlave, modH, &myTaskModbusA_attributes);
 8006210:	4601      	mov	r1, r0
 8006212:	4a26      	ldr	r2, [pc, #152]	; (80062ac <ModbusInit+0xc0>)
 8006214:	4826      	ldr	r0, [pc, #152]	; (80062b0 <ModbusInit+0xc4>)
 8006216:	f000 fdcb 	bl	8006db0 <osThreadNew>
 800621a:	f8c4 00ac 	str.w	r0, [r4, #172]	; 0xac
	  if  (modH->myTaskModbusAHandle == NULL)
 800621e:	f8d4 30ac 	ldr.w	r3, [r4, #172]	; 0xac
 8006222:	bb13      	cbnz	r3, 800626a <ModbusInit+0x7e>
		  while(1); //Error creating Modbus task, check heap and stack size
 8006224:	e7fe      	b.n	8006224 <ModbusInit+0x38>
	  else if (modH->uModbusType == MB_MASTER)
 8006226:	2b04      	cmp	r3, #4
 8006228:	d11b      	bne.n	8006262 <ModbusInit+0x76>
		  modH->myTaskModbusAHandle = osThreadNew(StartTaskModbusMaster, modH, &myTaskModbusB_attributes);
 800622a:	4601      	mov	r1, r0
 800622c:	4a21      	ldr	r2, [pc, #132]	; (80062b4 <ModbusInit+0xc8>)
 800622e:	4822      	ldr	r0, [pc, #136]	; (80062b8 <ModbusInit+0xcc>)
 8006230:	f000 fdbe 	bl	8006db0 <osThreadNew>
		  modH->xTimerTimeout=xTimerCreate("xTimerTimeout",  // Just a text name, not used by the kernel.
 8006234:	4b21      	ldr	r3, [pc, #132]	; (80062bc <ModbusInit+0xd0>)
		  modH->myTaskModbusAHandle = osThreadNew(StartTaskModbusMaster, modH, &myTaskModbusB_attributes);
 8006236:	f8c4 00ac 	str.w	r0, [r4, #172]	; 0xac
		  modH->xTimerTimeout=xTimerCreate("xTimerTimeout",  // Just a text name, not used by the kernel.
 800623a:	9300      	str	r3, [sp, #0]
 800623c:	f8b4 10a2 	ldrh.w	r1, [r4, #162]	; 0xa2
 8006240:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
 8006244:	481e      	ldr	r0, [pc, #120]	; (80062c0 <ModbusInit+0xd4>)
 8006246:	462a      	mov	r2, r5
 8006248:	f002 fe6a 	bl	8008f20 <xTimerCreate>
 800624c:	f8c4 00b4 	str.w	r0, [r4, #180]	; 0xb4
		  if(modH->xTimerTimeout == NULL)
 8006250:	b900      	cbnz	r0, 8006254 <ModbusInit+0x68>
			  while(1); //error creating timer, check heap and stack size
 8006252:	e7fe      	b.n	8006252 <ModbusInit+0x66>
		  modH->QueueTelegramHandle = osMessageQueueNew (MAX_TELEGRAMS, sizeof(modbus_t), &QueueTelegram_attributes);
 8006254:	4a1b      	ldr	r2, [pc, #108]	; (80062c4 <ModbusInit+0xd8>)
 8006256:	2110      	movs	r1, #16
 8006258:	2002      	movs	r0, #2
 800625a:	f000 fe9d 	bl	8006f98 <osMessageQueueNew>
		  if(modH->QueueTelegramHandle == NULL)
 800625e:	b908      	cbnz	r0, 8006264 <ModbusInit+0x78>
			  while(1); //error creating queue for telegrams, check heap and stack size
 8006260:	e7fe      	b.n	8006260 <ModbusInit+0x74>
		  while(1); //Error Modbus type not supported choose a valid Type
 8006262:	e7fe      	b.n	8006262 <ModbusInit+0x76>
		  modH->QueueTelegramHandle = osMessageQueueNew (MAX_TELEGRAMS, sizeof(modbus_t), &QueueTelegram_attributes);
 8006264:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 8006268:	e7d9      	b.n	800621e <ModbusInit+0x32>
	  modH->xTimerT35 = xTimerCreate("TimerT35",         // Just a text name, not used by the kernel.
 800626a:	4b17      	ldr	r3, [pc, #92]	; (80062c8 <ModbusInit+0xdc>)
 800626c:	9300      	str	r3, [sp, #0]
 800626e:	4817      	ldr	r0, [pc, #92]	; (80062cc <ModbusInit+0xe0>)
 8006270:	f8d4 30b0 	ldr.w	r3, [r4, #176]	; 0xb0
 8006274:	2200      	movs	r2, #0
 8006276:	2105      	movs	r1, #5
 8006278:	f002 fe52 	bl	8008f20 <xTimerCreate>
 800627c:	f8c4 00b0 	str.w	r0, [r4, #176]	; 0xb0
	  if (modH->xTimerT35 == NULL)
 8006280:	b900      	cbnz	r0, 8006284 <ModbusInit+0x98>
		  while(1); //Error creating the timer, check heap and stack size
 8006282:	e7fe      	b.n	8006282 <ModbusInit+0x96>
	  modH->ModBusSphrHandle = osSemaphoreNew(1, 1, &ModBusSphr_attributes);
 8006284:	2101      	movs	r1, #1
 8006286:	4a12      	ldr	r2, [pc, #72]	; (80062d0 <ModbusInit+0xe4>)
 8006288:	4608      	mov	r0, r1
 800628a:	f000 fde8 	bl	8006e5e <osSemaphoreNew>
 800628e:	f8c4 00b8 	str.w	r0, [r4, #184]	; 0xb8
	  if(modH->ModBusSphrHandle == NULL)
 8006292:	b900      	cbnz	r0, 8006296 <ModbusInit+0xaa>
		  while(1); //Error creating the semaphore, check heap and stack size
 8006294:	e7fe      	b.n	8006294 <ModbusInit+0xa8>
	  mHandlers[numberHandlers] = modH;
 8006296:	7833      	ldrb	r3, [r6, #0]
 8006298:	4a0e      	ldr	r2, [pc, #56]	; (80062d4 <ModbusInit+0xe8>)
 800629a:	f842 4023 	str.w	r4, [r2, r3, lsl #2]
	  numberHandlers++;
 800629e:	3301      	adds	r3, #1
 80062a0:	7033      	strb	r3, [r6, #0]
}
 80062a2:	b002      	add	sp, #8
 80062a4:	bd70      	pop	{r4, r5, r6, pc}
	  while(1); //error no more Modbus handlers supported
 80062a6:	e7fe      	b.n	80062a6 <ModbusInit+0xba>
 80062a8:	2000190c 	.word	0x2000190c
 80062ac:	0801dc58 	.word	0x0801dc58
 80062b0:	08006481 	.word	0x08006481
 80062b4:	0801dc7c 	.word	0x0801dc7c
 80062b8:	08006951 	.word	0x08006951
 80062bc:	080060b5 	.word	0x080060b5
 80062c0:	0801dbd0 	.word	0x0801dbd0
 80062c4:	0801dc38 	.word	0x0801dc38
 80062c8:	08006059 	.word	0x08006059
 80062cc:	0801dbde 	.word	0x0801dbde
 80062d0:	0801dc28 	.word	0x0801dc28
 80062d4:	20001904 	.word	0x20001904

080062d8 <ModbusStart>:
{
 80062d8:	b510      	push	{r4, lr}
	if(modH->xTypeHW != USART_HW && modH->xTypeHW != TCP_HW && modH->xTypeHW != USB_CDC_HW  && modH->xTypeHW != USART_HW_DMA )
 80062da:	f890 3140 	ldrb.w	r3, [r0, #320]	; 0x140
 80062de:	2b01      	cmp	r3, #1
{
 80062e0:	4604      	mov	r4, r0
	if(modH->xTypeHW != USART_HW && modH->xTypeHW != TCP_HW && modH->xTypeHW != USB_CDC_HW  && modH->xTypeHW != USART_HW_DMA )
 80062e2:	d006      	beq.n	80062f2 <ModbusStart+0x1a>
 80062e4:	1e9a      	subs	r2, r3, #2
 80062e6:	2a01      	cmp	r2, #1
 80062e8:	d926      	bls.n	8006338 <ModbusStart+0x60>
 80062ea:	2b04      	cmp	r3, #4
 80062ec:	d000      	beq.n	80062f0 <ModbusStart+0x18>
		while(1); //ERROR select the type of hardware
 80062ee:	e7fe      	b.n	80062ee <ModbusStart+0x16>
		while(1); //ERROR To use USART_HW_DMA you need to enable it in the ModbusConfig.h file
 80062f0:	e7fe      	b.n	80062f0 <ModbusStart+0x18>
	      if (modH->EN_Port != NULL )
 80062f2:	68c0      	ldr	r0, [r0, #12]
 80062f4:	b118      	cbz	r0, 80062fe <ModbusStart+0x26>
          	HAL_GPIO_WritePin(modH->EN_Port, modH->EN_Pin, GPIO_PIN_RESET);
 80062f6:	8a21      	ldrh	r1, [r4, #16]
 80062f8:	2200      	movs	r2, #0
 80062fa:	f7fd fbb7 	bl	8003a6c <HAL_GPIO_WritePin>
          if (modH->uModbusType == MB_SLAVE &&  modH->u16regs == NULL )
 80062fe:	7823      	ldrb	r3, [r4, #0]
 8006300:	2b03      	cmp	r3, #3
 8006302:	d103      	bne.n	800630c <ModbusStart+0x34>
 8006304:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
 8006308:	b903      	cbnz	r3, 800630c <ModbusStart+0x34>
          	while(1); //ERROR define the DATA pointer shared through Modbus
 800630a:	e7fe      	b.n	800630a <ModbusStart+0x32>
          while (HAL_UART_GetState(modH->port) != HAL_UART_STATE_READY)
 800630c:	6860      	ldr	r0, [r4, #4]
 800630e:	f7ff fdc9 	bl	8005ea4 <HAL_UART_GetState>
 8006312:	2820      	cmp	r0, #32
 8006314:	d1fa      	bne.n	800630c <ModbusStart+0x34>
          if(HAL_UART_Receive_IT(modH->port, &modH->dataRX, 1) != HAL_OK)
 8006316:	6860      	ldr	r0, [r4, #4]
 8006318:	2201      	movs	r2, #1
 800631a:	f104 01a6 	add.w	r1, r4, #166	; 0xa6
 800631e:	f7ff fde2 	bl	8005ee6 <HAL_UART_Receive_IT>
 8006322:	b100      	cbz	r0, 8006326 <ModbusStart+0x4e>
                while(1)
 8006324:	e7fe      	b.n	8006324 <ModbusStart+0x4c>
          if(modH->u8id !=0 && modH->uModbusType == MB_MASTER )
 8006326:	7a22      	ldrb	r2, [r4, #8]
 8006328:	7823      	ldrb	r3, [r4, #0]
 800632a:	b112      	cbz	r2, 8006332 <ModbusStart+0x5a>
 800632c:	2b04      	cmp	r3, #4
 800632e:	d103      	bne.n	8006338 <ModbusStart+0x60>
        	  while(1)
 8006330:	e7fe      	b.n	8006330 <ModbusStart+0x58>
          if(modH->u8id ==0 && modH->uModbusType == MB_SLAVE )
 8006332:	2b03      	cmp	r3, #3
 8006334:	d100      	bne.n	8006338 <ModbusStart+0x60>
             	  while(1)
 8006336:	e7fe      	b.n	8006336 <ModbusStart+0x5e>
    modH->u8lastRec = modH->u8BufferSize = 0;
 8006338:	2300      	movs	r3, #0
 800633a:	f884 3093 	strb.w	r3, [r4, #147]	; 0x93
 800633e:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
    modH->u16InCnt = modH->u16OutCnt = modH->u16errCnt = 0;
 8006342:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
 8006346:	f8a4 30a0 	strh.w	r3, [r4, #160]	; 0xa0
}
 800634a:	bd10      	pop	{r4, pc}

0800634c <ModbusQuery>:
{
 800634c:	b084      	sub	sp, #16
 800634e:	b538      	push	{r3, r4, r5, lr}
 8006350:	ad05      	add	r5, sp, #20
 8006352:	e885 000e 	stmia.w	r5, {r1, r2, r3}
	if (modH->uModbusType == MB_MASTER)
 8006356:	7803      	ldrb	r3, [r0, #0]
 8006358:	2b04      	cmp	r3, #4
{
 800635a:	4604      	mov	r4, r0
	if (modH->uModbusType == MB_MASTER)
 800635c:	d10d      	bne.n	800637a <ModbusQuery+0x2e>
	telegram.u32CurrentTask = (uint32_t *) osThreadGetId();
 800635e:	f000 fd70 	bl	8006e42 <osThreadGetId>
	xQueueSendToBack(modH->QueueTelegramHandle, &telegram, 0);
 8006362:	2300      	movs	r3, #0
	telegram.u32CurrentTask = (uint32_t *) osThreadGetId();
 8006364:	9008      	str	r0, [sp, #32]
	xQueueSendToBack(modH->QueueTelegramHandle, &telegram, 0);
 8006366:	461a      	mov	r2, r3
 8006368:	f8d4 00a8 	ldr.w	r0, [r4, #168]	; 0xa8
 800636c:	4629      	mov	r1, r5
 800636e:	f001 fb2f 	bl	80079d0 <xQueueGenericSend>
}
 8006372:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006376:	b004      	add	sp, #16
 8006378:	4770      	bx	lr
		while(1);// error a slave cannot send queries as a master
 800637a:	e7fe      	b.n	800637a <ModbusQuery+0x2e>

0800637c <ModbusQueryInject>:
{
 800637c:	b084      	sub	sp, #16
 800637e:	b538      	push	{r3, r4, r5, lr}
 8006380:	ad05      	add	r5, sp, #20
 8006382:	e885 000e 	stmia.w	r5, {r1, r2, r3}
 8006386:	4604      	mov	r4, r0
	xQueueReset(modH->QueueTelegramHandle);
 8006388:	2100      	movs	r1, #0
 800638a:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800638e:	f001 fa2b 	bl	80077e8 <xQueueGenericReset>
	telegram.u32CurrentTask = (uint32_t *) osThreadGetId();
 8006392:	f000 fd56 	bl	8006e42 <osThreadGetId>
	xQueueSendToFront(modH->QueueTelegramHandle, &telegram, 0);
 8006396:	2301      	movs	r3, #1
	telegram.u32CurrentTask = (uint32_t *) osThreadGetId();
 8006398:	9008      	str	r0, [sp, #32]
	xQueueSendToFront(modH->QueueTelegramHandle, &telegram, 0);
 800639a:	4629      	mov	r1, r5
 800639c:	f8d4 00a8 	ldr.w	r0, [r4, #168]	; 0xa8
 80063a0:	2200      	movs	r2, #0
 80063a2:	f001 fb15 	bl	80079d0 <xQueueGenericSend>
}
 80063a6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80063aa:	b004      	add	sp, #16
 80063ac:	4770      	bx	lr

080063ae <calcCRC>:
 * @return uint16_t calculated CRC value for the message
 * @ingroup Buffer
 * @ingroup u8length
 */
uint16_t calcCRC(uint8_t *Buffer, uint8_t u8length)
{
 80063ae:	b530      	push	{r4, r5, lr}
 80063b0:	4401      	add	r1, r0
    unsigned int temp, temp2, flag;
    temp = 0xFFFF;
 80063b2:	f64f 73ff 	movw	r3, #65535	; 0xffff
        for (unsigned char j = 1; j <= 8; j++)
        {
            flag = temp & 0x0001;
            temp >>=1;
            if (flag)
                temp ^= 0xA001;
 80063b6:	f24a 0401 	movw	r4, #40961	; 0xa001
    for (unsigned char i = 0; i < u8length; i++)
 80063ba:	4288      	cmp	r0, r1
 80063bc:	d104      	bne.n	80063c8 <calcCRC+0x1a>
        }
    }
    // Reverse byte order.
    temp2 = temp >> 8;
    temp = (temp << 8) | temp2;
 80063be:	0218      	lsls	r0, r3, #8
 80063c0:	ea40 2013 	orr.w	r0, r0, r3, lsr #8
    temp &= 0xFFFF;
    // the returned value is already swapped
    // crcLo byte is first & crcHi byte is last
    return temp;

}
 80063c4:	b280      	uxth	r0, r0
 80063c6:	bd30      	pop	{r4, r5, pc}
        temp = temp ^ Buffer[i];
 80063c8:	f810 2b01 	ldrb.w	r2, [r0], #1
 80063cc:	4053      	eors	r3, r2
 80063ce:	2208      	movs	r2, #8
            flag = temp & 0x0001;
 80063d0:	f003 0501 	and.w	r5, r3, #1
            temp >>=1;
 80063d4:	085b      	lsrs	r3, r3, #1
            if (flag)
 80063d6:	b105      	cbz	r5, 80063da <calcCRC+0x2c>
                temp ^= 0xA001;
 80063d8:	4063      	eors	r3, r4
        for (unsigned char j = 1; j <= 8; j++)
 80063da:	3a01      	subs	r2, #1
 80063dc:	f012 02ff 	ands.w	r2, r2, #255	; 0xff
 80063e0:	d1f6      	bne.n	80063d0 <calcCRC+0x22>
 80063e2:	e7ea      	b.n	80063ba <calcCRC+0xc>

080063e4 <sendTxBuffer>:
 *
 * @return nothing
 * @ingroup modH Modbus handler
 */
static void sendTxBuffer(modbusHandler_t *modH)
{
 80063e4:	b573      	push	{r0, r1, r4, r5, r6, lr}
#if  ENABLE_TCP == 1
if(modH->xTypeHW != TCP_HW)
	 {
#endif

	uint16_t u16crc = calcCRC(modH->u8Buffer, modH->u8BufferSize);
 80063e6:	f890 5093 	ldrb.w	r5, [r0, #147]	; 0x93
 80063ea:	f100 0613 	add.w	r6, r0, #19
{
 80063ee:	4604      	mov	r4, r0
	uint16_t u16crc = calcCRC(modH->u8Buffer, modH->u8BufferSize);
 80063f0:	4629      	mov	r1, r5
 80063f2:	4630      	mov	r0, r6
 80063f4:	f7ff ffdb 	bl	80063ae <calcCRC>
    modH->u8Buffer[ modH->u8BufferSize ] = u16crc >> 8;
 80063f8:	1963      	adds	r3, r4, r5
 80063fa:	0a02      	lsrs	r2, r0, #8
 80063fc:	74da      	strb	r2, [r3, #19]
    modH->u8BufferSize++;
 80063fe:	1c6b      	adds	r3, r5, #1
    modH->u8Buffer[ modH->u8BufferSize ] = u16crc & 0x00ff;
 8006400:	fa54 f383 	uxtab	r3, r4, r3
    modH->u8BufferSize++;
 8006404:	3502      	adds	r5, #2
    modH->u8Buffer[ modH->u8BufferSize ] = u16crc & 0x00ff;
 8006406:	74d8      	strb	r0, [r3, #19]
#if ENABLE_USB_CDC == 1 || ENABLE_TCP == 1
    if(modH->xTypeHW == USART_HW || modH->xTypeHW == USART_HW_DMA )
    {
#endif

    	if (modH->EN_Port != NULL)
 8006408:	68e3      	ldr	r3, [r4, #12]
    modH->u8BufferSize++;
 800640a:	f884 5093 	strb.w	r5, [r4, #147]	; 0x93
    	if (modH->EN_Port != NULL)
 800640e:	b13b      	cbz	r3, 8006420 <sendTxBuffer+0x3c>
        {
    		//enable transmitter, disable receiver to avoid echo on RS485 transceivers
    		HAL_HalfDuplex_EnableTransmitter(modH->port);
 8006410:	6860      	ldr	r0, [r4, #4]
 8006412:	f7ff fd17 	bl	8005e44 <HAL_HalfDuplex_EnableTransmitter>
    		HAL_GPIO_WritePin(modH->EN_Port, modH->EN_Pin, GPIO_PIN_SET);
 8006416:	8a21      	ldrh	r1, [r4, #16]
 8006418:	68e0      	ldr	r0, [r4, #12]
 800641a:	2201      	movs	r2, #1
 800641c:	f7fd fb26 	bl	8003a6c <HAL_GPIO_WritePin>
#if ENABLE_USART_DMA ==1
    	if(modH->xTypeHW == USART_HW)
    	{
#endif
    		// transfer buffer to serial line IT
    		HAL_UART_Transmit_IT(modH->port, modH->u8Buffer,  modH->u8BufferSize);
 8006420:	f894 2093 	ldrb.w	r2, [r4, #147]	; 0x93
 8006424:	6860      	ldr	r0, [r4, #4]
 8006426:	4631      	mov	r1, r6
 8006428:	f7ff fad8 	bl	80059dc <HAL_UART_Transmit_IT>
        	HAL_UART_Transmit_DMA(modH->port, modH->u8Buffer, modH->u8BufferSize);

        }
#endif

        ulTaskNotifyTake(pdTRUE, 250); //wait notification from TXE interrupt
 800642c:	21fa      	movs	r1, #250	; 0xfa
 800642e:	2001      	movs	r0, #1
 8006430:	f002 fb9a 	bl	8008b68 <ulTaskNotifyTake>
*/
#if defined(STM32H7)  || defined(STM32F3) || defined(STM32L4)  
          while((modH->port->Instance->ISR & USART_ISR_TC) ==0 )
#else
          // F429, F103, L152 ...
	  while((modH->port->Instance->SR & USART_SR_TC) ==0 )
 8006434:	6863      	ldr	r3, [r4, #4]
 8006436:	681a      	ldr	r2, [r3, #0]
 8006438:	6813      	ldr	r3, [r2, #0]
 800643a:	065b      	lsls	r3, r3, #25
 800643c:	d5fc      	bpl.n	8006438 <sendTxBuffer+0x54>
         {
 	        //block the task until the the last byte is send out of the shifting buffer in USART
         }


         if (modH->EN_Port != NULL)
 800643e:	68e0      	ldr	r0, [r4, #12]
 8006440:	b130      	cbz	r0, 8006450 <sendTxBuffer+0x6c>
         {

             //return RS485 transceiver to receive mode
        	 HAL_GPIO_WritePin(modH->EN_Port, modH->EN_Pin, GPIO_PIN_RESET);
 8006442:	8a21      	ldrh	r1, [r4, #16]
 8006444:	2200      	movs	r2, #0
 8006446:	f7fd fb11 	bl	8003a6c <HAL_GPIO_WritePin>
        	 //enable receiver, disable transmitter
        	 HAL_HalfDuplex_EnableReceiver(modH->port);
 800644a:	6860      	ldr	r0, [r4, #4]
 800644c:	f7ff fd12 	bl	8005e74 <HAL_HalfDuplex_EnableReceiver>

         }

         // set timeout for master query
         if(modH->uModbusType == MB_MASTER )
 8006450:	7823      	ldrb	r3, [r4, #0]
 8006452:	2b04      	cmp	r3, #4
 8006454:	d10a      	bne.n	800646c <sendTxBuffer+0x88>
         {
        	 xTimerReset(modH->xTimerTimeout,0);
 8006456:	f8d4 50b4 	ldr.w	r5, [r4, #180]	; 0xb4
 800645a:	f002 f84b 	bl	80084f4 <xTaskGetTickCount>
 800645e:	2300      	movs	r3, #0
 8006460:	4602      	mov	r2, r0
 8006462:	9300      	str	r3, [sp, #0]
 8006464:	2102      	movs	r1, #2
 8006466:	4628      	mov	r0, r5
 8006468:	f002 fd74 	bl	8008f54 <xTimerGenericCommand>

#endif

#endif

     modH->u8BufferSize = 0;
 800646c:	2300      	movs	r3, #0
 800646e:	f884 3093 	strb.w	r3, [r4, #147]	; 0x93
     // increase message counter
     modH->u16OutCnt++;
 8006472:	f8b4 309e 	ldrh.w	r3, [r4, #158]	; 0x9e
 8006476:	3301      	adds	r3, #1
 8006478:	f8a4 309e 	strh.w	r3, [r4, #158]	; 0x9e


}
 800647c:	b002      	add	sp, #8
 800647e:	bd70      	pop	{r4, r5, r6, pc}

08006480 <StartTaskModbusSlave>:
{
 8006480:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006484:	4604      	mov	r4, r0
 8006486:	b093      	sub	sp, #76	; 0x4c
	modH->i8lastError = 0;
 8006488:	f04f 0300 	mov.w	r3, #0
 800648c:	74a3      	strb	r3, [r4, #18]
   if(modH->xTypeHW == USART_HW || modH->xTypeHW == USART_HW_DMA)
 800648e:	f894 3140 	ldrb.w	r3, [r4, #320]	; 0x140
 8006492:	2b01      	cmp	r3, #1
 8006494:	d001      	beq.n	800649a <StartTaskModbusSlave+0x1a>
 8006496:	2b04      	cmp	r3, #4
 8006498:	d10f      	bne.n	80064ba <StartTaskModbusSlave+0x3a>
	  ulTaskNotifyTake(pdTRUE, portMAX_DELAY); /* Block until a Modbus Frame arrives */
 800649a:	f04f 31ff 	mov.w	r1, #4294967295
 800649e:	2001      	movs	r0, #1
 80064a0:	f002 fb62 	bl	8008b68 <ulTaskNotifyTake>
	  if (getRxBuffer(modH) == ERR_BUFF_OVERFLOW)
 80064a4:	4620      	mov	r0, r4
 80064a6:	f7ff fe6f 	bl	8006188 <getRxBuffer>
 80064aa:	3003      	adds	r0, #3
 80064ac:	d105      	bne.n	80064ba <StartTaskModbusSlave+0x3a>
      modH->u16errCnt++;
 80064ae:	f8b4 30a0 	ldrh.w	r3, [r4, #160]	; 0xa0
 80064b2:	3301      	adds	r3, #1
 80064b4:	f8a4 30a0 	strh.w	r3, [r4, #160]	; 0xa0
	  continue;
 80064b8:	e7e6      	b.n	8006488 <StartTaskModbusSlave+0x8>
   if (modH->u8BufferSize < 7)
 80064ba:	f894 9093 	ldrb.w	r9, [r4, #147]	; 0x93
 80064be:	f1b9 0f06 	cmp.w	r9, #6
 80064c2:	d9f4      	bls.n	80064ae <StartTaskModbusSlave+0x2e>
    if ( modH->u8Buffer[ID] !=  modH->u8id)
 80064c4:	f894 8008 	ldrb.w	r8, [r4, #8]
 80064c8:	7ce3      	ldrb	r3, [r4, #19]
 80064ca:	4543      	cmp	r3, r8
 80064cc:	d1dc      	bne.n	8006488 <StartTaskModbusSlave+0x8>
	    if ( calcCRC( modH->u8Buffer,  modH->u8BufferSize-2 ) != u16MsgCRC )
 80064ce:	f1a9 0102 	sub.w	r1, r9, #2
	    u16MsgCRC= ((modH->u8Buffer[modH->u8BufferSize - 2] << 8)
 80064d2:	44a1      	add	r9, r4
	    if ( calcCRC( modH->u8Buffer,  modH->u8BufferSize-2 ) != u16MsgCRC )
 80064d4:	b2c9      	uxtb	r1, r1
 80064d6:	f104 0013 	add.w	r0, r4, #19
 80064da:	f7ff ff68 	bl	80063ae <calcCRC>
	    u16MsgCRC= ((modH->u8Buffer[modH->u8BufferSize - 2] << 8)
 80064de:	f899 1011 	ldrb.w	r1, [r9, #17]
	    		   	         | modH->u8Buffer[modH->u8BufferSize - 1]); // combine the crc Low & High bytes
 80064e2:	f899 3012 	ldrb.w	r3, [r9, #18]
    uint8_t u8func = modH->u8Buffer[ FUNC ];  // get the original FUNC code
 80064e6:	7d22      	ldrb	r2, [r4, #20]
	    if ( calcCRC( modH->u8Buffer,  modH->u8BufferSize-2 ) != u16MsgCRC )
 80064e8:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80064ec:	4283      	cmp	r3, r0
 80064ee:	d011      	beq.n	8006514 <StartTaskModbusSlave+0x94>
	       		modH->u16errCnt ++;
 80064f0:	f8b4 30a0 	ldrh.w	r3, [r4, #160]	; 0xa0
 80064f4:	3301      	adds	r3, #1
 80064f6:	f8a4 30a0 	strh.w	r3, [r4, #160]	; 0xa0
	       		return ERR_BAD_CRC;
 80064fa:	23fc      	movs	r3, #252	; 0xfc
    modH->u8Buffer[ FUNC ]    = u8func + 0x80;
 80064fc:	3a80      	subs	r2, #128	; 0x80
    modH->u8Buffer[ 2 ]       = u8exception;
 80064fe:	7563      	strb	r3, [r4, #21]
    modH->u8BufferSize         = EXCEPTION_SIZE;
 8006500:	2303      	movs	r3, #3
    modH->u8Buffer[ ID ]      = modH->u8id;
 8006502:	f884 8013 	strb.w	r8, [r4, #19]
    modH->u8Buffer[ FUNC ]    = u8func + 0x80;
 8006506:	7522      	strb	r2, [r4, #20]
    modH->u8BufferSize         = EXCEPTION_SIZE;
 8006508:	f884 3093 	strb.w	r3, [r4, #147]	; 0x93
			sendTxBuffer(modH);
 800650c:	4620      	mov	r0, r4
 800650e:	f7ff ff69 	bl	80063e4 <sendTxBuffer>
		continue;
 8006512:	e7b9      	b.n	8006488 <StartTaskModbusSlave+0x8>
 8006514:	49ba      	ldr	r1, [pc, #744]	; (8006800 <StartTaskModbusSlave+0x380>)
	    if ( calcCRC( modH->u8Buffer,  modH->u8BufferSize-2 ) != u16MsgCRC )
 8006516:	2308      	movs	r3, #8
	        if (fctsupported[i] == modH->u8Buffer[FUNC])
 8006518:	f811 0b01 	ldrb.w	r0, [r1], #1
 800651c:	4290      	cmp	r0, r2
 800651e:	f000 81ef 	beq.w	8006900 <StartTaskModbusSlave+0x480>
	    for (uint8_t i = 0; i< sizeof( fctsupported ); i++)
 8006522:	3b01      	subs	r3, #1
 8006524:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
 8006528:	d1f6      	bne.n	8006518 <StartTaskModbusSlave+0x98>
	    	modH->u16errCnt ++;
 800652a:	f8b4 30a0 	ldrh.w	r3, [r4, #160]	; 0xa0
 800652e:	3301      	adds	r3, #1
 8006530:	f8a4 30a0 	strh.w	r3, [r4, #160]	; 0xa0
	        return EXC_FUNC_CODE;
 8006534:	2301      	movs	r3, #1
 8006536:	e7e1      	b.n	80064fc <StartTaskModbusSlave+0x7c>
	W.u8[0] = L;
 8006538:	7da1      	ldrb	r1, [r4, #22]
 800653a:	980e      	ldr	r0, [sp, #56]	; 0x38
	    	u16AdRegs = word( modH->u8Buffer[ ADD_HI ], modH->u8Buffer[ ADD_LO ]) / 16;
 800653c:	7d63      	ldrb	r3, [r4, #21]
	W.u8[0] = L;
 800653e:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8006540:	f361 0007 	bfi	r0, r1, #0, #8
	W.u8[1] = H;
 8006544:	4601      	mov	r1, r0
 8006546:	f363 210f 	bfi	r1, r3, #8, #8
	    	u16NRegs = word( modH->u8Buffer[ NB_HI ], modH->u8Buffer[ NB_LO ]) /16;
 800654a:	7e20      	ldrb	r0, [r4, #24]
	W.u8[1] = H;
 800654c:	910e      	str	r1, [sp, #56]	; 0x38
	    	u16AdRegs = word( modH->u8Buffer[ ADD_HI ], modH->u8Buffer[ ADD_LO ]) / 16;
 800654e:	f3c1 130b 	ubfx	r3, r1, #4, #12
	    	u16NRegs = word( modH->u8Buffer[ NB_HI ], modH->u8Buffer[ NB_LO ]) /16;
 8006552:	7de1      	ldrb	r1, [r4, #23]
	W.u8[0] = L;
 8006554:	f360 0607 	bfi	r6, r0, #0, #8
	W.u8[1] = H;
 8006558:	f361 260f 	bfi	r6, r1, #8, #8
	    	u16NRegs = word( modH->u8Buffer[ NB_HI ], modH->u8Buffer[ NB_LO ]) /16;
 800655c:	f3c6 1c0b 	ubfx	ip, r6, #4, #12
	W.u8[1] = H;
 8006560:	960f      	str	r6, [sp, #60]	; 0x3c
	W.u8[0] = L;
 8006562:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8006564:	f360 0607 	bfi	r6, r0, #0, #8
	W.u8[1] = H;
 8006568:	f361 260f 	bfi	r6, r1, #8, #8
 800656c:	9610      	str	r6, [sp, #64]	; 0x40
	    	if(word( modH->u8Buffer[ NB_HI ], modH->u8Buffer[ NB_LO ]) % 16) u16NRegs++; // check for incomplete words
 800656e:	0736      	lsls	r6, r6, #28
 8006570:	bf18      	it	ne
 8006572:	f10c 0c01 	addne.w	ip, ip, #1
	    	if((u16AdRegs + u16NRegs) > modH->u16regsize) return EXC_ADDR_RANGE;
 8006576:	4463      	add	r3, ip
 8006578:	f8b4 c0a4 	ldrh.w	ip, [r4, #164]	; 0xa4
 800657c:	4563      	cmp	r3, ip
 800657e:	dd01      	ble.n	8006584 <StartTaskModbusSlave+0x104>
 8006580:	2302      	movs	r3, #2
 8006582:	e7bb      	b.n	80064fc <StartTaskModbusSlave+0x7c>
	W.u8[0] = L;
 8006584:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8006586:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006588:	f360 0607 	bfi	r6, r0, #0, #8
 800658c:	f360 0307 	bfi	r3, r0, #0, #8
	W.u8[1] = H;
 8006590:	4630      	mov	r0, r6
 8006592:	f361 200f 	bfi	r0, r1, #8, #8
 8006596:	f361 230f 	bfi	r3, r1, #8, #8
	    	if(word( modH->u8Buffer[ NB_HI ], modH->u8Buffer[ NB_LO ]) % 8) u16NRegs++;
 800659a:	4601      	mov	r1, r0
	W.u8[1] = H;
 800659c:	930c      	str	r3, [sp, #48]	; 0x30
	    	if(word( modH->u8Buffer[ NB_HI ], modH->u8Buffer[ NB_LO ]) % 8) u16NRegs++;
 800659e:	0749      	lsls	r1, r1, #29
	    	u16NRegs = word( modH->u8Buffer[ NB_HI ], modH->u8Buffer[ NB_LO ]) / 8;
 80065a0:	f3c3 03cc 	ubfx	r3, r3, #3, #13
	W.u8[1] = H;
 80065a4:	900d      	str	r0, [sp, #52]	; 0x34
	    	if(word( modH->u8Buffer[ NB_HI ], modH->u8Buffer[ NB_LO ]) % 8) u16NRegs++;
 80065a6:	bf18      	it	ne
 80065a8:	3301      	addne	r3, #1
	    	u16NRegs = u16NRegs + 5; // adding the header  and CRC ( Slave address + Function code  + number of data bytes to follow + 2-byte CRC )
 80065aa:	3305      	adds	r3, #5
	        if(u16NRegs > 256) return EXC_REGS_QUANT;
 80065ac:	b29b      	uxth	r3, r3
 80065ae:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80065b2:	d919      	bls.n	80065e8 <StartTaskModbusSlave+0x168>
 80065b4:	2303      	movs	r3, #3
 80065b6:	e7a1      	b.n	80064fc <StartTaskModbusSlave+0x7c>
	    	u16AdRegs = word( modH->u8Buffer[ ADD_HI ], modH->u8Buffer[ ADD_LO ]) / 16;
 80065b8:	7da0      	ldrb	r0, [r4, #22]
	W.u8[0] = L;
 80065ba:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80065bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
	    	u16AdRegs = word( modH->u8Buffer[ ADD_HI ], modH->u8Buffer[ ADD_LO ]) / 16;
 80065be:	7d61      	ldrb	r1, [r4, #21]
	W.u8[0] = L;
 80065c0:	f360 0607 	bfi	r6, r0, #0, #8
 80065c4:	f360 0307 	bfi	r3, r0, #0, #8
	W.u8[1] = H;
 80065c8:	4630      	mov	r0, r6
 80065ca:	f361 200f 	bfi	r0, r1, #8, #8
 80065ce:	f361 230f 	bfi	r3, r1, #8, #8
	    	if(word( modH->u8Buffer[ ADD_HI ], modH->u8Buffer[ ADD_LO ]) % 16) u16AdRegs++;	// check for incomplete words
 80065d2:	0706      	lsls	r6, r0, #28
	W.u8[1] = H;
 80065d4:	930a      	str	r3, [sp, #40]	; 0x28
 80065d6:	900b      	str	r0, [sp, #44]	; 0x2c
	    	u16AdRegs = word( modH->u8Buffer[ ADD_HI ], modH->u8Buffer[ ADD_LO ]) / 16;
 80065d8:	f3c3 130b 	ubfx	r3, r3, #4, #12
	    	if(word( modH->u8Buffer[ ADD_HI ], modH->u8Buffer[ ADD_LO ]) % 16) u16AdRegs++;	// check for incomplete words
 80065dc:	d000      	beq.n	80065e0 <StartTaskModbusSlave+0x160>
 80065de:	3301      	adds	r3, #1
	        if (u16AdRegs > modH-> u16regsize) return EXC_ADDR_RANGE;
 80065e0:	f8b4 10a4 	ldrh.w	r1, [r4, #164]	; 0xa4
 80065e4:	4299      	cmp	r1, r3
 80065e6:	d3cb      	bcc.n	8006580 <StartTaskModbusSlave+0x100>
	 modH->i8lastError = 0;
 80065e8:	f04f 0300 	mov.w	r3, #0
 80065ec:	74a3      	strb	r3, [r4, #18]
	xSemaphoreTake(modH->ModBusSphrHandle , portMAX_DELAY); //before processing the message get the semaphore
 80065ee:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 80065f2:	f04f 31ff 	mov.w	r1, #4294967295
 80065f6:	f001 fbf3 	bl	8007de0 <xQueueSemaphoreTake>
	 switch(modH->u8Buffer[ FUNC ] )
 80065fa:	7d23      	ldrb	r3, [r4, #20]
 80065fc:	3b01      	subs	r3, #1
 80065fe:	2b0f      	cmp	r3, #15
 8006600:	d875      	bhi.n	80066ee <StartTaskModbusSlave+0x26e>
 8006602:	e8df f013 	tbh	[pc, r3, lsl #1]
 8006606:	0039      	.short	0x0039
 8006608:	00a20039 	.word	0x00a20039
 800660c:	00d600a2 	.word	0x00d600a2
 8006610:	007400ff 	.word	0x007400ff
 8006614:	00740074 	.word	0x00740074
 8006618:	00740074 	.word	0x00740074
 800661c:	00740074 	.word	0x00740074
 8006620:	01180074 	.word	0x01180074
 8006624:	0159      	.short	0x0159
	W.u8[0] = L;
 8006626:	7da1      	ldrb	r1, [r4, #22]
 8006628:	9809      	ldr	r0, [sp, #36]	; 0x24
	    	u16AdRegs = word( modH->u8Buffer[ ADD_HI ], modH->u8Buffer[ ADD_LO ]);
 800662a:	7d63      	ldrb	r3, [r4, #21]
	W.u8[0] = L;
 800662c:	f361 0007 	bfi	r0, r1, #0, #8
	W.u8[1] = H;
 8006630:	4601      	mov	r1, r0
 8006632:	f363 210f 	bfi	r1, r3, #8, #8
 8006636:	9109      	str	r1, [sp, #36]	; 0x24
	return W.u16[0];
 8006638:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800663c:	e7d0      	b.n	80065e0 <StartTaskModbusSlave+0x160>
	W.u8[0] = L;
 800663e:	7da1      	ldrb	r1, [r4, #22]
 8006640:	9807      	ldr	r0, [sp, #28]
	    	u16AdRegs = word( modH->u8Buffer[ ADD_HI ], modH->u8Buffer[ ADD_LO ]);
 8006642:	7d63      	ldrb	r3, [r4, #21]
	W.u8[0] = L;
 8006644:	f361 0007 	bfi	r0, r1, #0, #8
	W.u8[1] = H;
 8006648:	4601      	mov	r1, r0
 800664a:	f363 210f 	bfi	r1, r3, #8, #8
	W.u8[0] = L;
 800664e:	9808      	ldr	r0, [sp, #32]
	W.u8[1] = H;
 8006650:	9107      	str	r1, [sp, #28]
	W.u8[0] = L;
 8006652:	7e21      	ldrb	r1, [r4, #24]
	        u16NRegs = word( modH->u8Buffer[ NB_HI ], modH->u8Buffer[ NB_LO ]);
 8006654:	7de3      	ldrb	r3, [r4, #23]
	W.u8[0] = L;
 8006656:	f361 0007 	bfi	r0, r1, #0, #8
	W.u8[1] = H;
 800665a:	4601      	mov	r1, r0
 800665c:	f363 210f 	bfi	r1, r3, #8, #8
 8006660:	9108      	str	r1, [sp, #32]
	return W.u16[0];
 8006662:	f8bd 3020 	ldrh.w	r3, [sp, #32]
	        if (( u16AdRegs + u16NRegs ) > modH->u16regsize) return EXC_ADDR_RANGE;
 8006666:	9907      	ldr	r1, [sp, #28]
 8006668:	fa13 f081 	uxtah	r0, r3, r1
 800666c:	f8b4 10a4 	ldrh.w	r1, [r4, #164]	; 0xa4
 8006670:	4288      	cmp	r0, r1
 8006672:	dc85      	bgt.n	8006580 <StartTaskModbusSlave+0x100>
	        u16NRegs = u16NRegs*2 + 5; // adding the header  and CRC
 8006674:	005b      	lsls	r3, r3, #1
 8006676:	e798      	b.n	80065aa <StartTaskModbusSlave+0x12a>
	W.u8[0] = L;
 8006678:	7da2      	ldrb	r2, [r4, #22]
 800667a:	9906      	ldr	r1, [sp, #24]
    uint8_t u8currentBit, u8bytesno, u8bitsno;
    uint8_t u8CopyBufferSize;
    uint16_t u16currentCoil, u16coil;

    // get the first and last coil from the message
    uint16_t u16StartCoil = word( modH->u8Buffer[ ADD_HI ], modH->u8Buffer[ ADD_LO ] );
 800667c:	7d63      	ldrb	r3, [r4, #21]
	W.u8[0] = L;
 800667e:	f362 0107 	bfi	r1, r2, #0, #8
	W.u8[1] = H;
 8006682:	460a      	mov	r2, r1
 8006684:	f363 220f 	bfi	r2, r3, #8, #8
	W.u8[0] = L;
 8006688:	7e21      	ldrb	r1, [r4, #24]
	W.u8[1] = H;
 800668a:	9206      	str	r2, [sp, #24]
    uint16_t u16Coilno = word( modH->u8Buffer[ NB_HI ], modH->u8Buffer[ NB_LO ] );
 800668c:	7de2      	ldrb	r2, [r4, #23]
	return W.u16[0];
 800668e:	f8bd 3018 	ldrh.w	r3, [sp, #24]
	W.u8[0] = L;
 8006692:	f361 0507 	bfi	r5, r1, #0, #8
	W.u8[1] = H;
 8006696:	f362 250f 	bfi	r5, r2, #8, #8

    // put the number of bytes in the outcoming message
    u8bytesno = (uint8_t) (u16Coilno / 8);
 800669a:	f3c5 02c7 	ubfx	r2, r5, #3, #8
    if (u16Coilno % 8 != 0) u8bytesno ++;
 800669e:	f015 0107 	ands.w	r1, r5, #7
 80066a2:	bf1c      	itt	ne
 80066a4:	3201      	addne	r2, #1
 80066a6:	b2d2      	uxtbne	r2, r2
    modH->u8Buffer[ ADD_HI ]  = u8bytesno;
 80066a8:	7562      	strb	r2, [r4, #21]
	return W.u16[0];
 80066aa:	fa1f fe85 	uxth.w	lr, r5
    if (u16Coilno % 8 != 0) u8bytesno ++;
 80066ae:	9111      	str	r1, [sp, #68]	; 0x44
    modH->u8BufferSize         = ADD_LO;
    modH->u8Buffer[modH->u8BufferSize + u8bytesno - 1 ] = 0;
 80066b0:	4422      	add	r2, r4
    modH->u8BufferSize         = ADD_LO;
 80066b2:	2103      	movs	r1, #3
 80066b4:	f884 1093 	strb.w	r1, [r4, #147]	; 0x93
    modH->u8Buffer[modH->u8BufferSize + u8bytesno - 1 ] = 0;
 80066b8:	449e      	add	lr, r3
 80066ba:	f04f 0100 	mov.w	r1, #0
 80066be:	7551      	strb	r1, [r2, #21]

    // read each coil from the register map and put its value inside the outcoming message
    u8bitsno = 0;

    for (u16currentCoil = 0; u16currentCoil < u16Coilno; u16currentCoil++)
 80066c0:	fa1f fe8e 	uxth.w	lr, lr
    u8bitsno = 0;
 80066c4:	2100      	movs	r1, #0
    for (u16currentCoil = 0; u16currentCoil < u16Coilno; u16currentCoil++)
 80066c6:	4573      	cmp	r3, lr
    {
        u16coil = u16StartCoil + u16currentCoil;
        u16currentRegister =  (u16coil / 16);
        u8currentBit = (uint8_t) (u16coil % 16);

        bitWrite(
 80066c8:	f894 2093 	ldrb.w	r2, [r4, #147]	; 0x93
    for (u16currentCoil = 0; u16currentCoil < u16Coilno; u16currentCoil++)
 80066cc:	d117      	bne.n	80066fe <StartTaskModbusSlave+0x27e>
            modH->u8BufferSize++;
        }
    }

    // send outcoming message
    if (u16Coilno % 8 != 0) modH->u8BufferSize ++;
 80066ce:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80066d0:	b113      	cbz	r3, 80066d8 <StartTaskModbusSlave+0x258>
 80066d2:	3201      	adds	r2, #1
 80066d4:	f884 2093 	strb.w	r2, [r4, #147]	; 0x93
    u8CopyBufferSize = modH->u8BufferSize +2;
 80066d8:	f894 8093 	ldrb.w	r8, [r4, #147]	; 0x93
 80066dc:	f108 0802 	add.w	r8, r8, #2
 80066e0:	fa5f f888 	uxtb.w	r8, r8
    	modH->u8BufferSize++;
    	modH->u8Buffer[ modH->u8BufferSize ] = lowByte(modH->u16regs[i]);
    	modH->u8BufferSize++;
    }
    u8CopyBufferSize = modH->u8BufferSize +2;
    sendTxBuffer(modH);
 80066e4:	4620      	mov	r0, r4
 80066e6:	f7ff fe7d 	bl	80063e4 <sendTxBuffer>
				modH->i8state = process_FC3(modH);
 80066ea:	f884 80a7 	strb.w	r8, [r4, #167]	; 0xa7
	 xSemaphoreGive(modH->ModBusSphrHandle); //Release the semaphore
 80066ee:	2300      	movs	r3, #0
 80066f0:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 80066f4:	461a      	mov	r2, r3
 80066f6:	4619      	mov	r1, r3
 80066f8:	f001 f96a 	bl	80079d0 <xQueueGenericSend>
	 continue;
 80066fc:	e6c4      	b.n	8006488 <StartTaskModbusSlave+0x8>
        bitWrite(
 80066fe:	2001      	movs	r0, #1
 8006700:	f8d4 6098 	ldr.w	r6, [r4, #152]	; 0x98
 8006704:	fa00 fc01 	lsl.w	ip, r0, r1
 8006708:	0918      	lsrs	r0, r3, #4
 800670a:	eb04 0902 	add.w	r9, r4, r2
 800670e:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 8006712:	f899 8013 	ldrb.w	r8, [r9, #19]
 8006716:	f003 060f 	and.w	r6, r3, #15
 800671a:	4130      	asrs	r0, r6
        u8bitsno ++;
 800671c:	3101      	adds	r1, #1
        bitWrite(
 800671e:	fa5f fc8c 	uxtb.w	ip, ip
 8006722:	07c0      	lsls	r0, r0, #31
        u8bitsno ++;
 8006724:	b2c9      	uxtb	r1, r1
        bitWrite(
 8006726:	bf4c      	ite	mi
 8006728:	ea48 0c0c 	orrmi.w	ip, r8, ip
 800672c:	ea28 0c0c 	bicpl.w	ip, r8, ip
        if (u8bitsno > 7)
 8006730:	2907      	cmp	r1, #7
            modH->u8BufferSize++;
 8006732:	bf88      	it	hi
 8006734:	3201      	addhi	r2, #1
 8006736:	f103 0301 	add.w	r3, r3, #1
        bitWrite(
 800673a:	f889 c013 	strb.w	ip, [r9, #19]
            u8bitsno = 0;
 800673e:	bf84      	itt	hi
 8006740:	2100      	movhi	r1, #0
            modH->u8BufferSize++;
 8006742:	f884 2093 	strbhi.w	r2, [r4, #147]	; 0x93
 8006746:	b29b      	uxth	r3, r3
 8006748:	e7bd      	b.n	80066c6 <StartTaskModbusSlave+0x246>
	W.u8[0] = L;
 800674a:	7da2      	ldrb	r2, [r4, #22]
    uint16_t u16StartAdd = word( modH->u8Buffer[ ADD_HI ], modH->u8Buffer[ ADD_LO ] );
 800674c:	7d63      	ldrb	r3, [r4, #21]
	W.u8[0] = L;
 800674e:	9905      	ldr	r1, [sp, #20]
 8006750:	f362 0707 	bfi	r7, r2, #0, #8
 8006754:	7e22      	ldrb	r2, [r4, #24]
	W.u8[1] = H;
 8006756:	f363 270f 	bfi	r7, r3, #8, #8
	W.u8[0] = L;
 800675a:	f362 0107 	bfi	r1, r2, #0, #8
    uint8_t u8regsno = word( modH->u8Buffer[ NB_HI ], modH->u8Buffer[ NB_LO ] );
 800675e:	7de3      	ldrb	r3, [r4, #23]
	W.u8[1] = H;
 8006760:	460a      	mov	r2, r1
 8006762:	f363 220f 	bfi	r2, r3, #8, #8
 8006766:	9205      	str	r2, [sp, #20]
    uint8_t u8regsno = word( modH->u8Buffer[ NB_HI ], modH->u8Buffer[ NB_LO ] );
 8006768:	f89d 0014 	ldrb.w	r0, [sp, #20]
    modH->u8Buffer[ 2 ]       = u8regsno * 2;
 800676c:	0043      	lsls	r3, r0, #1
 800676e:	7563      	strb	r3, [r4, #21]
    modH->u8BufferSize         = 3;
 8006770:	2303      	movs	r3, #3
 8006772:	f884 3093 	strb.w	r3, [r4, #147]	; 0x93
    for (i = u16StartAdd; i < u16StartAdd + u8regsno; i++)
 8006776:	b2ba      	uxth	r2, r7
 8006778:	fa10 f087 	uxtah	r0, r0, r7
    	modH->u8Buffer[ modH->u8BufferSize ] = highByte(modH->u16regs[i]);
 800677c:	f894 3093 	ldrb.w	r3, [r4, #147]	; 0x93
    for (i = u16StartAdd; i < u16StartAdd + u8regsno; i++)
 8006780:	4282      	cmp	r2, r0
    	modH->u8BufferSize++;
 8006782:	f103 0802 	add.w	r8, r3, #2
 8006786:	fa5f f888 	uxtb.w	r8, r8
    for (i = u16StartAdd; i < u16StartAdd + u8regsno; i++)
 800678a:	daab      	bge.n	80066e4 <StartTaskModbusSlave+0x264>
    	modH->u8Buffer[ modH->u8BufferSize ] = highByte(modH->u16regs[i]);
 800678c:	f8d4 1098 	ldr.w	r1, [r4, #152]	; 0x98
 8006790:	eb04 0c03 	add.w	ip, r4, r3
 8006794:	f831 1012 	ldrh.w	r1, [r1, r2, lsl #1]
    	modH->u8BufferSize++;
 8006798:	3301      	adds	r3, #1
    	modH->u8Buffer[ modH->u8BufferSize ] = lowByte(modH->u16regs[i]);
 800679a:	fa54 f383 	uxtab	r3, r4, r3
    	modH->u8Buffer[ modH->u8BufferSize ] = highByte(modH->u16regs[i]);
 800679e:	ea4f 2e11 	mov.w	lr, r1, lsr #8
    for (i = u16StartAdd; i < u16StartAdd + u8regsno; i++)
 80067a2:	3201      	adds	r2, #1
    	modH->u8Buffer[ modH->u8BufferSize ] = highByte(modH->u16regs[i]);
 80067a4:	f88c e013 	strb.w	lr, [ip, #19]
    for (i = u16StartAdd; i < u16StartAdd + u8regsno; i++)
 80067a8:	b292      	uxth	r2, r2
    	modH->u8Buffer[ modH->u8BufferSize ] = lowByte(modH->u16regs[i]);
 80067aa:	74d9      	strb	r1, [r3, #19]
    	modH->u8BufferSize++;
 80067ac:	f884 8093 	strb.w	r8, [r4, #147]	; 0x93
    for (i = u16StartAdd; i < u16StartAdd + u8regsno; i++)
 80067b0:	e7e4      	b.n	800677c <StartTaskModbusSlave+0x2fc>
	W.u8[0] = L;
 80067b2:	7da2      	ldrb	r2, [r4, #22]
 80067b4:	9901      	ldr	r1, [sp, #4]
int8_t process_FC5( modbusHandler_t *modH )
{
    uint8_t u8currentBit;
    uint16_t u16currentRegister;
    uint8_t u8CopyBufferSize;
    uint16_t u16coil = word( modH->u8Buffer[ ADD_HI ], modH->u8Buffer[ ADD_LO ] );
 80067b6:	7d63      	ldrb	r3, [r4, #21]
    // point to the register and its bit
    u16currentRegister = (u16coil / 16);
    u8currentBit = (uint8_t) (u16coil % 16);

    // write to coil
    bitWrite(
 80067b8:	7de0      	ldrb	r0, [r4, #23]
	W.u8[0] = L;
 80067ba:	f362 0107 	bfi	r1, r2, #0, #8
	W.u8[1] = H;
 80067be:	460a      	mov	r2, r1
 80067c0:	f363 220f 	bfi	r2, r3, #8, #8
    u16currentRegister = (u16coil / 16);
 80067c4:	f3c2 110b 	ubfx	r1, r2, #4, #12
	W.u8[1] = H;
 80067c8:	9201      	str	r2, [sp, #4]
    u8currentBit = (uint8_t) (u16coil % 16);
 80067ca:	f002 030f 	and.w	r3, r2, #15
        bitWrite(
 80067ce:	f8d4 2098 	ldr.w	r2, [r4, #152]	; 0x98
    bitWrite(
 80067d2:	28ff      	cmp	r0, #255	; 0xff
 80067d4:	f04f 0001 	mov.w	r0, #1
 80067d8:	fa00 f303 	lsl.w	r3, r0, r3
 80067dc:	f832 0011 	ldrh.w	r0, [r2, r1, lsl #1]
 80067e0:	bf0c      	ite	eq
 80067e2:	4303      	orreq	r3, r0
 80067e4:	ea20 0303 	bicne.w	r3, r0, r3
 80067e8:	f822 3011 	strh.w	r3, [r2, r1, lsl #1]
    uint16_t u16val = word( modH->u8Buffer[ NB_HI ], modH->u8Buffer[ NB_LO ] );

    modH->u16regs[ u16add ] = u16val;

    // keep the same header
    modH->u8BufferSize = RESPONSE_SIZE;
 80067ec:	2306      	movs	r3, #6
 80067ee:	f884 3093 	strb.w	r3, [r4, #147]	; 0x93
				modH->u8Buffer[ (BYTE_CNT + 2) + i * 2 ]);

        modH->u16regs[ u16StartAdd + i ] = temp;
    }
    u8CopyBufferSize = modH->u8BufferSize +2;
    sendTxBuffer(modH);
 80067f2:	4620      	mov	r0, r4
 80067f4:	f7ff fdf6 	bl	80063e4 <sendTxBuffer>
				modH->i8state = process_FC16(modH);
 80067f8:	2308      	movs	r3, #8
 80067fa:	f884 30a7 	strb.w	r3, [r4, #167]	; 0xa7
				break;
 80067fe:	e776      	b.n	80066ee <StartTaskModbusSlave+0x26e>
 8006800:	0801dc50 	.word	0x0801dc50
	W.u8[0] = L;
 8006804:	7da2      	ldrb	r2, [r4, #22]
 8006806:	9903      	ldr	r1, [sp, #12]
    uint16_t u16add = word( modH->u8Buffer[ ADD_HI ], modH->u8Buffer[ ADD_LO ] );
 8006808:	7d63      	ldrb	r3, [r4, #21]
	W.u8[0] = L;
 800680a:	9804      	ldr	r0, [sp, #16]
 800680c:	f362 0107 	bfi	r1, r2, #0, #8
	W.u8[1] = H;
 8006810:	460a      	mov	r2, r1
	W.u8[0] = L;
 8006812:	7e21      	ldrb	r1, [r4, #24]
	W.u8[1] = H;
 8006814:	f363 220f 	bfi	r2, r3, #8, #8
	W.u8[0] = L;
 8006818:	f361 0007 	bfi	r0, r1, #0, #8
    uint16_t u16val = word( modH->u8Buffer[ NB_HI ], modH->u8Buffer[ NB_LO ] );
 800681c:	7de3      	ldrb	r3, [r4, #23]
	W.u8[1] = H;
 800681e:	9203      	str	r2, [sp, #12]
 8006820:	4601      	mov	r1, r0
 8006822:	f363 210f 	bfi	r1, r3, #8, #8
	return W.u16[0];
 8006826:	f8bd 200c 	ldrh.w	r2, [sp, #12]
    modH->u16regs[ u16add ] = u16val;
 800682a:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
	W.u8[1] = H;
 800682e:	9104      	str	r1, [sp, #16]
    modH->u16regs[ u16add ] = u16val;
 8006830:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8006834:	e7da      	b.n	80067ec <StartTaskModbusSlave+0x36c>
	W.u8[0] = L;
 8006836:	7da2      	ldrb	r2, [r4, #22]
 8006838:	7e21      	ldrb	r1, [r4, #24]
 800683a:	9802      	ldr	r0, [sp, #8]
    uint16_t u16StartCoil = word( modH->u8Buffer[ ADD_HI ], modH->u8Buffer[ ADD_LO ] );
 800683c:	7d63      	ldrb	r3, [r4, #21]
	W.u8[0] = L;
 800683e:	f362 0b07 	bfi	fp, r2, #0, #8
 8006842:	f361 0007 	bfi	r0, r1, #0, #8
    uint16_t u16Coilno = word( modH->u8Buffer[ NB_HI ], modH->u8Buffer[ NB_LO ] );
 8006846:	7de2      	ldrb	r2, [r4, #23]
	W.u8[1] = H;
 8006848:	4601      	mov	r1, r0
 800684a:	f362 210f 	bfi	r1, r2, #8, #8
 800684e:	f363 2b0f 	bfi	fp, r3, #8, #8
	return W.u16[0];
 8006852:	eb01 080b 	add.w	r8, r1, fp
 8006856:	fa1f f38b 	uxth.w	r3, fp
	W.u8[1] = H;
 800685a:	9102      	str	r1, [sp, #8]
    for (u16currentCoil = 0; u16currentCoil < u16Coilno; u16currentCoil++)
 800685c:	fa1f f888 	uxth.w	r8, r8
    u8bitsno = 0;
 8006860:	2200      	movs	r2, #0
    u8frameByte = 7;
 8006862:	2007      	movs	r0, #7
    for (u16currentCoil = 0; u16currentCoil < u16Coilno; u16currentCoil++)
 8006864:	4543      	cmp	r3, r8
 8006866:	d0c1      	beq.n	80067ec <StartTaskModbusSlave+0x36c>
        bTemp = bitRead(
 8006868:	eb04 0900 	add.w	r9, r4, r0
        bitWrite(
 800686c:	ea4f 1e13 	mov.w	lr, r3, lsr #4
        bTemp = bitRead(
 8006870:	f899 9013 	ldrb.w	r9, [r9, #19]
        bitWrite(
 8006874:	f8d4 c098 	ldr.w	ip, [r4, #152]	; 0x98
        bTemp = bitRead(
 8006878:	fa49 f902 	asr.w	r9, r9, r2
        bitWrite(
 800687c:	f003 010f 	and.w	r1, r3, #15
 8006880:	2601      	movs	r6, #1
 8006882:	f019 0f01 	tst.w	r9, #1
 8006886:	fa06 f101 	lsl.w	r1, r6, r1
 800688a:	f83c 901e 	ldrh.w	r9, [ip, lr, lsl #1]
        u8bitsno ++;
 800688e:	f102 0201 	add.w	r2, r2, #1
        bitWrite(
 8006892:	b289      	uxth	r1, r1
        u8bitsno ++;
 8006894:	b2d2      	uxtb	r2, r2
        bitWrite(
 8006896:	bf14      	ite	ne
 8006898:	ea41 0109 	orrne.w	r1, r1, r9
 800689c:	ea29 0101 	biceq.w	r1, r9, r1
        if (u8bitsno > 7)
 80068a0:	2a07      	cmp	r2, #7
            u8frameByte++;
 80068a2:	bf88      	it	hi
 80068a4:	3001      	addhi	r0, #1
 80068a6:	f103 0301 	add.w	r3, r3, #1
        bitWrite(
 80068aa:	f82c 101e 	strh.w	r1, [ip, lr, lsl #1]
            u8frameByte++;
 80068ae:	bf84      	itt	hi
 80068b0:	b2c0      	uxtbhi	r0, r0
            u8bitsno = 0;
 80068b2:	2200      	movhi	r2, #0
    for (u16currentCoil = 0; u16currentCoil < u16Coilno; u16currentCoil++)
 80068b4:	b29b      	uxth	r3, r3
 80068b6:	e7d5      	b.n	8006864 <StartTaskModbusSlave+0x3e4>
    uint16_t u16StartAdd = modH->u8Buffer[ ADD_HI ] << 8 | modH->u8Buffer[ ADD_LO ];
 80068b8:	f8b4 2017 	ldrh.w	r2, [r4, #23]
 80068bc:	f8b4 3015 	ldrh.w	r3, [r4, #21]
    modH->u8Buffer[ NB_HI ]   = 0;
 80068c0:	f04f 0100 	mov.w	r1, #0
 80068c4:	ba5b      	rev16	r3, r3
 80068c6:	ba52      	rev16	r2, r2
 80068c8:	b292      	uxth	r2, r2
 80068ca:	b29b      	uxth	r3, r3
 80068cc:	75e1      	strb	r1, [r4, #23]
    modH->u8BufferSize         = RESPONSE_SIZE;
 80068ce:	2106      	movs	r1, #6
    modH->u8Buffer[ NB_LO ]   = (uint8_t) u16regsno; // answer is always 256 or less bytes
 80068d0:	7622      	strb	r2, [r4, #24]
    modH->u8BufferSize         = RESPONSE_SIZE;
 80068d2:	f884 1093 	strb.w	r1, [r4, #147]	; 0x93
    for (i = 0; i < u16regsno; i++)
 80068d6:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80068da:	4621      	mov	r1, r4
 80068dc:	ebc4 0343 	rsb	r3, r4, r3, lsl #1
 80068e0:	4291      	cmp	r1, r2
 80068e2:	d086      	beq.n	80067f2 <StartTaskModbusSlave+0x372>
	W.u8[0] = L;
 80068e4:	f891 c01b 	ldrb.w	ip, [r1, #27]
        temp = word(
 80068e8:	7e88      	ldrb	r0, [r1, #26]
	W.u8[0] = L;
 80068ea:	f36c 0a07 	bfi	sl, ip, #0, #8
	W.u8[1] = H;
 80068ee:	f360 2a0f 	bfi	sl, r0, #8, #8
        modH->u16regs[ u16StartAdd + i ] = temp;
 80068f2:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
 80068f6:	4408      	add	r0, r1
 80068f8:	3102      	adds	r1, #2
 80068fa:	f820 a003 	strh.w	sl, [r0, r3]
    for (i = 0; i < u16regsno; i++)
 80068fe:	e7ef      	b.n	80068e0 <StartTaskModbusSlave+0x460>
	    switch ( modH->u8Buffer[ FUNC ] )
 8006900:	1e53      	subs	r3, r2, #1
 8006902:	2b0f      	cmp	r3, #15
 8006904:	f63f ae70 	bhi.w	80065e8 <StartTaskModbusSlave+0x168>
 8006908:	a101      	add	r1, pc, #4	; (adr r1, 8006910 <StartTaskModbusSlave+0x490>)
 800690a:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800690e:	bf00      	nop
 8006910:	08006539 	.word	0x08006539
 8006914:	08006539 	.word	0x08006539
 8006918:	0800663f 	.word	0x0800663f
 800691c:	0800663f 	.word	0x0800663f
 8006920:	080065b9 	.word	0x080065b9
 8006924:	08006627 	.word	0x08006627
 8006928:	080065e9 	.word	0x080065e9
 800692c:	080065e9 	.word	0x080065e9
 8006930:	080065e9 	.word	0x080065e9
 8006934:	080065e9 	.word	0x080065e9
 8006938:	080065e9 	.word	0x080065e9
 800693c:	080065e9 	.word	0x080065e9
 8006940:	080065e9 	.word	0x080065e9
 8006944:	080065e9 	.word	0x080065e9
 8006948:	08006539 	.word	0x08006539
 800694c:	0800663f 	.word	0x0800663f

08006950 <StartTaskModbusMaster>:
{
 8006950:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006954:	4604      	mov	r4, r0
 8006956:	b089      	sub	sp, #36	; 0x24
		 xSemaphoreGive(modH->ModBusSphrHandle);
 8006958:	2700      	movs	r7, #0
	  xQueueReceive(modH->QueueTelegramHandle, &telegram, portMAX_DELAY);
 800695a:	f04f 32ff 	mov.w	r2, #4294967295
 800695e:	a904      	add	r1, sp, #16
 8006960:	f8d4 00a8 	ldr.w	r0, [r4, #168]	; 0xa8
 8006964:	f001 f99d 	bl	8007ca2 <xQueueReceive>
     SendQuery(modH, telegram);
 8006968:	f89d 2010 	ldrb.w	r2, [sp, #16]
 800696c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
	xSemaphoreTake(modH->ModBusSphrHandle , portMAX_DELAY); //before processing the message get the semaphore
 8006970:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8006974:	9203      	str	r2, [sp, #12]
 8006976:	f04f 31ff 	mov.w	r1, #4294967295
 800697a:	9302      	str	r3, [sp, #8]
 800697c:	f89d 8011 	ldrb.w	r8, [sp, #17]
 8006980:	f8bd 5014 	ldrh.w	r5, [sp, #20]
 8006984:	9e06      	ldr	r6, [sp, #24]
 8006986:	f001 fa2b 	bl	8007de0 <xQueueSemaphoreTake>
	if (modH->i8state != COM_IDLE) error = ERR_POLLING ;
 800698a:	f994 00a7 	ldrsb.w	r0, [r4, #167]	; 0xa7
	if (modH->u8id!=0) error = ERR_NOT_MASTER;
 800698e:	7a21      	ldrb	r1, [r4, #8]
	if (modH->i8state != COM_IDLE) error = ERR_POLLING ;
 8006990:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 8006994:	bb60      	cbnz	r0, 80069f0 <StartTaskModbusMaster+0xa0>
	if (modH->u8id!=0) error = ERR_NOT_MASTER;
 8006996:	3900      	subs	r1, #0
 8006998:	bf18      	it	ne
 800699a:	2101      	movne	r1, #1
 800699c:	4249      	negs	r1, r1
 800699e:	b2c9      	uxtb	r1, r1
	if ((telegram.u8id==0) || (telegram.u8id>247)) error = ERR_BAD_SLAVE_ID;
 80069a0:	1e50      	subs	r0, r2, #1
 80069a2:	b2c0      	uxtb	r0, r0
 80069a4:	28f6      	cmp	r0, #246	; 0xf6
 80069a6:	d825      	bhi.n	80069f4 <StartTaskModbusMaster+0xa4>
	if(error)
 80069a8:	b331      	cbz	r1, 80069f8 <StartTaskModbusMaster+0xa8>
		 xSemaphoreGive(modH->ModBusSphrHandle);
 80069aa:	2300      	movs	r3, #0
		 modH->i8lastError = error;
 80069ac:	74a1      	strb	r1, [r4, #18]
		 xSemaphoreGive(modH->ModBusSphrHandle);
 80069ae:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 80069b2:	461a      	mov	r2, r3
 80069b4:	4619      	mov	r1, r3
 80069b6:	f001 f80b 	bl	80079d0 <xQueueGenericSend>
     ulNotificationValue = ulTaskNotifyTake(pdTRUE, portMAX_DELAY);
 80069ba:	f04f 31ff 	mov.w	r1, #4294967295
 80069be:	2001      	movs	r0, #1
 80069c0:	f002 f8d2 	bl	8008b68 <ulTaskNotifyTake>
      modH->i8lastError = 0;
 80069c4:	74a7      	strb	r7, [r4, #18]
      if(ulNotificationValue)
 80069c6:	4605      	mov	r5, r0
 80069c8:	2800      	cmp	r0, #0
 80069ca:	f000 8092 	beq.w	8006af2 <StartTaskModbusMaster+0x1a2>
    	  modH->i8lastError = ERR_TIME_OUT;
 80069ce:	23f8      	movs	r3, #248	; 0xf8
 80069d0:	74a3      	strb	r3, [r4, #18]
    	  modH->u16errCnt++;
 80069d2:	f8b4 30a0 	ldrh.w	r3, [r4, #160]	; 0xa0
    	  modH->i8state = COM_IDLE;
 80069d6:	f884 70a7 	strb.w	r7, [r4, #167]	; 0xa7
    	  modH->u16errCnt++;
 80069da:	3301      	adds	r3, #1
 80069dc:	f8a4 30a0 	strh.w	r3, [r4, #160]	; 0xa0
    	  xTaskNotify((TaskHandle_t)telegram.u32CurrentTask, modH->i8lastError, eSetValueWithOverwrite);
 80069e0:	2203      	movs	r2, #3
 80069e2:	2300      	movs	r3, #0
 80069e4:	f06f 0107 	mvn.w	r1, #7
		  xTaskNotify((TaskHandle_t)telegram.u32CurrentTask, ERR_OK_QUERY, eSetValueWithOverwrite);
 80069e8:	9807      	ldr	r0, [sp, #28]
 80069ea:	f002 f8ef 	bl	8008bcc <xTaskGenericNotify>
 80069ee:	e7b4      	b.n	800695a <StartTaskModbusMaster+0xa>
	if (modH->i8state != COM_IDLE) error = ERR_POLLING ;
 80069f0:	21fe      	movs	r1, #254	; 0xfe
 80069f2:	e7d5      	b.n	80069a0 <StartTaskModbusMaster+0x50>
	if ((telegram.u8id==0) || (telegram.u8id>247)) error = ERR_BAD_SLAVE_ID;
 80069f4:	21f7      	movs	r1, #247	; 0xf7
 80069f6:	e7d8      	b.n	80069aa <StartTaskModbusMaster+0x5a>
	modH->u8Buffer[ ID ]         = telegram.u8id;
 80069f8:	74e2      	strb	r2, [r4, #19]
	modH->u8Buffer[ FUNC ]       = telegram.u8fct;
 80069fa:	f884 8014 	strb.w	r8, [r4, #20]
	modH->u8Buffer[ ADD_HI ]     = highByte(telegram.u16RegAdd );
 80069fe:	0a1a      	lsrs	r2, r3, #8
	switch( telegram.u8fct )
 8006a00:	f108 38ff 	add.w	r8, r8, #4294967295
	modH->u16regs = telegram.u16reg;
 8006a04:	f8c4 6098 	str.w	r6, [r4, #152]	; 0x98
	modH->u8Buffer[ ADD_HI ]     = highByte(telegram.u16RegAdd );
 8006a08:	7562      	strb	r2, [r4, #21]
	modH->u8Buffer[ ADD_LO ]     = lowByte( telegram.u16RegAdd );
 8006a0a:	75a3      	strb	r3, [r4, #22]
	switch( telegram.u8fct )
 8006a0c:	f1b8 0f0f 	cmp.w	r8, #15
 8006a10:	d80f      	bhi.n	8006a32 <StartTaskModbusMaster+0xe2>
 8006a12:	e8df f008 	tbb	[pc, r8]
 8006a16:	0808      	.short	0x0808
 8006a18:	261e0808 	.word	0x261e0808
 8006a1c:	0e0e0e0e 	.word	0x0e0e0e0e
 8006a20:	0e0e0e0e 	.word	0x0e0e0e0e
 8006a24:	522b      	.short	0x522b
	    modH->u8Buffer[ NB_HI ]      = highByte(telegram.u16CoilsNo );
 8006a26:	0a2b      	lsrs	r3, r5, #8
 8006a28:	75e3      	strb	r3, [r4, #23]
	    modH->u8Buffer[ NB_LO ]      = lowByte( telegram.u16CoilsNo );
 8006a2a:	7625      	strb	r5, [r4, #24]
	    modH->u8BufferSize = 6;
 8006a2c:	2306      	movs	r3, #6
 8006a2e:	f884 3093 	strb.w	r3, [r4, #147]	; 0x93
	sendTxBuffer(modH);
 8006a32:	4620      	mov	r0, r4
 8006a34:	f7ff fcd6 	bl	80063e4 <sendTxBuffer>
	xSemaphoreGive(modH->ModBusSphrHandle);
 8006a38:	2300      	movs	r3, #0
 8006a3a:	461a      	mov	r2, r3
 8006a3c:	4619      	mov	r1, r3
 8006a3e:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8006a42:	f000 ffc5 	bl	80079d0 <xQueueGenericSend>
	modH->i8state = COM_WAITING;
 8006a46:	f04f 0301 	mov.w	r3, #1
 8006a4a:	f884 30a7 	strb.w	r3, [r4, #167]	; 0xa7
	modH->i8lastError = 0;
 8006a4e:	74a7      	strb	r7, [r4, #18]
	return 0;
 8006a50:	e7b3      	b.n	80069ba <StartTaskModbusMaster+0x6a>
	    modH->u8Buffer[ NB_HI ]      = (( telegram.u16reg[0]> 0) ? 0xff : 0);
 8006a52:	8833      	ldrh	r3, [r6, #0]
	    modH->u8Buffer[ NB_LO ]      = 0;
 8006a54:	7627      	strb	r7, [r4, #24]
	    modH->u8Buffer[ NB_HI ]      = (( telegram.u16reg[0]> 0) ? 0xff : 0);
 8006a56:	3b00      	subs	r3, #0
 8006a58:	bf18      	it	ne
 8006a5a:	2301      	movne	r3, #1
 8006a5c:	425b      	negs	r3, r3
 8006a5e:	75e3      	strb	r3, [r4, #23]
	    modH->u8BufferSize = 6;
 8006a60:	e7e4      	b.n	8006a2c <StartTaskModbusMaster+0xdc>
	    modH->u8Buffer[ NB_HI ]      = highByte( telegram.u16reg[0]);
 8006a62:	8833      	ldrh	r3, [r6, #0]
	    modH->u8Buffer[ NB_LO ]      = lowByte( telegram.u16reg[0]);
 8006a64:	7623      	strb	r3, [r4, #24]
	    modH->u8Buffer[ NB_HI ]      = highByte( telegram.u16reg[0]);
 8006a66:	0a1a      	lsrs	r2, r3, #8
 8006a68:	75e2      	strb	r2, [r4, #23]
	    modH->u8Buffer[ NB_LO ]      = lowByte( telegram.u16reg[0]);
 8006a6a:	e7df      	b.n	8006a2c <StartTaskModbusMaster+0xdc>
	    u8bytesno = u8regsno * 2;
 8006a6c:	08eb      	lsrs	r3, r5, #3
 8006a6e:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
	    if ((telegram.u16CoilsNo % 16) != 0)
 8006a72:	072a      	lsls	r2, r5, #28
	        u8bytesno++;
 8006a74:	bf18      	it	ne
 8006a76:	3301      	addne	r3, #1
	    modH->u8Buffer[ NB_HI ]      = highByte(telegram.u16CoilsNo );
 8006a78:	ea4f 2215 	mov.w	r2, r5, lsr #8
	        u8bytesno++;
 8006a7c:	bf18      	it	ne
 8006a7e:	b2db      	uxtbne	r3, r3
	    modH->u8Buffer[ NB_HI ]      = highByte(telegram.u16CoilsNo );
 8006a80:	75e2      	strb	r2, [r4, #23]
	    modH->u8BufferSize = 7;
 8006a82:	2207      	movs	r2, #7
	    modH->u8Buffer[ BYTE_CNT ]    = u8bytesno;
 8006a84:	7663      	strb	r3, [r4, #25]
	    modH->u8Buffer[ NB_LO ]      = lowByte( telegram.u16CoilsNo );
 8006a86:	7625      	strb	r5, [r4, #24]
	    modH->u8BufferSize = 7;
 8006a88:	f884 2093 	strb.w	r2, [r4, #147]	; 0x93
	    for (uint16_t i = 0; i < u8bytesno; i++)
 8006a8c:	2000      	movs	r0, #0
 8006a8e:	b29b      	uxth	r3, r3
 8006a90:	b281      	uxth	r1, r0
 8006a92:	428b      	cmp	r3, r1
 8006a94:	d9cd      	bls.n	8006a32 <StartTaskModbusMaster+0xe2>
	        	modH->u8Buffer[ modH->u8BufferSize ] = lowByte( telegram.u16reg[ i/2 ] );
 8006a96:	ea4f 0c51 	mov.w	ip, r1, lsr #1
 8006a9a:	f894 2093 	ldrb.w	r2, [r4, #147]	; 0x93
	        if(i%2)
 8006a9e:	f011 0f01 	tst.w	r1, #1
	        	modH->u8Buffer[ modH->u8BufferSize ] = lowByte( telegram.u16reg[ i/2 ] );
 8006aa2:	f836 101c 	ldrh.w	r1, [r6, ip, lsl #1]
	        	modH->u8Buffer[  modH->u8BufferSize ] = highByte( telegram.u16reg[ i/2 ] );
 8006aa6:	eb04 0502 	add.w	r5, r4, r2
 8006aaa:	bf08      	it	eq
 8006aac:	0a09      	lsreq	r1, r1, #8
	        modH->u8BufferSize++;
 8006aae:	3201      	adds	r2, #1
	        	modH->u8Buffer[  modH->u8BufferSize ] = highByte( telegram.u16reg[ i/2 ] );
 8006ab0:	74e9      	strb	r1, [r5, #19]
	        modH->u8BufferSize++;
 8006ab2:	3001      	adds	r0, #1
 8006ab4:	f884 2093 	strb.w	r2, [r4, #147]	; 0x93
	    for (uint16_t i = 0; i < u8bytesno; i++)
 8006ab8:	e7ea      	b.n	8006a90 <StartTaskModbusMaster+0x140>
	    modH->u8Buffer[ NB_HI ]      = highByte(telegram.u16CoilsNo );
 8006aba:	0a2b      	lsrs	r3, r5, #8
 8006abc:	75e3      	strb	r3, [r4, #23]
	    modH->u8Buffer[ NB_LO ]      = lowByte( telegram.u16CoilsNo );
 8006abe:	b2eb      	uxtb	r3, r5
 8006ac0:	7623      	strb	r3, [r4, #24]
	    modH->u8Buffer[ BYTE_CNT ]    = (uint8_t) ( telegram.u16CoilsNo * 2 );
 8006ac2:	005b      	lsls	r3, r3, #1
 8006ac4:	7663      	strb	r3, [r4, #25]
	    modH->u8BufferSize = 7;
 8006ac6:	2307      	movs	r3, #7
 8006ac8:	f884 3093 	strb.w	r3, [r4, #147]	; 0x93
	    for (uint16_t i=0; i< telegram.u16CoilsNo; i++)
 8006acc:	eb06 0545 	add.w	r5, r6, r5, lsl #1
 8006ad0:	42ae      	cmp	r6, r5
 8006ad2:	d0ae      	beq.n	8006a32 <StartTaskModbusMaster+0xe2>
	        modH->u8Buffer[  modH->u8BufferSize ] = highByte(  telegram.u16reg[ i ] );
 8006ad4:	f894 3093 	ldrb.w	r3, [r4, #147]	; 0x93
 8006ad8:	f836 1b02 	ldrh.w	r1, [r6], #2
 8006adc:	18e2      	adds	r2, r4, r3
 8006ade:	0a08      	lsrs	r0, r1, #8
 8006ae0:	74d0      	strb	r0, [r2, #19]
	        modH->u8BufferSize++;
 8006ae2:	1c5a      	adds	r2, r3, #1
	        modH->u8Buffer[  modH->u8BufferSize ] = lowByte( telegram.u16reg[ i ] );
 8006ae4:	fa54 f282 	uxtab	r2, r4, r2
	        modH->u8BufferSize++;
 8006ae8:	3302      	adds	r3, #2
	        modH->u8Buffer[  modH->u8BufferSize ] = lowByte( telegram.u16reg[ i ] );
 8006aea:	74d1      	strb	r1, [r2, #19]
	        modH->u8BufferSize++;
 8006aec:	f884 3093 	strb.w	r3, [r4, #147]	; 0x93
	    for (uint16_t i=0; i< telegram.u16CoilsNo; i++)
 8006af0:	e7ee      	b.n	8006ad0 <StartTaskModbusMaster+0x180>
      getRxBuffer(modH);
 8006af2:	4620      	mov	r0, r4
 8006af4:	f7ff fb48 	bl	8006188 <getRxBuffer>
	  if ( modH->u8BufferSize < 6){
 8006af8:	f894 3093 	ldrb.w	r3, [r4, #147]	; 0x93
 8006afc:	2b05      	cmp	r3, #5
 8006afe:	d80d      	bhi.n	8006b1c <StartTaskModbusMaster+0x1cc>
		  modH->i8lastError = ERR_BAD_SIZE;
 8006b00:	23fa      	movs	r3, #250	; 0xfa
 8006b02:	74a3      	strb	r3, [r4, #18]
		  modH->u16errCnt++;
 8006b04:	f8b4 30a0 	ldrh.w	r3, [r4, #160]	; 0xa0
		  modH->i8state = COM_IDLE;
 8006b08:	f884 50a7 	strb.w	r5, [r4, #167]	; 0xa7
		  modH->u16errCnt++;
 8006b0c:	3301      	adds	r3, #1
 8006b0e:	f8a4 30a0 	strh.w	r3, [r4, #160]	; 0xa0
		  xTaskNotify((TaskHandle_t)telegram.u32CurrentTask, modH->i8lastError, eSetValueWithOverwrite);
 8006b12:	2203      	movs	r2, #3
 8006b14:	462b      	mov	r3, r5
 8006b16:	f06f 0105 	mvn.w	r1, #5
 8006b1a:	e765      	b.n	80069e8 <StartTaskModbusMaster+0x98>
	  xTimerStop(modH->xTimerTimeout,0); // cancel timeout timer
 8006b1c:	462b      	mov	r3, r5
 8006b1e:	462a      	mov	r2, r5
 8006b20:	2103      	movs	r1, #3
 8006b22:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 8006b26:	9500      	str	r5, [sp, #0]
 8006b28:	f002 fa14 	bl	8008f54 <xTimerGenericCommand>
        ((modH->u8Buffer[modH->u8BufferSize - 2] << 8)
 8006b2c:	f894 6093 	ldrb.w	r6, [r4, #147]	; 0x93
    if ( calcCRC(modH->u8Buffer,  modH->u8BufferSize-2) != u16MsgCRC )
 8006b30:	1eb1      	subs	r1, r6, #2
        ((modH->u8Buffer[modH->u8BufferSize - 2] << 8)
 8006b32:	4426      	add	r6, r4
    if ( calcCRC(modH->u8Buffer,  modH->u8BufferSize-2) != u16MsgCRC )
 8006b34:	b2c9      	uxtb	r1, r1
 8006b36:	f104 0013 	add.w	r0, r4, #19
 8006b3a:	f7ff fc38 	bl	80063ae <calcCRC>
        ((modH->u8Buffer[modH->u8BufferSize - 2] << 8)
 8006b3e:	7c72      	ldrb	r2, [r6, #17]
         | modH->u8Buffer[modH->u8BufferSize - 1]); // combine the crc Low & High bytes
 8006b40:	7cb3      	ldrb	r3, [r6, #18]
    if ( calcCRC(modH->u8Buffer,  modH->u8BufferSize-2) != u16MsgCRC )
 8006b42:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8006b46:	4283      	cmp	r3, r0
 8006b48:	d00d      	beq.n	8006b66 <StartTaskModbusMaster+0x216>
    	modH->u16errCnt ++;
 8006b4a:	f8b4 30a0 	ldrh.w	r3, [r4, #160]	; 0xa0
 8006b4e:	3301      	adds	r3, #1
 8006b50:	f8a4 30a0 	strh.w	r3, [r4, #160]	; 0xa0
        return ERR_BAD_CRC;
 8006b54:	23fc      	movs	r3, #252	; 0xfc
	  int8_t u8exception = validateAnswer(modH);
 8006b56:	b259      	sxtb	r1, r3
	  if (u8exception != 0)
 8006b58:	b323      	cbz	r3, 8006ba4 <StartTaskModbusMaster+0x254>
		 modH->i8state = COM_IDLE;
 8006b5a:	f884 70a7 	strb.w	r7, [r4, #167]	; 0xa7
         modH->i8lastError = u8exception;
 8006b5e:	74a1      	strb	r1, [r4, #18]
		 xTaskNotify((TaskHandle_t)telegram.u32CurrentTask, modH->i8lastError, eSetValueWithOverwrite);
 8006b60:	2300      	movs	r3, #0
 8006b62:	2203      	movs	r2, #3
 8006b64:	e740      	b.n	80069e8 <StartTaskModbusMaster+0x98>
    if ((modH->u8Buffer[ FUNC ] & 0x80) != 0)
 8006b66:	f994 3014 	ldrsb.w	r3, [r4, #20]
 8006b6a:	7d21      	ldrb	r1, [r4, #20]
 8006b6c:	2b00      	cmp	r3, #0
 8006b6e:	da06      	bge.n	8006b7e <StartTaskModbusMaster+0x22e>
    	modH->u16errCnt ++;
 8006b70:	f8b4 30a0 	ldrh.w	r3, [r4, #160]	; 0xa0
 8006b74:	3301      	adds	r3, #1
 8006b76:	f8a4 30a0 	strh.w	r3, [r4, #160]	; 0xa0
        return ERR_EXCEPTION;
 8006b7a:	23fb      	movs	r3, #251	; 0xfb
 8006b7c:	e7eb      	b.n	8006b56 <StartTaskModbusMaster+0x206>
 8006b7e:	4a36      	ldr	r2, [pc, #216]	; (8006c58 <StartTaskModbusMaster+0x308>)
    if ((modH->u8Buffer[ FUNC ] & 0x80) != 0)
 8006b80:	2308      	movs	r3, #8
        if (fctsupported[i] == modH->u8Buffer[FUNC])
 8006b82:	f812 0b01 	ldrb.w	r0, [r2], #1
 8006b86:	4281      	cmp	r1, r0
 8006b88:	d00a      	beq.n	8006ba0 <StartTaskModbusMaster+0x250>
    for (uint8_t i = 0; i< sizeof( fctsupported ); i++)
 8006b8a:	3b01      	subs	r3, #1
 8006b8c:	f013 03ff 	ands.w	r3, r3, #255	; 0xff
 8006b90:	d1f7      	bne.n	8006b82 <StartTaskModbusMaster+0x232>
    	modH->u16errCnt ++;
 8006b92:	f8b4 30a0 	ldrh.w	r3, [r4, #160]	; 0xa0
 8006b96:	3301      	adds	r3, #1
 8006b98:	f8a4 30a0 	strh.w	r3, [r4, #160]	; 0xa0
        return EXC_FUNC_CODE;
 8006b9c:	2301      	movs	r3, #1
 8006b9e:	e7da      	b.n	8006b56 <StartTaskModbusMaster+0x206>
    return 0; // OK, no exception code thrown
 8006ba0:	2300      	movs	r3, #0
 8006ba2:	e7d8      	b.n	8006b56 <StartTaskModbusMaster+0x206>
	  modH->i8lastError = u8exception;
 8006ba4:	74a1      	strb	r1, [r4, #18]
	  xSemaphoreTake(modH->ModBusSphrHandle , portMAX_DELAY); //before processing the message get the semaphore
 8006ba6:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8006baa:	f04f 31ff 	mov.w	r1, #4294967295
 8006bae:	f001 f917 	bl	8007de0 <xQueueSemaphoreTake>
	  switch( modH->u8Buffer[ FUNC ] )
 8006bb2:	7d23      	ldrb	r3, [r4, #20]
 8006bb4:	2b02      	cmp	r3, #2
 8006bb6:	d819      	bhi.n	8006bec <StartTaskModbusMaster+0x29c>
 8006bb8:	b1db      	cbz	r3, 8006bf2 <StartTaskModbusMaster+0x2a2>
     for (i=0; i< modH->u8Buffer[2]; i++) {
 8006bba:	7d62      	ldrb	r2, [r4, #21]
 8006bbc:	b2eb      	uxtb	r3, r5
 8006bbe:	429a      	cmp	r2, r3
 8006bc0:	d917      	bls.n	8006bf2 <StartTaskModbusMaster+0x2a2>
        	modH->u16regs[i/2]= word(modH->u8Buffer[i+u8byte], lowByte(modH->u16regs[i/2]));
 8006bc2:	1cd8      	adds	r0, r3, #3
        if(i%2)
 8006bc4:	f013 0f01 	tst.w	r3, #1
        	modH->u16regs[i/2]= word(modH->u8Buffer[i+u8byte], lowByte(modH->u16regs[i/2]));
 8006bc8:	ea4f 0153 	mov.w	r1, r3, lsr #1
 8006bcc:	f8d4 2098 	ldr.w	r2, [r4, #152]	; 0x98
 8006bd0:	eb04 0300 	add.w	r3, r4, r0
        if(i%2)
 8006bd4:	d020      	beq.n	8006c18 <StartTaskModbusMaster+0x2c8>
	W.u8[0] = L;
 8006bd6:	f832 0011 	ldrh.w	r0, [r2, r1, lsl #1]
        	modH->u16regs[i/2]= word(modH->u8Buffer[i+u8byte], lowByte(modH->u16regs[i/2]));
 8006bda:	7cdb      	ldrb	r3, [r3, #19]
	W.u8[0] = L;
 8006bdc:	f360 0b07 	bfi	fp, r0, #0, #8
	W.u8[1] = H;
 8006be0:	f363 2b0f 	bfi	fp, r3, #8, #8
        	modH->u16regs[i/2]= word(modH->u8Buffer[i+u8byte], lowByte(modH->u16regs[i/2]));
 8006be4:	f822 b011 	strh.w	fp, [r2, r1, lsl #1]
     for (i=0; i< modH->u8Buffer[2]; i++) {
 8006be8:	3501      	adds	r5, #1
 8006bea:	e7e6      	b.n	8006bba <StartTaskModbusMaster+0x26a>
	  switch( modH->u8Buffer[ FUNC ] )
 8006bec:	3b03      	subs	r3, #3
 8006bee:	2b01      	cmp	r3, #1
 8006bf0:	d929      	bls.n	8006c46 <StartTaskModbusMaster+0x2f6>
	  if (modH->i8lastError ==0) // no error the error_OK, we need to use a different value than 0 to detect the timeout
 8006bf2:	f994 3012 	ldrsb.w	r3, [r4, #18]
	  modH->i8state = COM_IDLE;
 8006bf6:	f884 70a7 	strb.w	r7, [r4, #167]	; 0xa7
	  if (modH->i8lastError ==0) // no error the error_OK, we need to use a different value than 0 to detect the timeout
 8006bfa:	2b00      	cmp	r3, #0
 8006bfc:	f47f aead 	bne.w	800695a <StartTaskModbusMaster+0xa>
		  xSemaphoreGive(modH->ModBusSphrHandle); //Release the semaphore
 8006c00:	461a      	mov	r2, r3
 8006c02:	4619      	mov	r1, r3
 8006c04:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8006c08:	9302      	str	r3, [sp, #8]
 8006c0a:	f000 fee1 	bl	80079d0 <xQueueGenericSend>
		  xTaskNotify((TaskHandle_t)telegram.u32CurrentTask, ERR_OK_QUERY, eSetValueWithOverwrite);
 8006c0e:	9b02      	ldr	r3, [sp, #8]
 8006c10:	2203      	movs	r2, #3
 8006c12:	f06f 010a 	mvn.w	r1, #10
 8006c16:	e6e7      	b.n	80069e8 <StartTaskModbusMaster+0x98>
        	modH->u16regs[i/2]= word(highByte(modH->u16regs[i/2]), modH->u8Buffer[i+u8byte]);
 8006c18:	f832 0011 	ldrh.w	r0, [r2, r1, lsl #1]
	W.u8[0] = L;
 8006c1c:	7cdb      	ldrb	r3, [r3, #19]
        	modH->u16regs[i/2]= word(highByte(modH->u16regs[i/2]), modH->u8Buffer[i+u8byte]);
 8006c1e:	0a00      	lsrs	r0, r0, #8
	W.u8[0] = L;
 8006c20:	f363 0a07 	bfi	sl, r3, #0, #8
	W.u8[1] = H;
 8006c24:	f360 2a0f 	bfi	sl, r0, #8, #8
        	modH->u16regs[i/2]= word(highByte(modH->u16regs[i/2]), modH->u8Buffer[i+u8byte]);
 8006c28:	f822 a011 	strh.w	sl, [r2, r1, lsl #1]
 8006c2c:	e7dc      	b.n	8006be8 <StartTaskModbusMaster+0x298>
    	modH->u16regs[ i ] = word(modH->u8Buffer[ u8byte ], modH->u8Buffer[ u8byte +1 ]);
 8006c2e:	4423      	add	r3, r4
 8006c30:	f8d4 2098 	ldr.w	r2, [r4, #152]	; 0x98
 8006c34:	7cd9      	ldrb	r1, [r3, #19]
	W.u8[0] = L;
 8006c36:	7d1b      	ldrb	r3, [r3, #20]
 8006c38:	f363 0907 	bfi	r9, r3, #0, #8
	W.u8[1] = H;
 8006c3c:	f361 290f 	bfi	r9, r1, #8, #8
    	modH->u16regs[ i ] = word(modH->u8Buffer[ u8byte ], modH->u8Buffer[ u8byte +1 ]);
 8006c40:	f822 9015 	strh.w	r9, [r2, r5, lsl #1]
    for (i=0; i< modH->u8Buffer[ 2 ] /2; i++)
 8006c44:	3501      	adds	r5, #1
 8006c46:	b2ea      	uxtb	r2, r5
 8006c48:	7d61      	ldrb	r1, [r4, #21]
 8006c4a:	0053      	lsls	r3, r2, #1
 8006c4c:	3303      	adds	r3, #3
 8006c4e:	ebb2 0f51 	cmp.w	r2, r1, lsr #1
 8006c52:	b2db      	uxtb	r3, r3
 8006c54:	d3eb      	bcc.n	8006c2e <StartTaskModbusMaster+0x2de>
 8006c56:	e7cc      	b.n	8006bf2 <StartTaskModbusMaster+0x2a2>
 8006c58:	0801dc50 	.word	0x0801dc50

08006c5c <HAL_UART_TxCpltCallback>:
 * Modbus functionality.
 * @ingroup UartHandle UART HAL handler
 */

void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
 8006c5c:	b530      	push	{r4, r5, lr}
	/* Modbus RTU TX callback BEGIN */
	BaseType_t xHigherPriorityTaskWoken = pdFALSE;
	int i;
	for (i = 0; i < numberHandlers; i++ )
 8006c5e:	4a13      	ldr	r2, [pc, #76]	; (8006cac <HAL_UART_TxCpltCallback+0x50>)
{
 8006c60:	b085      	sub	sp, #20
	for (i = 0; i < numberHandlers; i++ )
 8006c62:	7811      	ldrb	r1, [r2, #0]
 8006c64:	4a12      	ldr	r2, [pc, #72]	; (8006cb0 <HAL_UART_TxCpltCallback+0x54>)
	BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 8006c66:	2300      	movs	r3, #0
 8006c68:	9303      	str	r3, [sp, #12]
	for (i = 0; i < numberHandlers; i++ )
 8006c6a:	4299      	cmp	r1, r3
 8006c6c:	dd0f      	ble.n	8006c8e <HAL_UART_TxCpltCallback+0x32>
	{
	   	if (mHandlers[i]->port == huart  )
 8006c6e:	f852 4b04 	ldr.w	r4, [r2], #4
 8006c72:	6865      	ldr	r5, [r4, #4]
 8006c74:	4285      	cmp	r5, r0
 8006c76:	d10c      	bne.n	8006c92 <HAL_UART_TxCpltCallback+0x36>
	   	{
	   		// notify the end of TX
	   		xTaskNotifyFromISR(mHandlers[i]->myTaskModbusAHandle, 0, eNoAction, &xHigherPriorityTaskWoken);
 8006c78:	ab03      	add	r3, sp, #12
 8006c7a:	9300      	str	r3, [sp, #0]
 8006c7c:	2300      	movs	r3, #0
 8006c7e:	461a      	mov	r2, r3
 8006c80:	4619      	mov	r1, r3
 8006c82:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 8006c86:	f002 f815 	bl	8008cb4 <xTaskGenericNotifyFromISR>
	   		break;
	   	}

	}
	portYIELD_FROM_ISR( xHigherPriorityTaskWoken );
 8006c8a:	9b03      	ldr	r3, [sp, #12]
 8006c8c:	b91b      	cbnz	r3, 8006c96 <HAL_UART_TxCpltCallback+0x3a>
	/*
	 * Here you should implement the callback code for other UARTs not used by Modbus
	 *
	 * */

}
 8006c8e:	b005      	add	sp, #20
 8006c90:	bd30      	pop	{r4, r5, pc}
	for (i = 0; i < numberHandlers; i++ )
 8006c92:	3301      	adds	r3, #1
 8006c94:	e7e9      	b.n	8006c6a <HAL_UART_TxCpltCallback+0xe>
	portYIELD_FROM_ISR( xHigherPriorityTaskWoken );
 8006c96:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8006c9a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006c9e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8006ca2:	f3bf 8f4f 	dsb	sy
 8006ca6:	f3bf 8f6f 	isb	sy
}
 8006caa:	e7f0      	b.n	8006c8e <HAL_UART_TxCpltCallback+0x32>
 8006cac:	2000190c 	.word	0x2000190c
 8006cb0:	20001904 	.word	0x20001904

08006cb4 <HAL_UART_RxCpltCallback>:
 * user should implement the correct control flow and verification to maintain
 * Modbus functionality.
 * @ingroup UartHandle UART HAL handler
 */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *UartHandle)
{
 8006cb4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
	BaseType_t xHigherPriorityTaskWoken = pdFALSE;

	/* Modbus RTU RX callback BEGIN */
    int i;
    for (i = 0; i < numberHandlers; i++ )
 8006cb6:	4b1f      	ldr	r3, [pc, #124]	; (8006d34 <HAL_UART_RxCpltCallback+0x80>)
 8006cb8:	4a1f      	ldr	r2, [pc, #124]	; (8006d38 <HAL_UART_RxCpltCallback+0x84>)
 8006cba:	7819      	ldrb	r1, [r3, #0]
	BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 8006cbc:	2400      	movs	r4, #0
 8006cbe:	9403      	str	r4, [sp, #12]
    for (i = 0; i < numberHandlers; i++ )
 8006cc0:	4615      	mov	r5, r2
 8006cc2:	42a1      	cmp	r1, r4
 8006cc4:	dd26      	ble.n	8006d14 <HAL_UART_RxCpltCallback+0x60>
    {
    	if (mHandlers[i]->port == UartHandle  )
 8006cc6:	f852 3b04 	ldr.w	r3, [r2], #4
 8006cca:	685e      	ldr	r6, [r3, #4]
 8006ccc:	4286      	cmp	r6, r0
 8006cce:	d123      	bne.n	8006d18 <HAL_UART_RxCpltCallback+0x64>
    	{

    		if(mHandlers[i]->xTypeHW == USART_HW)
 8006cd0:	f893 6140 	ldrb.w	r6, [r3, #320]	; 0x140
 8006cd4:	2e01      	cmp	r6, #1
 8006cd6:	d11d      	bne.n	8006d14 <HAL_UART_RxCpltCallback+0x60>
    		{
    			RingAdd(&mHandlers[i]->xBufferRX, mHandlers[i]->dataRX);
 8006cd8:	f893 10a6 	ldrb.w	r1, [r3, #166]	; 0xa6
 8006cdc:	f103 00bc 	add.w	r0, r3, #188	; 0xbc
 8006ce0:	f7ff fa06 	bl	80060f0 <RingAdd>
    			HAL_UART_Receive_IT(mHandlers[i]->port, &mHandlers[i]->dataRX, 1);
 8006ce4:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 8006ce8:	4632      	mov	r2, r6
 8006cea:	f103 01a6 	add.w	r1, r3, #166	; 0xa6
 8006cee:	6858      	ldr	r0, [r3, #4]
 8006cf0:	f7ff f8f9 	bl	8005ee6 <HAL_UART_Receive_IT>
    			xTimerResetFromISR(mHandlers[i]->xTimerT35, &xHigherPriorityTaskWoken);
 8006cf4:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 8006cf8:	f8d3 40b0 	ldr.w	r4, [r3, #176]	; 0xb0
 8006cfc:	f001 fc00 	bl	8008500 <xTaskGetTickCountFromISR>
 8006d00:	2300      	movs	r3, #0
 8006d02:	4602      	mov	r2, r0
 8006d04:	9300      	str	r3, [sp, #0]
 8006d06:	2107      	movs	r1, #7
 8006d08:	ab03      	add	r3, sp, #12
 8006d0a:	4620      	mov	r0, r4
 8006d0c:	f002 f922 	bl	8008f54 <xTimerGenericCommand>
    		}
    		break;
    	}
    }
    portYIELD_FROM_ISR( xHigherPriorityTaskWoken );
 8006d10:	9b03      	ldr	r3, [sp, #12]
 8006d12:	b91b      	cbnz	r3, 8006d1c <HAL_UART_RxCpltCallback+0x68>
	 * Here you should implement the callback code for other UARTs not used by Modbus
	 *
	 *
	 * */

}
 8006d14:	b004      	add	sp, #16
 8006d16:	bd70      	pop	{r4, r5, r6, pc}
    for (i = 0; i < numberHandlers; i++ )
 8006d18:	3401      	adds	r4, #1
 8006d1a:	e7d2      	b.n	8006cc2 <HAL_UART_RxCpltCallback+0xe>
    portYIELD_FROM_ISR( xHigherPriorityTaskWoken );
 8006d1c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8006d20:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006d24:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8006d28:	f3bf 8f4f 	dsb	sy
 8006d2c:	f3bf 8f6f 	isb	sy
}
 8006d30:	e7f0      	b.n	8006d14 <HAL_UART_RxCpltCallback+0x60>
 8006d32:	bf00      	nop
 8006d34:	2000190c 	.word	0x2000190c
 8006d38:	20001904 	.word	0x20001904

08006d3c <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8006d3c:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8006d3e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8006d42:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8006d44:	f001 fe1c 	bl	8008980 <xTaskGetSchedulerState>
 8006d48:	2801      	cmp	r0, #1
 8006d4a:	d003      	beq.n	8006d54 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8006d4c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8006d50:	f000 bbe0 	b.w	8007514 <xPortSysTickHandler>
}
 8006d54:	bd08      	pop	{r3, pc}
	...

08006d58 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006d58:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8006d5c:	b92b      	cbnz	r3, 8006d6a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 8006d5e:	4b06      	ldr	r3, [pc, #24]	; (8006d78 <osKernelInitialize+0x20>)
 8006d60:	6818      	ldr	r0, [r3, #0]
 8006d62:	b928      	cbnz	r0, 8006d70 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8006d64:	2201      	movs	r2, #1
 8006d66:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8006d68:	4770      	bx	lr
    stat = osErrorISR;
 8006d6a:	f06f 0005 	mvn.w	r0, #5
 8006d6e:	4770      	bx	lr
    } else {
      stat = osError;
 8006d70:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8006d74:	4770      	bx	lr
 8006d76:	bf00      	nop
 8006d78:	20001b70 	.word	0x20001b70

08006d7c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8006d7c:	b510      	push	{r4, lr}
 8006d7e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8006d82:	b95c      	cbnz	r4, 8006d9c <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8006d84:	4b08      	ldr	r3, [pc, #32]	; (8006da8 <osKernelStart+0x2c>)
 8006d86:	681a      	ldr	r2, [r3, #0]
 8006d88:	2a01      	cmp	r2, #1
 8006d8a:	d10a      	bne.n	8006da2 <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006d8c:	4a07      	ldr	r2, [pc, #28]	; (8006dac <osKernelStart+0x30>)
 8006d8e:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8006d90:	2202      	movs	r2, #2
 8006d92:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8006d94:	f001 fb60 	bl	8008458 <vTaskStartScheduler>
      stat = osOK;
 8006d98:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 8006d9a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8006d9c:	f06f 0005 	mvn.w	r0, #5
 8006da0:	e7fb      	b.n	8006d9a <osKernelStart+0x1e>
      stat = osError;
 8006da2:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8006da6:	e7f8      	b.n	8006d9a <osKernelStart+0x1e>
 8006da8:	20001b70 	.word	0x20001b70
 8006dac:	e000ed00 	.word	0xe000ed00

08006db0 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8006db0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006db2:	b087      	sub	sp, #28
 8006db4:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8006db6:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8006db8:	460b      	mov	r3, r1
  hTask = NULL;
 8006dba:	9205      	str	r2, [sp, #20]
 8006dbc:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8006dc0:	b9d2      	cbnz	r2, 8006df8 <osThreadNew+0x48>
 8006dc2:	b1c8      	cbz	r0, 8006df8 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8006dc4:	2c00      	cmp	r4, #0
 8006dc6:	d02f      	beq.n	8006e28 <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8006dc8:	69a5      	ldr	r5, [r4, #24]
 8006dca:	2d00      	cmp	r5, #0
 8006dcc:	bf08      	it	eq
 8006dce:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8006dd0:	1e69      	subs	r1, r5, #1
 8006dd2:	2937      	cmp	r1, #55	; 0x37
 8006dd4:	46ac      	mov	ip, r5
 8006dd6:	d82b      	bhi.n	8006e30 <osThreadNew+0x80>
 8006dd8:	6861      	ldr	r1, [r4, #4]
 8006dda:	07c9      	lsls	r1, r1, #31
 8006ddc:	d428      	bmi.n	8006e30 <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8006dde:	6966      	ldr	r6, [r4, #20]
 8006de0:	b16e      	cbz	r6, 8006dfe <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8006de2:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006de4:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8006de8:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006dea:	b157      	cbz	r7, 8006e02 <osThreadNew+0x52>
 8006dec:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 8006df0:	d902      	bls.n	8006df8 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8006df2:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006df4:	b104      	cbz	r4, 8006df8 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8006df6:	b9ee      	cbnz	r6, 8006e34 <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8006df8:	9805      	ldr	r0, [sp, #20]
}
 8006dfa:	b007      	add	sp, #28
 8006dfc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8006dfe:	2280      	movs	r2, #128	; 0x80
 8006e00:	e7f0      	b.n	8006de4 <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8006e02:	f1be 0f00 	cmp.w	lr, #0
 8006e06:	d1f7      	bne.n	8006df8 <osThreadNew+0x48>
      if (mem == 0) {
 8006e08:	6924      	ldr	r4, [r4, #16]
 8006e0a:	2c00      	cmp	r4, #0
 8006e0c:	d1f4      	bne.n	8006df8 <osThreadNew+0x48>
 8006e0e:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8006e10:	a905      	add	r1, sp, #20
 8006e12:	e9cd c100 	strd	ip, r1, [sp]
 8006e16:	b292      	uxth	r2, r2
 8006e18:	4621      	mov	r1, r4
 8006e1a:	f001 faf0 	bl	80083fe <xTaskCreate>
 8006e1e:	2801      	cmp	r0, #1
            hTask = NULL;
 8006e20:	bf1c      	itt	ne
 8006e22:	2300      	movne	r3, #0
 8006e24:	9305      	strne	r3, [sp, #20]
 8006e26:	e7e7      	b.n	8006df8 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 8006e28:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8006e2c:	2280      	movs	r2, #128	; 0x80
 8006e2e:	e7ef      	b.n	8006e10 <osThreadNew+0x60>
        return (NULL);
 8006e30:	4610      	mov	r0, r2
 8006e32:	e7e2      	b.n	8006dfa <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8006e34:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8006e38:	9500      	str	r5, [sp, #0]
 8006e3a:	f001 faa8 	bl	800838e <xTaskCreateStatic>
 8006e3e:	9005      	str	r0, [sp, #20]
 8006e40:	e7da      	b.n	8006df8 <osThreadNew+0x48>

08006e42 <osThreadGetId>:
}

osThreadId_t osThreadGetId (void) {
  osThreadId_t id;

  id = (osThreadId_t)xTaskGetCurrentTaskHandle();
 8006e42:	f001 bd97 	b.w	8008974 <xTaskGetCurrentTaskHandle>

08006e46 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8006e46:	b510      	push	{r4, lr}
 8006e48:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8006e4c:	b924      	cbnz	r4, 8006e58 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8006e4e:	b110      	cbz	r0, 8006e56 <osDelay+0x10>
      vTaskDelay(ticks);
 8006e50:	f001 fc68 	bl	8008724 <vTaskDelay>
    stat = osOK;
 8006e54:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 8006e56:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8006e58:	f06f 0005 	mvn.w	r0, #5
 8006e5c:	e7fb      	b.n	8006e56 <osDelay+0x10>

08006e5e <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8006e5e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006e60:	4604      	mov	r4, r0
 8006e62:	460e      	mov	r6, r1
 8006e64:	4615      	mov	r5, r2
 8006e66:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8006e6a:	b11a      	cbz	r2, 8006e74 <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8006e6c:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8006e6e:	4620      	mov	r0, r4
 8006e70:	b003      	add	sp, #12
 8006e72:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8006e74:	2800      	cmp	r0, #0
 8006e76:	d0f9      	beq.n	8006e6c <osSemaphoreNew+0xe>
 8006e78:	4288      	cmp	r0, r1
 8006e7a:	d3f7      	bcc.n	8006e6c <osSemaphoreNew+0xe>
    if (attr != NULL) {
 8006e7c:	b1e5      	cbz	r5, 8006eb8 <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8006e7e:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 8006e82:	b1bb      	cbz	r3, 8006eb4 <osSemaphoreNew+0x56>
 8006e84:	2f4f      	cmp	r7, #79	; 0x4f
 8006e86:	d9f1      	bls.n	8006e6c <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8006e88:	2801      	cmp	r0, #1
 8006e8a:	d12a      	bne.n	8006ee2 <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8006e8c:	2103      	movs	r1, #3
 8006e8e:	9100      	str	r1, [sp, #0]
 8006e90:	4611      	mov	r1, r2
 8006e92:	f000 fce8 	bl	8007866 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8006e96:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8006e98:	2800      	cmp	r0, #0
 8006e9a:	d0e7      	beq.n	8006e6c <osSemaphoreNew+0xe>
 8006e9c:	b1de      	cbz	r6, 8006ed6 <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8006e9e:	2300      	movs	r3, #0
 8006ea0:	461a      	mov	r2, r3
 8006ea2:	4619      	mov	r1, r3
 8006ea4:	f000 fd94 	bl	80079d0 <xQueueGenericSend>
 8006ea8:	2801      	cmp	r0, #1
 8006eaa:	d014      	beq.n	8006ed6 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 8006eac:	4620      	mov	r0, r4
 8006eae:	f001 f8cf 	bl	8008050 <vQueueDelete>
 8006eb2:	e7db      	b.n	8006e6c <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8006eb4:	2f00      	cmp	r7, #0
 8006eb6:	d1d9      	bne.n	8006e6c <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8006eb8:	2c01      	cmp	r4, #1
 8006eba:	d105      	bne.n	8006ec8 <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 8006ebc:	2203      	movs	r2, #3
 8006ebe:	2100      	movs	r1, #0
 8006ec0:	4620      	mov	r0, r4
 8006ec2:	f000 fd1e 	bl	8007902 <xQueueGenericCreate>
 8006ec6:	e7e6      	b.n	8006e96 <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8006ec8:	4620      	mov	r0, r4
 8006eca:	4631      	mov	r1, r6
 8006ecc:	f000 fd62 	bl	8007994 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8006ed0:	4604      	mov	r4, r0
 8006ed2:	2800      	cmp	r0, #0
 8006ed4:	d0ca      	beq.n	8006e6c <osSemaphoreNew+0xe>
        if (attr != NULL) {
 8006ed6:	b955      	cbnz	r5, 8006eee <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 8006ed8:	4629      	mov	r1, r5
 8006eda:	4620      	mov	r0, r4
 8006edc:	f001 f892 	bl	8008004 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8006ee0:	e7c5      	b.n	8006e6e <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8006ee2:	461a      	mov	r2, r3
 8006ee4:	f000 fd34 	bl	8007950 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8006ee8:	4604      	mov	r4, r0
 8006eea:	2800      	cmp	r0, #0
 8006eec:	d0be      	beq.n	8006e6c <osSemaphoreNew+0xe>
          name = attr->name;
 8006eee:	682d      	ldr	r5, [r5, #0]
 8006ef0:	e7f2      	b.n	8006ed8 <osSemaphoreNew+0x7a>

08006ef2 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8006ef2:	b513      	push	{r0, r1, r4, lr}
 8006ef4:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8006ef6:	b308      	cbz	r0, 8006f3c <osSemaphoreAcquire+0x4a>
 8006ef8:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8006efc:	b1b3      	cbz	r3, 8006f2c <osSemaphoreAcquire+0x3a>
    if (timeout != 0U) {
 8006efe:	b9e9      	cbnz	r1, 8006f3c <osSemaphoreAcquire+0x4a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006f00:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8006f02:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8006f04:	f001 f82f 	bl	8007f66 <xQueueReceiveFromISR>
 8006f08:	2801      	cmp	r0, #1
 8006f0a:	d114      	bne.n	8006f36 <osSemaphoreAcquire+0x44>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8006f0c:	9b01      	ldr	r3, [sp, #4]
 8006f0e:	b913      	cbnz	r3, 8006f16 <osSemaphoreAcquire+0x24>
  stat = osOK;
 8006f10:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8006f12:	b002      	add	sp, #8
 8006f14:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 8006f16:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8006f1a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006f1e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8006f22:	f3bf 8f4f 	dsb	sy
 8006f26:	f3bf 8f6f 	isb	sy
 8006f2a:	e7f1      	b.n	8006f10 <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8006f2c:	f000 ff58 	bl	8007de0 <xQueueSemaphoreTake>
 8006f30:	2801      	cmp	r0, #1
 8006f32:	d0ed      	beq.n	8006f10 <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 8006f34:	b92c      	cbnz	r4, 8006f42 <osSemaphoreAcquire+0x50>
        stat = osErrorResource;
 8006f36:	f06f 0002 	mvn.w	r0, #2
 8006f3a:	e7ea      	b.n	8006f12 <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 8006f3c:	f06f 0003 	mvn.w	r0, #3
 8006f40:	e7e7      	b.n	8006f12 <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 8006f42:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006f46:	e7e4      	b.n	8006f12 <osSemaphoreAcquire+0x20>

08006f48 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8006f48:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8006f4a:	b310      	cbz	r0, 8006f92 <osSemaphoreRelease+0x4a>
 8006f4c:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8006f50:	b1b3      	cbz	r3, 8006f80 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 8006f52:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8006f54:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8006f56:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8006f58:	f000 fe4f 	bl	8007bfa <xQueueGiveFromISR>
 8006f5c:	2801      	cmp	r0, #1
 8006f5e:	d115      	bne.n	8006f8c <osSemaphoreRelease+0x44>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 8006f60:	9b01      	ldr	r3, [sp, #4]
 8006f62:	b913      	cbnz	r3, 8006f6a <osSemaphoreRelease+0x22>
  stat = osOK;
 8006f64:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 8006f66:	b002      	add	sp, #8
 8006f68:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8006f6a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8006f6e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006f72:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8006f76:	f3bf 8f4f 	dsb	sy
 8006f7a:	f3bf 8f6f 	isb	sy
 8006f7e:	e7f1      	b.n	8006f64 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8006f80:	461a      	mov	r2, r3
 8006f82:	4619      	mov	r1, r3
 8006f84:	f000 fd24 	bl	80079d0 <xQueueGenericSend>
 8006f88:	2801      	cmp	r0, #1
 8006f8a:	d0eb      	beq.n	8006f64 <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 8006f8c:	f06f 0002 	mvn.w	r0, #2
 8006f90:	e7e9      	b.n	8006f66 <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 8006f92:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8006f96:	e7e6      	b.n	8006f66 <osSemaphoreRelease+0x1e>

08006f98 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8006f98:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006f9a:	4605      	mov	r5, r0
 8006f9c:	460e      	mov	r6, r1
 8006f9e:	4614      	mov	r4, r2
 8006fa0:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8006fa4:	b11f      	cbz	r7, 8006fae <osMessageQueueNew+0x16>
  hQueue = NULL;
 8006fa6:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8006fa8:	4628      	mov	r0, r5
 8006faa:	b003      	add	sp, #12
 8006fac:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8006fae:	2800      	cmp	r0, #0
 8006fb0:	d0f9      	beq.n	8006fa6 <osMessageQueueNew+0xe>
 8006fb2:	2900      	cmp	r1, #0
 8006fb4:	d0f7      	beq.n	8006fa6 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8006fb6:	b1da      	cbz	r2, 8006ff0 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8006fb8:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 8006fbc:	b183      	cbz	r3, 8006fe0 <osMessageQueueNew+0x48>
 8006fbe:	2a4f      	cmp	r2, #79	; 0x4f
 8006fc0:	d9f1      	bls.n	8006fa6 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8006fc2:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8006fc4:	2a00      	cmp	r2, #0
 8006fc6:	d0ee      	beq.n	8006fa6 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8006fc8:	6966      	ldr	r6, [r4, #20]
 8006fca:	434d      	muls	r5, r1
 8006fcc:	42ae      	cmp	r6, r5
 8006fce:	d3ea      	bcc.n	8006fa6 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8006fd0:	9700      	str	r7, [sp, #0]
 8006fd2:	f000 fc48 	bl	8007866 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8006fd6:	4605      	mov	r5, r0
 8006fd8:	2800      	cmp	r0, #0
 8006fda:	d0e4      	beq.n	8006fa6 <osMessageQueueNew+0xe>
        name = attr->name;
 8006fdc:	6824      	ldr	r4, [r4, #0]
 8006fde:	e011      	b.n	8007004 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8006fe0:	2a00      	cmp	r2, #0
 8006fe2:	d1e0      	bne.n	8006fa6 <osMessageQueueNew+0xe>
 8006fe4:	6923      	ldr	r3, [r4, #16]
 8006fe6:	2b00      	cmp	r3, #0
 8006fe8:	d1dd      	bne.n	8006fa6 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8006fea:	6963      	ldr	r3, [r4, #20]
 8006fec:	2b00      	cmp	r3, #0
 8006fee:	d1da      	bne.n	8006fa6 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8006ff0:	4628      	mov	r0, r5
 8006ff2:	2200      	movs	r2, #0
 8006ff4:	4631      	mov	r1, r6
 8006ff6:	f000 fc84 	bl	8007902 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8006ffa:	4605      	mov	r5, r0
 8006ffc:	2800      	cmp	r0, #0
 8006ffe:	d0d2      	beq.n	8006fa6 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 8007000:	2c00      	cmp	r4, #0
 8007002:	d1eb      	bne.n	8006fdc <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 8007004:	4621      	mov	r1, r4
 8007006:	4628      	mov	r0, r5
 8007008:	f000 fffc 	bl	8008004 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800700c:	e7cc      	b.n	8006fa8 <osMessageQueueNew+0x10>

0800700e <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800700e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007010:	461c      	mov	r4, r3
 8007012:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007016:	b1c6      	cbz	r6, 800704a <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007018:	b318      	cbz	r0, 8007062 <osMessageQueuePut+0x54>
 800701a:	b311      	cbz	r1, 8007062 <osMessageQueuePut+0x54>
 800701c:	bb0b      	cbnz	r3, 8007062 <osMessageQueuePut+0x54>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800701e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007020:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8007022:	f000 fd88 	bl	8007b36 <xQueueGenericSendFromISR>
 8007026:	2801      	cmp	r0, #1
 8007028:	d118      	bne.n	800705c <osMessageQueuePut+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800702a:	9b01      	ldr	r3, [sp, #4]
 800702c:	b913      	cbnz	r3, 8007034 <osMessageQueuePut+0x26>
  stat = osOK;
 800702e:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8007030:	b002      	add	sp, #8
 8007032:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8007034:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007038:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800703c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007040:	f3bf 8f4f 	dsb	sy
 8007044:	f3bf 8f6f 	isb	sy
 8007048:	e7f1      	b.n	800702e <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800704a:	b150      	cbz	r0, 8007062 <osMessageQueuePut+0x54>
 800704c:	b149      	cbz	r1, 8007062 <osMessageQueuePut+0x54>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800704e:	4633      	mov	r3, r6
 8007050:	4622      	mov	r2, r4
 8007052:	f000 fcbd 	bl	80079d0 <xQueueGenericSend>
 8007056:	2801      	cmp	r0, #1
 8007058:	d0e9      	beq.n	800702e <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 800705a:	b92c      	cbnz	r4, 8007068 <osMessageQueuePut+0x5a>
          stat = osErrorResource;
 800705c:	f06f 0002 	mvn.w	r0, #2
 8007060:	e7e6      	b.n	8007030 <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 8007062:	f06f 0003 	mvn.w	r0, #3
 8007066:	e7e3      	b.n	8007030 <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 8007068:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800706c:	e7e0      	b.n	8007030 <osMessageQueuePut+0x22>

0800706e <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800706e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007070:	461c      	mov	r4, r3
 8007072:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8007076:	b1c3      	cbz	r3, 80070aa <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8007078:	b310      	cbz	r0, 80070c0 <osMessageQueueGet+0x52>
 800707a:	b309      	cbz	r1, 80070c0 <osMessageQueueGet+0x52>
 800707c:	bb04      	cbnz	r4, 80070c0 <osMessageQueueGet+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800707e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8007080:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8007082:	f000 ff70 	bl	8007f66 <xQueueReceiveFromISR>
 8007086:	2801      	cmp	r0, #1
 8007088:	d117      	bne.n	80070ba <osMessageQueueGet+0x4c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800708a:	9b01      	ldr	r3, [sp, #4]
 800708c:	b913      	cbnz	r3, 8007094 <osMessageQueueGet+0x26>
  stat = osOK;
 800708e:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8007090:	b003      	add	sp, #12
 8007092:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8007094:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007098:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800709c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80070a0:	f3bf 8f4f 	dsb	sy
 80070a4:	f3bf 8f6f 	isb	sy
 80070a8:	e7f1      	b.n	800708e <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80070aa:	b148      	cbz	r0, 80070c0 <osMessageQueueGet+0x52>
 80070ac:	b141      	cbz	r1, 80070c0 <osMessageQueueGet+0x52>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80070ae:	4622      	mov	r2, r4
 80070b0:	f000 fdf7 	bl	8007ca2 <xQueueReceive>
 80070b4:	2801      	cmp	r0, #1
 80070b6:	d0ea      	beq.n	800708e <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 80070b8:	b92c      	cbnz	r4, 80070c6 <osMessageQueueGet+0x58>
          stat = osErrorResource;
 80070ba:	f06f 0002 	mvn.w	r0, #2
 80070be:	e7e7      	b.n	8007090 <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 80070c0:	f06f 0003 	mvn.w	r0, #3
 80070c4:	e7e4      	b.n	8007090 <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 80070c6:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80070ca:	e7e1      	b.n	8007090 <osMessageQueueGet+0x22>

080070cc <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 80070cc:	4b03      	ldr	r3, [pc, #12]	; (80070dc <vApplicationGetIdleTaskMemory+0x10>)
 80070ce:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 80070d0:	4b03      	ldr	r3, [pc, #12]	; (80070e0 <vApplicationGetIdleTaskMemory+0x14>)
 80070d2:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 80070d4:	2380      	movs	r3, #128	; 0x80
 80070d6:	6013      	str	r3, [r2, #0]
}
 80070d8:	4770      	bx	lr
 80070da:	bf00      	nop
 80070dc:	20001b10 	.word	0x20001b10
 80070e0:	20001910 	.word	0x20001910

080070e4 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 80070e4:	4b03      	ldr	r3, [pc, #12]	; (80070f4 <vApplicationGetTimerTaskMemory+0x10>)
 80070e6:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 80070e8:	4b03      	ldr	r3, [pc, #12]	; (80070f8 <vApplicationGetTimerTaskMemory+0x14>)
 80070ea:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 80070ec:	f44f 7380 	mov.w	r3, #256	; 0x100
 80070f0:	6013      	str	r3, [r2, #0]
}
 80070f2:	4770      	bx	lr
 80070f4:	20001f74 	.word	0x20001f74
 80070f8:	20001b74 	.word	0x20001b74

080070fc <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 80070fc:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80070fe:	4b0f      	ldr	r3, [pc, #60]	; (800713c <prvInsertBlockIntoFreeList+0x40>)
 8007100:	461a      	mov	r2, r3
 8007102:	681b      	ldr	r3, [r3, #0]
 8007104:	4283      	cmp	r3, r0
 8007106:	d3fb      	bcc.n	8007100 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8007108:	6854      	ldr	r4, [r2, #4]
 800710a:	1911      	adds	r1, r2, r4
 800710c:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800710e:	bf01      	itttt	eq
 8007110:	6841      	ldreq	r1, [r0, #4]
 8007112:	4610      	moveq	r0, r2
 8007114:	1909      	addeq	r1, r1, r4
 8007116:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8007118:	6844      	ldr	r4, [r0, #4]
 800711a:	1901      	adds	r1, r0, r4
 800711c:	428b      	cmp	r3, r1
 800711e:	d107      	bne.n	8007130 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8007120:	4907      	ldr	r1, [pc, #28]	; (8007140 <prvInsertBlockIntoFreeList+0x44>)
 8007122:	6809      	ldr	r1, [r1, #0]
 8007124:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8007126:	bf1f      	itttt	ne
 8007128:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800712a:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800712c:	1909      	addne	r1, r1, r4
 800712e:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8007130:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8007132:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8007134:	bf18      	it	ne
 8007136:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8007138:	bd10      	pop	{r4, pc}
 800713a:	bf00      	nop
 800713c:	20011fec 	.word	0x20011fec
 8007140:	20001fd4 	.word	0x20001fd4

08007144 <pvPortMalloc>:
{
 8007144:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007148:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800714a:	f001 f9cb 	bl	80084e4 <vTaskSuspendAll>
		if( pxEnd == NULL )
 800714e:	4842      	ldr	r0, [pc, #264]	; (8007258 <pvPortMalloc+0x114>)
 8007150:	4d42      	ldr	r5, [pc, #264]	; (800725c <pvPortMalloc+0x118>)
 8007152:	6803      	ldr	r3, [r0, #0]
 8007154:	bb0b      	cbnz	r3, 800719a <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8007156:	4942      	ldr	r1, [pc, #264]	; (8007260 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8007158:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800715a:	bf1f      	itttt	ne
 800715c:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800715e:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8007162:	f501 3280 	addne.w	r2, r1, #65536	; 0x10000
 8007166:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007168:	bf14      	ite	ne
 800716a:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800716c:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8007170:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8007172:	4e3c      	ldr	r6, [pc, #240]	; (8007264 <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 8007174:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8007176:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 800717a:	2300      	movs	r3, #0
 800717c:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800717e:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8007180:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8007184:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8007186:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 800718a:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800718c:	4a36      	ldr	r2, [pc, #216]	; (8007268 <pvPortMalloc+0x124>)
 800718e:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8007190:	4a36      	ldr	r2, [pc, #216]	; (800726c <pvPortMalloc+0x128>)
 8007192:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8007194:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8007198:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800719a:	682f      	ldr	r7, [r5, #0]
 800719c:	4227      	tst	r7, r4
 800719e:	d155      	bne.n	800724c <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 80071a0:	2c00      	cmp	r4, #0
 80071a2:	d046      	beq.n	8007232 <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 80071a4:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 80071a8:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 80071aa:	bf1c      	itt	ne
 80071ac:	f023 0307 	bicne.w	r3, r3, #7
 80071b0:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 80071b2:	2b00      	cmp	r3, #0
 80071b4:	d04a      	beq.n	800724c <pvPortMalloc+0x108>
 80071b6:	4c2d      	ldr	r4, [pc, #180]	; (800726c <pvPortMalloc+0x128>)
 80071b8:	6826      	ldr	r6, [r4, #0]
 80071ba:	429e      	cmp	r6, r3
 80071bc:	d346      	bcc.n	800724c <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 80071be:	4a29      	ldr	r2, [pc, #164]	; (8007264 <pvPortMalloc+0x120>)
 80071c0:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 80071c2:	6869      	ldr	r1, [r5, #4]
 80071c4:	4299      	cmp	r1, r3
 80071c6:	d204      	bcs.n	80071d2 <pvPortMalloc+0x8e>
 80071c8:	f8d5 c000 	ldr.w	ip, [r5]
 80071cc:	f1bc 0f00 	cmp.w	ip, #0
 80071d0:	d115      	bne.n	80071fe <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 80071d2:	6800      	ldr	r0, [r0, #0]
 80071d4:	42a8      	cmp	r0, r5
 80071d6:	d039      	beq.n	800724c <pvPortMalloc+0x108>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80071d8:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80071da:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80071dc:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80071e0:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80071e2:	2910      	cmp	r1, #16
 80071e4:	d912      	bls.n	800720c <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 80071e6:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 80071e8:	0742      	lsls	r2, r0, #29
 80071ea:	d00b      	beq.n	8007204 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 80071ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80071f0:	f383 8811 	msr	BASEPRI, r3
 80071f4:	f3bf 8f6f 	isb	sy
 80071f8:	f3bf 8f4f 	dsb	sy
 80071fc:	e7fe      	b.n	80071fc <pvPortMalloc+0xb8>
 80071fe:	462a      	mov	r2, r5
 8007200:	4665      	mov	r5, ip
 8007202:	e7de      	b.n	80071c2 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8007204:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8007206:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8007208:	f7ff ff78 	bl	80070fc <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800720c:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800720e:	4916      	ldr	r1, [pc, #88]	; (8007268 <pvPortMalloc+0x124>)
					xNumberOfSuccessfulAllocations++;
 8007210:	4a17      	ldr	r2, [pc, #92]	; (8007270 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007212:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8007214:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8007216:	431f      	orrs	r7, r3
					pxBlock->pxNextFreeBlock = NULL;
 8007218:	2300      	movs	r3, #0
 800721a:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 800721c:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800721e:	6026      	str	r6, [r4, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8007220:	4286      	cmp	r6, r0
					xNumberOfSuccessfulAllocations++;
 8007222:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8007226:	bf38      	it	cc
 8007228:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800722a:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800722e:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 8007230:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 8007232:	f001 fa03 	bl	800863c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8007236:	0763      	lsls	r3, r4, #29
 8007238:	d00a      	beq.n	8007250 <pvPortMalloc+0x10c>
 800723a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800723e:	f383 8811 	msr	BASEPRI, r3
 8007242:	f3bf 8f6f 	isb	sy
 8007246:	f3bf 8f4f 	dsb	sy
 800724a:	e7fe      	b.n	800724a <pvPortMalloc+0x106>
void *pvReturn = NULL;
 800724c:	2400      	movs	r4, #0
 800724e:	e7f0      	b.n	8007232 <pvPortMalloc+0xee>
}
 8007250:	4620      	mov	r0, r4
 8007252:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007256:	bf00      	nop
 8007258:	20001fd4 	.word	0x20001fd4
 800725c:	20011fd8 	.word	0x20011fd8
 8007260:	20001fd8 	.word	0x20001fd8
 8007264:	20011fec 	.word	0x20011fec
 8007268:	20011fe0 	.word	0x20011fe0
 800726c:	20011fdc 	.word	0x20011fdc
 8007270:	20011fe4 	.word	0x20011fe4

08007274 <vPortFree>:
{
 8007274:	b510      	push	{r4, lr}
	if( pv != NULL )
 8007276:	4604      	mov	r4, r0
 8007278:	b390      	cbz	r0, 80072e0 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800727a:	4a1a      	ldr	r2, [pc, #104]	; (80072e4 <vPortFree+0x70>)
 800727c:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8007280:	6812      	ldr	r2, [r2, #0]
 8007282:	4213      	tst	r3, r2
 8007284:	d108      	bne.n	8007298 <vPortFree+0x24>
 8007286:	f04f 0350 	mov.w	r3, #80	; 0x50
 800728a:	f383 8811 	msr	BASEPRI, r3
 800728e:	f3bf 8f6f 	isb	sy
 8007292:	f3bf 8f4f 	dsb	sy
 8007296:	e7fe      	b.n	8007296 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8007298:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800729c:	b141      	cbz	r1, 80072b0 <vPortFree+0x3c>
 800729e:	f04f 0350 	mov.w	r3, #80	; 0x50
 80072a2:	f383 8811 	msr	BASEPRI, r3
 80072a6:	f3bf 8f6f 	isb	sy
 80072aa:	f3bf 8f4f 	dsb	sy
 80072ae:	e7fe      	b.n	80072ae <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 80072b0:	ea23 0302 	bic.w	r3, r3, r2
 80072b4:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 80072b8:	f001 f914 	bl	80084e4 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 80072bc:	4a0a      	ldr	r2, [pc, #40]	; (80072e8 <vPortFree+0x74>)
 80072be:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80072c2:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80072c4:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 80072c8:	440b      	add	r3, r1
 80072ca:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80072cc:	f7ff ff16 	bl	80070fc <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 80072d0:	4a06      	ldr	r2, [pc, #24]	; (80072ec <vPortFree+0x78>)
 80072d2:	6813      	ldr	r3, [r2, #0]
}
 80072d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 80072d8:	3301      	adds	r3, #1
 80072da:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 80072dc:	f001 b9ae 	b.w	800863c <xTaskResumeAll>
}
 80072e0:	bd10      	pop	{r4, pc}
 80072e2:	bf00      	nop
 80072e4:	20011fd8 	.word	0x20011fd8
 80072e8:	20011fdc 	.word	0x20011fdc
 80072ec:	20011fe8 	.word	0x20011fe8

080072f0 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80072f0:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 80072f4:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80072f8:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80072fc:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80072fe:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8007300:	2300      	movs	r3, #0
 8007302:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8007304:	4770      	bx	lr

08007306 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8007306:	2300      	movs	r3, #0
 8007308:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800730a:	4770      	bx	lr

0800730c <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800730c:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800730e:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8007310:	689a      	ldr	r2, [r3, #8]
 8007312:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8007314:	689a      	ldr	r2, [r3, #8]
 8007316:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8007318:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800731a:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800731c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800731e:	3301      	adds	r3, #1
 8007320:	6003      	str	r3, [r0, #0]
}
 8007322:	4770      	bx	lr

08007324 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8007324:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8007326:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8007328:	1c63      	adds	r3, r4, #1
 800732a:	d10a      	bne.n	8007342 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800732c:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800732e:	685a      	ldr	r2, [r3, #4]
 8007330:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8007332:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8007334:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8007336:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8007338:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800733a:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800733c:	3301      	adds	r3, #1
 800733e:	6003      	str	r3, [r0, #0]
}
 8007340:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8007342:	f100 0208 	add.w	r2, r0, #8
 8007346:	4613      	mov	r3, r2
 8007348:	6852      	ldr	r2, [r2, #4]
 800734a:	6815      	ldr	r5, [r2, #0]
 800734c:	42a5      	cmp	r5, r4
 800734e:	d9fa      	bls.n	8007346 <vListInsert+0x22>
 8007350:	e7ed      	b.n	800732e <vListInsert+0xa>

08007352 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007352:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8007356:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8007358:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800735a:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800735c:	6859      	ldr	r1, [r3, #4]
 800735e:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8007360:	bf08      	it	eq
 8007362:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8007364:	2200      	movs	r2, #0
 8007366:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8007368:	681a      	ldr	r2, [r3, #0]
 800736a:	3a01      	subs	r2, #1
 800736c:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800736e:	6818      	ldr	r0, [r3, #0]
}
 8007370:	4770      	bx	lr
	...

08007374 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8007374:	4808      	ldr	r0, [pc, #32]	; (8007398 <prvPortStartFirstTask+0x24>)
 8007376:	6800      	ldr	r0, [r0, #0]
 8007378:	6800      	ldr	r0, [r0, #0]
 800737a:	f380 8808 	msr	MSP, r0
 800737e:	f04f 0000 	mov.w	r0, #0
 8007382:	f380 8814 	msr	CONTROL, r0
 8007386:	b662      	cpsie	i
 8007388:	b661      	cpsie	f
 800738a:	f3bf 8f4f 	dsb	sy
 800738e:	f3bf 8f6f 	isb	sy
 8007392:	df00      	svc	0
 8007394:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8007396:	0000      	.short	0x0000
 8007398:	e000ed08 	.word	0xe000ed08

0800739c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800739c:	f8df 000c 	ldr.w	r0, [pc, #12]	; 80073ac <vPortEnableVFP+0x10>
 80073a0:	6801      	ldr	r1, [r0, #0]
 80073a2:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80073a6:	6001      	str	r1, [r0, #0]
 80073a8:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 80073aa:	0000      	.short	0x0000
 80073ac:	e000ed88 	.word	0xe000ed88

080073b0 <prvTaskExitError>:
{
 80073b0:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 80073b2:	2300      	movs	r3, #0
 80073b4:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 80073b6:	4b0d      	ldr	r3, [pc, #52]	; (80073ec <prvTaskExitError+0x3c>)
 80073b8:	681b      	ldr	r3, [r3, #0]
 80073ba:	3301      	adds	r3, #1
 80073bc:	d008      	beq.n	80073d0 <prvTaskExitError+0x20>
 80073be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80073c2:	f383 8811 	msr	BASEPRI, r3
 80073c6:	f3bf 8f6f 	isb	sy
 80073ca:	f3bf 8f4f 	dsb	sy
 80073ce:	e7fe      	b.n	80073ce <prvTaskExitError+0x1e>
 80073d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80073d4:	f383 8811 	msr	BASEPRI, r3
 80073d8:	f3bf 8f6f 	isb	sy
 80073dc:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 80073e0:	9b01      	ldr	r3, [sp, #4]
 80073e2:	2b00      	cmp	r3, #0
 80073e4:	d0fc      	beq.n	80073e0 <prvTaskExitError+0x30>
}
 80073e6:	b002      	add	sp, #8
 80073e8:	4770      	bx	lr
 80073ea:	bf00      	nop
 80073ec:	20000080 	.word	0x20000080

080073f0 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 80073f0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80073f4:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 80073f8:	4b07      	ldr	r3, [pc, #28]	; (8007418 <pxPortInitialiseStack+0x28>)
 80073fa:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80073fe:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8007402:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8007406:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800740a:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800740e:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8007412:	3844      	subs	r0, #68	; 0x44
 8007414:	4770      	bx	lr
 8007416:	bf00      	nop
 8007418:	080073b1 	.word	0x080073b1
 800741c:	00000000 	.word	0x00000000

08007420 <SVC_Handler>:
	__asm volatile (
 8007420:	4b07      	ldr	r3, [pc, #28]	; (8007440 <pxCurrentTCBConst2>)
 8007422:	6819      	ldr	r1, [r3, #0]
 8007424:	6808      	ldr	r0, [r1, #0]
 8007426:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800742a:	f380 8809 	msr	PSP, r0
 800742e:	f3bf 8f6f 	isb	sy
 8007432:	f04f 0000 	mov.w	r0, #0
 8007436:	f380 8811 	msr	BASEPRI, r0
 800743a:	4770      	bx	lr
 800743c:	f3af 8000 	nop.w

08007440 <pxCurrentTCBConst2>:
 8007440:	2001203c 	.word	0x2001203c

08007444 <vPortEnterCritical>:
 8007444:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007448:	f383 8811 	msr	BASEPRI, r3
 800744c:	f3bf 8f6f 	isb	sy
 8007450:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8007454:	4a0a      	ldr	r2, [pc, #40]	; (8007480 <vPortEnterCritical+0x3c>)
 8007456:	6813      	ldr	r3, [r2, #0]
 8007458:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800745a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800745c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800745e:	d10e      	bne.n	800747e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8007460:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007464:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8007468:	b2db      	uxtb	r3, r3
 800746a:	b143      	cbz	r3, 800747e <vPortEnterCritical+0x3a>
 800746c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007470:	f383 8811 	msr	BASEPRI, r3
 8007474:	f3bf 8f6f 	isb	sy
 8007478:	f3bf 8f4f 	dsb	sy
 800747c:	e7fe      	b.n	800747c <vPortEnterCritical+0x38>
}
 800747e:	4770      	bx	lr
 8007480:	20000080 	.word	0x20000080

08007484 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8007484:	4a08      	ldr	r2, [pc, #32]	; (80074a8 <vPortExitCritical+0x24>)
 8007486:	6813      	ldr	r3, [r2, #0]
 8007488:	b943      	cbnz	r3, 800749c <vPortExitCritical+0x18>
 800748a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800748e:	f383 8811 	msr	BASEPRI, r3
 8007492:	f3bf 8f6f 	isb	sy
 8007496:	f3bf 8f4f 	dsb	sy
 800749a:	e7fe      	b.n	800749a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800749c:	3b01      	subs	r3, #1
 800749e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 80074a0:	b90b      	cbnz	r3, 80074a6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 80074a2:	f383 8811 	msr	BASEPRI, r3
}
 80074a6:	4770      	bx	lr
 80074a8:	20000080 	.word	0x20000080
 80074ac:	00000000 	.word	0x00000000

080074b0 <PendSV_Handler>:
	__asm volatile
 80074b0:	f3ef 8009 	mrs	r0, PSP
 80074b4:	f3bf 8f6f 	isb	sy
 80074b8:	4b15      	ldr	r3, [pc, #84]	; (8007510 <pxCurrentTCBConst>)
 80074ba:	681a      	ldr	r2, [r3, #0]
 80074bc:	f01e 0f10 	tst.w	lr, #16
 80074c0:	bf08      	it	eq
 80074c2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 80074c6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80074ca:	6010      	str	r0, [r2, #0]
 80074cc:	e92d 0009 	stmdb	sp!, {r0, r3}
 80074d0:	f04f 0050 	mov.w	r0, #80	; 0x50
 80074d4:	f380 8811 	msr	BASEPRI, r0
 80074d8:	f3bf 8f4f 	dsb	sy
 80074dc:	f3bf 8f6f 	isb	sy
 80074e0:	f001 f944 	bl	800876c <vTaskSwitchContext>
 80074e4:	f04f 0000 	mov.w	r0, #0
 80074e8:	f380 8811 	msr	BASEPRI, r0
 80074ec:	bc09      	pop	{r0, r3}
 80074ee:	6819      	ldr	r1, [r3, #0]
 80074f0:	6808      	ldr	r0, [r1, #0]
 80074f2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80074f6:	f01e 0f10 	tst.w	lr, #16
 80074fa:	bf08      	it	eq
 80074fc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8007500:	f380 8809 	msr	PSP, r0
 8007504:	f3bf 8f6f 	isb	sy
 8007508:	4770      	bx	lr
 800750a:	bf00      	nop
 800750c:	f3af 8000 	nop.w

08007510 <pxCurrentTCBConst>:
 8007510:	2001203c 	.word	0x2001203c

08007514 <xPortSysTickHandler>:
{
 8007514:	b508      	push	{r3, lr}
	__asm volatile
 8007516:	f04f 0350 	mov.w	r3, #80	; 0x50
 800751a:	f383 8811 	msr	BASEPRI, r3
 800751e:	f3bf 8f6f 	isb	sy
 8007522:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8007526:	f000 fff3 	bl	8008510 <xTaskIncrementTick>
 800752a:	b128      	cbz	r0, 8007538 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800752c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007530:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007534:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8007538:	2300      	movs	r3, #0
 800753a:	f383 8811 	msr	BASEPRI, r3
}
 800753e:	bd08      	pop	{r3, pc}

08007540 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8007540:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8007544:	2300      	movs	r3, #0
 8007546:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8007548:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800754a:	4b05      	ldr	r3, [pc, #20]	; (8007560 <vPortSetupTimerInterrupt+0x20>)
 800754c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8007550:	681b      	ldr	r3, [r3, #0]
 8007552:	fbb3 f3f1 	udiv	r3, r3, r1
 8007556:	3b01      	subs	r3, #1
 8007558:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800755a:	2307      	movs	r3, #7
 800755c:	6113      	str	r3, [r2, #16]
}
 800755e:	4770      	bx	lr
 8007560:	20000074 	.word	0x20000074

08007564 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8007564:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8007568:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800756a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800756e:	4a3a      	ldr	r2, [pc, #232]	; (8007658 <xPortStartScheduler+0xf4>)
 8007570:	4291      	cmp	r1, r2
 8007572:	d108      	bne.n	8007586 <xPortStartScheduler+0x22>
	__asm volatile
 8007574:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007578:	f383 8811 	msr	BASEPRI, r3
 800757c:	f3bf 8f6f 	isb	sy
 8007580:	f3bf 8f4f 	dsb	sy
 8007584:	e7fe      	b.n	8007584 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8007586:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800758a:	4b34      	ldr	r3, [pc, #208]	; (800765c <xPortStartScheduler+0xf8>)
 800758c:	429a      	cmp	r2, r3
 800758e:	d108      	bne.n	80075a2 <xPortStartScheduler+0x3e>
 8007590:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007594:	f383 8811 	msr	BASEPRI, r3
 8007598:	f3bf 8f6f 	isb	sy
 800759c:	f3bf 8f4f 	dsb	sy
 80075a0:	e7fe      	b.n	80075a0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 80075a2:	4b2f      	ldr	r3, [pc, #188]	; (8007660 <xPortStartScheduler+0xfc>)
 80075a4:	781a      	ldrb	r2, [r3, #0]
 80075a6:	b2d2      	uxtb	r2, r2
 80075a8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 80075aa:	22ff      	movs	r2, #255	; 0xff
 80075ac:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80075ae:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80075b0:	4a2c      	ldr	r2, [pc, #176]	; (8007664 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 80075b2:	b2db      	uxtb	r3, r3
 80075b4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 80075b8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80075bc:	f003 0350 	and.w	r3, r3, #80	; 0x50
 80075c0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 80075c2:	4a29      	ldr	r2, [pc, #164]	; (8007668 <xPortStartScheduler+0x104>)
 80075c4:	2307      	movs	r3, #7
 80075c6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 80075c8:	2100      	movs	r1, #0
 80075ca:	f89d 0003 	ldrb.w	r0, [sp, #3]
 80075ce:	0600      	lsls	r0, r0, #24
 80075d0:	f103 34ff 	add.w	r4, r3, #4294967295
 80075d4:	d40c      	bmi.n	80075f0 <xPortStartScheduler+0x8c>
 80075d6:	b111      	cbz	r1, 80075de <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 80075d8:	2b03      	cmp	r3, #3
 80075da:	6013      	str	r3, [r2, #0]
 80075dc:	d011      	beq.n	8007602 <xPortStartScheduler+0x9e>
 80075de:	f04f 0350 	mov.w	r3, #80	; 0x50
 80075e2:	f383 8811 	msr	BASEPRI, r3
 80075e6:	f3bf 8f6f 	isb	sy
 80075ea:	f3bf 8f4f 	dsb	sy
 80075ee:	e7fe      	b.n	80075ee <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 80075f0:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80075f4:	005b      	lsls	r3, r3, #1
 80075f6:	b2db      	uxtb	r3, r3
 80075f8:	f88d 3003 	strb.w	r3, [sp, #3]
 80075fc:	2101      	movs	r1, #1
 80075fe:	4623      	mov	r3, r4
 8007600:	e7e3      	b.n	80075ca <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8007602:	f44f 7340 	mov.w	r3, #768	; 0x300
 8007606:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007608:	9b01      	ldr	r3, [sp, #4]
 800760a:	4a15      	ldr	r2, [pc, #84]	; (8007660 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800760c:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8007610:	b2db      	uxtb	r3, r3
 8007612:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8007614:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8007618:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800761c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8007620:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8007624:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8007628:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 800762c:	f7ff ff88 	bl	8007540 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8007630:	4b0e      	ldr	r3, [pc, #56]	; (800766c <xPortStartScheduler+0x108>)
 8007632:	2500      	movs	r5, #0
 8007634:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8007636:	f7ff feb1 	bl	800739c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800763a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 800763e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8007642:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8007646:	f7ff fe95 	bl	8007374 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800764a:	f001 f88f 	bl	800876c <vTaskSwitchContext>
	prvTaskExitError();
 800764e:	f7ff feaf 	bl	80073b0 <prvTaskExitError>
}
 8007652:	4628      	mov	r0, r5
 8007654:	b003      	add	sp, #12
 8007656:	bd30      	pop	{r4, r5, pc}
 8007658:	410fc271 	.word	0x410fc271
 800765c:	410fc270 	.word	0x410fc270
 8007660:	e000e400 	.word	0xe000e400
 8007664:	20011ff4 	.word	0x20011ff4
 8007668:	20011ff8 	.word	0x20011ff8
 800766c:	20000080 	.word	0x20000080

08007670 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8007670:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8007674:	2b0f      	cmp	r3, #15
 8007676:	d90e      	bls.n	8007696 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8007678:	4a11      	ldr	r2, [pc, #68]	; (80076c0 <vPortValidateInterruptPriority+0x50>)
 800767a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800767c:	4a11      	ldr	r2, [pc, #68]	; (80076c4 <vPortValidateInterruptPriority+0x54>)
 800767e:	7812      	ldrb	r2, [r2, #0]
 8007680:	429a      	cmp	r2, r3
 8007682:	d908      	bls.n	8007696 <vPortValidateInterruptPriority+0x26>
 8007684:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007688:	f383 8811 	msr	BASEPRI, r3
 800768c:	f3bf 8f6f 	isb	sy
 8007690:	f3bf 8f4f 	dsb	sy
 8007694:	e7fe      	b.n	8007694 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8007696:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800769a:	4a0b      	ldr	r2, [pc, #44]	; (80076c8 <vPortValidateInterruptPriority+0x58>)
 800769c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 80076a0:	6812      	ldr	r2, [r2, #0]
 80076a2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80076a6:	4293      	cmp	r3, r2
 80076a8:	d908      	bls.n	80076bc <vPortValidateInterruptPriority+0x4c>
 80076aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076ae:	f383 8811 	msr	BASEPRI, r3
 80076b2:	f3bf 8f6f 	isb	sy
 80076b6:	f3bf 8f4f 	dsb	sy
 80076ba:	e7fe      	b.n	80076ba <vPortValidateInterruptPriority+0x4a>
	}
 80076bc:	4770      	bx	lr
 80076be:	bf00      	nop
 80076c0:	e000e3f0 	.word	0xe000e3f0
 80076c4:	20011ff4 	.word	0x20011ff4
 80076c8:	20011ff8 	.word	0x20011ff8

080076cc <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 80076cc:	b510      	push	{r4, lr}
 80076ce:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80076d0:	f7ff feb8 	bl	8007444 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 80076d4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80076d6:	f7ff fed5 	bl	8007484 <vPortExitCritical>

	return xReturn;
}
 80076da:	fab4 f084 	clz	r0, r4
 80076de:	0940      	lsrs	r0, r0, #5
 80076e0:	bd10      	pop	{r4, pc}

080076e2 <prvCopyDataToQueue>:
{
 80076e2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80076e4:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80076e6:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80076e8:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 80076ea:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80076ec:	b952      	cbnz	r2, 8007704 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80076ee:	6807      	ldr	r7, [r0, #0]
 80076f0:	bb47      	cbnz	r7, 8007744 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80076f2:	6880      	ldr	r0, [r0, #8]
 80076f4:	f001 f996 	bl	8008a24 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 80076f8:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80076fa:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80076fc:	3601      	adds	r6, #1
 80076fe:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8007700:	4628      	mov	r0, r5
 8007702:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8007704:	b965      	cbnz	r5, 8007720 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007706:	6840      	ldr	r0, [r0, #4]
 8007708:	f014 f966 	bl	801b9d8 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800770c:	6863      	ldr	r3, [r4, #4]
 800770e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007710:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007712:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007714:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007716:	4293      	cmp	r3, r2
 8007718:	d3f0      	bcc.n	80076fc <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800771a:	6823      	ldr	r3, [r4, #0]
 800771c:	6063      	str	r3, [r4, #4]
 800771e:	e7ed      	b.n	80076fc <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8007720:	68c0      	ldr	r0, [r0, #12]
 8007722:	f014 f959 	bl	801b9d8 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007726:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007728:	68e3      	ldr	r3, [r4, #12]
 800772a:	4251      	negs	r1, r2
 800772c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800772e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007730:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8007732:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8007734:	bf3e      	ittt	cc
 8007736:	68a3      	ldrcc	r3, [r4, #8]
 8007738:	185b      	addcc	r3, r3, r1
 800773a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800773c:	2d02      	cmp	r5, #2
 800773e:	d101      	bne.n	8007744 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007740:	b116      	cbz	r6, 8007748 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8007742:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8007744:	2500      	movs	r5, #0
 8007746:	e7d9      	b.n	80076fc <prvCopyDataToQueue+0x1a>
 8007748:	4635      	mov	r5, r6
 800774a:	e7d7      	b.n	80076fc <prvCopyDataToQueue+0x1a>

0800774c <prvCopyDataFromQueue>:
{
 800774c:	4603      	mov	r3, r0
 800774e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007750:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8007752:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007754:	b16a      	cbz	r2, 8007772 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007756:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007758:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800775a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800775c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800775e:	bf28      	it	cs
 8007760:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007762:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007764:	bf28      	it	cs
 8007766:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007768:	68d9      	ldr	r1, [r3, #12]
}
 800776a:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800776e:	f014 b933 	b.w	801b9d8 <memcpy>
}
 8007772:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007776:	4770      	bx	lr

08007778 <prvUnlockQueue>:
{
 8007778:	b570      	push	{r4, r5, r6, lr}
 800777a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800777c:	f7ff fe62 	bl	8007444 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8007780:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007784:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8007788:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800778a:	2d00      	cmp	r5, #0
 800778c:	dc14      	bgt.n	80077b8 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800778e:	23ff      	movs	r3, #255	; 0xff
 8007790:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8007794:	f7ff fe76 	bl	8007484 <vPortExitCritical>
	taskENTER_CRITICAL();
 8007798:	f7ff fe54 	bl	8007444 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800779c:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80077a0:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 80077a4:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80077a6:	2d00      	cmp	r5, #0
 80077a8:	dc12      	bgt.n	80077d0 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 80077aa:	23ff      	movs	r3, #255	; 0xff
 80077ac:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 80077b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 80077b4:	f7ff be66 	b.w	8007484 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80077b8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80077ba:	2b00      	cmp	r3, #0
 80077bc:	d0e7      	beq.n	800778e <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80077be:	4630      	mov	r0, r6
 80077c0:	f001 f846 	bl	8008850 <xTaskRemoveFromEventList>
 80077c4:	b108      	cbz	r0, 80077ca <prvUnlockQueue+0x52>
						vTaskMissedYield();
 80077c6:	f001 f8cf 	bl	8008968 <vTaskMissedYield>
			--cTxLock;
 80077ca:	3d01      	subs	r5, #1
 80077cc:	b26d      	sxtb	r5, r5
 80077ce:	e7dc      	b.n	800778a <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80077d0:	6923      	ldr	r3, [r4, #16]
 80077d2:	2b00      	cmp	r3, #0
 80077d4:	d0e9      	beq.n	80077aa <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80077d6:	4630      	mov	r0, r6
 80077d8:	f001 f83a 	bl	8008850 <xTaskRemoveFromEventList>
 80077dc:	b108      	cbz	r0, 80077e2 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 80077de:	f001 f8c3 	bl	8008968 <vTaskMissedYield>
				--cRxLock;
 80077e2:	3d01      	subs	r5, #1
 80077e4:	b26d      	sxtb	r5, r5
 80077e6:	e7de      	b.n	80077a6 <prvUnlockQueue+0x2e>

080077e8 <xQueueGenericReset>:
{
 80077e8:	b538      	push	{r3, r4, r5, lr}
 80077ea:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80077ec:	4604      	mov	r4, r0
 80077ee:	b940      	cbnz	r0, 8007802 <xQueueGenericReset+0x1a>
 80077f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80077f4:	f383 8811 	msr	BASEPRI, r3
 80077f8:	f3bf 8f6f 	isb	sy
 80077fc:	f3bf 8f4f 	dsb	sy
 8007800:	e7fe      	b.n	8007800 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8007802:	f7ff fe1f 	bl	8007444 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007806:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800780a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800780c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800780e:	434b      	muls	r3, r1
 8007810:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007812:	1a5b      	subs	r3, r3, r1
 8007814:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007816:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007818:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800781a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800781c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800781e:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8007820:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8007824:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8007828:	b9a5      	cbnz	r5, 8007854 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800782a:	6923      	ldr	r3, [r4, #16]
 800782c:	b173      	cbz	r3, 800784c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800782e:	f104 0010 	add.w	r0, r4, #16
 8007832:	f001 f80d 	bl	8008850 <xTaskRemoveFromEventList>
 8007836:	b148      	cbz	r0, 800784c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8007838:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800783c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007840:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007844:	f3bf 8f4f 	dsb	sy
 8007848:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800784c:	f7ff fe1a 	bl	8007484 <vPortExitCritical>
}
 8007850:	2001      	movs	r0, #1
 8007852:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8007854:	f104 0010 	add.w	r0, r4, #16
 8007858:	f7ff fd4a 	bl	80072f0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800785c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007860:	f7ff fd46 	bl	80072f0 <vListInitialise>
 8007864:	e7f2      	b.n	800784c <xQueueGenericReset+0x64>

08007866 <xQueueGenericCreateStatic>:
	{
 8007866:	b513      	push	{r0, r1, r4, lr}
 8007868:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800786a:	b940      	cbnz	r0, 800787e <xQueueGenericCreateStatic+0x18>
 800786c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007870:	f383 8811 	msr	BASEPRI, r3
 8007874:	f3bf 8f6f 	isb	sy
 8007878:	f3bf 8f4f 	dsb	sy
 800787c:	e7fe      	b.n	800787c <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800787e:	b943      	cbnz	r3, 8007892 <xQueueGenericCreateStatic+0x2c>
 8007880:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007884:	f383 8811 	msr	BASEPRI, r3
 8007888:	f3bf 8f6f 	isb	sy
 800788c:	f3bf 8f4f 	dsb	sy
 8007890:	e7fe      	b.n	8007890 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8007892:	b14a      	cbz	r2, 80078a8 <xQueueGenericCreateStatic+0x42>
 8007894:	b991      	cbnz	r1, 80078bc <xQueueGenericCreateStatic+0x56>
 8007896:	f04f 0350 	mov.w	r3, #80	; 0x50
 800789a:	f383 8811 	msr	BASEPRI, r3
 800789e:	f3bf 8f6f 	isb	sy
 80078a2:	f3bf 8f4f 	dsb	sy
 80078a6:	e7fe      	b.n	80078a6 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80078a8:	b141      	cbz	r1, 80078bc <xQueueGenericCreateStatic+0x56>
 80078aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80078ae:	f383 8811 	msr	BASEPRI, r3
 80078b2:	f3bf 8f6f 	isb	sy
 80078b6:	f3bf 8f4f 	dsb	sy
 80078ba:	e7fe      	b.n	80078ba <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80078bc:	2350      	movs	r3, #80	; 0x50
 80078be:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 80078c0:	9b01      	ldr	r3, [sp, #4]
 80078c2:	2b50      	cmp	r3, #80	; 0x50
 80078c4:	d008      	beq.n	80078d8 <xQueueGenericCreateStatic+0x72>
 80078c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80078ca:	f383 8811 	msr	BASEPRI, r3
 80078ce:	f3bf 8f6f 	isb	sy
 80078d2:	f3bf 8f4f 	dsb	sy
 80078d6:	e7fe      	b.n	80078d6 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 80078d8:	2900      	cmp	r1, #0
 80078da:	bf08      	it	eq
 80078dc:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80078de:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80078e0:	6022      	str	r2, [r4, #0]
 80078e2:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 80078e4:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80078e8:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80078ec:	4619      	mov	r1, r3
 80078ee:	4620      	mov	r0, r4
 80078f0:	f7ff ff7a 	bl	80077e8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80078f4:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80078f8:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 80078fc:	4620      	mov	r0, r4
 80078fe:	b002      	add	sp, #8
 8007900:	bd10      	pop	{r4, pc}

08007902 <xQueueGenericCreate>:
	{
 8007902:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007904:	460d      	mov	r5, r1
 8007906:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007908:	4606      	mov	r6, r0
 800790a:	b940      	cbnz	r0, 800791e <xQueueGenericCreate+0x1c>
 800790c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007910:	f383 8811 	msr	BASEPRI, r3
 8007914:	f3bf 8f6f 	isb	sy
 8007918:	f3bf 8f4f 	dsb	sy
 800791c:	e7fe      	b.n	800791c <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800791e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8007920:	3050      	adds	r0, #80	; 0x50
 8007922:	f7ff fc0f 	bl	8007144 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8007926:	4604      	mov	r4, r0
 8007928:	b170      	cbz	r0, 8007948 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800792a:	2300      	movs	r3, #0
 800792c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8007930:	b165      	cbz	r5, 800794c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007932:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8007936:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800793a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800793c:	2101      	movs	r1, #1
 800793e:	4620      	mov	r0, r4
 8007940:	f7ff ff52 	bl	80077e8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007944:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8007948:	4620      	mov	r0, r4
 800794a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800794c:	4603      	mov	r3, r0
 800794e:	e7f2      	b.n	8007936 <xQueueGenericCreate+0x34>

08007950 <xQueueCreateCountingSemaphoreStatic>:
	{
 8007950:	b513      	push	{r0, r1, r4, lr}
 8007952:	4613      	mov	r3, r2
 8007954:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007956:	b940      	cbnz	r0, 800796a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8007958:	f04f 0350 	mov.w	r3, #80	; 0x50
 800795c:	f383 8811 	msr	BASEPRI, r3
 8007960:	f3bf 8f6f 	isb	sy
 8007964:	f3bf 8f4f 	dsb	sy
 8007968:	e7fe      	b.n	8007968 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800796a:	4288      	cmp	r0, r1
 800796c:	d208      	bcs.n	8007980 <xQueueCreateCountingSemaphoreStatic+0x30>
 800796e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007972:	f383 8811 	msr	BASEPRI, r3
 8007976:	f3bf 8f6f 	isb	sy
 800797a:	f3bf 8f4f 	dsb	sy
 800797e:	e7fe      	b.n	800797e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8007980:	2202      	movs	r2, #2
 8007982:	9200      	str	r2, [sp, #0]
 8007984:	2200      	movs	r2, #0
 8007986:	4611      	mov	r1, r2
 8007988:	f7ff ff6d 	bl	8007866 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800798c:	b100      	cbz	r0, 8007990 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800798e:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8007990:	b002      	add	sp, #8
 8007992:	bd10      	pop	{r4, pc}

08007994 <xQueueCreateCountingSemaphore>:
	{
 8007994:	b510      	push	{r4, lr}
 8007996:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007998:	b940      	cbnz	r0, 80079ac <xQueueCreateCountingSemaphore+0x18>
 800799a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800799e:	f383 8811 	msr	BASEPRI, r3
 80079a2:	f3bf 8f6f 	isb	sy
 80079a6:	f3bf 8f4f 	dsb	sy
 80079aa:	e7fe      	b.n	80079aa <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 80079ac:	4288      	cmp	r0, r1
 80079ae:	d208      	bcs.n	80079c2 <xQueueCreateCountingSemaphore+0x2e>
 80079b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079b4:	f383 8811 	msr	BASEPRI, r3
 80079b8:	f3bf 8f6f 	isb	sy
 80079bc:	f3bf 8f4f 	dsb	sy
 80079c0:	e7fe      	b.n	80079c0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80079c2:	2202      	movs	r2, #2
 80079c4:	2100      	movs	r1, #0
 80079c6:	f7ff ff9c 	bl	8007902 <xQueueGenericCreate>
		if( xHandle != NULL )
 80079ca:	b100      	cbz	r0, 80079ce <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80079cc:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80079ce:	bd10      	pop	{r4, pc}

080079d0 <xQueueGenericSend>:
{
 80079d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80079d4:	b085      	sub	sp, #20
 80079d6:	4688      	mov	r8, r1
 80079d8:	9201      	str	r2, [sp, #4]
 80079da:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 80079dc:	4604      	mov	r4, r0
 80079de:	b940      	cbnz	r0, 80079f2 <xQueueGenericSend+0x22>
 80079e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079e4:	f383 8811 	msr	BASEPRI, r3
 80079e8:	f3bf 8f6f 	isb	sy
 80079ec:	f3bf 8f4f 	dsb	sy
 80079f0:	e7fe      	b.n	80079f0 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80079f2:	b951      	cbnz	r1, 8007a0a <xQueueGenericSend+0x3a>
 80079f4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80079f6:	b143      	cbz	r3, 8007a0a <xQueueGenericSend+0x3a>
 80079f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80079fc:	f383 8811 	msr	BASEPRI, r3
 8007a00:	f3bf 8f6f 	isb	sy
 8007a04:	f3bf 8f4f 	dsb	sy
 8007a08:	e7fe      	b.n	8007a08 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8007a0a:	2f02      	cmp	r7, #2
 8007a0c:	d10b      	bne.n	8007a26 <xQueueGenericSend+0x56>
 8007a0e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007a10:	2b01      	cmp	r3, #1
 8007a12:	d008      	beq.n	8007a26 <xQueueGenericSend+0x56>
 8007a14:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a18:	f383 8811 	msr	BASEPRI, r3
 8007a1c:	f3bf 8f6f 	isb	sy
 8007a20:	f3bf 8f4f 	dsb	sy
 8007a24:	e7fe      	b.n	8007a24 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007a26:	f000 ffab 	bl	8008980 <xTaskGetSchedulerState>
 8007a2a:	4606      	mov	r6, r0
 8007a2c:	b950      	cbnz	r0, 8007a44 <xQueueGenericSend+0x74>
 8007a2e:	9b01      	ldr	r3, [sp, #4]
 8007a30:	b14b      	cbz	r3, 8007a46 <xQueueGenericSend+0x76>
 8007a32:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007a36:	f383 8811 	msr	BASEPRI, r3
 8007a3a:	f3bf 8f6f 	isb	sy
 8007a3e:	f3bf 8f4f 	dsb	sy
 8007a42:	e7fe      	b.n	8007a42 <xQueueGenericSend+0x72>
 8007a44:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8007a46:	f04f 0900 	mov.w	r9, #0
 8007a4a:	e037      	b.n	8007abc <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007a4c:	9d01      	ldr	r5, [sp, #4]
 8007a4e:	b91d      	cbnz	r5, 8007a58 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8007a50:	f7ff fd18 	bl	8007484 <vPortExitCritical>
			return errQUEUE_FULL;
 8007a54:	2000      	movs	r0, #0
 8007a56:	e052      	b.n	8007afe <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8007a58:	b916      	cbnz	r6, 8007a60 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007a5a:	a802      	add	r0, sp, #8
 8007a5c:	f000 ff3c 	bl	80088d8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007a60:	f7ff fd10 	bl	8007484 <vPortExitCritical>
		vTaskSuspendAll();
 8007a64:	f000 fd3e 	bl	80084e4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007a68:	f7ff fcec 	bl	8007444 <vPortEnterCritical>
 8007a6c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007a70:	2bff      	cmp	r3, #255	; 0xff
 8007a72:	bf08      	it	eq
 8007a74:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8007a78:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007a7c:	2bff      	cmp	r3, #255	; 0xff
 8007a7e:	bf08      	it	eq
 8007a80:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8007a84:	f7ff fcfe 	bl	8007484 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007a88:	a901      	add	r1, sp, #4
 8007a8a:	a802      	add	r0, sp, #8
 8007a8c:	f000 ff30 	bl	80088f0 <xTaskCheckForTimeOut>
 8007a90:	2800      	cmp	r0, #0
 8007a92:	d14a      	bne.n	8007b2a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007a94:	f7ff fcd6 	bl	8007444 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8007a98:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007a9a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007a9c:	429a      	cmp	r2, r3
 8007a9e:	d131      	bne.n	8007b04 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007aa0:	f7ff fcf0 	bl	8007484 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8007aa4:	9901      	ldr	r1, [sp, #4]
 8007aa6:	f104 0010 	add.w	r0, r4, #16
 8007aaa:	f000 fe99 	bl	80087e0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007aae:	4620      	mov	r0, r4
 8007ab0:	f7ff fe62 	bl	8007778 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007ab4:	f000 fdc2 	bl	800863c <xTaskResumeAll>
 8007ab8:	b360      	cbz	r0, 8007b14 <xQueueGenericSend+0x144>
 8007aba:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007abc:	f7ff fcc2 	bl	8007444 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007ac0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007ac2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007ac4:	429a      	cmp	r2, r3
 8007ac6:	d301      	bcc.n	8007acc <xQueueGenericSend+0xfc>
 8007ac8:	2f02      	cmp	r7, #2
 8007aca:	d1bf      	bne.n	8007a4c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007acc:	463a      	mov	r2, r7
 8007ace:	4641      	mov	r1, r8
 8007ad0:	4620      	mov	r0, r4
 8007ad2:	f7ff fe06 	bl	80076e2 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007ad6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007ad8:	b11b      	cbz	r3, 8007ae2 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007ada:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007ade:	f000 feb7 	bl	8008850 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8007ae2:	b148      	cbz	r0, 8007af8 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 8007ae4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007ae8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007aec:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007af0:	f3bf 8f4f 	dsb	sy
 8007af4:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007af8:	f7ff fcc4 	bl	8007484 <vPortExitCritical>
				return pdPASS;
 8007afc:	2001      	movs	r0, #1
}
 8007afe:	b005      	add	sp, #20
 8007b00:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8007b04:	f7ff fcbe 	bl	8007484 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8007b08:	4620      	mov	r0, r4
 8007b0a:	f7ff fe35 	bl	8007778 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007b0e:	f000 fd95 	bl	800863c <xTaskResumeAll>
 8007b12:	e7d2      	b.n	8007aba <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8007b14:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007b18:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007b1c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007b20:	f3bf 8f4f 	dsb	sy
 8007b24:	f3bf 8f6f 	isb	sy
 8007b28:	e7c7      	b.n	8007aba <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 8007b2a:	4620      	mov	r0, r4
 8007b2c:	f7ff fe24 	bl	8007778 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007b30:	f000 fd84 	bl	800863c <xTaskResumeAll>
 8007b34:	e78e      	b.n	8007a54 <xQueueGenericSend+0x84>

08007b36 <xQueueGenericSendFromISR>:
{
 8007b36:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007b3a:	4689      	mov	r9, r1
 8007b3c:	4690      	mov	r8, r2
 8007b3e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8007b40:	4604      	mov	r4, r0
 8007b42:	b940      	cbnz	r0, 8007b56 <xQueueGenericSendFromISR+0x20>
 8007b44:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b48:	f383 8811 	msr	BASEPRI, r3
 8007b4c:	f3bf 8f6f 	isb	sy
 8007b50:	f3bf 8f4f 	dsb	sy
 8007b54:	e7fe      	b.n	8007b54 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007b56:	b951      	cbnz	r1, 8007b6e <xQueueGenericSendFromISR+0x38>
 8007b58:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007b5a:	b143      	cbz	r3, 8007b6e <xQueueGenericSendFromISR+0x38>
 8007b5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b60:	f383 8811 	msr	BASEPRI, r3
 8007b64:	f3bf 8f6f 	isb	sy
 8007b68:	f3bf 8f4f 	dsb	sy
 8007b6c:	e7fe      	b.n	8007b6c <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8007b6e:	2f02      	cmp	r7, #2
 8007b70:	d10b      	bne.n	8007b8a <xQueueGenericSendFromISR+0x54>
 8007b72:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007b74:	2b01      	cmp	r3, #1
 8007b76:	d008      	beq.n	8007b8a <xQueueGenericSendFromISR+0x54>
 8007b78:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b7c:	f383 8811 	msr	BASEPRI, r3
 8007b80:	f3bf 8f6f 	isb	sy
 8007b84:	f3bf 8f4f 	dsb	sy
 8007b88:	e7fe      	b.n	8007b88 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007b8a:	f7ff fd71 	bl	8007670 <vPortValidateInterruptPriority>
	__asm volatile
 8007b8e:	f3ef 8611 	mrs	r6, BASEPRI
 8007b92:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b96:	f383 8811 	msr	BASEPRI, r3
 8007b9a:	f3bf 8f6f 	isb	sy
 8007b9e:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007ba2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007ba4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007ba6:	429a      	cmp	r2, r3
 8007ba8:	d301      	bcc.n	8007bae <xQueueGenericSendFromISR+0x78>
 8007baa:	2f02      	cmp	r7, #2
 8007bac:	d123      	bne.n	8007bf6 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 8007bae:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007bb2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 8007bb4:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007bb6:	463a      	mov	r2, r7
 8007bb8:	4649      	mov	r1, r9
 8007bba:	4620      	mov	r0, r4
 8007bbc:	f7ff fd91 	bl	80076e2 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8007bc0:	1c6b      	adds	r3, r5, #1
 8007bc2:	d113      	bne.n	8007bec <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007bc4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007bc6:	b90b      	cbnz	r3, 8007bcc <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 8007bc8:	2001      	movs	r0, #1
 8007bca:	e00b      	b.n	8007be4 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007bcc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007bd0:	f000 fe3e 	bl	8008850 <xTaskRemoveFromEventList>
 8007bd4:	2800      	cmp	r0, #0
 8007bd6:	d0f7      	beq.n	8007bc8 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 8007bd8:	f1b8 0f00 	cmp.w	r8, #0
 8007bdc:	d0f4      	beq.n	8007bc8 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8007bde:	2001      	movs	r0, #1
 8007be0:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8007be4:	f386 8811 	msr	BASEPRI, r6
}
 8007be8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007bec:	3501      	adds	r5, #1
 8007bee:	b26d      	sxtb	r5, r5
 8007bf0:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8007bf4:	e7e8      	b.n	8007bc8 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 8007bf6:	2000      	movs	r0, #0
 8007bf8:	e7f4      	b.n	8007be4 <xQueueGenericSendFromISR+0xae>

08007bfa <xQueueGiveFromISR>:
{
 8007bfa:	b570      	push	{r4, r5, r6, lr}
 8007bfc:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8007bfe:	4604      	mov	r4, r0
 8007c00:	b940      	cbnz	r0, 8007c14 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8007c02:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c06:	f383 8811 	msr	BASEPRI, r3
 8007c0a:	f3bf 8f6f 	isb	sy
 8007c0e:	f3bf 8f4f 	dsb	sy
 8007c12:	e7fe      	b.n	8007c12 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007c14:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007c16:	b143      	cbz	r3, 8007c2a <xQueueGiveFromISR+0x30>
 8007c18:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c1c:	f383 8811 	msr	BASEPRI, r3
 8007c20:	f3bf 8f6f 	isb	sy
 8007c24:	f3bf 8f4f 	dsb	sy
 8007c28:	e7fe      	b.n	8007c28 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8007c2a:	6803      	ldr	r3, [r0, #0]
 8007c2c:	b953      	cbnz	r3, 8007c44 <xQueueGiveFromISR+0x4a>
 8007c2e:	6883      	ldr	r3, [r0, #8]
 8007c30:	b143      	cbz	r3, 8007c44 <xQueueGiveFromISR+0x4a>
 8007c32:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c36:	f383 8811 	msr	BASEPRI, r3
 8007c3a:	f3bf 8f6f 	isb	sy
 8007c3e:	f3bf 8f4f 	dsb	sy
 8007c42:	e7fe      	b.n	8007c42 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007c44:	f7ff fd14 	bl	8007670 <vPortValidateInterruptPriority>
	__asm volatile
 8007c48:	f3ef 8611 	mrs	r6, BASEPRI
 8007c4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c50:	f383 8811 	msr	BASEPRI, r3
 8007c54:	f3bf 8f6f 	isb	sy
 8007c58:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007c5c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8007c5e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007c60:	4293      	cmp	r3, r2
 8007c62:	d91c      	bls.n	8007c9e <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8007c64:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007c68:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8007c6a:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8007c6c:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007c6e:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 8007c70:	d110      	bne.n	8007c94 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007c72:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007c74:	b90b      	cbnz	r3, 8007c7a <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8007c76:	2001      	movs	r0, #1
 8007c78:	e009      	b.n	8007c8e <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007c7a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007c7e:	f000 fde7 	bl	8008850 <xTaskRemoveFromEventList>
 8007c82:	2800      	cmp	r0, #0
 8007c84:	d0f7      	beq.n	8007c76 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8007c86:	2d00      	cmp	r5, #0
 8007c88:	d0f5      	beq.n	8007c76 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8007c8a:	2001      	movs	r0, #1
 8007c8c:	6028      	str	r0, [r5, #0]
	__asm volatile
 8007c8e:	f386 8811 	msr	BASEPRI, r6
}
 8007c92:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007c94:	3301      	adds	r3, #1
 8007c96:	b25b      	sxtb	r3, r3
 8007c98:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8007c9c:	e7eb      	b.n	8007c76 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 8007c9e:	2000      	movs	r0, #0
 8007ca0:	e7f5      	b.n	8007c8e <xQueueGiveFromISR+0x94>

08007ca2 <xQueueReceive>:
{
 8007ca2:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8007ca6:	460f      	mov	r7, r1
 8007ca8:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8007caa:	4604      	mov	r4, r0
 8007cac:	b940      	cbnz	r0, 8007cc0 <xQueueReceive+0x1e>
	__asm volatile
 8007cae:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007cb2:	f383 8811 	msr	BASEPRI, r3
 8007cb6:	f3bf 8f6f 	isb	sy
 8007cba:	f3bf 8f4f 	dsb	sy
 8007cbe:	e7fe      	b.n	8007cbe <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007cc0:	b951      	cbnz	r1, 8007cd8 <xQueueReceive+0x36>
 8007cc2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007cc4:	b143      	cbz	r3, 8007cd8 <xQueueReceive+0x36>
 8007cc6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007cca:	f383 8811 	msr	BASEPRI, r3
 8007cce:	f3bf 8f6f 	isb	sy
 8007cd2:	f3bf 8f4f 	dsb	sy
 8007cd6:	e7fe      	b.n	8007cd6 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007cd8:	f000 fe52 	bl	8008980 <xTaskGetSchedulerState>
 8007cdc:	4606      	mov	r6, r0
 8007cde:	b950      	cbnz	r0, 8007cf6 <xQueueReceive+0x54>
 8007ce0:	9b01      	ldr	r3, [sp, #4]
 8007ce2:	b14b      	cbz	r3, 8007cf8 <xQueueReceive+0x56>
 8007ce4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ce8:	f383 8811 	msr	BASEPRI, r3
 8007cec:	f3bf 8f6f 	isb	sy
 8007cf0:	f3bf 8f4f 	dsb	sy
 8007cf4:	e7fe      	b.n	8007cf4 <xQueueReceive+0x52>
 8007cf6:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8007cf8:	f04f 0800 	mov.w	r8, #0
 8007cfc:	e03d      	b.n	8007d7a <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007cfe:	9d01      	ldr	r5, [sp, #4]
 8007d00:	b91d      	cbnz	r5, 8007d0a <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8007d02:	f7ff fbbf 	bl	8007484 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8007d06:	2000      	movs	r0, #0
 8007d08:	e056      	b.n	8007db8 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 8007d0a:	b916      	cbnz	r6, 8007d12 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007d0c:	a802      	add	r0, sp, #8
 8007d0e:	f000 fde3 	bl	80088d8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007d12:	f7ff fbb7 	bl	8007484 <vPortExitCritical>
		vTaskSuspendAll();
 8007d16:	f000 fbe5 	bl	80084e4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007d1a:	f7ff fb93 	bl	8007444 <vPortEnterCritical>
 8007d1e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007d22:	2bff      	cmp	r3, #255	; 0xff
 8007d24:	bf08      	it	eq
 8007d26:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8007d2a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007d2e:	2bff      	cmp	r3, #255	; 0xff
 8007d30:	bf08      	it	eq
 8007d32:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8007d36:	f7ff fba5 	bl	8007484 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007d3a:	a901      	add	r1, sp, #4
 8007d3c:	a802      	add	r0, sp, #8
 8007d3e:	f000 fdd7 	bl	80088f0 <xTaskCheckForTimeOut>
 8007d42:	2800      	cmp	r0, #0
 8007d44:	d141      	bne.n	8007dca <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007d46:	4620      	mov	r0, r4
 8007d48:	f7ff fcc0 	bl	80076cc <prvIsQueueEmpty>
 8007d4c:	b3b8      	cbz	r0, 8007dbe <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007d4e:	9901      	ldr	r1, [sp, #4]
 8007d50:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007d54:	f000 fd44 	bl	80087e0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007d58:	4620      	mov	r0, r4
 8007d5a:	f7ff fd0d 	bl	8007778 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007d5e:	f000 fc6d 	bl	800863c <xTaskResumeAll>
 8007d62:	b948      	cbnz	r0, 8007d78 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8007d64:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007d68:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007d6c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007d70:	f3bf 8f4f 	dsb	sy
 8007d74:	f3bf 8f6f 	isb	sy
 8007d78:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007d7a:	f7ff fb63 	bl	8007444 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007d7e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007d80:	2d00      	cmp	r5, #0
 8007d82:	d0bc      	beq.n	8007cfe <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007d84:	4639      	mov	r1, r7
 8007d86:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007d88:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007d8a:	f7ff fcdf 	bl	800774c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007d8e:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007d90:	6923      	ldr	r3, [r4, #16]
 8007d92:	b173      	cbz	r3, 8007db2 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007d94:	f104 0010 	add.w	r0, r4, #16
 8007d98:	f000 fd5a 	bl	8008850 <xTaskRemoveFromEventList>
 8007d9c:	b148      	cbz	r0, 8007db2 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 8007d9e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007da2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007da6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007daa:	f3bf 8f4f 	dsb	sy
 8007dae:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007db2:	f7ff fb67 	bl	8007484 <vPortExitCritical>
				return pdPASS;
 8007db6:	2001      	movs	r0, #1
}
 8007db8:	b004      	add	sp, #16
 8007dba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 8007dbe:	4620      	mov	r0, r4
 8007dc0:	f7ff fcda 	bl	8007778 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007dc4:	f000 fc3a 	bl	800863c <xTaskResumeAll>
 8007dc8:	e7d6      	b.n	8007d78 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8007dca:	4620      	mov	r0, r4
 8007dcc:	f7ff fcd4 	bl	8007778 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007dd0:	f000 fc34 	bl	800863c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007dd4:	4620      	mov	r0, r4
 8007dd6:	f7ff fc79 	bl	80076cc <prvIsQueueEmpty>
 8007dda:	2800      	cmp	r0, #0
 8007ddc:	d0cc      	beq.n	8007d78 <xQueueReceive+0xd6>
 8007dde:	e792      	b.n	8007d06 <xQueueReceive+0x64>

08007de0 <xQueueSemaphoreTake>:
{
 8007de0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007de2:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8007de4:	4604      	mov	r4, r0
{
 8007de6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8007de8:	b940      	cbnz	r0, 8007dfc <xQueueSemaphoreTake+0x1c>
 8007dea:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007dee:	f383 8811 	msr	BASEPRI, r3
 8007df2:	f3bf 8f6f 	isb	sy
 8007df6:	f3bf 8f4f 	dsb	sy
 8007dfa:	e7fe      	b.n	8007dfa <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8007dfc:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8007dfe:	b145      	cbz	r5, 8007e12 <xQueueSemaphoreTake+0x32>
 8007e00:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e04:	f383 8811 	msr	BASEPRI, r3
 8007e08:	f3bf 8f6f 	isb	sy
 8007e0c:	f3bf 8f4f 	dsb	sy
 8007e10:	e7fe      	b.n	8007e10 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007e12:	f000 fdb5 	bl	8008980 <xTaskGetSchedulerState>
 8007e16:	4606      	mov	r6, r0
 8007e18:	b950      	cbnz	r0, 8007e30 <xQueueSemaphoreTake+0x50>
 8007e1a:	9b01      	ldr	r3, [sp, #4]
 8007e1c:	b15b      	cbz	r3, 8007e36 <xQueueSemaphoreTake+0x56>
 8007e1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e22:	f383 8811 	msr	BASEPRI, r3
 8007e26:	f3bf 8f6f 	isb	sy
 8007e2a:	f3bf 8f4f 	dsb	sy
 8007e2e:	e7fe      	b.n	8007e2e <xQueueSemaphoreTake+0x4e>
 8007e30:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8007e32:	2700      	movs	r7, #0
 8007e34:	e053      	b.n	8007ede <xQueueSemaphoreTake+0xfe>
 8007e36:	4605      	mov	r5, r0
 8007e38:	e7fb      	b.n	8007e32 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8007e3a:	9b01      	ldr	r3, [sp, #4]
 8007e3c:	b963      	cbnz	r3, 8007e58 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8007e3e:	b145      	cbz	r5, 8007e52 <xQueueSemaphoreTake+0x72>
 8007e40:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e44:	f383 8811 	msr	BASEPRI, r3
 8007e48:	f3bf 8f6f 	isb	sy
 8007e4c:	f3bf 8f4f 	dsb	sy
 8007e50:	e7fe      	b.n	8007e50 <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8007e52:	f7ff fb17 	bl	8007484 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8007e56:	e062      	b.n	8007f1e <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8007e58:	b916      	cbnz	r6, 8007e60 <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8007e5a:	a802      	add	r0, sp, #8
 8007e5c:	f000 fd3c 	bl	80088d8 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007e60:	f7ff fb10 	bl	8007484 <vPortExitCritical>
		vTaskSuspendAll();
 8007e64:	f000 fb3e 	bl	80084e4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8007e68:	f7ff faec 	bl	8007444 <vPortEnterCritical>
 8007e6c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007e70:	2bff      	cmp	r3, #255	; 0xff
 8007e72:	bf08      	it	eq
 8007e74:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8007e78:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007e7c:	2bff      	cmp	r3, #255	; 0xff
 8007e7e:	bf08      	it	eq
 8007e80:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8007e84:	f7ff fafe 	bl	8007484 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8007e88:	a901      	add	r1, sp, #4
 8007e8a:	a802      	add	r0, sp, #8
 8007e8c:	f000 fd30 	bl	80088f0 <xTaskCheckForTimeOut>
 8007e90:	2800      	cmp	r0, #0
 8007e92:	d14d      	bne.n	8007f30 <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007e94:	4620      	mov	r0, r4
 8007e96:	f7ff fc19 	bl	80076cc <prvIsQueueEmpty>
 8007e9a:	2800      	cmp	r0, #0
 8007e9c:	d042      	beq.n	8007f24 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007e9e:	6823      	ldr	r3, [r4, #0]
 8007ea0:	b93b      	cbnz	r3, 8007eb2 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 8007ea2:	f7ff facf 	bl	8007444 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8007ea6:	68a0      	ldr	r0, [r4, #8]
 8007ea8:	f000 fd7a 	bl	80089a0 <xTaskPriorityInherit>
 8007eac:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8007eae:	f7ff fae9 	bl	8007484 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007eb2:	9901      	ldr	r1, [sp, #4]
 8007eb4:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007eb8:	f000 fc92 	bl	80087e0 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007ebc:	4620      	mov	r0, r4
 8007ebe:	f7ff fc5b 	bl	8007778 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007ec2:	f000 fbbb 	bl	800863c <xTaskResumeAll>
 8007ec6:	b948      	cbnz	r0, 8007edc <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8007ec8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007ecc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007ed0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007ed4:	f3bf 8f4f 	dsb	sy
 8007ed8:	f3bf 8f6f 	isb	sy
 8007edc:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8007ede:	f7ff fab1 	bl	8007444 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8007ee2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8007ee4:	2b00      	cmp	r3, #0
 8007ee6:	d0a8      	beq.n	8007e3a <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8007ee8:	3b01      	subs	r3, #1
 8007eea:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007eec:	6823      	ldr	r3, [r4, #0]
 8007eee:	b913      	cbnz	r3, 8007ef6 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8007ef0:	f000 fe2e 	bl	8008b50 <pvTaskIncrementMutexHeldCount>
 8007ef4:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007ef6:	6923      	ldr	r3, [r4, #16]
 8007ef8:	b173      	cbz	r3, 8007f18 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007efa:	f104 0010 	add.w	r0, r4, #16
 8007efe:	f000 fca7 	bl	8008850 <xTaskRemoveFromEventList>
 8007f02:	b148      	cbz	r0, 8007f18 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8007f04:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8007f08:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007f0c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8007f10:	f3bf 8f4f 	dsb	sy
 8007f14:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8007f18:	f7ff fab4 	bl	8007484 <vPortExitCritical>
				return pdPASS;
 8007f1c:	2501      	movs	r5, #1
}
 8007f1e:	4628      	mov	r0, r5
 8007f20:	b005      	add	sp, #20
 8007f22:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8007f24:	4620      	mov	r0, r4
 8007f26:	f7ff fc27 	bl	8007778 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007f2a:	f000 fb87 	bl	800863c <xTaskResumeAll>
 8007f2e:	e7d5      	b.n	8007edc <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 8007f30:	4620      	mov	r0, r4
 8007f32:	f7ff fc21 	bl	8007778 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007f36:	f000 fb81 	bl	800863c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007f3a:	4620      	mov	r0, r4
 8007f3c:	f7ff fbc6 	bl	80076cc <prvIsQueueEmpty>
 8007f40:	2800      	cmp	r0, #0
 8007f42:	d0cb      	beq.n	8007edc <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8007f44:	2d00      	cmp	r5, #0
 8007f46:	d0ea      	beq.n	8007f1e <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8007f48:	f7ff fa7c 	bl	8007444 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 8007f4c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007f4e:	b119      	cbz	r1, 8007f58 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 8007f50:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007f52:	6819      	ldr	r1, [r3, #0]
 8007f54:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8007f58:	68a0      	ldr	r0, [r4, #8]
 8007f5a:	f000 fda7 	bl	8008aac <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 8007f5e:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 8007f60:	f7ff fa90 	bl	8007484 <vPortExitCritical>
 8007f64:	e7db      	b.n	8007f1e <xQueueSemaphoreTake+0x13e>

08007f66 <xQueueReceiveFromISR>:
{
 8007f66:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007f6a:	4689      	mov	r9, r1
 8007f6c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8007f6e:	4605      	mov	r5, r0
 8007f70:	b940      	cbnz	r0, 8007f84 <xQueueReceiveFromISR+0x1e>
 8007f72:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f76:	f383 8811 	msr	BASEPRI, r3
 8007f7a:	f3bf 8f6f 	isb	sy
 8007f7e:	f3bf 8f4f 	dsb	sy
 8007f82:	e7fe      	b.n	8007f82 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007f84:	b951      	cbnz	r1, 8007f9c <xQueueReceiveFromISR+0x36>
 8007f86:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007f88:	b143      	cbz	r3, 8007f9c <xQueueReceiveFromISR+0x36>
 8007f8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f8e:	f383 8811 	msr	BASEPRI, r3
 8007f92:	f3bf 8f6f 	isb	sy
 8007f96:	f3bf 8f4f 	dsb	sy
 8007f9a:	e7fe      	b.n	8007f9a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007f9c:	f7ff fb68 	bl	8007670 <vPortValidateInterruptPriority>
	__asm volatile
 8007fa0:	f3ef 8711 	mrs	r7, BASEPRI
 8007fa4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007fa8:	f383 8811 	msr	BASEPRI, r3
 8007fac:	f3bf 8f6f 	isb	sy
 8007fb0:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007fb4:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007fb6:	b31c      	cbz	r4, 8008000 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8007fb8:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007fbc:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 8007fbe:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007fc0:	4628      	mov	r0, r5
 8007fc2:	f7ff fbc3 	bl	800774c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007fc6:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8007fc8:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007fca:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 8007fcc:	d113      	bne.n	8007ff6 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007fce:	692b      	ldr	r3, [r5, #16]
 8007fd0:	b90b      	cbnz	r3, 8007fd6 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8007fd2:	2001      	movs	r0, #1
 8007fd4:	e00b      	b.n	8007fee <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007fd6:	f105 0010 	add.w	r0, r5, #16
 8007fda:	f000 fc39 	bl	8008850 <xTaskRemoveFromEventList>
 8007fde:	2800      	cmp	r0, #0
 8007fe0:	d0f7      	beq.n	8007fd2 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8007fe2:	f1b8 0f00 	cmp.w	r8, #0
 8007fe6:	d0f4      	beq.n	8007fd2 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8007fe8:	2001      	movs	r0, #1
 8007fea:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8007fee:	f387 8811 	msr	BASEPRI, r7
}
 8007ff2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8007ff6:	3601      	adds	r6, #1
 8007ff8:	b276      	sxtb	r6, r6
 8007ffa:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 8007ffe:	e7e8      	b.n	8007fd2 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 8008000:	4620      	mov	r0, r4
 8008002:	e7f4      	b.n	8007fee <xQueueReceiveFromISR+0x88>

08008004 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8008004:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8008006:	4a07      	ldr	r2, [pc, #28]	; (8008024 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008008:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800800a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800800e:	b92c      	cbnz	r4, 800801c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8008010:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8008014:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8008018:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800801a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800801c:	3301      	adds	r3, #1
 800801e:	2b08      	cmp	r3, #8
 8008020:	d1f3      	bne.n	800800a <vQueueAddToRegistry+0x6>
 8008022:	e7fa      	b.n	800801a <vQueueAddToRegistry+0x16>
 8008024:	20011ffc 	.word	0x20011ffc

08008028 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8008028:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800802a:	4a08      	ldr	r2, [pc, #32]	; (800804c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800802c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800802e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8008032:	684c      	ldr	r4, [r1, #4]
 8008034:	4284      	cmp	r4, r0
 8008036:	d104      	bne.n	8008042 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8008038:	2000      	movs	r0, #0
 800803a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800803e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8008040:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8008042:	3301      	adds	r3, #1
 8008044:	2b08      	cmp	r3, #8
 8008046:	d1f2      	bne.n	800802e <vQueueUnregisterQueue+0x6>
 8008048:	e7fa      	b.n	8008040 <vQueueUnregisterQueue+0x18>
 800804a:	bf00      	nop
 800804c:	20011ffc 	.word	0x20011ffc

08008050 <vQueueDelete>:
{
 8008050:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8008052:	4604      	mov	r4, r0
 8008054:	b940      	cbnz	r0, 8008068 <vQueueDelete+0x18>
	__asm volatile
 8008056:	f04f 0350 	mov.w	r3, #80	; 0x50
 800805a:	f383 8811 	msr	BASEPRI, r3
 800805e:	f3bf 8f6f 	isb	sy
 8008062:	f3bf 8f4f 	dsb	sy
 8008066:	e7fe      	b.n	8008066 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8008068:	f7ff ffde 	bl	8008028 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800806c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8008070:	b923      	cbnz	r3, 800807c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8008072:	4620      	mov	r0, r4
}
 8008074:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8008078:	f7ff b8fc 	b.w	8007274 <vPortFree>
}
 800807c:	bd10      	pop	{r4, pc}

0800807e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800807e:	b570      	push	{r4, r5, r6, lr}
 8008080:	4604      	mov	r4, r0
 8008082:	460d      	mov	r5, r1
 8008084:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8008086:	f7ff f9dd 	bl	8007444 <vPortEnterCritical>
 800808a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800808e:	2bff      	cmp	r3, #255	; 0xff
 8008090:	bf04      	itt	eq
 8008092:	2300      	moveq	r3, #0
 8008094:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8008098:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800809c:	2bff      	cmp	r3, #255	; 0xff
 800809e:	bf04      	itt	eq
 80080a0:	2300      	moveq	r3, #0
 80080a2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 80080a6:	f7ff f9ed 	bl	8007484 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 80080aa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80080ac:	b92b      	cbnz	r3, 80080ba <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 80080ae:	4632      	mov	r2, r6
 80080b0:	4629      	mov	r1, r5
 80080b2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80080b6:	f000 fbad 	bl	8008814 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 80080ba:	4620      	mov	r0, r4
	}
 80080bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 80080c0:	f7ff bb5a 	b.w	8007778 <prvUnlockQueue>

080080c4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 80080c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80080c8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 80080ca:	f7ff f9bb 	bl	8007444 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 80080ce:	4b30      	ldr	r3, [pc, #192]	; (8008190 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 80080d0:	4e30      	ldr	r6, [pc, #192]	; (8008194 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 80080d2:	681a      	ldr	r2, [r3, #0]
 80080d4:	4f30      	ldr	r7, [pc, #192]	; (8008198 <prvAddNewTaskToReadyList+0xd4>)
 80080d6:	3201      	adds	r2, #1
 80080d8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 80080da:	6835      	ldr	r5, [r6, #0]
 80080dc:	2d00      	cmp	r5, #0
 80080de:	d14b      	bne.n	8008178 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 80080e0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80080e2:	681b      	ldr	r3, [r3, #0]
 80080e4:	2b01      	cmp	r3, #1
 80080e6:	d11f      	bne.n	8008128 <prvAddNewTaskToReadyList+0x64>
 80080e8:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80080ea:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80080ec:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80080ee:	f7ff f8ff 	bl	80072f0 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80080f2:	2d38      	cmp	r5, #56	; 0x38
 80080f4:	f108 0814 	add.w	r8, r8, #20
 80080f8:	d1f7      	bne.n	80080ea <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 80080fa:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80081c0 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 80080fe:	4d27      	ldr	r5, [pc, #156]	; (800819c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8008100:	4640      	mov	r0, r8
 8008102:	f7ff f8f5 	bl	80072f0 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8008106:	4628      	mov	r0, r5
 8008108:	f7ff f8f2 	bl	80072f0 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800810c:	4824      	ldr	r0, [pc, #144]	; (80081a0 <prvAddNewTaskToReadyList+0xdc>)
 800810e:	f7ff f8ef 	bl	80072f0 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8008112:	4824      	ldr	r0, [pc, #144]	; (80081a4 <prvAddNewTaskToReadyList+0xe0>)
 8008114:	f7ff f8ec 	bl	80072f0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8008118:	4823      	ldr	r0, [pc, #140]	; (80081a8 <prvAddNewTaskToReadyList+0xe4>)
 800811a:	f7ff f8e9 	bl	80072f0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800811e:	4b23      	ldr	r3, [pc, #140]	; (80081ac <prvAddNewTaskToReadyList+0xe8>)
 8008120:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8008124:	4b22      	ldr	r3, [pc, #136]	; (80081b0 <prvAddNewTaskToReadyList+0xec>)
 8008126:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8008128:	4a22      	ldr	r2, [pc, #136]	; (80081b4 <prvAddNewTaskToReadyList+0xf0>)
 800812a:	6813      	ldr	r3, [r2, #0]
 800812c:	3301      	adds	r3, #1
 800812e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8008130:	4a21      	ldr	r2, [pc, #132]	; (80081b8 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8008132:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8008134:	6811      	ldr	r1, [r2, #0]
 8008136:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008138:	2014      	movs	r0, #20
 800813a:	428b      	cmp	r3, r1
 800813c:	fb00 7003 	mla	r0, r0, r3, r7
 8008140:	f104 0104 	add.w	r1, r4, #4
 8008144:	bf88      	it	hi
 8008146:	6013      	strhi	r3, [r2, #0]
 8008148:	f7ff f8e0 	bl	800730c <vListInsertEnd>
	taskEXIT_CRITICAL();
 800814c:	f7ff f99a 	bl	8007484 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8008150:	4b1a      	ldr	r3, [pc, #104]	; (80081bc <prvAddNewTaskToReadyList+0xf8>)
 8008152:	681b      	ldr	r3, [r3, #0]
 8008154:	b173      	cbz	r3, 8008174 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8008156:	6833      	ldr	r3, [r6, #0]
 8008158:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800815a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800815c:	429a      	cmp	r2, r3
 800815e:	d209      	bcs.n	8008174 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8008160:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008164:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008168:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800816c:	f3bf 8f4f 	dsb	sy
 8008170:	f3bf 8f6f 	isb	sy
}
 8008174:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8008178:	4b10      	ldr	r3, [pc, #64]	; (80081bc <prvAddNewTaskToReadyList+0xf8>)
 800817a:	681b      	ldr	r3, [r3, #0]
 800817c:	2b00      	cmp	r3, #0
 800817e:	d1d3      	bne.n	8008128 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8008180:	6833      	ldr	r3, [r6, #0]
 8008182:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008184:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008186:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8008188:	bf98      	it	ls
 800818a:	6034      	strls	r4, [r6, #0]
 800818c:	e7cc      	b.n	8008128 <prvAddNewTaskToReadyList+0x64>
 800818e:	bf00      	nop
 8008190:	200124a8 	.word	0x200124a8
 8008194:	2001203c 	.word	0x2001203c
 8008198:	20012048 	.word	0x20012048
 800819c:	200124d0 	.word	0x200124d0
 80081a0:	200124f0 	.word	0x200124f0
 80081a4:	2001251c 	.word	0x2001251c
 80081a8:	20012508 	.word	0x20012508
 80081ac:	20012040 	.word	0x20012040
 80081b0:	20012044 	.word	0x20012044
 80081b4:	200124b4 	.word	0x200124b4
 80081b8:	200124b8 	.word	0x200124b8
 80081bc:	20012504 	.word	0x20012504
 80081c0:	200124bc 	.word	0x200124bc

080081c4 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 80081c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 80081c6:	4b15      	ldr	r3, [pc, #84]	; (800821c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80081c8:	4e15      	ldr	r6, [pc, #84]	; (8008220 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 80081ca:	681d      	ldr	r5, [r3, #0]
{
 80081cc:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80081ce:	6830      	ldr	r0, [r6, #0]
 80081d0:	3004      	adds	r0, #4
{
 80081d2:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80081d4:	f7ff f8bd 	bl	8007352 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 80081d8:	1c63      	adds	r3, r4, #1
 80081da:	d107      	bne.n	80081ec <prvAddCurrentTaskToDelayedList+0x28>
 80081dc:	b137      	cbz	r7, 80081ec <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80081de:	6831      	ldr	r1, [r6, #0]
 80081e0:	4810      	ldr	r0, [pc, #64]	; (8008224 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 80081e2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80081e6:	3104      	adds	r1, #4
 80081e8:	f7ff b890 	b.w	800730c <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 80081ec:	6833      	ldr	r3, [r6, #0]
 80081ee:	192c      	adds	r4, r5, r4
 80081f0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 80081f2:	d307      	bcc.n	8008204 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80081f4:	4b0c      	ldr	r3, [pc, #48]	; (8008228 <prvAddCurrentTaskToDelayedList+0x64>)
 80081f6:	6818      	ldr	r0, [r3, #0]
 80081f8:	6831      	ldr	r1, [r6, #0]
}
 80081fa:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80081fe:	3104      	adds	r1, #4
 8008200:	f7ff b890 	b.w	8007324 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8008204:	4b09      	ldr	r3, [pc, #36]	; (800822c <prvAddCurrentTaskToDelayedList+0x68>)
 8008206:	6818      	ldr	r0, [r3, #0]
 8008208:	6831      	ldr	r1, [r6, #0]
 800820a:	3104      	adds	r1, #4
 800820c:	f7ff f88a 	bl	8007324 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8008210:	4b07      	ldr	r3, [pc, #28]	; (8008230 <prvAddCurrentTaskToDelayedList+0x6c>)
 8008212:	681a      	ldr	r2, [r3, #0]
 8008214:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8008216:	bf88      	it	hi
 8008218:	601c      	strhi	r4, [r3, #0]
}
 800821a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800821c:	20012530 	.word	0x20012530
 8008220:	2001203c 	.word	0x2001203c
 8008224:	20012508 	.word	0x20012508
 8008228:	20012044 	.word	0x20012044
 800822c:	20012040 	.word	0x20012040
 8008230:	200124e4 	.word	0x200124e4

08008234 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008234:	4a06      	ldr	r2, [pc, #24]	; (8008250 <prvResetNextTaskUnblockTime+0x1c>)
 8008236:	6813      	ldr	r3, [r2, #0]
 8008238:	6819      	ldr	r1, [r3, #0]
 800823a:	4b06      	ldr	r3, [pc, #24]	; (8008254 <prvResetNextTaskUnblockTime+0x20>)
 800823c:	b919      	cbnz	r1, 8008246 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800823e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8008242:	601a      	str	r2, [r3, #0]
}
 8008244:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008246:	6812      	ldr	r2, [r2, #0]
 8008248:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800824a:	68d2      	ldr	r2, [r2, #12]
 800824c:	6852      	ldr	r2, [r2, #4]
 800824e:	e7f8      	b.n	8008242 <prvResetNextTaskUnblockTime+0xe>
 8008250:	20012040 	.word	0x20012040
 8008254:	200124e4 	.word	0x200124e4

08008258 <prvDeleteTCB>:
	{
 8008258:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800825a:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 800825e:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8008260:	b93b      	cbnz	r3, 8008272 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 8008262:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8008264:	f7ff f806 	bl	8007274 <vPortFree>
				vPortFree( pxTCB );
 8008268:	4620      	mov	r0, r4
	}
 800826a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800826e:	f7ff b801 	b.w	8007274 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8008272:	2b01      	cmp	r3, #1
 8008274:	d0f9      	beq.n	800826a <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8008276:	2b02      	cmp	r3, #2
 8008278:	d008      	beq.n	800828c <prvDeleteTCB+0x34>
 800827a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800827e:	f383 8811 	msr	BASEPRI, r3
 8008282:	f3bf 8f6f 	isb	sy
 8008286:	f3bf 8f4f 	dsb	sy
 800828a:	e7fe      	b.n	800828a <prvDeleteTCB+0x32>
	}
 800828c:	bd10      	pop	{r4, pc}
	...

08008290 <prvIdleTask>:
{
 8008290:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008292:	4c13      	ldr	r4, [pc, #76]	; (80082e0 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008294:	4f13      	ldr	r7, [pc, #76]	; (80082e4 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 8008296:	4d14      	ldr	r5, [pc, #80]	; (80082e8 <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8008298:	6823      	ldr	r3, [r4, #0]
 800829a:	b973      	cbnz	r3, 80082ba <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800829c:	4b13      	ldr	r3, [pc, #76]	; (80082ec <prvIdleTask+0x5c>)
 800829e:	681b      	ldr	r3, [r3, #0]
 80082a0:	2b01      	cmp	r3, #1
 80082a2:	d9f8      	bls.n	8008296 <prvIdleTask+0x6>
				taskYIELD();
 80082a4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80082a8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80082ac:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80082b0:	f3bf 8f4f 	dsb	sy
 80082b4:	f3bf 8f6f 	isb	sy
 80082b8:	e7ed      	b.n	8008296 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 80082ba:	f7ff f8c3 	bl	8007444 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80082be:	68fb      	ldr	r3, [r7, #12]
 80082c0:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80082c2:	1d30      	adds	r0, r6, #4
 80082c4:	f7ff f845 	bl	8007352 <uxListRemove>
				--uxCurrentNumberOfTasks;
 80082c8:	682b      	ldr	r3, [r5, #0]
 80082ca:	3b01      	subs	r3, #1
 80082cc:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 80082ce:	6823      	ldr	r3, [r4, #0]
 80082d0:	3b01      	subs	r3, #1
 80082d2:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 80082d4:	f7ff f8d6 	bl	8007484 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 80082d8:	4630      	mov	r0, r6
 80082da:	f7ff ffbd 	bl	8008258 <prvDeleteTCB>
 80082de:	e7db      	b.n	8008298 <prvIdleTask+0x8>
 80082e0:	200124ac 	.word	0x200124ac
 80082e4:	2001251c 	.word	0x2001251c
 80082e8:	200124a8 	.word	0x200124a8
 80082ec:	20012048 	.word	0x20012048

080082f0 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80082f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80082f4:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80082f8:	ea4f 0982 	mov.w	r9, r2, lsl #2
 80082fc:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80082fe:	4606      	mov	r6, r0
 8008300:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008302:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8008304:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8008306:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8008308:	f013 fb74 	bl	801b9f4 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800830c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800830e:	f1a9 0904 	sub.w	r9, r9, #4
 8008312:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8008314:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8008318:	b3b5      	cbz	r5, 8008388 <prvInitialiseNewTask.constprop.0+0x98>
 800831a:	1e6b      	subs	r3, r5, #1
 800831c:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8008320:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8008322:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8008326:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800832a:	b108      	cbz	r0, 8008330 <prvInitialiseNewTask.constprop.0+0x40>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800832c:	42ab      	cmp	r3, r5
 800832e:	d1f8      	bne.n	8008322 <prvInitialiseNewTask.constprop.0+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8008330:	2300      	movs	r3, #0
 8008332:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8008336:	9d08      	ldr	r5, [sp, #32]
 8008338:	2d37      	cmp	r5, #55	; 0x37
 800833a:	bf28      	it	cs
 800833c:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800833e:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8008342:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8008344:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8008346:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8008348:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800834c:	f7fe ffdb 	bl	8007306 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008350:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8008354:	f104 0018 	add.w	r0, r4, #24
 8008358:	f7fe ffd5 	bl	8007306 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800835c:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8008360:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008362:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8008364:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8008366:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800836a:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800836e:	463a      	mov	r2, r7
 8008370:	4631      	mov	r1, r6
 8008372:	4648      	mov	r0, r9
 8008374:	f7ff f83c 	bl	80073f0 <pxPortInitialiseStack>
 8008378:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800837a:	f1b8 0f00 	cmp.w	r8, #0
 800837e:	d001      	beq.n	8008384 <prvInitialiseNewTask.constprop.0+0x94>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8008380:	f8c8 4000 	str.w	r4, [r8]
}
 8008384:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8008388:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800838c:	e7d3      	b.n	8008336 <prvInitialiseNewTask.constprop.0+0x46>

0800838e <xTaskCreateStatic>:
	{
 800838e:	b570      	push	{r4, r5, r6, lr}
 8008390:	b086      	sub	sp, #24
 8008392:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8008396:	b945      	cbnz	r5, 80083aa <xTaskCreateStatic+0x1c>
 8008398:	f04f 0350 	mov.w	r3, #80	; 0x50
 800839c:	f383 8811 	msr	BASEPRI, r3
 80083a0:	f3bf 8f6f 	isb	sy
 80083a4:	f3bf 8f4f 	dsb	sy
 80083a8:	e7fe      	b.n	80083a8 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 80083aa:	b944      	cbnz	r4, 80083be <xTaskCreateStatic+0x30>
 80083ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083b0:	f383 8811 	msr	BASEPRI, r3
 80083b4:	f3bf 8f6f 	isb	sy
 80083b8:	f3bf 8f4f 	dsb	sy
 80083bc:	e7fe      	b.n	80083bc <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 80083be:	2660      	movs	r6, #96	; 0x60
 80083c0:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 80083c2:	9e05      	ldr	r6, [sp, #20]
 80083c4:	2e60      	cmp	r6, #96	; 0x60
 80083c6:	d008      	beq.n	80083da <xTaskCreateStatic+0x4c>
 80083c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083cc:	f383 8811 	msr	BASEPRI, r3
 80083d0:	f3bf 8f6f 	isb	sy
 80083d4:	f3bf 8f4f 	dsb	sy
 80083d8:	e7fe      	b.n	80083d8 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 80083da:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 80083dc:	2502      	movs	r5, #2
 80083de:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80083e2:	ad04      	add	r5, sp, #16
 80083e4:	9501      	str	r5, [sp, #4]
 80083e6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80083e8:	9402      	str	r4, [sp, #8]
 80083ea:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 80083ec:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80083ee:	f7ff ff7f 	bl	80082f0 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80083f2:	4620      	mov	r0, r4
 80083f4:	f7ff fe66 	bl	80080c4 <prvAddNewTaskToReadyList>
	}
 80083f8:	9804      	ldr	r0, [sp, #16]
 80083fa:	b006      	add	sp, #24
 80083fc:	bd70      	pop	{r4, r5, r6, pc}

080083fe <xTaskCreate>:
	{
 80083fe:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008402:	4607      	mov	r7, r0
 8008404:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8008406:	0090      	lsls	r0, r2, #2
	{
 8008408:	4688      	mov	r8, r1
 800840a:	4616      	mov	r6, r2
 800840c:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800840e:	f7fe fe99 	bl	8007144 <pvPortMalloc>
			if( pxStack != NULL )
 8008412:	4605      	mov	r5, r0
 8008414:	b1e8      	cbz	r0, 8008452 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8008416:	2060      	movs	r0, #96	; 0x60
 8008418:	f7fe fe94 	bl	8007144 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800841c:	4604      	mov	r4, r0
 800841e:	b1a8      	cbz	r0, 800844c <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8008420:	2300      	movs	r3, #0
 8008422:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8008426:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 8008428:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800842a:	9301      	str	r3, [sp, #4]
 800842c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800842e:	9002      	str	r0, [sp, #8]
 8008430:	9300      	str	r3, [sp, #0]
 8008432:	4632      	mov	r2, r6
 8008434:	464b      	mov	r3, r9
 8008436:	4641      	mov	r1, r8
 8008438:	4638      	mov	r0, r7
 800843a:	f7ff ff59 	bl	80082f0 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800843e:	4620      	mov	r0, r4
 8008440:	f7ff fe40 	bl	80080c4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8008444:	2001      	movs	r0, #1
	}
 8008446:	b005      	add	sp, #20
 8008448:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800844c:	4628      	mov	r0, r5
 800844e:	f7fe ff11 	bl	8007274 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8008452:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8008456:	e7f6      	b.n	8008446 <xTaskCreate+0x48>

08008458 <vTaskStartScheduler>:
{
 8008458:	b510      	push	{r4, lr}
 800845a:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800845c:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800845e:	aa07      	add	r2, sp, #28
 8008460:	a906      	add	r1, sp, #24
 8008462:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8008464:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008468:	f7fe fe30 	bl	80070cc <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800846c:	9b05      	ldr	r3, [sp, #20]
 800846e:	9302      	str	r3, [sp, #8]
 8008470:	9b06      	ldr	r3, [sp, #24]
 8008472:	9a07      	ldr	r2, [sp, #28]
 8008474:	4916      	ldr	r1, [pc, #88]	; (80084d0 <vTaskStartScheduler+0x78>)
 8008476:	4817      	ldr	r0, [pc, #92]	; (80084d4 <vTaskStartScheduler+0x7c>)
 8008478:	e9cd 4300 	strd	r4, r3, [sp]
 800847c:	4623      	mov	r3, r4
 800847e:	f7ff ff86 	bl	800838e <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8008482:	b318      	cbz	r0, 80084cc <vTaskStartScheduler+0x74>
			xReturn = xTimerCreateTimerTask();
 8008484:	f000 fd1a 	bl	8008ebc <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8008488:	2801      	cmp	r0, #1
 800848a:	d114      	bne.n	80084b6 <vTaskStartScheduler+0x5e>
 800848c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008490:	f383 8811 	msr	BASEPRI, r3
 8008494:	f3bf 8f6f 	isb	sy
 8008498:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 800849c:	4b0e      	ldr	r3, [pc, #56]	; (80084d8 <vTaskStartScheduler+0x80>)
 800849e:	f04f 32ff 	mov.w	r2, #4294967295
 80084a2:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 80084a4:	4b0d      	ldr	r3, [pc, #52]	; (80084dc <vTaskStartScheduler+0x84>)
 80084a6:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 80084a8:	4b0d      	ldr	r3, [pc, #52]	; (80084e0 <vTaskStartScheduler+0x88>)
 80084aa:	601c      	str	r4, [r3, #0]
}
 80084ac:	b008      	add	sp, #32
 80084ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 80084b2:	f7ff b857 	b.w	8007564 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 80084b6:	3001      	adds	r0, #1
 80084b8:	d108      	bne.n	80084cc <vTaskStartScheduler+0x74>
 80084ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084be:	f383 8811 	msr	BASEPRI, r3
 80084c2:	f3bf 8f6f 	isb	sy
 80084c6:	f3bf 8f4f 	dsb	sy
 80084ca:	e7fe      	b.n	80084ca <vTaskStartScheduler+0x72>
}
 80084cc:	b008      	add	sp, #32
 80084ce:	bd10      	pop	{r4, pc}
 80084d0:	0801dca0 	.word	0x0801dca0
 80084d4:	08008291 	.word	0x08008291
 80084d8:	200124e4 	.word	0x200124e4
 80084dc:	20012504 	.word	0x20012504
 80084e0:	20012530 	.word	0x20012530

080084e4 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 80084e4:	4a02      	ldr	r2, [pc, #8]	; (80084f0 <vTaskSuspendAll+0xc>)
 80084e6:	6813      	ldr	r3, [r2, #0]
 80084e8:	3301      	adds	r3, #1
 80084ea:	6013      	str	r3, [r2, #0]
}
 80084ec:	4770      	bx	lr
 80084ee:	bf00      	nop
 80084f0:	200124b0 	.word	0x200124b0

080084f4 <xTaskGetTickCount>:
		xTicks = xTickCount;
 80084f4:	4b01      	ldr	r3, [pc, #4]	; (80084fc <xTaskGetTickCount+0x8>)
 80084f6:	6818      	ldr	r0, [r3, #0]
}
 80084f8:	4770      	bx	lr
 80084fa:	bf00      	nop
 80084fc:	20012530 	.word	0x20012530

08008500 <xTaskGetTickCountFromISR>:
{
 8008500:	b508      	push	{r3, lr}
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008502:	f7ff f8b5 	bl	8007670 <vPortValidateInterruptPriority>
		xReturn = xTickCount;
 8008506:	4b01      	ldr	r3, [pc, #4]	; (800850c <xTaskGetTickCountFromISR+0xc>)
 8008508:	6818      	ldr	r0, [r3, #0]
}
 800850a:	bd08      	pop	{r3, pc}
 800850c:	20012530 	.word	0x20012530

08008510 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008510:	4b3f      	ldr	r3, [pc, #252]	; (8008610 <xTaskIncrementTick+0x100>)
 8008512:	681b      	ldr	r3, [r3, #0]
{
 8008514:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008518:	2b00      	cmp	r3, #0
 800851a:	d173      	bne.n	8008604 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800851c:	4b3d      	ldr	r3, [pc, #244]	; (8008614 <xTaskIncrementTick+0x104>)
 800851e:	681d      	ldr	r5, [r3, #0]
 8008520:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 8008522:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8008524:	b9bd      	cbnz	r5, 8008556 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8008526:	4b3c      	ldr	r3, [pc, #240]	; (8008618 <xTaskIncrementTick+0x108>)
 8008528:	681a      	ldr	r2, [r3, #0]
 800852a:	6812      	ldr	r2, [r2, #0]
 800852c:	b142      	cbz	r2, 8008540 <xTaskIncrementTick+0x30>
 800852e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008532:	f383 8811 	msr	BASEPRI, r3
 8008536:	f3bf 8f6f 	isb	sy
 800853a:	f3bf 8f4f 	dsb	sy
 800853e:	e7fe      	b.n	800853e <xTaskIncrementTick+0x2e>
 8008540:	4a36      	ldr	r2, [pc, #216]	; (800861c <xTaskIncrementTick+0x10c>)
 8008542:	6819      	ldr	r1, [r3, #0]
 8008544:	6810      	ldr	r0, [r2, #0]
 8008546:	6018      	str	r0, [r3, #0]
 8008548:	6011      	str	r1, [r2, #0]
 800854a:	4a35      	ldr	r2, [pc, #212]	; (8008620 <xTaskIncrementTick+0x110>)
 800854c:	6813      	ldr	r3, [r2, #0]
 800854e:	3301      	adds	r3, #1
 8008550:	6013      	str	r3, [r2, #0]
 8008552:	f7ff fe6f 	bl	8008234 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008556:	4e33      	ldr	r6, [pc, #204]	; (8008624 <xTaskIncrementTick+0x114>)
 8008558:	4f33      	ldr	r7, [pc, #204]	; (8008628 <xTaskIncrementTick+0x118>)
 800855a:	6833      	ldr	r3, [r6, #0]
 800855c:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8008634 <xTaskIncrementTick+0x124>
 8008560:	429d      	cmp	r5, r3
BaseType_t xSwitchRequired = pdFALSE;
 8008562:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8008566:	d211      	bcs.n	800858c <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8008568:	f8d8 3000 	ldr.w	r3, [r8]
 800856c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800856e:	2214      	movs	r2, #20
 8008570:	4353      	muls	r3, r2
 8008572:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 8008574:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 8008576:	4b2d      	ldr	r3, [pc, #180]	; (800862c <xTaskIncrementTick+0x11c>)
 8008578:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 800857a:	bf28      	it	cs
 800857c:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 800857e:	2b00      	cmp	r3, #0
 8008580:	bf18      	it	ne
 8008582:	2401      	movne	r4, #1
}
 8008584:	4620      	mov	r0, r4
 8008586:	b003      	add	sp, #12
 8008588:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800858c:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8008618 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8008590:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8008638 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8008594:	f8d9 3000 	ldr.w	r3, [r9]
 8008598:	681b      	ldr	r3, [r3, #0]
 800859a:	b91b      	cbnz	r3, 80085a4 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800859c:	f04f 33ff 	mov.w	r3, #4294967295
 80085a0:	6033      	str	r3, [r6, #0]
					break;
 80085a2:	e7e1      	b.n	8008568 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80085a4:	f8d9 3000 	ldr.w	r3, [r9]
 80085a8:	68db      	ldr	r3, [r3, #12]
 80085aa:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 80085ae:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 80085b2:	4295      	cmp	r5, r2
 80085b4:	d201      	bcs.n	80085ba <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 80085b6:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 80085b8:	e7d6      	b.n	8008568 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80085ba:	f10b 0104 	add.w	r1, fp, #4
 80085be:	4608      	mov	r0, r1
 80085c0:	9101      	str	r1, [sp, #4]
 80085c2:	f7fe fec6 	bl	8007352 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 80085c6:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 80085ca:	9901      	ldr	r1, [sp, #4]
 80085cc:	b122      	cbz	r2, 80085d8 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80085ce:	f10b 0018 	add.w	r0, fp, #24
 80085d2:	f7fe febe 	bl	8007352 <uxListRemove>
 80085d6:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 80085d8:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 80085dc:	f8da 2000 	ldr.w	r2, [sl]
 80085e0:	2314      	movs	r3, #20
 80085e2:	4290      	cmp	r0, r2
 80085e4:	bf88      	it	hi
 80085e6:	f8ca 0000 	strhi.w	r0, [sl]
 80085ea:	fb03 7000 	mla	r0, r3, r0, r7
 80085ee:	f7fe fe8d 	bl	800730c <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80085f2:	f8d8 1000 	ldr.w	r1, [r8]
 80085f6:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 80085fa:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 80085fc:	429a      	cmp	r2, r3
 80085fe:	bf28      	it	cs
 8008600:	2401      	movcs	r4, #1
 8008602:	e7c7      	b.n	8008594 <xTaskIncrementTick+0x84>
		++xPendedTicks;
 8008604:	4a0a      	ldr	r2, [pc, #40]	; (8008630 <xTaskIncrementTick+0x120>)
 8008606:	6813      	ldr	r3, [r2, #0]
 8008608:	3301      	adds	r3, #1
 800860a:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 800860c:	2400      	movs	r4, #0
	return xSwitchRequired;
 800860e:	e7b9      	b.n	8008584 <xTaskIncrementTick+0x74>
 8008610:	200124b0 	.word	0x200124b0
 8008614:	20012530 	.word	0x20012530
 8008618:	20012040 	.word	0x20012040
 800861c:	20012044 	.word	0x20012044
 8008620:	200124e8 	.word	0x200124e8
 8008624:	200124e4 	.word	0x200124e4
 8008628:	20012048 	.word	0x20012048
 800862c:	20012534 	.word	0x20012534
 8008630:	200124ec 	.word	0x200124ec
 8008634:	2001203c 	.word	0x2001203c
 8008638:	200124b8 	.word	0x200124b8

0800863c <xTaskResumeAll>:
{
 800863c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 800863e:	4c31      	ldr	r4, [pc, #196]	; (8008704 <xTaskResumeAll+0xc8>)
 8008640:	6823      	ldr	r3, [r4, #0]
 8008642:	b943      	cbnz	r3, 8008656 <xTaskResumeAll+0x1a>
 8008644:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008648:	f383 8811 	msr	BASEPRI, r3
 800864c:	f3bf 8f6f 	isb	sy
 8008650:	f3bf 8f4f 	dsb	sy
 8008654:	e7fe      	b.n	8008654 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 8008656:	f7fe fef5 	bl	8007444 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800865a:	6823      	ldr	r3, [r4, #0]
 800865c:	3b01      	subs	r3, #1
 800865e:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008660:	6824      	ldr	r4, [r4, #0]
 8008662:	b12c      	cbz	r4, 8008670 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 8008664:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008666:	f7fe ff0d 	bl	8007484 <vPortExitCritical>
}
 800866a:	4620      	mov	r0, r4
 800866c:	b003      	add	sp, #12
 800866e:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8008670:	4b25      	ldr	r3, [pc, #148]	; (8008708 <xTaskResumeAll+0xcc>)
 8008672:	681b      	ldr	r3, [r3, #0]
 8008674:	2b00      	cmp	r3, #0
 8008676:	d0f5      	beq.n	8008664 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8008678:	4d24      	ldr	r5, [pc, #144]	; (800870c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 800867a:	4e25      	ldr	r6, [pc, #148]	; (8008710 <xTaskResumeAll+0xd4>)
 800867c:	4f25      	ldr	r7, [pc, #148]	; (8008714 <xTaskResumeAll+0xd8>)
 800867e:	e01e      	b.n	80086be <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008680:	68eb      	ldr	r3, [r5, #12]
 8008682:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8008684:	f104 0018 	add.w	r0, r4, #24
 8008688:	f7fe fe63 	bl	8007352 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800868c:	1d21      	adds	r1, r4, #4
 800868e:	4608      	mov	r0, r1
 8008690:	9101      	str	r1, [sp, #4]
 8008692:	f7fe fe5e 	bl	8007352 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008696:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008698:	6832      	ldr	r2, [r6, #0]
 800869a:	9901      	ldr	r1, [sp, #4]
 800869c:	2014      	movs	r0, #20
 800869e:	4293      	cmp	r3, r2
 80086a0:	fb00 7003 	mla	r0, r0, r3, r7
 80086a4:	bf88      	it	hi
 80086a6:	6033      	strhi	r3, [r6, #0]
 80086a8:	f7fe fe30 	bl	800730c <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80086ac:	4b1a      	ldr	r3, [pc, #104]	; (8008718 <xTaskResumeAll+0xdc>)
 80086ae:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80086b0:	681b      	ldr	r3, [r3, #0]
 80086b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80086b4:	429a      	cmp	r2, r3
 80086b6:	d302      	bcc.n	80086be <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 80086b8:	4b18      	ldr	r3, [pc, #96]	; (800871c <xTaskResumeAll+0xe0>)
 80086ba:	2201      	movs	r2, #1
 80086bc:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80086be:	682b      	ldr	r3, [r5, #0]
 80086c0:	2b00      	cmp	r3, #0
 80086c2:	d1dd      	bne.n	8008680 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 80086c4:	b10c      	cbz	r4, 80086ca <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 80086c6:	f7ff fdb5 	bl	8008234 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 80086ca:	4d15      	ldr	r5, [pc, #84]	; (8008720 <xTaskResumeAll+0xe4>)
 80086cc:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 80086ce:	b144      	cbz	r4, 80086e2 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 80086d0:	4e12      	ldr	r6, [pc, #72]	; (800871c <xTaskResumeAll+0xe0>)
 80086d2:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 80086d4:	f7ff ff1c 	bl	8008510 <xTaskIncrementTick>
 80086d8:	b100      	cbz	r0, 80086dc <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 80086da:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 80086dc:	3c01      	subs	r4, #1
 80086de:	d1f9      	bne.n	80086d4 <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 80086e0:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 80086e2:	4b0e      	ldr	r3, [pc, #56]	; (800871c <xTaskResumeAll+0xe0>)
 80086e4:	681b      	ldr	r3, [r3, #0]
 80086e6:	2b00      	cmp	r3, #0
 80086e8:	d0bc      	beq.n	8008664 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 80086ea:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80086ee:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80086f2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80086f6:	f3bf 8f4f 	dsb	sy
 80086fa:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 80086fe:	2401      	movs	r4, #1
 8008700:	e7b1      	b.n	8008666 <xTaskResumeAll+0x2a>
 8008702:	bf00      	nop
 8008704:	200124b0 	.word	0x200124b0
 8008708:	200124a8 	.word	0x200124a8
 800870c:	200124f0 	.word	0x200124f0
 8008710:	200124b8 	.word	0x200124b8
 8008714:	20012048 	.word	0x20012048
 8008718:	2001203c 	.word	0x2001203c
 800871c:	20012534 	.word	0x20012534
 8008720:	200124ec 	.word	0x200124ec

08008724 <vTaskDelay>:
	{
 8008724:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8008726:	b950      	cbnz	r0, 800873e <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8008728:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800872c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008730:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008734:	f3bf 8f4f 	dsb	sy
 8008738:	f3bf 8f6f 	isb	sy
	}
 800873c:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800873e:	4b0a      	ldr	r3, [pc, #40]	; (8008768 <vTaskDelay+0x44>)
 8008740:	6819      	ldr	r1, [r3, #0]
 8008742:	b141      	cbz	r1, 8008756 <vTaskDelay+0x32>
 8008744:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008748:	f383 8811 	msr	BASEPRI, r3
 800874c:	f3bf 8f6f 	isb	sy
 8008750:	f3bf 8f4f 	dsb	sy
 8008754:	e7fe      	b.n	8008754 <vTaskDelay+0x30>
			vTaskSuspendAll();
 8008756:	f7ff fec5 	bl	80084e4 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800875a:	f7ff fd33 	bl	80081c4 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800875e:	f7ff ff6d 	bl	800863c <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8008762:	2800      	cmp	r0, #0
 8008764:	d0e0      	beq.n	8008728 <vTaskDelay+0x4>
 8008766:	e7e9      	b.n	800873c <vTaskDelay+0x18>
 8008768:	200124b0 	.word	0x200124b0

0800876c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800876c:	4b17      	ldr	r3, [pc, #92]	; (80087cc <vTaskSwitchContext+0x60>)
 800876e:	681a      	ldr	r2, [r3, #0]
 8008770:	4b17      	ldr	r3, [pc, #92]	; (80087d0 <vTaskSwitchContext+0x64>)
{
 8008772:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8008774:	b112      	cbz	r2, 800877c <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8008776:	2201      	movs	r2, #1
 8008778:	601a      	str	r2, [r3, #0]
}
 800877a:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800877c:	4d15      	ldr	r5, [pc, #84]	; (80087d4 <vTaskSwitchContext+0x68>)
		xYieldPending = pdFALSE;
 800877e:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008780:	682a      	ldr	r2, [r5, #0]
 8008782:	4915      	ldr	r1, [pc, #84]	; (80087d8 <vTaskSwitchContext+0x6c>)
 8008784:	2614      	movs	r6, #20
 8008786:	fb06 f302 	mul.w	r3, r6, r2
 800878a:	18c8      	adds	r0, r1, r3
 800878c:	58cc      	ldr	r4, [r1, r3]
 800878e:	b18c      	cbz	r4, 80087b4 <vTaskSwitchContext+0x48>
 8008790:	6844      	ldr	r4, [r0, #4]
 8008792:	3308      	adds	r3, #8
 8008794:	6864      	ldr	r4, [r4, #4]
 8008796:	6044      	str	r4, [r0, #4]
 8008798:	440b      	add	r3, r1
 800879a:	429c      	cmp	r4, r3
 800879c:	bf04      	itt	eq
 800879e:	6863      	ldreq	r3, [r4, #4]
 80087a0:	6043      	streq	r3, [r0, #4]
 80087a2:	2314      	movs	r3, #20
 80087a4:	fb03 1102 	mla	r1, r3, r2, r1
 80087a8:	684b      	ldr	r3, [r1, #4]
 80087aa:	68d9      	ldr	r1, [r3, #12]
 80087ac:	4b0b      	ldr	r3, [pc, #44]	; (80087dc <vTaskSwitchContext+0x70>)
 80087ae:	6019      	str	r1, [r3, #0]
 80087b0:	602a      	str	r2, [r5, #0]
}
 80087b2:	e7e2      	b.n	800877a <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80087b4:	b942      	cbnz	r2, 80087c8 <vTaskSwitchContext+0x5c>
 80087b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087ba:	f383 8811 	msr	BASEPRI, r3
 80087be:	f3bf 8f6f 	isb	sy
 80087c2:	f3bf 8f4f 	dsb	sy
 80087c6:	e7fe      	b.n	80087c6 <vTaskSwitchContext+0x5a>
 80087c8:	3a01      	subs	r2, #1
 80087ca:	e7dc      	b.n	8008786 <vTaskSwitchContext+0x1a>
 80087cc:	200124b0 	.word	0x200124b0
 80087d0:	20012534 	.word	0x20012534
 80087d4:	200124b8 	.word	0x200124b8
 80087d8:	20012048 	.word	0x20012048
 80087dc:	2001203c 	.word	0x2001203c

080087e0 <vTaskPlaceOnEventList>:
{
 80087e0:	b510      	push	{r4, lr}
 80087e2:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 80087e4:	b940      	cbnz	r0, 80087f8 <vTaskPlaceOnEventList+0x18>
 80087e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80087ea:	f383 8811 	msr	BASEPRI, r3
 80087ee:	f3bf 8f6f 	isb	sy
 80087f2:	f3bf 8f4f 	dsb	sy
 80087f6:	e7fe      	b.n	80087f6 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 80087f8:	4b05      	ldr	r3, [pc, #20]	; (8008810 <vTaskPlaceOnEventList+0x30>)
 80087fa:	6819      	ldr	r1, [r3, #0]
 80087fc:	3118      	adds	r1, #24
 80087fe:	f7fe fd91 	bl	8007324 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008802:	4620      	mov	r0, r4
 8008804:	2101      	movs	r1, #1
}
 8008806:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800880a:	f7ff bcdb 	b.w	80081c4 <prvAddCurrentTaskToDelayedList>
 800880e:	bf00      	nop
 8008810:	2001203c 	.word	0x2001203c

08008814 <vTaskPlaceOnEventListRestricted>:
	{
 8008814:	b538      	push	{r3, r4, r5, lr}
 8008816:	460d      	mov	r5, r1
 8008818:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800881a:	b940      	cbnz	r0, 800882e <vTaskPlaceOnEventListRestricted+0x1a>
 800881c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008820:	f383 8811 	msr	BASEPRI, r3
 8008824:	f3bf 8f6f 	isb	sy
 8008828:	f3bf 8f4f 	dsb	sy
 800882c:	e7fe      	b.n	800882c <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800882e:	4b07      	ldr	r3, [pc, #28]	; (800884c <vTaskPlaceOnEventListRestricted+0x38>)
 8008830:	6819      	ldr	r1, [r3, #0]
 8008832:	3118      	adds	r1, #24
 8008834:	f7fe fd6a 	bl	800730c <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8008838:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800883a:	4621      	mov	r1, r4
 800883c:	bf0c      	ite	eq
 800883e:	4628      	moveq	r0, r5
 8008840:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8008844:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8008848:	f7ff bcbc 	b.w	80081c4 <prvAddCurrentTaskToDelayedList>
 800884c:	2001203c 	.word	0x2001203c

08008850 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008850:	68c3      	ldr	r3, [r0, #12]
{
 8008852:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008854:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8008856:	b944      	cbnz	r4, 800886a <xTaskRemoveFromEventList+0x1a>
 8008858:	f04f 0350 	mov.w	r3, #80	; 0x50
 800885c:	f383 8811 	msr	BASEPRI, r3
 8008860:	f3bf 8f6f 	isb	sy
 8008864:	f3bf 8f4f 	dsb	sy
 8008868:	e7fe      	b.n	8008868 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800886a:	f104 0118 	add.w	r1, r4, #24
 800886e:	4608      	mov	r0, r1
 8008870:	9101      	str	r1, [sp, #4]
 8008872:	f7fe fd6e 	bl	8007352 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008876:	4b12      	ldr	r3, [pc, #72]	; (80088c0 <xTaskRemoveFromEventList+0x70>)
 8008878:	9901      	ldr	r1, [sp, #4]
 800887a:	681b      	ldr	r3, [r3, #0]
 800887c:	b9eb      	cbnz	r3, 80088ba <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800887e:	1d21      	adds	r1, r4, #4
 8008880:	4608      	mov	r0, r1
 8008882:	9101      	str	r1, [sp, #4]
 8008884:	f7fe fd65 	bl	8007352 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8008888:	4a0e      	ldr	r2, [pc, #56]	; (80088c4 <xTaskRemoveFromEventList+0x74>)
 800888a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800888c:	6810      	ldr	r0, [r2, #0]
 800888e:	9901      	ldr	r1, [sp, #4]
 8008890:	4283      	cmp	r3, r0
 8008892:	bf88      	it	hi
 8008894:	6013      	strhi	r3, [r2, #0]
 8008896:	4a0c      	ldr	r2, [pc, #48]	; (80088c8 <xTaskRemoveFromEventList+0x78>)
 8008898:	2014      	movs	r0, #20
 800889a:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800889e:	f7fe fd35 	bl	800730c <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 80088a2:	4b0a      	ldr	r3, [pc, #40]	; (80088cc <xTaskRemoveFromEventList+0x7c>)
 80088a4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80088a6:	681b      	ldr	r3, [r3, #0]
 80088a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80088aa:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 80088ac:	bf85      	ittet	hi
 80088ae:	4b08      	ldrhi	r3, [pc, #32]	; (80088d0 <xTaskRemoveFromEventList+0x80>)
 80088b0:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 80088b2:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 80088b4:	6018      	strhi	r0, [r3, #0]
}
 80088b6:	b002      	add	sp, #8
 80088b8:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 80088ba:	4806      	ldr	r0, [pc, #24]	; (80088d4 <xTaskRemoveFromEventList+0x84>)
 80088bc:	e7ef      	b.n	800889e <xTaskRemoveFromEventList+0x4e>
 80088be:	bf00      	nop
 80088c0:	200124b0 	.word	0x200124b0
 80088c4:	200124b8 	.word	0x200124b8
 80088c8:	20012048 	.word	0x20012048
 80088cc:	2001203c 	.word	0x2001203c
 80088d0:	20012534 	.word	0x20012534
 80088d4:	200124f0 	.word	0x200124f0

080088d8 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 80088d8:	4b03      	ldr	r3, [pc, #12]	; (80088e8 <vTaskInternalSetTimeOutState+0x10>)
 80088da:	681b      	ldr	r3, [r3, #0]
 80088dc:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 80088de:	4b03      	ldr	r3, [pc, #12]	; (80088ec <vTaskInternalSetTimeOutState+0x14>)
 80088e0:	681b      	ldr	r3, [r3, #0]
 80088e2:	6043      	str	r3, [r0, #4]
}
 80088e4:	4770      	bx	lr
 80088e6:	bf00      	nop
 80088e8:	200124e8 	.word	0x200124e8
 80088ec:	20012530 	.word	0x20012530

080088f0 <xTaskCheckForTimeOut>:
{
 80088f0:	b570      	push	{r4, r5, r6, lr}
 80088f2:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 80088f4:	4605      	mov	r5, r0
 80088f6:	b940      	cbnz	r0, 800890a <xTaskCheckForTimeOut+0x1a>
 80088f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80088fc:	f383 8811 	msr	BASEPRI, r3
 8008900:	f3bf 8f6f 	isb	sy
 8008904:	f3bf 8f4f 	dsb	sy
 8008908:	e7fe      	b.n	8008908 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800890a:	b941      	cbnz	r1, 800891e <xTaskCheckForTimeOut+0x2e>
 800890c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008910:	f383 8811 	msr	BASEPRI, r3
 8008914:	f3bf 8f6f 	isb	sy
 8008918:	f3bf 8f4f 	dsb	sy
 800891c:	e7fe      	b.n	800891c <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800891e:	f7fe fd91 	bl	8007444 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8008922:	4b0f      	ldr	r3, [pc, #60]	; (8008960 <xTaskCheckForTimeOut+0x70>)
 8008924:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8008926:	6823      	ldr	r3, [r4, #0]
 8008928:	1c5a      	adds	r2, r3, #1
 800892a:	d010      	beq.n	800894e <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800892c:	480d      	ldr	r0, [pc, #52]	; (8008964 <xTaskCheckForTimeOut+0x74>)
 800892e:	682e      	ldr	r6, [r5, #0]
 8008930:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8008932:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8008934:	4286      	cmp	r6, r0
 8008936:	d001      	beq.n	800893c <xTaskCheckForTimeOut+0x4c>
 8008938:	428a      	cmp	r2, r1
 800893a:	d90f      	bls.n	800895c <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800893c:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800893e:	4283      	cmp	r3, r0
 8008940:	d90a      	bls.n	8008958 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8008942:	1a5b      	subs	r3, r3, r1
 8008944:	4413      	add	r3, r2
 8008946:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8008948:	4628      	mov	r0, r5
 800894a:	f7ff ffc5 	bl	80088d8 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800894e:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8008950:	f7fe fd98 	bl	8007484 <vPortExitCritical>
}
 8008954:	4620      	mov	r0, r4
 8008956:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8008958:	2300      	movs	r3, #0
 800895a:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800895c:	2401      	movs	r4, #1
 800895e:	e7f7      	b.n	8008950 <xTaskCheckForTimeOut+0x60>
 8008960:	20012530 	.word	0x20012530
 8008964:	200124e8 	.word	0x200124e8

08008968 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8008968:	4b01      	ldr	r3, [pc, #4]	; (8008970 <vTaskMissedYield+0x8>)
 800896a:	2201      	movs	r2, #1
 800896c:	601a      	str	r2, [r3, #0]
}
 800896e:	4770      	bx	lr
 8008970:	20012534 	.word	0x20012534

08008974 <xTaskGetCurrentTaskHandle>:
		xReturn = pxCurrentTCB;
 8008974:	4b01      	ldr	r3, [pc, #4]	; (800897c <xTaskGetCurrentTaskHandle+0x8>)
 8008976:	6818      	ldr	r0, [r3, #0]
	}
 8008978:	4770      	bx	lr
 800897a:	bf00      	nop
 800897c:	2001203c 	.word	0x2001203c

08008980 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8008980:	4b05      	ldr	r3, [pc, #20]	; (8008998 <xTaskGetSchedulerState+0x18>)
 8008982:	681b      	ldr	r3, [r3, #0]
 8008984:	b133      	cbz	r3, 8008994 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008986:	4b05      	ldr	r3, [pc, #20]	; (800899c <xTaskGetSchedulerState+0x1c>)
 8008988:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 800898a:	2b00      	cmp	r3, #0
 800898c:	bf0c      	ite	eq
 800898e:	2002      	moveq	r0, #2
 8008990:	2000      	movne	r0, #0
 8008992:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8008994:	2001      	movs	r0, #1
	}
 8008996:	4770      	bx	lr
 8008998:	20012504 	.word	0x20012504
 800899c:	200124b0 	.word	0x200124b0

080089a0 <xTaskPriorityInherit>:
	{
 80089a0:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 80089a2:	4604      	mov	r4, r0
 80089a4:	b348      	cbz	r0, 80089fa <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 80089a6:	4d1c      	ldr	r5, [pc, #112]	; (8008a18 <xTaskPriorityInherit+0x78>)
 80089a8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80089aa:	682a      	ldr	r2, [r5, #0]
 80089ac:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80089ae:	4293      	cmp	r3, r2
 80089b0:	d229      	bcs.n	8008a06 <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80089b2:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 80089b4:	4e19      	ldr	r6, [pc, #100]	; (8008a1c <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 80089b6:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80089b8:	bfa1      	itttt	ge
 80089ba:	682a      	ldrge	r2, [r5, #0]
 80089bc:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 80089be:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 80089c2:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 80089c4:	2214      	movs	r2, #20
 80089c6:	fb02 6303 	mla	r3, r2, r3, r6
 80089ca:	6942      	ldr	r2, [r0, #20]
 80089cc:	429a      	cmp	r2, r3
 80089ce:	d116      	bne.n	80089fe <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80089d0:	1d01      	adds	r1, r0, #4
 80089d2:	4608      	mov	r0, r1
 80089d4:	9101      	str	r1, [sp, #4]
 80089d6:	f7fe fcbc 	bl	8007352 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80089da:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80089dc:	4a10      	ldr	r2, [pc, #64]	; (8008a20 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80089de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80089e0:	6810      	ldr	r0, [r2, #0]
 80089e2:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80089e4:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 80089e6:	4283      	cmp	r3, r0
 80089e8:	f04f 0014 	mov.w	r0, #20
 80089ec:	fb00 6003 	mla	r0, r0, r3, r6
 80089f0:	bf88      	it	hi
 80089f2:	6013      	strhi	r3, [r2, #0]
 80089f4:	f7fe fc8a 	bl	800730c <vListInsertEnd>
				xReturn = pdTRUE;
 80089f8:	2001      	movs	r0, #1
	}
 80089fa:	b002      	add	sp, #8
 80089fc:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 80089fe:	682b      	ldr	r3, [r5, #0]
 8008a00:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008a02:	62c3      	str	r3, [r0, #44]	; 0x2c
 8008a04:	e7f8      	b.n	80089f8 <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8008a06:	682b      	ldr	r3, [r5, #0]
 8008a08:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8008a0a:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8008a0c:	42a0      	cmp	r0, r4
 8008a0e:	bf2c      	ite	cs
 8008a10:	2000      	movcs	r0, #0
 8008a12:	2001      	movcc	r0, #1
 8008a14:	e7f1      	b.n	80089fa <xTaskPriorityInherit+0x5a>
 8008a16:	bf00      	nop
 8008a18:	2001203c 	.word	0x2001203c
 8008a1c:	20012048 	.word	0x20012048
 8008a20:	200124b8 	.word	0x200124b8

08008a24 <xTaskPriorityDisinherit>:
	{
 8008a24:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 8008a26:	b910      	cbnz	r0, 8008a2e <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 8008a28:	2000      	movs	r0, #0
	}
 8008a2a:	b002      	add	sp, #8
 8008a2c:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8008a2e:	4b1c      	ldr	r3, [pc, #112]	; (8008aa0 <xTaskPriorityDisinherit+0x7c>)
 8008a30:	681c      	ldr	r4, [r3, #0]
 8008a32:	4284      	cmp	r4, r0
 8008a34:	d008      	beq.n	8008a48 <xTaskPriorityDisinherit+0x24>
 8008a36:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a3a:	f383 8811 	msr	BASEPRI, r3
 8008a3e:	f3bf 8f6f 	isb	sy
 8008a42:	f3bf 8f4f 	dsb	sy
 8008a46:	e7fe      	b.n	8008a46 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 8008a48:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8008a4a:	b943      	cbnz	r3, 8008a5e <xTaskPriorityDisinherit+0x3a>
 8008a4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a50:	f383 8811 	msr	BASEPRI, r3
 8008a54:	f3bf 8f6f 	isb	sy
 8008a58:	f3bf 8f4f 	dsb	sy
 8008a5c:	e7fe      	b.n	8008a5c <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008a5e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8008a60:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8008a62:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008a64:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8008a66:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8008a68:	d0de      	beq.n	8008a28 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8008a6a:	2b00      	cmp	r3, #0
 8008a6c:	d1dc      	bne.n	8008a28 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008a6e:	1d21      	adds	r1, r4, #4
 8008a70:	4608      	mov	r0, r1
 8008a72:	9101      	str	r1, [sp, #4]
 8008a74:	f7fe fc6d 	bl	8007352 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8008a78:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 8008a7a:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8008a7c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008a7e:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8008a82:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8008a84:	4a07      	ldr	r2, [pc, #28]	; (8008aa4 <xTaskPriorityDisinherit+0x80>)
 8008a86:	6810      	ldr	r0, [r2, #0]
 8008a88:	4283      	cmp	r3, r0
 8008a8a:	bf88      	it	hi
 8008a8c:	6013      	strhi	r3, [r2, #0]
 8008a8e:	4a06      	ldr	r2, [pc, #24]	; (8008aa8 <xTaskPriorityDisinherit+0x84>)
 8008a90:	2014      	movs	r0, #20
 8008a92:	fb00 2003 	mla	r0, r0, r3, r2
 8008a96:	f7fe fc39 	bl	800730c <vListInsertEnd>
					xReturn = pdTRUE;
 8008a9a:	2001      	movs	r0, #1
		return xReturn;
 8008a9c:	e7c5      	b.n	8008a2a <xTaskPriorityDisinherit+0x6>
 8008a9e:	bf00      	nop
 8008aa0:	2001203c 	.word	0x2001203c
 8008aa4:	200124b8 	.word	0x200124b8
 8008aa8:	20012048 	.word	0x20012048

08008aac <vTaskPriorityDisinheritAfterTimeout>:
	{
 8008aac:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8008aae:	4604      	mov	r4, r0
 8008ab0:	2800      	cmp	r0, #0
 8008ab2:	d044      	beq.n	8008b3e <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 8008ab4:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8008ab6:	b942      	cbnz	r2, 8008aca <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8008ab8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008abc:	f383 8811 	msr	BASEPRI, r3
 8008ac0:	f3bf 8f6f 	isb	sy
 8008ac4:	f3bf 8f4f 	dsb	sy
 8008ac8:	e7fe      	b.n	8008ac8 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8008aca:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8008acc:	4299      	cmp	r1, r3
 8008ace:	bf38      	it	cc
 8008ad0:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8008ad2:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8008ad4:	428b      	cmp	r3, r1
 8008ad6:	d032      	beq.n	8008b3e <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8008ad8:	2a01      	cmp	r2, #1
 8008ada:	d130      	bne.n	8008b3e <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 8008adc:	4a19      	ldr	r2, [pc, #100]	; (8008b44 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8008ade:	6812      	ldr	r2, [r2, #0]
 8008ae0:	4282      	cmp	r2, r0
 8008ae2:	d108      	bne.n	8008af6 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8008ae4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ae8:	f383 8811 	msr	BASEPRI, r3
 8008aec:	f3bf 8f6f 	isb	sy
 8008af0:	f3bf 8f4f 	dsb	sy
 8008af4:	e7fe      	b.n	8008af4 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008af6:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008af8:	4d13      	ldr	r5, [pc, #76]	; (8008b48 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 8008afa:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008afc:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008afe:	f04f 0214 	mov.w	r2, #20
 8008b02:	fb02 5303 	mla	r3, r2, r3, r5
 8008b06:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008b08:	bfa4      	itt	ge
 8008b0a:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 8008b0e:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008b10:	429a      	cmp	r2, r3
 8008b12:	d114      	bne.n	8008b3e <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008b14:	1d01      	adds	r1, r0, #4
 8008b16:	4608      	mov	r0, r1
 8008b18:	9101      	str	r1, [sp, #4]
 8008b1a:	f7fe fc1a 	bl	8007352 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8008b1e:	4a0b      	ldr	r2, [pc, #44]	; (8008b4c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 8008b20:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008b22:	6810      	ldr	r0, [r2, #0]
 8008b24:	9901      	ldr	r1, [sp, #4]
 8008b26:	4283      	cmp	r3, r0
 8008b28:	f04f 0014 	mov.w	r0, #20
 8008b2c:	fb00 5003 	mla	r0, r0, r3, r5
 8008b30:	bf88      	it	hi
 8008b32:	6013      	strhi	r3, [r2, #0]
	}
 8008b34:	b003      	add	sp, #12
 8008b36:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 8008b3a:	f7fe bbe7 	b.w	800730c <vListInsertEnd>
	}
 8008b3e:	b003      	add	sp, #12
 8008b40:	bd30      	pop	{r4, r5, pc}
 8008b42:	bf00      	nop
 8008b44:	2001203c 	.word	0x2001203c
 8008b48:	20012048 	.word	0x20012048
 8008b4c:	200124b8 	.word	0x200124b8

08008b50 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8008b50:	4b04      	ldr	r3, [pc, #16]	; (8008b64 <pvTaskIncrementMutexHeldCount+0x14>)
 8008b52:	681a      	ldr	r2, [r3, #0]
 8008b54:	b11a      	cbz	r2, 8008b5e <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8008b56:	6819      	ldr	r1, [r3, #0]
 8008b58:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8008b5a:	3201      	adds	r2, #1
 8008b5c:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8008b5e:	6818      	ldr	r0, [r3, #0]
	}
 8008b60:	4770      	bx	lr
 8008b62:	bf00      	nop
 8008b64:	2001203c 	.word	0x2001203c

08008b68 <ulTaskNotifyTake>:
	{
 8008b68:	b570      	push	{r4, r5, r6, lr}
			if( pxCurrentTCB->ulNotifiedValue == 0UL )
 8008b6a:	4c17      	ldr	r4, [pc, #92]	; (8008bc8 <ulTaskNotifyTake+0x60>)
	{
 8008b6c:	4606      	mov	r6, r0
 8008b6e:	460d      	mov	r5, r1
		taskENTER_CRITICAL();
 8008b70:	f7fe fc68 	bl	8007444 <vPortEnterCritical>
			if( pxCurrentTCB->ulNotifiedValue == 0UL )
 8008b74:	6823      	ldr	r3, [r4, #0]
 8008b76:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008b78:	b98b      	cbnz	r3, 8008b9e <ulTaskNotifyTake+0x36>
				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
 8008b7a:	6823      	ldr	r3, [r4, #0]
 8008b7c:	2101      	movs	r1, #1
 8008b7e:	f883 105c 	strb.w	r1, [r3, #92]	; 0x5c
				if( xTicksToWait > ( TickType_t ) 0 )
 8008b82:	b165      	cbz	r5, 8008b9e <ulTaskNotifyTake+0x36>
					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008b84:	4628      	mov	r0, r5
 8008b86:	f7ff fb1d 	bl	80081c4 <prvAddCurrentTaskToDelayedList>
					portYIELD_WITHIN_API();
 8008b8a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008b8e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008b92:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008b96:	f3bf 8f4f 	dsb	sy
 8008b9a:	f3bf 8f6f 	isb	sy
		taskEXIT_CRITICAL();
 8008b9e:	f7fe fc71 	bl	8007484 <vPortExitCritical>
		taskENTER_CRITICAL();
 8008ba2:	f7fe fc4f 	bl	8007444 <vPortEnterCritical>
			ulReturn = pxCurrentTCB->ulNotifiedValue;
 8008ba6:	6823      	ldr	r3, [r4, #0]
 8008ba8:	6d9d      	ldr	r5, [r3, #88]	; 0x58
			if( ulReturn != 0UL )
 8008baa:	b11d      	cbz	r5, 8008bb4 <ulTaskNotifyTake+0x4c>
					pxCurrentTCB->ulNotifiedValue = 0UL;
 8008bac:	6823      	ldr	r3, [r4, #0]
				if( xClearCountOnExit != pdFALSE )
 8008bae:	b14e      	cbz	r6, 8008bc4 <ulTaskNotifyTake+0x5c>
					pxCurrentTCB->ulNotifiedValue = 0UL;
 8008bb0:	2200      	movs	r2, #0
					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
 8008bb2:	659a      	str	r2, [r3, #88]	; 0x58
			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8008bb4:	6823      	ldr	r3, [r4, #0]
 8008bb6:	2200      	movs	r2, #0
 8008bb8:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
		taskEXIT_CRITICAL();
 8008bbc:	f7fe fc62 	bl	8007484 <vPortExitCritical>
	}
 8008bc0:	4628      	mov	r0, r5
 8008bc2:	bd70      	pop	{r4, r5, r6, pc}
					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
 8008bc4:	1e6a      	subs	r2, r5, #1
 8008bc6:	e7f4      	b.n	8008bb2 <ulTaskNotifyTake+0x4a>
 8008bc8:	2001203c 	.word	0x2001203c

08008bcc <xTaskGenericNotify>:
	{
 8008bcc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008bce:	460d      	mov	r5, r1
 8008bd0:	4616      	mov	r6, r2
 8008bd2:	461f      	mov	r7, r3
		configASSERT( xTaskToNotify );
 8008bd4:	4604      	mov	r4, r0
 8008bd6:	b940      	cbnz	r0, 8008bea <xTaskGenericNotify+0x1e>
 8008bd8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bdc:	f383 8811 	msr	BASEPRI, r3
 8008be0:	f3bf 8f6f 	isb	sy
 8008be4:	f3bf 8f4f 	dsb	sy
 8008be8:	e7fe      	b.n	8008be8 <xTaskGenericNotify+0x1c>
		taskENTER_CRITICAL();
 8008bea:	f7fe fc2b 	bl	8007444 <vPortEnterCritical>
			if( pulPreviousNotificationValue != NULL )
 8008bee:	b10f      	cbz	r7, 8008bf4 <xTaskGenericNotify+0x28>
				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
 8008bf0:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8008bf2:	603b      	str	r3, [r7, #0]
			ucOriginalNotifyState = pxTCB->ucNotifyState;
 8008bf4:	f894 305c 	ldrb.w	r3, [r4, #92]	; 0x5c
			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 8008bf8:	2202      	movs	r2, #2
			ucOriginalNotifyState = pxTCB->ucNotifyState;
 8008bfa:	b2db      	uxtb	r3, r3
			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 8008bfc:	f884 205c 	strb.w	r2, [r4, #92]	; 0x5c
			switch( eAction )
 8008c00:	2e04      	cmp	r6, #4
 8008c02:	d817      	bhi.n	8008c34 <xTaskGenericNotify+0x68>
 8008c04:	e8df f006 	tbb	[pc, r6]
 8008c08:	0507030a 	.word	0x0507030a
 8008c0c:	12          	.byte	0x12
 8008c0d:	00          	.byte	0x00
					pxTCB->ulNotifiedValue |= ulValue;
 8008c0e:	6da1      	ldr	r1, [r4, #88]	; 0x58
 8008c10:	430d      	orrs	r5, r1
						pxTCB->ulNotifiedValue = ulValue;
 8008c12:	65a5      	str	r5, [r4, #88]	; 0x58
 8008c14:	e002      	b.n	8008c1c <xTaskGenericNotify+0x50>
					( pxTCB->ulNotifiedValue )++;
 8008c16:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8008c18:	3201      	adds	r2, #1
 8008c1a:	65a2      	str	r2, [r4, #88]	; 0x58
			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
 8008c1c:	2b01      	cmp	r3, #1
 8008c1e:	d015      	beq.n	8008c4c <xTaskGenericNotify+0x80>
					taskYIELD_IF_USING_PREEMPTION();
 8008c20:	2401      	movs	r4, #1
		taskEXIT_CRITICAL();
 8008c22:	f7fe fc2f 	bl	8007484 <vPortExitCritical>
	}
 8008c26:	4620      	mov	r0, r4
 8008c28:	b003      	add	sp, #12
 8008c2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
 8008c2c:	2b02      	cmp	r3, #2
 8008c2e:	d1f0      	bne.n	8008c12 <xTaskGenericNotify+0x46>
						xReturn = pdFAIL;
 8008c30:	2400      	movs	r4, #0
 8008c32:	e7f6      	b.n	8008c22 <xTaskGenericNotify+0x56>
					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
 8008c34:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8008c36:	3201      	adds	r2, #1
 8008c38:	d0f0      	beq.n	8008c1c <xTaskGenericNotify+0x50>
 8008c3a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c3e:	f383 8811 	msr	BASEPRI, r3
 8008c42:	f3bf 8f6f 	isb	sy
 8008c46:	f3bf 8f4f 	dsb	sy
 8008c4a:	e7fe      	b.n	8008c4a <xTaskGenericNotify+0x7e>
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008c4c:	1d21      	adds	r1, r4, #4
 8008c4e:	4608      	mov	r0, r1
 8008c50:	9101      	str	r1, [sp, #4]
 8008c52:	f7fe fb7e 	bl	8007352 <uxListRemove>
				prvAddTaskToReadyList( pxTCB );
 8008c56:	4a14      	ldr	r2, [pc, #80]	; (8008ca8 <xTaskGenericNotify+0xdc>)
 8008c58:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008c5a:	6810      	ldr	r0, [r2, #0]
 8008c5c:	9901      	ldr	r1, [sp, #4]
 8008c5e:	4283      	cmp	r3, r0
 8008c60:	bf88      	it	hi
 8008c62:	6013      	strhi	r3, [r2, #0]
 8008c64:	4a11      	ldr	r2, [pc, #68]	; (8008cac <xTaskGenericNotify+0xe0>)
 8008c66:	2014      	movs	r0, #20
 8008c68:	fb00 2003 	mla	r0, r0, r3, r2
 8008c6c:	f7fe fb4e 	bl	800730c <vListInsertEnd>
				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
 8008c70:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8008c72:	b143      	cbz	r3, 8008c86 <xTaskGenericNotify+0xba>
 8008c74:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c78:	f383 8811 	msr	BASEPRI, r3
 8008c7c:	f3bf 8f6f 	isb	sy
 8008c80:	f3bf 8f4f 	dsb	sy
 8008c84:	e7fe      	b.n	8008c84 <xTaskGenericNotify+0xb8>
				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
 8008c86:	4b0a      	ldr	r3, [pc, #40]	; (8008cb0 <xTaskGenericNotify+0xe4>)
 8008c88:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008c8a:	681b      	ldr	r3, [r3, #0]
 8008c8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008c8e:	429a      	cmp	r2, r3
 8008c90:	d9c6      	bls.n	8008c20 <xTaskGenericNotify+0x54>
					taskYIELD_IF_USING_PREEMPTION();
 8008c92:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008c96:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008c9a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008c9e:	f3bf 8f4f 	dsb	sy
 8008ca2:	f3bf 8f6f 	isb	sy
 8008ca6:	e7bb      	b.n	8008c20 <xTaskGenericNotify+0x54>
 8008ca8:	200124b8 	.word	0x200124b8
 8008cac:	20012048 	.word	0x20012048
 8008cb0:	2001203c 	.word	0x2001203c

08008cb4 <xTaskGenericNotifyFromISR>:
	{
 8008cb4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008cb8:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8008cbc:	460d      	mov	r5, r1
 8008cbe:	4616      	mov	r6, r2
 8008cc0:	461f      	mov	r7, r3
		configASSERT( xTaskToNotify );
 8008cc2:	4604      	mov	r4, r0
 8008cc4:	b940      	cbnz	r0, 8008cd8 <xTaskGenericNotifyFromISR+0x24>
 8008cc6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008cca:	f383 8811 	msr	BASEPRI, r3
 8008cce:	f3bf 8f6f 	isb	sy
 8008cd2:	f3bf 8f4f 	dsb	sy
 8008cd6:	e7fe      	b.n	8008cd6 <xTaskGenericNotifyFromISR+0x22>
		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8008cd8:	f7fe fcca 	bl	8007670 <vPortValidateInterruptPriority>
	__asm volatile
 8008cdc:	f3ef 8811 	mrs	r8, BASEPRI
 8008ce0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ce4:	f383 8811 	msr	BASEPRI, r3
 8008ce8:	f3bf 8f6f 	isb	sy
 8008cec:	f3bf 8f4f 	dsb	sy
			if( pulPreviousNotificationValue != NULL )
 8008cf0:	b10f      	cbz	r7, 8008cf6 <xTaskGenericNotifyFromISR+0x42>
				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
 8008cf2:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8008cf4:	603b      	str	r3, [r7, #0]
			ucOriginalNotifyState = pxTCB->ucNotifyState;
 8008cf6:	f894 305c 	ldrb.w	r3, [r4, #92]	; 0x5c
			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 8008cfa:	2202      	movs	r2, #2
			ucOriginalNotifyState = pxTCB->ucNotifyState;
 8008cfc:	b2db      	uxtb	r3, r3
			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 8008cfe:	f884 205c 	strb.w	r2, [r4, #92]	; 0x5c
			switch( eAction )
 8008d02:	2e04      	cmp	r6, #4
 8008d04:	d817      	bhi.n	8008d36 <xTaskGenericNotifyFromISR+0x82>
 8008d06:	e8df f006 	tbb	[pc, r6]
 8008d0a:	030a      	.short	0x030a
 8008d0c:	0507      	.short	0x0507
 8008d0e:	12          	.byte	0x12
 8008d0f:	00          	.byte	0x00
					pxTCB->ulNotifiedValue |= ulValue;
 8008d10:	6da1      	ldr	r1, [r4, #88]	; 0x58
 8008d12:	430d      	orrs	r5, r1
						pxTCB->ulNotifiedValue = ulValue;
 8008d14:	65a5      	str	r5, [r4, #88]	; 0x58
 8008d16:	e002      	b.n	8008d1e <xTaskGenericNotifyFromISR+0x6a>
					( pxTCB->ulNotifiedValue )++;
 8008d18:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8008d1a:	3201      	adds	r2, #1
 8008d1c:	65a2      	str	r2, [r4, #88]	; 0x58
			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
 8008d1e:	2b01      	cmp	r3, #1
 8008d20:	d015      	beq.n	8008d4e <xTaskGenericNotifyFromISR+0x9a>
 8008d22:	2001      	movs	r0, #1
	__asm volatile
 8008d24:	f388 8811 	msr	BASEPRI, r8
	}
 8008d28:	b003      	add	sp, #12
 8008d2a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
 8008d2e:	2b02      	cmp	r3, #2
 8008d30:	d1f0      	bne.n	8008d14 <xTaskGenericNotifyFromISR+0x60>
						xReturn = pdFAIL;
 8008d32:	2000      	movs	r0, #0
 8008d34:	e7f6      	b.n	8008d24 <xTaskGenericNotifyFromISR+0x70>
					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
 8008d36:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8008d38:	3201      	adds	r2, #1
 8008d3a:	d0f0      	beq.n	8008d1e <xTaskGenericNotifyFromISR+0x6a>
	__asm volatile
 8008d3c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d40:	f383 8811 	msr	BASEPRI, r3
 8008d44:	f3bf 8f6f 	isb	sy
 8008d48:	f3bf 8f4f 	dsb	sy
 8008d4c:	e7fe      	b.n	8008d4c <xTaskGenericNotifyFromISR+0x98>
				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
 8008d4e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8008d50:	b143      	cbz	r3, 8008d64 <xTaskGenericNotifyFromISR+0xb0>
 8008d52:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d56:	f383 8811 	msr	BASEPRI, r3
 8008d5a:	f3bf 8f6f 	isb	sy
 8008d5e:	f3bf 8f4f 	dsb	sy
 8008d62:	e7fe      	b.n	8008d62 <xTaskGenericNotifyFromISR+0xae>
				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8008d64:	4b13      	ldr	r3, [pc, #76]	; (8008db4 <xTaskGenericNotifyFromISR+0x100>)
 8008d66:	681b      	ldr	r3, [r3, #0]
 8008d68:	bb03      	cbnz	r3, 8008dac <xTaskGenericNotifyFromISR+0xf8>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8008d6a:	1d21      	adds	r1, r4, #4
 8008d6c:	4608      	mov	r0, r1
 8008d6e:	9101      	str	r1, [sp, #4]
 8008d70:	f7fe faef 	bl	8007352 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8008d74:	4a10      	ldr	r2, [pc, #64]	; (8008db8 <xTaskGenericNotifyFromISR+0x104>)
 8008d76:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008d78:	6810      	ldr	r0, [r2, #0]
 8008d7a:	9901      	ldr	r1, [sp, #4]
 8008d7c:	4283      	cmp	r3, r0
 8008d7e:	bf88      	it	hi
 8008d80:	6013      	strhi	r3, [r2, #0]
 8008d82:	4a0e      	ldr	r2, [pc, #56]	; (8008dbc <xTaskGenericNotifyFromISR+0x108>)
 8008d84:	2014      	movs	r0, #20
 8008d86:	fb00 2003 	mla	r0, r0, r3, r2
					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
 8008d8a:	f7fe fabf 	bl	800730c <vListInsertEnd>
				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
 8008d8e:	4b0c      	ldr	r3, [pc, #48]	; (8008dc0 <xTaskGenericNotifyFromISR+0x10c>)
 8008d90:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008d92:	681b      	ldr	r3, [r3, #0]
 8008d94:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008d96:	429a      	cmp	r2, r3
 8008d98:	d9c3      	bls.n	8008d22 <xTaskGenericNotifyFromISR+0x6e>
					if( pxHigherPriorityTaskWoken != NULL )
 8008d9a:	2301      	movs	r3, #1
 8008d9c:	f1b9 0f00 	cmp.w	r9, #0
 8008da0:	d001      	beq.n	8008da6 <xTaskGenericNotifyFromISR+0xf2>
						*pxHigherPriorityTaskWoken = pdTRUE;
 8008da2:	f8c9 3000 	str.w	r3, [r9]
					xYieldPending = pdTRUE;
 8008da6:	4a07      	ldr	r2, [pc, #28]	; (8008dc4 <xTaskGenericNotifyFromISR+0x110>)
 8008da8:	6013      	str	r3, [r2, #0]
 8008daa:	e7ba      	b.n	8008d22 <xTaskGenericNotifyFromISR+0x6e>
					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
 8008dac:	4806      	ldr	r0, [pc, #24]	; (8008dc8 <xTaskGenericNotifyFromISR+0x114>)
 8008dae:	f104 0118 	add.w	r1, r4, #24
 8008db2:	e7ea      	b.n	8008d8a <xTaskGenericNotifyFromISR+0xd6>
 8008db4:	200124b0 	.word	0x200124b0
 8008db8:	200124b8 	.word	0x200124b8
 8008dbc:	20012048 	.word	0x20012048
 8008dc0:	2001203c 	.word	0x2001203c
 8008dc4:	20012534 	.word	0x20012534
 8008dc8:	200124f0 	.word	0x200124f0

08008dcc <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8008dcc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8008dce:	4c11      	ldr	r4, [pc, #68]	; (8008e14 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8008dd0:	f7fe fb38 	bl	8007444 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8008dd4:	6825      	ldr	r5, [r4, #0]
 8008dd6:	b9bd      	cbnz	r5, 8008e08 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8008dd8:	4f0f      	ldr	r7, [pc, #60]	; (8008e18 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8008dda:	4e10      	ldr	r6, [pc, #64]	; (8008e1c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8008ddc:	4638      	mov	r0, r7
 8008dde:	f7fe fa87 	bl	80072f0 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8008de2:	4630      	mov	r0, r6
 8008de4:	f7fe fa84 	bl	80072f0 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8008de8:	4b0d      	ldr	r3, [pc, #52]	; (8008e20 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008dea:	4a0e      	ldr	r2, [pc, #56]	; (8008e24 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8008dec:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8008dee:	4b0e      	ldr	r3, [pc, #56]	; (8008e28 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008df0:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8008df2:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008df4:	200a      	movs	r0, #10
 8008df6:	4b0d      	ldr	r3, [pc, #52]	; (8008e2c <prvCheckForValidListAndQueue+0x60>)
 8008df8:	9500      	str	r5, [sp, #0]
 8008dfa:	f7fe fd34 	bl	8007866 <xQueueGenericCreateStatic>
 8008dfe:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8008e00:	b110      	cbz	r0, 8008e08 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8008e02:	490b      	ldr	r1, [pc, #44]	; (8008e30 <prvCheckForValidListAndQueue+0x64>)
 8008e04:	f7ff f8fe 	bl	8008004 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8008e08:	b003      	add	sp, #12
 8008e0a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8008e0e:	f7fe bb39 	b.w	8007484 <vPortExitCritical>
 8008e12:	bf00      	nop
 8008e14:	2001265c 	.word	0x2001265c
 8008e18:	200125e0 	.word	0x200125e0
 8008e1c:	200125f4 	.word	0x200125f4
 8008e20:	20012538 	.word	0x20012538
 8008e24:	20012540 	.word	0x20012540
 8008e28:	2001253c 	.word	0x2001253c
 8008e2c:	2001260c 	.word	0x2001260c
 8008e30:	0801dca5 	.word	0x0801dca5

08008e34 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8008e34:	4291      	cmp	r1, r2
{
 8008e36:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8008e38:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8008e3a:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8008e3c:	d80a      	bhi.n	8008e54 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8008e3e:	1ad2      	subs	r2, r2, r3
 8008e40:	6983      	ldr	r3, [r0, #24]
 8008e42:	429a      	cmp	r2, r3
 8008e44:	d20d      	bcs.n	8008e62 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8008e46:	4b08      	ldr	r3, [pc, #32]	; (8008e68 <prvInsertTimerInActiveList+0x34>)
 8008e48:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008e4a:	6818      	ldr	r0, [r3, #0]
 8008e4c:	f7fe fa6a 	bl	8007324 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8008e50:	2000      	movs	r0, #0
}
 8008e52:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8008e54:	429a      	cmp	r2, r3
 8008e56:	d201      	bcs.n	8008e5c <prvInsertTimerInActiveList+0x28>
 8008e58:	4299      	cmp	r1, r3
 8008e5a:	d202      	bcs.n	8008e62 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008e5c:	4b03      	ldr	r3, [pc, #12]	; (8008e6c <prvInsertTimerInActiveList+0x38>)
 8008e5e:	1d01      	adds	r1, r0, #4
 8008e60:	e7f3      	b.n	8008e4a <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8008e62:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8008e64:	e7f5      	b.n	8008e52 <prvInsertTimerInActiveList+0x1e>
 8008e66:	bf00      	nop
 8008e68:	2001253c 	.word	0x2001253c
 8008e6c:	20012538 	.word	0x20012538

08008e70 <prvInitialiseNewTimer>:
{
 8008e70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008e74:	9c07      	ldr	r4, [sp, #28]
 8008e76:	4680      	mov	r8, r0
 8008e78:	4616      	mov	r6, r2
 8008e7a:	461f      	mov	r7, r3
	configASSERT( ( xTimerPeriodInTicks > 0 ) );
 8008e7c:	460d      	mov	r5, r1
 8008e7e:	b941      	cbnz	r1, 8008e92 <prvInitialiseNewTimer+0x22>
 8008e80:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e84:	f383 8811 	msr	BASEPRI, r3
 8008e88:	f3bf 8f6f 	isb	sy
 8008e8c:	f3bf 8f4f 	dsb	sy
 8008e90:	e7fe      	b.n	8008e90 <prvInitialiseNewTimer+0x20>
	if( pxNewTimer != NULL )
 8008e92:	b18c      	cbz	r4, 8008eb8 <prvInitialiseNewTimer+0x48>
		prvCheckForValidListAndQueue();
 8008e94:	f7ff ff9a 	bl	8008dcc <prvCheckForValidListAndQueue>
		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 8008e98:	9b06      	ldr	r3, [sp, #24]
		pxNewTimer->pcTimerName = pcTimerName;
 8008e9a:	f8c4 8000 	str.w	r8, [r4]
		pxNewTimer->pvTimerID = pvTimerID;
 8008e9e:	e9c4 5706 	strd	r5, r7, [r4, #24]
		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 8008ea2:	6223      	str	r3, [r4, #32]
		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 8008ea4:	1d20      	adds	r0, r4, #4
 8008ea6:	f7fe fa2e 	bl	8007306 <vListInitialiseItem>
		if( uxAutoReload != pdFALSE )
 8008eaa:	b12e      	cbz	r6, 8008eb8 <prvInitialiseNewTimer+0x48>
			pxNewTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 8008eac:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008eb0:	f043 0304 	orr.w	r3, r3, #4
 8008eb4:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
}
 8008eb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008ebc <xTimerCreateTimerTask>:
{
 8008ebc:	b510      	push	{r4, lr}
 8008ebe:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8008ec0:	f7ff ff84 	bl	8008dcc <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8008ec4:	4b12      	ldr	r3, [pc, #72]	; (8008f10 <xTimerCreateTimerTask+0x54>)
 8008ec6:	681b      	ldr	r3, [r3, #0]
 8008ec8:	b1b3      	cbz	r3, 8008ef8 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8008eca:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8008ecc:	aa07      	add	r2, sp, #28
 8008ece:	a906      	add	r1, sp, #24
 8008ed0:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8008ed2:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8008ed6:	f7fe f905 	bl	80070e4 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8008eda:	9b05      	ldr	r3, [sp, #20]
 8008edc:	9302      	str	r3, [sp, #8]
 8008ede:	9b06      	ldr	r3, [sp, #24]
 8008ee0:	9301      	str	r3, [sp, #4]
 8008ee2:	2302      	movs	r3, #2
 8008ee4:	9300      	str	r3, [sp, #0]
 8008ee6:	9a07      	ldr	r2, [sp, #28]
 8008ee8:	490a      	ldr	r1, [pc, #40]	; (8008f14 <xTimerCreateTimerTask+0x58>)
 8008eea:	480b      	ldr	r0, [pc, #44]	; (8008f18 <xTimerCreateTimerTask+0x5c>)
 8008eec:	4623      	mov	r3, r4
 8008eee:	f7ff fa4e 	bl	800838e <xTaskCreateStatic>
 8008ef2:	4b0a      	ldr	r3, [pc, #40]	; (8008f1c <xTimerCreateTimerTask+0x60>)
 8008ef4:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8008ef6:	b940      	cbnz	r0, 8008f0a <xTimerCreateTimerTask+0x4e>
 8008ef8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008efc:	f383 8811 	msr	BASEPRI, r3
 8008f00:	f3bf 8f6f 	isb	sy
 8008f04:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8008f08:	e7fe      	b.n	8008f08 <xTimerCreateTimerTask+0x4c>
}
 8008f0a:	2001      	movs	r0, #1
 8008f0c:	b008      	add	sp, #32
 8008f0e:	bd10      	pop	{r4, pc}
 8008f10:	2001265c 	.word	0x2001265c
 8008f14:	0801dcaa 	.word	0x0801dcaa
 8008f18:	08009059 	.word	0x08009059
 8008f1c:	20012660 	.word	0x20012660

08008f20 <xTimerCreate>:
	{
 8008f20:	b530      	push	{r4, r5, lr}
 8008f22:	b087      	sub	sp, #28
 8008f24:	4605      	mov	r5, r0
		pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of Timer_t is always a pointer to the timer's mame. */
 8008f26:	202c      	movs	r0, #44	; 0x2c
	{
 8008f28:	e9cd 2104 	strd	r2, r1, [sp, #16]
 8008f2c:	9303      	str	r3, [sp, #12]
		pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of Timer_t is always a pointer to the timer's mame. */
 8008f2e:	f7fe f909 	bl	8007144 <pvPortMalloc>
		if( pxNewTimer != NULL )
 8008f32:	4604      	mov	r4, r0
 8008f34:	b158      	cbz	r0, 8008f4e <xTimerCreate+0x2e>
			pxNewTimer->ucStatus = 0x00;
 8008f36:	2000      	movs	r0, #0
 8008f38:	f884 0028 	strb.w	r0, [r4, #40]	; 0x28
			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunction, pxNewTimer );
 8008f3c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8008f3e:	9000      	str	r0, [sp, #0]
 8008f40:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
 8008f44:	9905      	ldr	r1, [sp, #20]
 8008f46:	9401      	str	r4, [sp, #4]
 8008f48:	4628      	mov	r0, r5
 8008f4a:	f7ff ff91 	bl	8008e70 <prvInitialiseNewTimer>
	}
 8008f4e:	4620      	mov	r0, r4
 8008f50:	b007      	add	sp, #28
 8008f52:	bd30      	pop	{r4, r5, pc}

08008f54 <xTimerGenericCommand>:
{
 8008f54:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8008f56:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8008f58:	4604      	mov	r4, r0
{
 8008f5a:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8008f5c:	b940      	cbnz	r0, 8008f70 <xTimerGenericCommand+0x1c>
 8008f5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f62:	f383 8811 	msr	BASEPRI, r3
 8008f66:	f3bf 8f6f 	isb	sy
 8008f6a:	f3bf 8f4f 	dsb	sy
 8008f6e:	e7fe      	b.n	8008f6e <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8008f70:	4d0d      	ldr	r5, [pc, #52]	; (8008fa8 <xTimerGenericCommand+0x54>)
 8008f72:	6828      	ldr	r0, [r5, #0]
 8008f74:	b180      	cbz	r0, 8008f98 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8008f76:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8008f78:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8008f7c:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8008f7e:	dc0d      	bgt.n	8008f9c <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8008f80:	f7ff fcfe 	bl	8008980 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8008f84:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8008f86:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8008f88:	bf08      	it	eq
 8008f8a:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8008f8c:	6828      	ldr	r0, [r5, #0]
 8008f8e:	bf18      	it	ne
 8008f90:	461a      	movne	r2, r3
 8008f92:	4669      	mov	r1, sp
 8008f94:	f7fe fd1c 	bl	80079d0 <xQueueGenericSend>
}
 8008f98:	b004      	add	sp, #16
 8008f9a:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8008f9c:	2300      	movs	r3, #0
 8008f9e:	4669      	mov	r1, sp
 8008fa0:	f7fe fdc9 	bl	8007b36 <xQueueGenericSendFromISR>
 8008fa4:	e7f8      	b.n	8008f98 <xTimerGenericCommand+0x44>
 8008fa6:	bf00      	nop
 8008fa8:	2001265c 	.word	0x2001265c

08008fac <prvSampleTimeNow>:
{
 8008fac:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 8008fb0:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8009054 <prvSampleTimeNow+0xa8>
{
 8008fb4:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 8008fb6:	f7ff fa9d 	bl	80084f4 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8008fba:	f8d8 3000 	ldr.w	r3, [r8]
 8008fbe:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 8008fc0:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8008fc2:	d940      	bls.n	8009046 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8008fc4:	4f21      	ldr	r7, [pc, #132]	; (800904c <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008fc6:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8008fca:	683b      	ldr	r3, [r7, #0]
 8008fcc:	681a      	ldr	r2, [r3, #0]
 8008fce:	b95a      	cbnz	r2, 8008fe8 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 8008fd0:	4a1f      	ldr	r2, [pc, #124]	; (8009050 <prvSampleTimeNow+0xa4>)
 8008fd2:	6811      	ldr	r1, [r2, #0]
 8008fd4:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 8008fd6:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 8008fd8:	2301      	movs	r3, #1
}
 8008fda:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 8008fdc:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 8008fde:	f8c8 5000 	str.w	r5, [r8]
}
 8008fe2:	b004      	add	sp, #16
 8008fe4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008fe8:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008fea:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008fec:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8008ff0:	1d21      	adds	r1, r4, #4
 8008ff2:	4608      	mov	r0, r1
 8008ff4:	9103      	str	r1, [sp, #12]
 8008ff6:	f7fe f9ac 	bl	8007352 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008ffa:	6a23      	ldr	r3, [r4, #32]
 8008ffc:	4620      	mov	r0, r4
 8008ffe:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8009000:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8009004:	9903      	ldr	r1, [sp, #12]
 8009006:	f013 0f04 	tst.w	r3, #4
 800900a:	d0de      	beq.n	8008fca <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800900c:	69a3      	ldr	r3, [r4, #24]
 800900e:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 8009010:	459a      	cmp	sl, r3
 8009012:	d205      	bcs.n	8009020 <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8009014:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8009016:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8009018:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800901a:	f7fe f983 	bl	8007324 <vListInsert>
 800901e:	e7d4      	b.n	8008fca <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8009020:	2300      	movs	r3, #0
 8009022:	f8cd 9000 	str.w	r9, [sp]
 8009026:	4652      	mov	r2, sl
 8009028:	4619      	mov	r1, r3
 800902a:	4620      	mov	r0, r4
 800902c:	f7ff ff92 	bl	8008f54 <xTimerGenericCommand>
				configASSERT( xResult );
 8009030:	2800      	cmp	r0, #0
 8009032:	d1ca      	bne.n	8008fca <prvSampleTimeNow+0x1e>
 8009034:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009038:	f383 8811 	msr	BASEPRI, r3
 800903c:	f3bf 8f6f 	isb	sy
 8009040:	f3bf 8f4f 	dsb	sy
 8009044:	e7fe      	b.n	8009044 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 8009046:	2300      	movs	r3, #0
 8009048:	e7c7      	b.n	8008fda <prvSampleTimeNow+0x2e>
 800904a:	bf00      	nop
 800904c:	20012538 	.word	0x20012538
 8009050:	2001253c 	.word	0x2001253c
 8009054:	20012608 	.word	0x20012608

08009058 <prvTimerTask>:
{
 8009058:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800905c:	4d6e      	ldr	r5, [pc, #440]	; (8009218 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800905e:	4e6f      	ldr	r6, [pc, #444]	; (800921c <prvTimerTask+0x1c4>)
{
 8009060:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009062:	682b      	ldr	r3, [r5, #0]
 8009064:	f8d3 8000 	ldr.w	r8, [r3]
 8009068:	f1b8 0f00 	cmp.w	r8, #0
 800906c:	d035      	beq.n	80090da <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800906e:	68db      	ldr	r3, [r3, #12]
 8009070:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8009074:	2400      	movs	r4, #0
	vTaskSuspendAll();
 8009076:	f7ff fa35 	bl	80084e4 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800907a:	a804      	add	r0, sp, #16
 800907c:	f7ff ff96 	bl	8008fac <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 8009080:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009082:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8009084:	2b00      	cmp	r3, #0
 8009086:	d169      	bne.n	800915c <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8009088:	2c00      	cmp	r4, #0
 800908a:	d14c      	bne.n	8009126 <prvTimerTask+0xce>
 800908c:	4540      	cmp	r0, r8
 800908e:	d350      	bcc.n	8009132 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 8009090:	f7ff fad4 	bl	800863c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009094:	682b      	ldr	r3, [r5, #0]
 8009096:	68db      	ldr	r3, [r3, #12]
 8009098:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800909a:	1d38      	adds	r0, r7, #4
 800909c:	f7fe f959 	bl	8007352 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 80090a0:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80090a4:	0758      	lsls	r0, r3, #29
 80090a6:	d51a      	bpl.n	80090de <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 80090a8:	69b9      	ldr	r1, [r7, #24]
 80090aa:	4643      	mov	r3, r8
 80090ac:	464a      	mov	r2, r9
 80090ae:	4441      	add	r1, r8
 80090b0:	4638      	mov	r0, r7
 80090b2:	f7ff febf 	bl	8008e34 <prvInsertTimerInActiveList>
 80090b6:	b1b0      	cbz	r0, 80090e6 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 80090b8:	9400      	str	r4, [sp, #0]
 80090ba:	4623      	mov	r3, r4
 80090bc:	4642      	mov	r2, r8
 80090be:	4621      	mov	r1, r4
 80090c0:	4638      	mov	r0, r7
 80090c2:	f7ff ff47 	bl	8008f54 <xTimerGenericCommand>
			configASSERT( xResult );
 80090c6:	b970      	cbnz	r0, 80090e6 <prvTimerTask+0x8e>
 80090c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090cc:	f383 8811 	msr	BASEPRI, r3
 80090d0:	f3bf 8f6f 	isb	sy
 80090d4:	f3bf 8f4f 	dsb	sy
 80090d8:	e7fe      	b.n	80090d8 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80090da:	2401      	movs	r4, #1
 80090dc:	e7cb      	b.n	8009076 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80090de:	f023 0301 	bic.w	r3, r3, #1
 80090e2:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80090e6:	6a3b      	ldr	r3, [r7, #32]
 80090e8:	4638      	mov	r0, r7
 80090ea:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 80090ec:	6830      	ldr	r0, [r6, #0]
 80090ee:	2200      	movs	r2, #0
 80090f0:	a904      	add	r1, sp, #16
 80090f2:	f7fe fdd6 	bl	8007ca2 <xQueueReceive>
 80090f6:	2800      	cmp	r0, #0
 80090f8:	d0b3      	beq.n	8009062 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80090fa:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 80090fc:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80090fe:	2b00      	cmp	r3, #0
 8009100:	db2f      	blt.n	8009162 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8009102:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8009104:	6963      	ldr	r3, [r4, #20]
 8009106:	2b00      	cmp	r3, #0
 8009108:	d132      	bne.n	8009170 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800910a:	a803      	add	r0, sp, #12
 800910c:	f7ff ff4e 	bl	8008fac <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 8009110:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8009112:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 8009114:	2b09      	cmp	r3, #9
 8009116:	d8e9      	bhi.n	80090ec <prvTimerTask+0x94>
 8009118:	e8df f003 	tbb	[pc, r3]
 800911c:	572e2e2e 	.word	0x572e2e2e
 8009120:	2e2e765e 	.word	0x2e2e765e
 8009124:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8009126:	4b3e      	ldr	r3, [pc, #248]	; (8009220 <prvTimerTask+0x1c8>)
 8009128:	681b      	ldr	r3, [r3, #0]
 800912a:	681c      	ldr	r4, [r3, #0]
 800912c:	fab4 f484 	clz	r4, r4
 8009130:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8009132:	6830      	ldr	r0, [r6, #0]
 8009134:	4622      	mov	r2, r4
 8009136:	eba8 0109 	sub.w	r1, r8, r9
 800913a:	f7fe ffa0 	bl	800807e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800913e:	f7ff fa7d 	bl	800863c <xTaskResumeAll>
 8009142:	2800      	cmp	r0, #0
 8009144:	d1d2      	bne.n	80090ec <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 8009146:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800914a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800914e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009152:	f3bf 8f4f 	dsb	sy
 8009156:	f3bf 8f6f 	isb	sy
 800915a:	e7c7      	b.n	80090ec <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800915c:	f7ff fa6e 	bl	800863c <xTaskResumeAll>
}
 8009160:	e7c4      	b.n	80090ec <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8009162:	9b05      	ldr	r3, [sp, #20]
 8009164:	9907      	ldr	r1, [sp, #28]
 8009166:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8009168:	9b04      	ldr	r3, [sp, #16]
 800916a:	2b00      	cmp	r3, #0
 800916c:	dbbe      	blt.n	80090ec <prvTimerTask+0x94>
 800916e:	e7c8      	b.n	8009102 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8009170:	1d20      	adds	r0, r4, #4
 8009172:	f7fe f8ee 	bl	8007352 <uxListRemove>
 8009176:	e7c8      	b.n	800910a <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8009178:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800917c:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800917e:	f043 0301 	orr.w	r3, r3, #1
 8009182:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8009186:	9b05      	ldr	r3, [sp, #20]
 8009188:	4620      	mov	r0, r4
 800918a:	4419      	add	r1, r3
 800918c:	f7ff fe52 	bl	8008e34 <prvInsertTimerInActiveList>
 8009190:	2800      	cmp	r0, #0
 8009192:	d0ab      	beq.n	80090ec <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8009194:	6a23      	ldr	r3, [r4, #32]
 8009196:	4620      	mov	r0, r4
 8009198:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800919a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800919e:	0759      	lsls	r1, r3, #29
 80091a0:	d5a4      	bpl.n	80090ec <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 80091a2:	69a2      	ldr	r2, [r4, #24]
 80091a4:	9905      	ldr	r1, [sp, #20]
 80091a6:	2300      	movs	r3, #0
 80091a8:	440a      	add	r2, r1
 80091aa:	9300      	str	r3, [sp, #0]
 80091ac:	4619      	mov	r1, r3
 80091ae:	4620      	mov	r0, r4
 80091b0:	f7ff fed0 	bl	8008f54 <xTimerGenericCommand>
							configASSERT( xResult );
 80091b4:	2800      	cmp	r0, #0
 80091b6:	d199      	bne.n	80090ec <prvTimerTask+0x94>
 80091b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091bc:	f383 8811 	msr	BASEPRI, r3
 80091c0:	f3bf 8f6f 	isb	sy
 80091c4:	f3bf 8f4f 	dsb	sy
 80091c8:	e7fe      	b.n	80091c8 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80091ca:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80091ce:	f023 0301 	bic.w	r3, r3, #1
 80091d2:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 80091d6:	e789      	b.n	80090ec <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80091d8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80091dc:	f043 0301 	orr.w	r3, r3, #1
 80091e0:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 80091e4:	9905      	ldr	r1, [sp, #20]
 80091e6:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 80091e8:	b941      	cbnz	r1, 80091fc <prvTimerTask+0x1a4>
 80091ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091ee:	f383 8811 	msr	BASEPRI, r3
 80091f2:	f3bf 8f6f 	isb	sy
 80091f6:	f3bf 8f4f 	dsb	sy
 80091fa:	e7fe      	b.n	80091fa <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 80091fc:	4603      	mov	r3, r0
 80091fe:	4401      	add	r1, r0
 8009200:	4620      	mov	r0, r4
 8009202:	f7ff fe17 	bl	8008e34 <prvInsertTimerInActiveList>
					break;
 8009206:	e771      	b.n	80090ec <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8009208:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800920c:	079a      	lsls	r2, r3, #30
 800920e:	d4de      	bmi.n	80091ce <prvTimerTask+0x176>
							vPortFree( pxTimer );
 8009210:	4620      	mov	r0, r4
 8009212:	f7fe f82f 	bl	8007274 <vPortFree>
 8009216:	e769      	b.n	80090ec <prvTimerTask+0x94>
 8009218:	20012538 	.word	0x20012538
 800921c:	2001265c 	.word	0x2001265c
 8009220:	2001253c 	.word	0x2001253c

08009224 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8009224:	8880      	ldrh	r0, [r0, #4]
 8009226:	4770      	bx	lr

08009228 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8009228:	b570      	push	{r4, r5, r6, lr}
 800922a:	6803      	ldr	r3, [r0, #0]
 800922c:	4605      	mov	r5, r0
 800922e:	460c      	mov	r4, r1
 8009230:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009232:	2100      	movs	r1, #0
 8009234:	4798      	blx	r3
 8009236:	682b      	ldr	r3, [r5, #0]
 8009238:	4606      	mov	r6, r0
 800923a:	6a1b      	ldr	r3, [r3, #32]
 800923c:	4628      	mov	r0, r5
 800923e:	4798      	blx	r3
 8009240:	1ba4      	subs	r4, r4, r6
 8009242:	b2a4      	uxth	r4, r4
 8009244:	fbb4 f0f0 	udiv	r0, r4, r0
 8009248:	bd70      	pop	{r4, r5, r6, pc}

0800924a <_ZN8touchgfx17AbstractPartition5clearEv>:
 800924a:	2300      	movs	r3, #0
 800924c:	8083      	strh	r3, [r0, #4]
 800924e:	4770      	bx	lr

08009250 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8009250:	b510      	push	{r4, lr}
 8009252:	6803      	ldr	r3, [r0, #0]
 8009254:	8881      	ldrh	r1, [r0, #4]
 8009256:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009258:	4604      	mov	r4, r0
 800925a:	4798      	blx	r3
 800925c:	88a3      	ldrh	r3, [r4, #4]
 800925e:	3301      	adds	r3, #1
 8009260:	80a3      	strh	r3, [r4, #4]
 8009262:	bd10      	pop	{r4, pc}

08009264 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8009264:	6803      	ldr	r3, [r0, #0]
 8009266:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009268:	4718      	bx	r3

0800926a <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800926a:	4770      	bx	lr

0800926c <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800926c:	4a02      	ldr	r2, [pc, #8]	; (8009278 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800926e:	6002      	str	r2, [r0, #0]
 8009270:	2200      	movs	r2, #0
 8009272:	8082      	strh	r2, [r0, #4]
 8009274:	4770      	bx	lr
 8009276:	bf00      	nop
 8009278:	0801dcbc 	.word	0x0801dcbc

0800927c <_ZN8touchgfx9Container13getFirstChildEv>:
 800927c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800927e:	4770      	bx	lr

08009280 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8009280:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009282:	2000      	movs	r0, #0
 8009284:	b12b      	cbz	r3, 8009292 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009286:	b920      	cbnz	r0, 8009292 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8009288:	1a5a      	subs	r2, r3, r1
 800928a:	4250      	negs	r0, r2
 800928c:	4150      	adcs	r0, r2
 800928e:	699b      	ldr	r3, [r3, #24]
 8009290:	e7f8      	b.n	8009284 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8009292:	4770      	bx	lr

08009294 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8009294:	2300      	movs	r3, #0
 8009296:	6148      	str	r0, [r1, #20]
 8009298:	618b      	str	r3, [r1, #24]
 800929a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800929c:	b913      	cbnz	r3, 80092a4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800929e:	6281      	str	r1, [r0, #40]	; 0x28
 80092a0:	4770      	bx	lr
 80092a2:	4613      	mov	r3, r2
 80092a4:	699a      	ldr	r2, [r3, #24]
 80092a6:	2a00      	cmp	r2, #0
 80092a8:	d1fb      	bne.n	80092a2 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 80092aa:	6199      	str	r1, [r3, #24]
 80092ac:	4770      	bx	lr

080092ae <_ZN8touchgfx9Container9removeAllEv>:
 80092ae:	2200      	movs	r2, #0
 80092b0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80092b2:	b123      	cbz	r3, 80092be <_ZN8touchgfx9Container9removeAllEv+0x10>
 80092b4:	6999      	ldr	r1, [r3, #24]
 80092b6:	6281      	str	r1, [r0, #40]	; 0x28
 80092b8:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80092bc:	e7f8      	b.n	80092b0 <_ZN8touchgfx9Container9removeAllEv+0x2>
 80092be:	4770      	bx	lr

080092c0 <_ZN8touchgfx9Container6unlinkEv>:
 80092c0:	2300      	movs	r3, #0
 80092c2:	6283      	str	r3, [r0, #40]	; 0x28
 80092c4:	4770      	bx	lr

080092c6 <_ZNK8touchgfx9Container12getSolidRectEv>:
 80092c6:	2200      	movs	r2, #0
 80092c8:	8002      	strh	r2, [r0, #0]
 80092ca:	8042      	strh	r2, [r0, #2]
 80092cc:	8082      	strh	r2, [r0, #4]
 80092ce:	80c2      	strh	r2, [r0, #6]
 80092d0:	4770      	bx	lr

080092d2 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 80092d2:	b570      	push	{r4, r5, r6, lr}
 80092d4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80092d6:	460d      	mov	r5, r1
 80092d8:	4616      	mov	r6, r2
 80092da:	b13c      	cbz	r4, 80092ec <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 80092dc:	6823      	ldr	r3, [r4, #0]
 80092de:	4620      	mov	r0, r4
 80092e0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80092e2:	4632      	mov	r2, r6
 80092e4:	4629      	mov	r1, r5
 80092e6:	4798      	blx	r3
 80092e8:	69a4      	ldr	r4, [r4, #24]
 80092ea:	e7f6      	b.n	80092da <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 80092ec:	bd70      	pop	{r4, r5, r6, pc}

080092ee <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 80092ee:	b538      	push	{r3, r4, r5, lr}
 80092f0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80092f2:	460d      	mov	r5, r1
 80092f4:	b134      	cbz	r4, 8009304 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 80092f6:	682b      	ldr	r3, [r5, #0]
 80092f8:	4621      	mov	r1, r4
 80092fa:	689b      	ldr	r3, [r3, #8]
 80092fc:	4628      	mov	r0, r5
 80092fe:	4798      	blx	r3
 8009300:	69a4      	ldr	r4, [r4, #24]
 8009302:	e7f7      	b.n	80092f4 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8009304:	bd38      	pop	{r3, r4, r5, pc}

08009306 <_ZN8touchgfx9ContainerD1Ev>:
 8009306:	4770      	bx	lr

08009308 <_ZN8touchgfx9ContainerD0Ev>:
 8009308:	b510      	push	{r4, lr}
 800930a:	212c      	movs	r1, #44	; 0x2c
 800930c:	4604      	mov	r4, r0
 800930e:	f012 fab7 	bl	801b880 <_ZdlPvj>
 8009312:	4620      	mov	r0, r4
 8009314:	bd10      	pop	{r4, pc}

08009316 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8009316:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009318:	b19b      	cbz	r3, 8009342 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800931a:	428b      	cmp	r3, r1
 800931c:	d109      	bne.n	8009332 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800931e:	699a      	ldr	r2, [r3, #24]
 8009320:	2100      	movs	r1, #0
 8009322:	6159      	str	r1, [r3, #20]
 8009324:	6282      	str	r2, [r0, #40]	; 0x28
 8009326:	b902      	cbnz	r2, 800932a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8009328:	4770      	bx	lr
 800932a:	6199      	str	r1, [r3, #24]
 800932c:	4770      	bx	lr
 800932e:	4613      	mov	r3, r2
 8009330:	b13a      	cbz	r2, 8009342 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8009332:	699a      	ldr	r2, [r3, #24]
 8009334:	428a      	cmp	r2, r1
 8009336:	d1fa      	bne.n	800932e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8009338:	698a      	ldr	r2, [r1, #24]
 800933a:	619a      	str	r2, [r3, #24]
 800933c:	2300      	movs	r3, #0
 800933e:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8009342:	4770      	bx	lr

08009344 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8009344:	b410      	push	{r4}
 8009346:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8009348:	4604      	mov	r4, r0
 800934a:	b92b      	cbnz	r3, 8009358 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800934c:	6803      	ldr	r3, [r0, #0]
 800934e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009352:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8009354:	4611      	mov	r1, r2
 8009356:	4718      	bx	r3
 8009358:	b941      	cbnz	r1, 800936c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800935a:	6193      	str	r3, [r2, #24]
 800935c:	6282      	str	r2, [r0, #40]	; 0x28
 800935e:	6154      	str	r4, [r2, #20]
 8009360:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009364:	4770      	bx	lr
 8009366:	4603      	mov	r3, r0
 8009368:	2800      	cmp	r0, #0
 800936a:	d0f9      	beq.n	8009360 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800936c:	4299      	cmp	r1, r3
 800936e:	6998      	ldr	r0, [r3, #24]
 8009370:	d1f9      	bne.n	8009366 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8009372:	6190      	str	r0, [r2, #24]
 8009374:	618a      	str	r2, [r1, #24]
 8009376:	e7f2      	b.n	800935e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08009378 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8009378:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800937c:	461f      	mov	r7, r3
 800937e:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8009382:	460d      	mov	r5, r1
 8009384:	4616      	mov	r6, r2
 8009386:	b103      	cbz	r3, 800938a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8009388:	6038      	str	r0, [r7, #0]
 800938a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800938c:	b314      	cbz	r4, 80093d4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800938e:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009392:	b1eb      	cbz	r3, 80093d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8009394:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8009398:	428d      	cmp	r5, r1
 800939a:	db19      	blt.n	80093d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800939c:	8923      	ldrh	r3, [r4, #8]
 800939e:	b289      	uxth	r1, r1
 80093a0:	440b      	add	r3, r1
 80093a2:	b21b      	sxth	r3, r3
 80093a4:	429d      	cmp	r5, r3
 80093a6:	da13      	bge.n	80093d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80093a8:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80093ac:	4296      	cmp	r6, r2
 80093ae:	db0f      	blt.n	80093d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80093b0:	8963      	ldrh	r3, [r4, #10]
 80093b2:	b292      	uxth	r2, r2
 80093b4:	4413      	add	r3, r2
 80093b6:	b21b      	sxth	r3, r3
 80093b8:	429e      	cmp	r6, r3
 80093ba:	da09      	bge.n	80093d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80093bc:	6823      	ldr	r3, [r4, #0]
 80093be:	1ab2      	subs	r2, r6, r2
 80093c0:	1a69      	subs	r1, r5, r1
 80093c2:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 80093c6:	b212      	sxth	r2, r2
 80093c8:	463b      	mov	r3, r7
 80093ca:	b209      	sxth	r1, r1
 80093cc:	4620      	mov	r0, r4
 80093ce:	47c0      	blx	r8
 80093d0:	69a4      	ldr	r4, [r4, #24]
 80093d2:	e7db      	b.n	800938c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 80093d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080093d8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 80093d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80093dc:	4c6e      	ldr	r4, [pc, #440]	; (8009598 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 80093de:	b0a1      	sub	sp, #132	; 0x84
 80093e0:	6824      	ldr	r4, [r4, #0]
 80093e2:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80093e4:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 80093e8:	9303      	str	r3, [sp, #12]
 80093ea:	2400      	movs	r4, #0
 80093ec:	802c      	strh	r4, [r5, #0]
 80093ee:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 80093f0:	802c      	strh	r4, [r5, #0]
 80093f2:	601c      	str	r4, [r3, #0]
 80093f4:	4606      	mov	r6, r0
 80093f6:	e9cd 1201 	strd	r1, r2, [sp, #4]
 80093fa:	f7ff ffbd 	bl	8009378 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80093fe:	f1b9 0f03 	cmp.w	r9, #3
 8009402:	f340 80c2 	ble.w	800958a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8009406:	4631      	mov	r1, r6
 8009408:	a80c      	add	r0, sp, #48	; 0x30
 800940a:	f004 fcf1 	bl	800ddf0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800940e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8009412:	9306      	str	r3, [sp, #24]
 8009414:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8009418:	9307      	str	r3, [sp, #28]
 800941a:	9b03      	ldr	r3, [sp, #12]
 800941c:	f8d3 a000 	ldr.w	sl, [r3]
 8009420:	f1ba 0f00 	cmp.w	sl, #0
 8009424:	f000 80b4 	beq.w	8009590 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8009428:	4651      	mov	r1, sl
 800942a:	a810      	add	r0, sp, #64	; 0x40
 800942c:	f004 fce0 	bl	800ddf0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8009430:	9b01      	ldr	r3, [sp, #4]
 8009432:	9a06      	ldr	r2, [sp, #24]
 8009434:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8009438:	189d      	adds	r5, r3, r2
 800943a:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800943e:	9a07      	ldr	r2, [sp, #28]
 8009440:	2002      	movs	r0, #2
 8009442:	fb91 f1f0 	sdiv	r1, r1, r0
 8009446:	4419      	add	r1, r3
 8009448:	1a6d      	subs	r5, r5, r1
 800944a:	9b02      	ldr	r3, [sp, #8]
 800944c:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8009450:	4413      	add	r3, r2
 8009452:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8009456:	fb92 f2f0 	sdiv	r2, r2, r0
 800945a:	440a      	add	r2, r1
 800945c:	1a9b      	subs	r3, r3, r2
 800945e:	435b      	muls	r3, r3
 8009460:	fb05 3505 	mla	r5, r5, r5, r3
 8009464:	4f4d      	ldr	r7, [pc, #308]	; (800959c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8009466:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8009468:	ac10      	add	r4, sp, #64	; 0x40
 800946a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800946c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800946e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009470:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8009472:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8009474:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8009478:	f1b9 0f0c 	cmp.w	r9, #12
 800947c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8009480:	f04f 0303 	mov.w	r3, #3
 8009484:	bfc8      	it	gt
 8009486:	4698      	movgt	r8, r3
 8009488:	f8cd 9000 	str.w	r9, [sp]
 800948c:	f04f 0400 	mov.w	r4, #0
 8009490:	bfdc      	itt	le
 8009492:	f109 32ff 	addle.w	r2, r9, #4294967295
 8009496:	fb92 f8f3 	sdivle	r8, r2, r3
 800949a:	1c63      	adds	r3, r4, #1
 800949c:	aa10      	add	r2, sp, #64	; 0x40
 800949e:	f004 0401 	and.w	r4, r4, #1
 80094a2:	9308      	str	r3, [sp, #32]
 80094a4:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 80094a8:	9b00      	ldr	r3, [sp, #0]
 80094aa:	fb93 f3f8 	sdiv	r3, r3, r8
 80094ae:	b29b      	uxth	r3, r3
 80094b0:	3404      	adds	r4, #4
 80094b2:	f04f 0b00 	mov.w	fp, #0
 80094b6:	9304      	str	r3, [sp, #16]
 80094b8:	9a04      	ldr	r2, [sp, #16]
 80094ba:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80094be:	fb13 f302 	smulbb	r3, r3, r2
 80094c2:	9a01      	ldr	r2, [sp, #4]
 80094c4:	b29b      	uxth	r3, r3
 80094c6:	1899      	adds	r1, r3, r2
 80094c8:	9305      	str	r3, [sp, #20]
 80094ca:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80094ce:	b209      	sxth	r1, r1
 80094d0:	4299      	cmp	r1, r3
 80094d2:	db4d      	blt.n	8009570 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80094d4:	8932      	ldrh	r2, [r6, #8]
 80094d6:	4413      	add	r3, r2
 80094d8:	b21b      	sxth	r3, r3
 80094da:	4299      	cmp	r1, r3
 80094dc:	da48      	bge.n	8009570 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80094de:	9b04      	ldr	r3, [sp, #16]
 80094e0:	6827      	ldr	r7, [r4, #0]
 80094e2:	fb17 f703 	smulbb	r7, r7, r3
 80094e6:	9b02      	ldr	r3, [sp, #8]
 80094e8:	b2bf      	uxth	r7, r7
 80094ea:	18fa      	adds	r2, r7, r3
 80094ec:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80094f0:	b212      	sxth	r2, r2
 80094f2:	429a      	cmp	r2, r3
 80094f4:	db3c      	blt.n	8009570 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80094f6:	8970      	ldrh	r0, [r6, #10]
 80094f8:	4403      	add	r3, r0
 80094fa:	b21b      	sxth	r3, r3
 80094fc:	429a      	cmp	r2, r3
 80094fe:	da37      	bge.n	8009570 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009500:	2300      	movs	r3, #0
 8009502:	930b      	str	r3, [sp, #44]	; 0x2c
 8009504:	4630      	mov	r0, r6
 8009506:	ab0b      	add	r3, sp, #44	; 0x2c
 8009508:	f7ff ff36 	bl	8009378 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800950c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800950e:	b37a      	cbz	r2, 8009570 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009510:	4552      	cmp	r2, sl
 8009512:	d02d      	beq.n	8009570 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8009514:	4611      	mov	r1, r2
 8009516:	a80e      	add	r0, sp, #56	; 0x38
 8009518:	9209      	str	r2, [sp, #36]	; 0x24
 800951a:	f004 fc69 	bl	800ddf0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800951e:	9a06      	ldr	r2, [sp, #24]
 8009520:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8009524:	9b01      	ldr	r3, [sp, #4]
 8009526:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800952a:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800952e:	4413      	add	r3, r2
 8009530:	f04f 0e02 	mov.w	lr, #2
 8009534:	fb91 f1fe 	sdiv	r1, r1, lr
 8009538:	4401      	add	r1, r0
 800953a:	1a58      	subs	r0, r3, r1
 800953c:	9a07      	ldr	r2, [sp, #28]
 800953e:	9b02      	ldr	r3, [sp, #8]
 8009540:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8009544:	fb9c fcfe 	sdiv	ip, ip, lr
 8009548:	4413      	add	r3, r2
 800954a:	448c      	add	ip, r1
 800954c:	eba3 030c 	sub.w	r3, r3, ip
 8009550:	435b      	muls	r3, r3
 8009552:	fb00 3300 	mla	r3, r0, r0, r3
 8009556:	42ab      	cmp	r3, r5
 8009558:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800955a:	d208      	bcs.n	800956e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800955c:	9803      	ldr	r0, [sp, #12]
 800955e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8009560:	6001      	str	r1, [r0, #0]
 8009562:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8009564:	9805      	ldr	r0, [sp, #20]
 8009566:	8008      	strh	r0, [r1, #0]
 8009568:	992b      	ldr	r1, [sp, #172]	; 0xac
 800956a:	461d      	mov	r5, r3
 800956c:	800f      	strh	r7, [r1, #0]
 800956e:	4692      	mov	sl, r2
 8009570:	f10b 0b01 	add.w	fp, fp, #1
 8009574:	f1bb 0f04 	cmp.w	fp, #4
 8009578:	f104 0408 	add.w	r4, r4, #8
 800957c:	d19c      	bne.n	80094b8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800957e:	9b00      	ldr	r3, [sp, #0]
 8009580:	9c08      	ldr	r4, [sp, #32]
 8009582:	444b      	add	r3, r9
 8009584:	4544      	cmp	r4, r8
 8009586:	9300      	str	r3, [sp, #0]
 8009588:	d187      	bne.n	800949a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800958a:	b021      	add	sp, #132	; 0x84
 800958c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009590:	f04f 35ff 	mov.w	r5, #4294967295
 8009594:	e766      	b.n	8009464 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8009596:	bf00      	nop
 8009598:	20012670 	.word	0x20012670
 800959c:	0801ca54 	.word	0x0801ca54

080095a0 <_ZN8touchgfx4RectaNERKS0_>:
 80095a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80095a4:	f9b1 7000 	ldrsh.w	r7, [r1]
 80095a8:	888c      	ldrh	r4, [r1, #4]
 80095aa:	f9b0 9000 	ldrsh.w	r9, [r0]
 80095ae:	443c      	add	r4, r7
 80095b0:	b2a4      	uxth	r4, r4
 80095b2:	fa0f f884 	sxth.w	r8, r4
 80095b6:	45c1      	cmp	r9, r8
 80095b8:	da2f      	bge.n	800961a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80095ba:	8882      	ldrh	r2, [r0, #4]
 80095bc:	444a      	add	r2, r9
 80095be:	b292      	uxth	r2, r2
 80095c0:	fa0f fe82 	sxth.w	lr, r2
 80095c4:	4577      	cmp	r7, lr
 80095c6:	da28      	bge.n	800961a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80095c8:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80095cc:	88cb      	ldrh	r3, [r1, #6]
 80095ce:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80095d2:	442b      	add	r3, r5
 80095d4:	b21b      	sxth	r3, r3
 80095d6:	429e      	cmp	r6, r3
 80095d8:	da1f      	bge.n	800961a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80095da:	88c3      	ldrh	r3, [r0, #6]
 80095dc:	4433      	add	r3, r6
 80095de:	b29b      	uxth	r3, r3
 80095e0:	fa0f fc83 	sxth.w	ip, r3
 80095e4:	4565      	cmp	r5, ip
 80095e6:	da18      	bge.n	800961a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80095e8:	454f      	cmp	r7, r9
 80095ea:	bfb8      	it	lt
 80095ec:	464f      	movlt	r7, r9
 80095ee:	42b5      	cmp	r5, r6
 80095f0:	bfb8      	it	lt
 80095f2:	4635      	movlt	r5, r6
 80095f4:	45f0      	cmp	r8, lr
 80095f6:	bfd8      	it	le
 80095f8:	4622      	movle	r2, r4
 80095fa:	1bd2      	subs	r2, r2, r7
 80095fc:	8082      	strh	r2, [r0, #4]
 80095fe:	884a      	ldrh	r2, [r1, #2]
 8009600:	88c9      	ldrh	r1, [r1, #6]
 8009602:	8007      	strh	r7, [r0, #0]
 8009604:	440a      	add	r2, r1
 8009606:	b292      	uxth	r2, r2
 8009608:	b211      	sxth	r1, r2
 800960a:	458c      	cmp	ip, r1
 800960c:	bfa8      	it	ge
 800960e:	4613      	movge	r3, r2
 8009610:	1b5b      	subs	r3, r3, r5
 8009612:	80c3      	strh	r3, [r0, #6]
 8009614:	8045      	strh	r5, [r0, #2]
 8009616:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800961a:	2300      	movs	r3, #0
 800961c:	8003      	strh	r3, [r0, #0]
 800961e:	8043      	strh	r3, [r0, #2]
 8009620:	8083      	strh	r3, [r0, #4]
 8009622:	80c3      	strh	r3, [r0, #6]
 8009624:	e7f7      	b.n	8009616 <_ZN8touchgfx4RectaNERKS0_+0x76>

08009626 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8009626:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800962a:	2b00      	cmp	r3, #0
 800962c:	dd06      	ble.n	800963c <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800962e:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8009632:	2800      	cmp	r0, #0
 8009634:	bfcc      	ite	gt
 8009636:	2000      	movgt	r0, #0
 8009638:	2001      	movle	r0, #1
 800963a:	4770      	bx	lr
 800963c:	2001      	movs	r0, #1
 800963e:	4770      	bx	lr

08009640 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8009640:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009644:	2300      	movs	r3, #0
 8009646:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8009648:	8003      	strh	r3, [r0, #0]
 800964a:	4604      	mov	r4, r0
 800964c:	8043      	strh	r3, [r0, #2]
 800964e:	8083      	strh	r3, [r0, #4]
 8009650:	80c3      	strh	r3, [r0, #6]
 8009652:	2d00      	cmp	r5, #0
 8009654:	d040      	beq.n	80096d8 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8009656:	1d28      	adds	r0, r5, #4
 8009658:	f7ff ffe5 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 800965c:	b988      	cbnz	r0, 8009682 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800965e:	4620      	mov	r0, r4
 8009660:	f7ff ffe1 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 8009664:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8009668:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800966c:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8009670:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8009674:	b138      	cbz	r0, 8009686 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8009676:	8022      	strh	r2, [r4, #0]
 8009678:	8063      	strh	r3, [r4, #2]
 800967a:	f8a4 e004 	strh.w	lr, [r4, #4]
 800967e:	f8a4 c006 	strh.w	ip, [r4, #6]
 8009682:	69ad      	ldr	r5, [r5, #24]
 8009684:	e7e5      	b.n	8009652 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8009686:	f9b4 0000 	ldrsh.w	r0, [r4]
 800968a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800968e:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8009692:	4290      	cmp	r0, r2
 8009694:	4607      	mov	r7, r0
 8009696:	bfa8      	it	ge
 8009698:	4617      	movge	r7, r2
 800969a:	4472      	add	r2, lr
 800969c:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 80096a0:	8027      	strh	r7, [r4, #0]
 80096a2:	4299      	cmp	r1, r3
 80096a4:	460e      	mov	r6, r1
 80096a6:	4440      	add	r0, r8
 80096a8:	bfa8      	it	ge
 80096aa:	461e      	movge	r6, r3
 80096ac:	4471      	add	r1, lr
 80096ae:	4463      	add	r3, ip
 80096b0:	b200      	sxth	r0, r0
 80096b2:	b212      	sxth	r2, r2
 80096b4:	b209      	sxth	r1, r1
 80096b6:	b21b      	sxth	r3, r3
 80096b8:	4290      	cmp	r0, r2
 80096ba:	bfac      	ite	ge
 80096bc:	ebc7 0200 	rsbge	r2, r7, r0
 80096c0:	ebc7 0202 	rsblt	r2, r7, r2
 80096c4:	4299      	cmp	r1, r3
 80096c6:	bfac      	ite	ge
 80096c8:	ebc6 0301 	rsbge	r3, r6, r1
 80096cc:	ebc6 0303 	rsblt	r3, r6, r3
 80096d0:	8066      	strh	r6, [r4, #2]
 80096d2:	80a2      	strh	r2, [r4, #4]
 80096d4:	80e3      	strh	r3, [r4, #6]
 80096d6:	e7d4      	b.n	8009682 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80096d8:	4620      	mov	r0, r4
 80096da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080096de <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 80096de:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80096e2:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 80096e6:	b383      	cbz	r3, 800974a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80096e8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80096ea:	b374      	cbz	r4, 800974a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 80096ec:	f9b1 5000 	ldrsh.w	r5, [r1]
 80096f0:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 80096f4:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 80096f8:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 80096fc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009700:	b303      	cbz	r3, 8009744 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009702:	4668      	mov	r0, sp
 8009704:	1d21      	adds	r1, r4, #4
 8009706:	f8ad 5000 	strh.w	r5, [sp]
 800970a:	f8ad 6002 	strh.w	r6, [sp, #2]
 800970e:	f8ad 7004 	strh.w	r7, [sp, #4]
 8009712:	f8ad 8006 	strh.w	r8, [sp, #6]
 8009716:	f7ff ff43 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 800971a:	4668      	mov	r0, sp
 800971c:	f7ff ff83 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 8009720:	b980      	cbnz	r0, 8009744 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8009722:	f8bd 3000 	ldrh.w	r3, [sp]
 8009726:	88a2      	ldrh	r2, [r4, #4]
 8009728:	1a9b      	subs	r3, r3, r2
 800972a:	f8ad 3000 	strh.w	r3, [sp]
 800972e:	88e2      	ldrh	r2, [r4, #6]
 8009730:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009734:	1a9b      	subs	r3, r3, r2
 8009736:	f8ad 3002 	strh.w	r3, [sp, #2]
 800973a:	6823      	ldr	r3, [r4, #0]
 800973c:	4669      	mov	r1, sp
 800973e:	689b      	ldr	r3, [r3, #8]
 8009740:	4620      	mov	r0, r4
 8009742:	4798      	blx	r3
 8009744:	69a4      	ldr	r4, [r4, #24]
 8009746:	2c00      	cmp	r4, #0
 8009748:	d1d8      	bne.n	80096fc <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800974a:	b002      	add	sp, #8
 800974c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009750 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8009750:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009752:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8009756:	460d      	mov	r5, r1
 8009758:	4616      	mov	r6, r2
 800975a:	b323      	cbz	r3, 80097a6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800975c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800975e:	b314      	cbz	r4, 80097a6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8009760:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8009764:	b1eb      	cbz	r3, 80097a2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8009766:	6828      	ldr	r0, [r5, #0]
 8009768:	6869      	ldr	r1, [r5, #4]
 800976a:	466b      	mov	r3, sp
 800976c:	c303      	stmia	r3!, {r0, r1}
 800976e:	4668      	mov	r0, sp
 8009770:	1d21      	adds	r1, r4, #4
 8009772:	f7ff ff15 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 8009776:	4668      	mov	r0, sp
 8009778:	f7ff ff55 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 800977c:	b988      	cbnz	r0, 80097a2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800977e:	f8bd 3000 	ldrh.w	r3, [sp]
 8009782:	88a2      	ldrh	r2, [r4, #4]
 8009784:	1a9b      	subs	r3, r3, r2
 8009786:	f8ad 3000 	strh.w	r3, [sp]
 800978a:	88e2      	ldrh	r2, [r4, #6]
 800978c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8009790:	1a9b      	subs	r3, r3, r2
 8009792:	f8ad 3002 	strh.w	r3, [sp, #2]
 8009796:	6823      	ldr	r3, [r4, #0]
 8009798:	4632      	mov	r2, r6
 800979a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800979c:	4669      	mov	r1, sp
 800979e:	4620      	mov	r0, r4
 80097a0:	4798      	blx	r3
 80097a2:	69a4      	ldr	r4, [r4, #24]
 80097a4:	e7db      	b.n	800975e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 80097a6:	b002      	add	sp, #8
 80097a8:	bd70      	pop	{r4, r5, r6, pc}

080097aa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80097aa:	b513      	push	{r0, r1, r4, lr}
 80097ac:	6803      	ldr	r3, [r0, #0]
 80097ae:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 80097b2:	2300      	movs	r3, #0
 80097b4:	e9cd 3300 	strd	r3, r3, [sp]
 80097b8:	466b      	mov	r3, sp
 80097ba:	47a0      	blx	r4
 80097bc:	b002      	add	sp, #8
 80097be:	bd10      	pop	{r4, pc}

080097c0 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 80097c0:	2301      	movs	r3, #1
 80097c2:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80097c6:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 80097ca:	4770      	bx	lr

080097cc <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 80097cc:	2301      	movs	r3, #1
 80097ce:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 80097d2:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 80097d6:	4770      	bx	lr

080097d8 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 80097d8:	6843      	ldr	r3, [r0, #4]
 80097da:	2201      	movs	r2, #1
 80097dc:	725a      	strb	r2, [r3, #9]
 80097de:	6840      	ldr	r0, [r0, #4]
 80097e0:	6803      	ldr	r3, [r0, #0]
 80097e2:	691b      	ldr	r3, [r3, #16]
 80097e4:	4718      	bx	r3

080097e6 <_ZN8touchgfx3HAL8flushDMAEv>:
 80097e6:	6840      	ldr	r0, [r0, #4]
 80097e8:	6803      	ldr	r3, [r0, #0]
 80097ea:	689b      	ldr	r3, [r3, #8]
 80097ec:	4718      	bx	r3

080097ee <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 80097ee:	b530      	push	{r4, r5, lr}
 80097f0:	b08b      	sub	sp, #44	; 0x2c
 80097f2:	6804      	ldr	r4, [r0, #0]
 80097f4:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 80097f8:	9509      	str	r5, [sp, #36]	; 0x24
 80097fa:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 80097fe:	9508      	str	r5, [sp, #32]
 8009800:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8009804:	9507      	str	r5, [sp, #28]
 8009806:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800980a:	9506      	str	r5, [sp, #24]
 800980c:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8009810:	9505      	str	r5, [sp, #20]
 8009812:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8009816:	9504      	str	r5, [sp, #16]
 8009818:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800981c:	9503      	str	r5, [sp, #12]
 800981e:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8009822:	9502      	str	r5, [sp, #8]
 8009824:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8009828:	e9cd 3500 	strd	r3, r5, [sp]
 800982c:	4613      	mov	r3, r2
 800982e:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 8009830:	2200      	movs	r2, #0
 8009832:	47a0      	blx	r4
 8009834:	b00b      	add	sp, #44	; 0x2c
 8009836:	bd30      	pop	{r4, r5, pc}

08009838 <_ZN8touchgfx3HAL10beginFrameEv>:
 8009838:	4b04      	ldr	r3, [pc, #16]	; (800984c <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800983a:	781b      	ldrb	r3, [r3, #0]
 800983c:	b123      	cbz	r3, 8009848 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800983e:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 8009842:	f080 0001 	eor.w	r0, r0, #1
 8009846:	4770      	bx	lr
 8009848:	2001      	movs	r0, #1
 800984a:	4770      	bx	lr
 800984c:	2001266e 	.word	0x2001266e

08009850 <_ZN8touchgfx3HAL8endFrameEv>:
 8009850:	b510      	push	{r4, lr}
 8009852:	4604      	mov	r4, r0
 8009854:	6840      	ldr	r0, [r0, #4]
 8009856:	6803      	ldr	r3, [r0, #0]
 8009858:	689b      	ldr	r3, [r3, #8]
 800985a:	4798      	blx	r3
 800985c:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 8009860:	b113      	cbz	r3, 8009868 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8009862:	2301      	movs	r3, #1
 8009864:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8009868:	bd10      	pop	{r4, pc}

0800986a <_ZN8touchgfx3HAL10initializeEv>:
 800986a:	b510      	push	{r4, lr}
 800986c:	4604      	mov	r4, r0
 800986e:	f7f7 f8e5 	bl	8000a3c <_ZN8touchgfx10OSWrappers10initializeEv>
 8009872:	f7f6 ffed 	bl	8000850 <_ZN8touchgfx4GPIO4initEv>
 8009876:	6860      	ldr	r0, [r4, #4]
 8009878:	6803      	ldr	r3, [r0, #0]
 800987a:	68db      	ldr	r3, [r3, #12]
 800987c:	4798      	blx	r3
 800987e:	68e0      	ldr	r0, [r4, #12]
 8009880:	6803      	ldr	r3, [r0, #0]
 8009882:	689b      	ldr	r3, [r3, #8]
 8009884:	4798      	blx	r3
 8009886:	6823      	ldr	r3, [r4, #0]
 8009888:	4620      	mov	r0, r4
 800988a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800988c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009890:	4718      	bx	r3
	...

08009894 <_ZN8touchgfx3HAL4tickEv>:
 8009894:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8009896:	6803      	ldr	r3, [r0, #0]
 8009898:	4d5b      	ldr	r5, [pc, #364]	; (8009a08 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800989a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800989e:	4604      	mov	r4, r0
 80098a0:	4798      	blx	r3
 80098a2:	2800      	cmp	r0, #0
 80098a4:	f000 8095 	beq.w	80099d2 <_ZN8touchgfx3HAL4tickEv+0x13e>
 80098a8:	2001      	movs	r0, #1
 80098aa:	f7f6 ff4f 	bl	800074c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80098ae:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 80098b2:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 80098b6:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 80098ba:	2600      	movs	r6, #0
 80098bc:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80098c0:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 80098c4:	b133      	cbz	r3, 80098d4 <_ZN8touchgfx3HAL4tickEv+0x40>
 80098c6:	6823      	ldr	r3, [r4, #0]
 80098c8:	4620      	mov	r0, r4
 80098ca:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 80098ce:	4798      	blx	r3
 80098d0:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 80098d4:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 80098d8:	6862      	ldr	r2, [r4, #4]
 80098da:	f083 0301 	eor.w	r3, r3, #1
 80098de:	7253      	strb	r3, [r2, #9]
 80098e0:	2601      	movs	r6, #1
 80098e2:	702e      	strb	r6, [r5, #0]
 80098e4:	f003 f9a4 	bl	800cc30 <_ZN8touchgfx11Application11getInstanceEv>
 80098e8:	6803      	ldr	r3, [r0, #0]
 80098ea:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80098ec:	4798      	blx	r3
 80098ee:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 80098f2:	b90b      	cbnz	r3, 80098f8 <_ZN8touchgfx3HAL4tickEv+0x64>
 80098f4:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 80098f8:	f003 f99a 	bl	800cc30 <_ZN8touchgfx11Application11getInstanceEv>
 80098fc:	6803      	ldr	r3, [r0, #0]
 80098fe:	695b      	ldr	r3, [r3, #20]
 8009900:	4798      	blx	r3
 8009902:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8009904:	6803      	ldr	r3, [r0, #0]
 8009906:	691b      	ldr	r3, [r3, #16]
 8009908:	4798      	blx	r3
 800990a:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800990e:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 8009912:	3b01      	subs	r3, #1
 8009914:	b2db      	uxtb	r3, r3
 8009916:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800991a:	b10a      	cbz	r2, 8009920 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800991c:	2b00      	cmp	r3, #0
 800991e:	d1eb      	bne.n	80098f8 <_ZN8touchgfx3HAL4tickEv+0x64>
 8009920:	4a3a      	ldr	r2, [pc, #232]	; (8009a0c <_ZN8touchgfx3HAL4tickEv+0x178>)
 8009922:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 8009926:	7813      	ldrb	r3, [r2, #0]
 8009928:	3301      	adds	r3, #1
 800992a:	b25b      	sxtb	r3, r3
 800992c:	4299      	cmp	r1, r3
 800992e:	7013      	strb	r3, [r2, #0]
 8009930:	dc10      	bgt.n	8009954 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8009932:	68e0      	ldr	r0, [r4, #12]
 8009934:	2300      	movs	r3, #0
 8009936:	7013      	strb	r3, [r2, #0]
 8009938:	6803      	ldr	r3, [r0, #0]
 800993a:	aa03      	add	r2, sp, #12
 800993c:	68db      	ldr	r3, [r3, #12]
 800993e:	a902      	add	r1, sp, #8
 8009940:	4798      	blx	r3
 8009942:	6823      	ldr	r3, [r4, #0]
 8009944:	2800      	cmp	r0, #0
 8009946:	d050      	beq.n	80099ea <_ZN8touchgfx3HAL4tickEv+0x156>
 8009948:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800994c:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8009950:	4620      	mov	r0, r4
 8009952:	4798      	blx	r3
 8009954:	6960      	ldr	r0, [r4, #20]
 8009956:	2300      	movs	r3, #0
 8009958:	f88d 3007 	strb.w	r3, [sp, #7]
 800995c:	b158      	cbz	r0, 8009976 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800995e:	6803      	ldr	r3, [r0, #0]
 8009960:	f10d 0107 	add.w	r1, sp, #7
 8009964:	68db      	ldr	r3, [r3, #12]
 8009966:	4798      	blx	r3
 8009968:	b128      	cbz	r0, 8009976 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800996a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800996c:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8009970:	6803      	ldr	r3, [r0, #0]
 8009972:	68db      	ldr	r3, [r3, #12]
 8009974:	4798      	blx	r3
 8009976:	f104 001c 	add.w	r0, r4, #28
 800997a:	f011 fead 	bl	801b6d8 <_ZN8touchgfx8Gestures4tickEv>
 800997e:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 8009982:	b30b      	cbz	r3, 80099c8 <_ZN8touchgfx3HAL4tickEv+0x134>
 8009984:	6920      	ldr	r0, [r4, #16]
 8009986:	6803      	ldr	r3, [r0, #0]
 8009988:	691b      	ldr	r3, [r3, #16]
 800998a:	4798      	blx	r3
 800998c:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800998e:	4606      	mov	r6, r0
 8009990:	b903      	cbnz	r3, 8009994 <_ZN8touchgfx3HAL4tickEv+0x100>
 8009992:	6720      	str	r0, [r4, #112]	; 0x70
 8009994:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8009996:	4a1e      	ldr	r2, [pc, #120]	; (8009a10 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8009998:	1af3      	subs	r3, r6, r3
 800999a:	4293      	cmp	r3, r2
 800999c:	d914      	bls.n	80099c8 <_ZN8touchgfx3HAL4tickEv+0x134>
 800999e:	6920      	ldr	r0, [r4, #16]
 80099a0:	6803      	ldr	r3, [r0, #0]
 80099a2:	699b      	ldr	r3, [r3, #24]
 80099a4:	4798      	blx	r3
 80099a6:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80099a8:	2264      	movs	r2, #100	; 0x64
 80099aa:	1af3      	subs	r3, r6, r3
 80099ac:	fbb3 f3f2 	udiv	r3, r3, r2
 80099b0:	fbb0 f0f3 	udiv	r0, r0, r3
 80099b4:	2800      	cmp	r0, #0
 80099b6:	dc1d      	bgt.n	80099f4 <_ZN8touchgfx3HAL4tickEv+0x160>
 80099b8:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 80099bc:	6920      	ldr	r0, [r4, #16]
 80099be:	6803      	ldr	r3, [r0, #0]
 80099c0:	2100      	movs	r1, #0
 80099c2:	69db      	ldr	r3, [r3, #28]
 80099c4:	4798      	blx	r3
 80099c6:	6726      	str	r6, [r4, #112]	; 0x70
 80099c8:	f003 f932 	bl	800cc30 <_ZN8touchgfx11Application11getInstanceEv>
 80099cc:	6803      	ldr	r3, [r0, #0]
 80099ce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80099d0:	4798      	blx	r3
 80099d2:	6823      	ldr	r3, [r4, #0]
 80099d4:	4620      	mov	r0, r4
 80099d6:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 80099da:	4798      	blx	r3
 80099dc:	2001      	movs	r0, #1
 80099de:	f7f6 fedf 	bl	80007a0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 80099e2:	2300      	movs	r3, #0
 80099e4:	702b      	strb	r3, [r5, #0]
 80099e6:	b004      	add	sp, #16
 80099e8:	bd70      	pop	{r4, r5, r6, pc}
 80099ea:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 80099ee:	4620      	mov	r0, r4
 80099f0:	4798      	blx	r3
 80099f2:	e7af      	b.n	8009954 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80099f4:	2863      	cmp	r0, #99	; 0x63
 80099f6:	bfcb      	itete	gt
 80099f8:	2300      	movgt	r3, #0
 80099fa:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 80099fe:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 8009a02:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 8009a06:	e7d9      	b.n	80099bc <_ZN8touchgfx3HAL4tickEv+0x128>
 8009a08:	20012674 	.word	0x20012674
 8009a0c:	20012675 	.word	0x20012675
 8009a10:	05f5e100 	.word	0x05f5e100

08009a14 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8009a14:	f7f7 b842 	b.w	8000a9c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08009a18 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8009a18:	6581      	str	r1, [r0, #88]	; 0x58
 8009a1a:	301c      	adds	r0, #28
 8009a1c:	f011 be5a 	b.w	801b6d4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08009a20 <_ZN8touchgfx3HAL5touchEll>:
 8009a20:	b530      	push	{r4, r5, lr}
 8009a22:	b087      	sub	sp, #28
 8009a24:	4604      	mov	r4, r0
 8009a26:	a804      	add	r0, sp, #16
 8009a28:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8009a2c:	f002 ff00 	bl	800c830 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8009a30:	9b04      	ldr	r3, [sp, #16]
 8009a32:	f8ad 300c 	strh.w	r3, [sp, #12]
 8009a36:	a906      	add	r1, sp, #24
 8009a38:	9b05      	ldr	r3, [sp, #20]
 8009a3a:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8009a3e:	a803      	add	r0, sp, #12
 8009a40:	f002 ff48 	bl	800c8d4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8009a44:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 8009a48:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8009a4c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8009a50:	f104 001c 	add.w	r0, r4, #28
 8009a54:	b189      	cbz	r1, 8009a7a <_ZN8touchgfx3HAL5touchEll+0x5a>
 8009a56:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 8009a5a:	9300      	str	r3, [sp, #0]
 8009a5c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8009a60:	4613      	mov	r3, r2
 8009a62:	462a      	mov	r2, r5
 8009a64:	f011 fe46 	bl	801b6f4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8009a68:	b128      	cbz	r0, 8009a76 <_ZN8touchgfx3HAL5touchEll+0x56>
 8009a6a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8009a6e:	65e3      	str	r3, [r4, #92]	; 0x5c
 8009a70:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8009a74:	6623      	str	r3, [r4, #96]	; 0x60
 8009a76:	b007      	add	sp, #28
 8009a78:	bd30      	pop	{r4, r5, pc}
 8009a7a:	f011 fe7b 	bl	801b774 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009a7e:	2301      	movs	r3, #1
 8009a80:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8009a84:	e7f1      	b.n	8009a6a <_ZN8touchgfx3HAL5touchEll+0x4a>

08009a86 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8009a86:	b510      	push	{r4, lr}
 8009a88:	2b00      	cmp	r3, #0
 8009a8a:	d046      	beq.n	8009b1a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009a8c:	ea81 0002 	eor.w	r0, r1, r2
 8009a90:	07c4      	lsls	r4, r0, #31
 8009a92:	d508      	bpl.n	8009aa6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8009a94:	440b      	add	r3, r1
 8009a96:	3a01      	subs	r2, #1
 8009a98:	428b      	cmp	r3, r1
 8009a9a:	d93e      	bls.n	8009b1a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009a9c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009aa0:	f801 0b01 	strb.w	r0, [r1], #1
 8009aa4:	e7f8      	b.n	8009a98 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8009aa6:	07d0      	lsls	r0, r2, #31
 8009aa8:	bf42      	ittt	mi
 8009aaa:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8009aae:	f801 0b01 	strbmi.w	r0, [r1], #1
 8009ab2:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8009ab6:	2b01      	cmp	r3, #1
 8009ab8:	d911      	bls.n	8009ade <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009aba:	ea81 0402 	eor.w	r4, r1, r2
 8009abe:	07a4      	lsls	r4, r4, #30
 8009ac0:	4610      	mov	r0, r2
 8009ac2:	d022      	beq.n	8009b0a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8009ac4:	f023 0401 	bic.w	r4, r3, #1
 8009ac8:	440c      	add	r4, r1
 8009aca:	428c      	cmp	r4, r1
 8009acc:	4602      	mov	r2, r0
 8009ace:	d904      	bls.n	8009ada <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8009ad0:	8812      	ldrh	r2, [r2, #0]
 8009ad2:	f821 2b02 	strh.w	r2, [r1], #2
 8009ad6:	3002      	adds	r0, #2
 8009ad8:	e7f7      	b.n	8009aca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8009ada:	f003 0301 	and.w	r3, r3, #1
 8009ade:	f023 0003 	bic.w	r0, r3, #3
 8009ae2:	4408      	add	r0, r1
 8009ae4:	4288      	cmp	r0, r1
 8009ae6:	4614      	mov	r4, r2
 8009ae8:	d904      	bls.n	8009af4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8009aea:	6824      	ldr	r4, [r4, #0]
 8009aec:	f841 4b04 	str.w	r4, [r1], #4
 8009af0:	3204      	adds	r2, #4
 8009af2:	e7f7      	b.n	8009ae4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8009af4:	f003 0303 	and.w	r3, r3, #3
 8009af8:	440b      	add	r3, r1
 8009afa:	3a01      	subs	r2, #1
 8009afc:	428b      	cmp	r3, r1
 8009afe:	d90c      	bls.n	8009b1a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8009b00:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009b04:	f801 0b01 	strb.w	r0, [r1], #1
 8009b08:	e7f8      	b.n	8009afc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8009b0a:	0790      	lsls	r0, r2, #30
 8009b0c:	d0e7      	beq.n	8009ade <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009b0e:	f832 0b02 	ldrh.w	r0, [r2], #2
 8009b12:	f821 0b02 	strh.w	r0, [r1], #2
 8009b16:	3b02      	subs	r3, #2
 8009b18:	e7e1      	b.n	8009ade <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8009b1a:	2001      	movs	r0, #1
 8009b1c:	bd10      	pop	{r4, pc}

08009b1e <_ZN8touchgfx3HAL7noTouchEv>:
 8009b1e:	b510      	push	{r4, lr}
 8009b20:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 8009b24:	4604      	mov	r4, r0
 8009b26:	b153      	cbz	r3, 8009b3e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8009b28:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 8009b2c:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 8009b30:	2101      	movs	r1, #1
 8009b32:	301c      	adds	r0, #28
 8009b34:	f011 fe1e 	bl	801b774 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009b38:	2300      	movs	r3, #0
 8009b3a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8009b3e:	bd10      	pop	{r4, pc}

08009b40 <_ZN8touchgfx3HAL3lcdEv>:
 8009b40:	4b04      	ldr	r3, [pc, #16]	; (8009b54 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8009b42:	681b      	ldr	r3, [r3, #0]
 8009b44:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8009b48:	b10a      	cbz	r2, 8009b4e <_ZN8touchgfx3HAL3lcdEv+0xe>
 8009b4a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8009b4c:	b900      	cbnz	r0, 8009b50 <_ZN8touchgfx3HAL3lcdEv+0x10>
 8009b4e:	6898      	ldr	r0, [r3, #8]
 8009b50:	4770      	bx	lr
 8009b52:	bf00      	nop
 8009b54:	20012670 	.word	0x20012670

08009b58 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8009b58:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009b5c:	b085      	sub	sp, #20
 8009b5e:	ad04      	add	r5, sp, #16
 8009b60:	4604      	mov	r4, r0
 8009b62:	2000      	movs	r0, #0
 8009b64:	f845 0d04 	str.w	r0, [r5, #-4]!
 8009b68:	69a0      	ldr	r0, [r4, #24]
 8009b6a:	6806      	ldr	r6, [r0, #0]
 8009b6c:	9501      	str	r5, [sp, #4]
 8009b6e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8009b72:	9500      	str	r5, [sp, #0]
 8009b74:	6835      	ldr	r5, [r6, #0]
 8009b76:	4699      	mov	r9, r3
 8009b78:	460f      	mov	r7, r1
 8009b7a:	4690      	mov	r8, r2
 8009b7c:	47a8      	blx	r5
 8009b7e:	4d10      	ldr	r5, [pc, #64]	; (8009bc0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8009b80:	4606      	mov	r6, r0
 8009b82:	f8a5 9000 	strh.w	r9, [r5]
 8009b86:	f7ff ffdb 	bl	8009b40 <_ZN8touchgfx3HAL3lcdEv>
 8009b8a:	6803      	ldr	r3, [r0, #0]
 8009b8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009b8e:	4798      	blx	r3
 8009b90:	b128      	cbz	r0, 8009b9e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8009b92:	2801      	cmp	r0, #1
 8009b94:	d00b      	beq.n	8009bae <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8009b96:	4630      	mov	r0, r6
 8009b98:	b005      	add	sp, #20
 8009b9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009b9e:	882b      	ldrh	r3, [r5, #0]
 8009ba0:	fb08 7203 	mla	r2, r8, r3, r7
 8009ba4:	9b03      	ldr	r3, [sp, #12]
 8009ba6:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8009baa:	63e3      	str	r3, [r4, #60]	; 0x3c
 8009bac:	e7f3      	b.n	8009b96 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8009bae:	882a      	ldrh	r2, [r5, #0]
 8009bb0:	9b03      	ldr	r3, [sp, #12]
 8009bb2:	fb08 7202 	mla	r2, r8, r2, r7
 8009bb6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8009bba:	1a9a      	subs	r2, r3, r2
 8009bbc:	63e2      	str	r2, [r4, #60]	; 0x3c
 8009bbe:	e7ea      	b.n	8009b96 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8009bc0:	2001266a 	.word	0x2001266a

08009bc4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8009bc4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009bc6:	b08b      	sub	sp, #44	; 0x2c
 8009bc8:	4617      	mov	r7, r2
 8009bca:	4604      	mov	r4, r0
 8009bcc:	460e      	mov	r6, r1
 8009bce:	461d      	mov	r5, r3
 8009bd0:	f7ff ffb6 	bl	8009b40 <_ZN8touchgfx3HAL3lcdEv>
 8009bd4:	6803      	ldr	r3, [r0, #0]
 8009bd6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009bd8:	4798      	blx	r3
 8009bda:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8009bde:	9007      	str	r0, [sp, #28]
 8009be0:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8009be4:	4b0d      	ldr	r3, [pc, #52]	; (8009c1c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8009be6:	6822      	ldr	r2, [r4, #0]
 8009be8:	881b      	ldrh	r3, [r3, #0]
 8009bea:	9306      	str	r3, [sp, #24]
 8009bec:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8009bf0:	9305      	str	r3, [sp, #20]
 8009bf2:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8009bf6:	9304      	str	r3, [sp, #16]
 8009bf8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009bfc:	9303      	str	r3, [sp, #12]
 8009bfe:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8009c02:	9302      	str	r3, [sp, #8]
 8009c04:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8009c08:	e9cd 5300 	strd	r5, r3, [sp]
 8009c0c:	4631      	mov	r1, r6
 8009c0e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8009c10:	463b      	mov	r3, r7
 8009c12:	2200      	movs	r2, #0
 8009c14:	4620      	mov	r0, r4
 8009c16:	47a8      	blx	r5
 8009c18:	b00b      	add	sp, #44	; 0x2c
 8009c1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009c1c:	2001266a 	.word	0x2001266a

08009c20 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8009c20:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009c24:	4698      	mov	r8, r3
 8009c26:	6803      	ldr	r3, [r0, #0]
 8009c28:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8009c2a:	4b15      	ldr	r3, [pc, #84]	; (8009c80 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8009c2c:	b08b      	sub	sp, #44	; 0x2c
 8009c2e:	4617      	mov	r7, r2
 8009c30:	f8b3 9000 	ldrh.w	r9, [r3]
 8009c34:	460e      	mov	r6, r1
 8009c36:	4604      	mov	r4, r0
 8009c38:	f7ff ff82 	bl	8009b40 <_ZN8touchgfx3HAL3lcdEv>
 8009c3c:	6803      	ldr	r3, [r0, #0]
 8009c3e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009c40:	4798      	blx	r3
 8009c42:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8009c46:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8009c4a:	2302      	movs	r3, #2
 8009c4c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8009c50:	2301      	movs	r3, #1
 8009c52:	9305      	str	r3, [sp, #20]
 8009c54:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8009c58:	9304      	str	r3, [sp, #16]
 8009c5a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8009c5e:	9303      	str	r3, [sp, #12]
 8009c60:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8009c64:	9302      	str	r3, [sp, #8]
 8009c66:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009c6a:	2200      	movs	r2, #0
 8009c6c:	e9cd 8300 	strd	r8, r3, [sp]
 8009c70:	4631      	mov	r1, r6
 8009c72:	463b      	mov	r3, r7
 8009c74:	4620      	mov	r0, r4
 8009c76:	47a8      	blx	r5
 8009c78:	b00b      	add	sp, #44	; 0x2c
 8009c7a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009c7e:	bf00      	nop
 8009c80:	2001266a 	.word	0x2001266a

08009c84 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8009c84:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009c88:	4698      	mov	r8, r3
 8009c8a:	6803      	ldr	r3, [r0, #0]
 8009c8c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8009c8e:	4b11      	ldr	r3, [pc, #68]	; (8009cd4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8009c90:	b087      	sub	sp, #28
 8009c92:	f8b3 9000 	ldrh.w	r9, [r3]
 8009c96:	460e      	mov	r6, r1
 8009c98:	4617      	mov	r7, r2
 8009c9a:	4604      	mov	r4, r0
 8009c9c:	f7ff ff50 	bl	8009b40 <_ZN8touchgfx3HAL3lcdEv>
 8009ca0:	6803      	ldr	r3, [r0, #0]
 8009ca2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009ca4:	4798      	blx	r3
 8009ca6:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8009caa:	f8cd 900c 	str.w	r9, [sp, #12]
 8009cae:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8009cb2:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8009cb6:	9302      	str	r3, [sp, #8]
 8009cb8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8009cbc:	9301      	str	r3, [sp, #4]
 8009cbe:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8009cc2:	9300      	str	r3, [sp, #0]
 8009cc4:	463a      	mov	r2, r7
 8009cc6:	4643      	mov	r3, r8
 8009cc8:	4631      	mov	r1, r6
 8009cca:	4620      	mov	r0, r4
 8009ccc:	47a8      	blx	r5
 8009cce:	b007      	add	sp, #28
 8009cd0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009cd4:	2001266a 	.word	0x2001266a

08009cd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8009cd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009cdc:	4604      	mov	r4, r0
 8009cde:	b08f      	sub	sp, #60	; 0x3c
 8009ce0:	4610      	mov	r0, r2
 8009ce2:	460d      	mov	r5, r1
 8009ce4:	4691      	mov	r9, r2
 8009ce6:	461e      	mov	r6, r3
 8009ce8:	f005 ff3e 	bl	800fb68 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009cec:	2800      	cmp	r0, #0
 8009cee:	f000 809d 	beq.w	8009e2c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8009cf2:	6823      	ldr	r3, [r4, #0]
 8009cf4:	f8df b198 	ldr.w	fp, [pc, #408]	; 8009e90 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8009cf8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009cfa:	f8df a198 	ldr.w	sl, [pc, #408]	; 8009e94 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8009cfe:	4f61      	ldr	r7, [pc, #388]	; (8009e84 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8009d00:	4620      	mov	r0, r4
 8009d02:	4798      	blx	r3
 8009d04:	6823      	ldr	r3, [r4, #0]
 8009d06:	4620      	mov	r0, r4
 8009d08:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009d0a:	4798      	blx	r3
 8009d0c:	f8bb 3000 	ldrh.w	r3, [fp]
 8009d10:	9301      	str	r3, [sp, #4]
 8009d12:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8009d16:	f8ba 3000 	ldrh.w	r3, [sl]
 8009d1a:	9302      	str	r3, [sp, #8]
 8009d1c:	883b      	ldrh	r3, [r7, #0]
 8009d1e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8009d22:	9303      	str	r3, [sp, #12]
 8009d24:	4b58      	ldr	r3, [pc, #352]	; (8009e88 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8009d26:	9305      	str	r3, [sp, #20]
 8009d28:	881a      	ldrh	r2, [r3, #0]
 8009d2a:	9204      	str	r2, [sp, #16]
 8009d2c:	4640      	mov	r0, r8
 8009d2e:	f005 ffaf 	bl	800fc90 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8009d32:	8038      	strh	r0, [r7, #0]
 8009d34:	4640      	mov	r0, r8
 8009d36:	f005 ffdf 	bl	800fcf8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8009d3a:	9b05      	ldr	r3, [sp, #20]
 8009d3c:	b280      	uxth	r0, r0
 8009d3e:	8018      	strh	r0, [r3, #0]
 8009d40:	4b52      	ldr	r3, [pc, #328]	; (8009e8c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8009d42:	781b      	ldrb	r3, [r3, #0]
 8009d44:	2b00      	cmp	r3, #0
 8009d46:	d174      	bne.n	8009e32 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8009d48:	883b      	ldrh	r3, [r7, #0]
 8009d4a:	f8ab 3000 	strh.w	r3, [fp]
 8009d4e:	f8aa 0000 	strh.w	r0, [sl]
 8009d52:	4648      	mov	r0, r9
 8009d54:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8009d58:	f005 ff06 	bl	800fb68 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009d5c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8009d60:	2200      	movs	r2, #0
 8009d62:	4611      	mov	r1, r2
 8009d64:	4628      	mov	r0, r5
 8009d66:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8009d6a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8009d6e:	f7f8 fbe4 	bl	800253a <_ZN8touchgfx8Drawable5setXYEss>
 8009d72:	2301      	movs	r3, #1
 8009d74:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8009d78:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8009d7c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8009d80:	2b00      	cmp	r3, #0
 8009d82:	dd5c      	ble.n	8009e3e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8009d84:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8009d88:	2b00      	cmp	r3, #0
 8009d8a:	dd58      	ble.n	8009e3e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8009d8c:	462a      	mov	r2, r5
 8009d8e:	ab0a      	add	r3, sp, #40	; 0x28
 8009d90:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8009d94:	6851      	ldr	r1, [r2, #4]
 8009d96:	c303      	stmia	r3!, {r0, r1}
 8009d98:	4631      	mov	r1, r6
 8009d9a:	a80a      	add	r0, sp, #40	; 0x28
 8009d9c:	f7ff fc00 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 8009da0:	4b38      	ldr	r3, [pc, #224]	; (8009e84 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8009da2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8009da6:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8009daa:	2100      	movs	r1, #0
 8009dac:	aa0a      	add	r2, sp, #40	; 0x28
 8009dae:	4b36      	ldr	r3, [pc, #216]	; (8009e88 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8009db0:	910c      	str	r1, [sp, #48]	; 0x30
 8009db2:	e892 0003 	ldmia.w	r2, {r0, r1}
 8009db6:	f9b3 3000 	ldrsh.w	r3, [r3]
 8009dba:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8009dbe:	ab08      	add	r3, sp, #32
 8009dc0:	e883 0003 	stmia.w	r3, {r0, r1}
 8009dc4:	4618      	mov	r0, r3
 8009dc6:	a90c      	add	r1, sp, #48	; 0x30
 8009dc8:	f7ff fbea 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 8009dcc:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8009dce:	2b00      	cmp	r3, #0
 8009dd0:	d13c      	bne.n	8009e4c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8009dd2:	2000      	movs	r0, #0
 8009dd4:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 8009dd8:	2600      	movs	r6, #0
 8009dda:	682a      	ldr	r2, [r5, #0]
 8009ddc:	696b      	ldr	r3, [r5, #20]
 8009dde:	616e      	str	r6, [r5, #20]
 8009de0:	9305      	str	r3, [sp, #20]
 8009de2:	6892      	ldr	r2, [r2, #8]
 8009de4:	a908      	add	r1, sp, #32
 8009de6:	4628      	mov	r0, r5
 8009de8:	4790      	blx	r2
 8009dea:	9b05      	ldr	r3, [sp, #20]
 8009dec:	616b      	str	r3, [r5, #20]
 8009dee:	4652      	mov	r2, sl
 8009df0:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 8009df4:	4649      	mov	r1, r9
 8009df6:	4628      	mov	r0, r5
 8009df8:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8009dfc:	f7f8 fb9d 	bl	800253a <_ZN8touchgfx8Drawable5setXYEss>
 8009e00:	4b23      	ldr	r3, [pc, #140]	; (8009e90 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8009e02:	9a01      	ldr	r2, [sp, #4]
 8009e04:	801a      	strh	r2, [r3, #0]
 8009e06:	4b23      	ldr	r3, [pc, #140]	; (8009e94 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8009e08:	9a02      	ldr	r2, [sp, #8]
 8009e0a:	801a      	strh	r2, [r3, #0]
 8009e0c:	4b1d      	ldr	r3, [pc, #116]	; (8009e84 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8009e0e:	9a03      	ldr	r2, [sp, #12]
 8009e10:	801a      	strh	r2, [r3, #0]
 8009e12:	4b1d      	ldr	r3, [pc, #116]	; (8009e88 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8009e14:	9a04      	ldr	r2, [sp, #16]
 8009e16:	801a      	strh	r2, [r3, #0]
 8009e18:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8009e1c:	6823      	ldr	r3, [r4, #0]
 8009e1e:	4620      	mov	r0, r4
 8009e20:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009e22:	4798      	blx	r3
 8009e24:	6823      	ldr	r3, [r4, #0]
 8009e26:	4620      	mov	r0, r4
 8009e28:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009e2a:	4798      	blx	r3
 8009e2c:	b00f      	add	sp, #60	; 0x3c
 8009e2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009e32:	883b      	ldrh	r3, [r7, #0]
 8009e34:	f8ab 0000 	strh.w	r0, [fp]
 8009e38:	f8aa 3000 	strh.w	r3, [sl]
 8009e3c:	e789      	b.n	8009d52 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8009e3e:	462a      	mov	r2, r5
 8009e40:	ab0a      	add	r3, sp, #40	; 0x28
 8009e42:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8009e46:	6851      	ldr	r1, [r2, #4]
 8009e48:	c303      	stmia	r3!, {r0, r1}
 8009e4a:	e7a9      	b.n	8009da0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8009e4c:	a807      	add	r0, sp, #28
 8009e4e:	f006 f88f 	bl	800ff70 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8009e52:	4606      	mov	r6, r0
 8009e54:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8009e56:	6803      	ldr	r3, [r0, #0]
 8009e58:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009e5a:	4798      	blx	r3
 8009e5c:	4286      	cmp	r6, r0
 8009e5e:	d1b8      	bne.n	8009dd2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8009e60:	f7ff fe6e 	bl	8009b40 <_ZN8touchgfx3HAL3lcdEv>
 8009e64:	6803      	ldr	r3, [r0, #0]
 8009e66:	4606      	mov	r6, r0
 8009e68:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009e6a:	9305      	str	r3, [sp, #20]
 8009e6c:	a807      	add	r0, sp, #28
 8009e6e:	f006 f87f 	bl	800ff70 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8009e72:	9b05      	ldr	r3, [sp, #20]
 8009e74:	4601      	mov	r1, r0
 8009e76:	4630      	mov	r0, r6
 8009e78:	4798      	blx	r3
 8009e7a:	f080 0001 	eor.w	r0, r0, #1
 8009e7e:	b2c0      	uxtb	r0, r0
 8009e80:	e7a8      	b.n	8009dd4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8009e82:	bf00      	nop
 8009e84:	20012664 	.word	0x20012664
 8009e88:	20012666 	.word	0x20012666
 8009e8c:	20012668 	.word	0x20012668
 8009e90:	2001266a 	.word	0x2001266a
 8009e94:	2001266c 	.word	0x2001266c

08009e98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8009e98:	b510      	push	{r4, lr}
 8009e9a:	4b07      	ldr	r3, [pc, #28]	; (8009eb8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8009e9c:	781b      	ldrb	r3, [r3, #0]
 8009e9e:	4604      	mov	r4, r0
 8009ea0:	b13b      	cbz	r3, 8009eb2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8009ea2:	6803      	ldr	r3, [r0, #0]
 8009ea4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009ea6:	4798      	blx	r3
 8009ea8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009eaa:	4283      	cmp	r3, r0
 8009eac:	d101      	bne.n	8009eb2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8009eae:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8009eb0:	bd10      	pop	{r4, pc}
 8009eb2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8009eb4:	e7fc      	b.n	8009eb0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8009eb6:	bf00      	nop
 8009eb8:	2001266e 	.word	0x2001266e

08009ebc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8009ebc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009ec0:	b08a      	sub	sp, #40	; 0x28
 8009ec2:	461d      	mov	r5, r3
 8009ec4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009ec8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8009ecc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8009ed0:	f8ad 3018 	strh.w	r3, [sp, #24]
 8009ed4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8009ed8:	f8ad 301a 	strh.w	r3, [sp, #26]
 8009edc:	2400      	movs	r4, #0
 8009ede:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009ee2:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8009ee6:	f8ad 301c 	strh.w	r3, [sp, #28]
 8009eea:	4690      	mov	r8, r2
 8009eec:	4607      	mov	r7, r0
 8009eee:	9404      	str	r4, [sp, #16]
 8009ef0:	f88d 4020 	strb.w	r4, [sp, #32]
 8009ef4:	f7ff ffd0 	bl	8009e98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009ef8:	fb06 8505 	mla	r5, r6, r5, r8
 8009efc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8009f00:	6878      	ldr	r0, [r7, #4]
 8009f02:	9505      	str	r5, [sp, #20]
 8009f04:	f8ad 601e 	strh.w	r6, [sp, #30]
 8009f08:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8009f0c:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8009f10:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8009f14:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8009f18:	6803      	ldr	r3, [r0, #0]
 8009f1a:	a901      	add	r1, sp, #4
 8009f1c:	685b      	ldr	r3, [r3, #4]
 8009f1e:	4798      	blx	r3
 8009f20:	b00a      	add	sp, #40	; 0x28
 8009f22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009f26 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8009f26:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009f2a:	b08b      	sub	sp, #44	; 0x2c
 8009f2c:	2400      	movs	r4, #0
 8009f2e:	461d      	mov	r5, r3
 8009f30:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8009f34:	4688      	mov	r8, r1
 8009f36:	4691      	mov	r9, r2
 8009f38:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8009f3c:	9404      	str	r4, [sp, #16]
 8009f3e:	4607      	mov	r7, r0
 8009f40:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8009f44:	f7ff ffa8 	bl	8009e98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009f48:	fb06 9505 	mla	r5, r6, r5, r9
 8009f4c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009f50:	f8ad 3018 	strh.w	r3, [sp, #24]
 8009f54:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8009f58:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8009f5c:	6878      	ldr	r0, [r7, #4]
 8009f5e:	9505      	str	r5, [sp, #20]
 8009f60:	f8ad 301a 	strh.w	r3, [sp, #26]
 8009f64:	f8ad 401c 	strh.w	r4, [sp, #28]
 8009f68:	f8ad 601e 	strh.w	r6, [sp, #30]
 8009f6c:	f8cd 8010 	str.w	r8, [sp, #16]
 8009f70:	f8ad 4020 	strh.w	r4, [sp, #32]
 8009f74:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8009f78:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8009f7c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8009f80:	6803      	ldr	r3, [r0, #0]
 8009f82:	a901      	add	r1, sp, #4
 8009f84:	685b      	ldr	r3, [r3, #4]
 8009f86:	4798      	blx	r3
 8009f88:	b00b      	add	sp, #44	; 0x2c
 8009f8a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08009f90 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8009f90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009f94:	b08a      	sub	sp, #40	; 0x28
 8009f96:	4698      	mov	r8, r3
 8009f98:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8009f9c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8009fa0:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8009fa4:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8009fa8:	2300      	movs	r3, #0
 8009faa:	2d0b      	cmp	r5, #11
 8009fac:	4606      	mov	r6, r0
 8009fae:	9304      	str	r3, [sp, #16]
 8009fb0:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8009fb4:	d138      	bne.n	800a028 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8009fb6:	2380      	movs	r3, #128	; 0x80
 8009fb8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8009fbc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8009fc0:	f8ad 3018 	strh.w	r3, [sp, #24]
 8009fc4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009fc8:	f8ad 301a 	strh.w	r3, [sp, #26]
 8009fcc:	f88d 0020 	strb.w	r0, [sp, #32]
 8009fd0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8009fd4:	f8ad 301c 	strh.w	r3, [sp, #28]
 8009fd8:	4630      	mov	r0, r6
 8009fda:	9203      	str	r2, [sp, #12]
 8009fdc:	f7ff ff5c 	bl	8009e98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009fe0:	2c0b      	cmp	r4, #11
 8009fe2:	bf98      	it	ls
 8009fe4:	4b1b      	ldrls	r3, [pc, #108]	; (800a054 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8009fe6:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8009fea:	bf98      	it	ls
 8009fec:	5d19      	ldrbls	r1, [r3, r4]
 8009fee:	f8ad 701e 	strh.w	r7, [sp, #30]
 8009ff2:	bf88      	it	hi
 8009ff4:	2100      	movhi	r1, #0
 8009ff6:	fb02 8307 	mla	r3, r2, r7, r8
 8009ffa:	10c9      	asrs	r1, r1, #3
 8009ffc:	fb01 0003 	mla	r0, r1, r3, r0
 800a000:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800a004:	9005      	str	r0, [sp, #20]
 800a006:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800a00a:	6870      	ldr	r0, [r6, #4]
 800a00c:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800a010:	2300      	movs	r3, #0
 800a012:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800a016:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a01a:	6803      	ldr	r3, [r0, #0]
 800a01c:	a901      	add	r1, sp, #4
 800a01e:	685b      	ldr	r3, [r3, #4]
 800a020:	4798      	blx	r3
 800a022:	b00a      	add	sp, #40	; 0x28
 800a024:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a028:	2d02      	cmp	r5, #2
 800a02a:	d109      	bne.n	800a040 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800a02c:	28ff      	cmp	r0, #255	; 0xff
 800a02e:	d105      	bne.n	800a03c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800a030:	f1bc 0f00 	cmp.w	ip, #0
 800a034:	bf14      	ite	ne
 800a036:	2340      	movne	r3, #64	; 0x40
 800a038:	2320      	moveq	r3, #32
 800a03a:	e7bd      	b.n	8009fb8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a03c:	2340      	movs	r3, #64	; 0x40
 800a03e:	e7bb      	b.n	8009fb8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a040:	28ff      	cmp	r0, #255	; 0xff
 800a042:	d105      	bne.n	800a050 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800a044:	f1bc 0f00 	cmp.w	ip, #0
 800a048:	bf14      	ite	ne
 800a04a:	2304      	movne	r3, #4
 800a04c:	2301      	moveq	r3, #1
 800a04e:	e7b3      	b.n	8009fb8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a050:	2304      	movs	r3, #4
 800a052:	e7b1      	b.n	8009fb8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800a054:	0801dd78 	.word	0x0801dd78

0800a058 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800a058:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a05c:	b08b      	sub	sp, #44	; 0x2c
 800a05e:	461d      	mov	r5, r3
 800a060:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800a064:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800a068:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800a06c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800a070:	bf14      	ite	ne
 800a072:	2308      	movne	r3, #8
 800a074:	2302      	moveq	r3, #2
 800a076:	2400      	movs	r4, #0
 800a078:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800a07c:	4688      	mov	r8, r1
 800a07e:	4693      	mov	fp, r2
 800a080:	9404      	str	r4, [sp, #16]
 800a082:	4607      	mov	r7, r0
 800a084:	f7ff ff08 	bl	8009e98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a088:	2e0b      	cmp	r6, #11
 800a08a:	bf98      	it	ls
 800a08c:	4b15      	ldrls	r3, [pc, #84]	; (800a0e4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800a08e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800a092:	bf98      	it	ls
 800a094:	5d9c      	ldrbls	r4, [r3, r6]
 800a096:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800a09a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a09e:	fb05 b50a 	mla	r5, r5, sl, fp
 800a0a2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800a0a6:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a0aa:	10e4      	asrs	r4, r4, #3
 800a0ac:	fb04 0405 	mla	r4, r4, r5, r0
 800a0b0:	2300      	movs	r3, #0
 800a0b2:	6878      	ldr	r0, [r7, #4]
 800a0b4:	9405      	str	r4, [sp, #20]
 800a0b6:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a0ba:	f8ad a01e 	strh.w	sl, [sp, #30]
 800a0be:	f8cd 8010 	str.w	r8, [sp, #16]
 800a0c2:	f88d 9020 	strb.w	r9, [sp, #32]
 800a0c6:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800a0ca:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800a0ce:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800a0d2:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800a0d6:	6803      	ldr	r3, [r0, #0]
 800a0d8:	a901      	add	r1, sp, #4
 800a0da:	685b      	ldr	r3, [r3, #4]
 800a0dc:	4798      	blx	r3
 800a0de:	b00b      	add	sp, #44	; 0x2c
 800a0e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a0e4:	0801dd78 	.word	0x0801dd78

0800a0e8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800a0e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a0ec:	461e      	mov	r6, r3
 800a0ee:	4b0a      	ldr	r3, [pc, #40]	; (800a118 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800a0f0:	460f      	mov	r7, r1
 800a0f2:	881d      	ldrh	r5, [r3, #0]
 800a0f4:	4690      	mov	r8, r2
 800a0f6:	f7ff fd23 	bl	8009b40 <_ZN8touchgfx3HAL3lcdEv>
 800a0fa:	6803      	ldr	r3, [r0, #0]
 800a0fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a0fe:	4798      	blx	r3
 800a100:	280b      	cmp	r0, #11
 800a102:	bf9a      	itte	ls
 800a104:	4b05      	ldrls	r3, [pc, #20]	; (800a11c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800a106:	5c1c      	ldrbls	r4, [r3, r0]
 800a108:	2400      	movhi	r4, #0
 800a10a:	fb08 7005 	mla	r0, r8, r5, r7
 800a10e:	10e4      	asrs	r4, r4, #3
 800a110:	fb04 6000 	mla	r0, r4, r0, r6
 800a114:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a118:	2001266a 	.word	0x2001266a
 800a11c:	0801dd78 	.word	0x0801dd78

0800a120 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800a120:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a122:	b08b      	sub	sp, #44	; 0x2c
 800a124:	461f      	mov	r7, r3
 800a126:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800a12a:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800a12e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800a132:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a136:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800a13a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800a13e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800a142:	f8ad 301c 	strh.w	r3, [sp, #28]
 800a146:	2500      	movs	r5, #0
 800a148:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800a14c:	f88d 3020 	strb.w	r3, [sp, #32]
 800a150:	4604      	mov	r4, r0
 800a152:	4616      	mov	r6, r2
 800a154:	9504      	str	r5, [sp, #16]
 800a156:	f7ff fe9f 	bl	8009e98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a15a:	463a      	mov	r2, r7
 800a15c:	4631      	mov	r1, r6
 800a15e:	4603      	mov	r3, r0
 800a160:	4620      	mov	r0, r4
 800a162:	f7ff ffc1 	bl	800a0e8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a166:	4b0e      	ldr	r3, [pc, #56]	; (800a1a0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800a168:	9005      	str	r0, [sp, #20]
 800a16a:	881b      	ldrh	r3, [r3, #0]
 800a16c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800a170:	f7ff fce6 	bl	8009b40 <_ZN8touchgfx3HAL3lcdEv>
 800a174:	6803      	ldr	r3, [r0, #0]
 800a176:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a178:	4798      	blx	r3
 800a17a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800a17c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800a180:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800a184:	9304      	str	r3, [sp, #16]
 800a186:	6860      	ldr	r0, [r4, #4]
 800a188:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800a18c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800a190:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800a194:	6803      	ldr	r3, [r0, #0]
 800a196:	a901      	add	r1, sp, #4
 800a198:	685b      	ldr	r3, [r3, #4]
 800a19a:	4798      	blx	r3
 800a19c:	b00b      	add	sp, #44	; 0x2c
 800a19e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a1a0:	2001266a 	.word	0x2001266a

0800a1a4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800a1a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a1a6:	b08d      	sub	sp, #52	; 0x34
 800a1a8:	466b      	mov	r3, sp
 800a1aa:	e883 0006 	stmia.w	r3, {r1, r2}
 800a1ae:	2300      	movs	r3, #0
 800a1b0:	9306      	str	r3, [sp, #24]
 800a1b2:	6803      	ldr	r3, [r0, #0]
 800a1b4:	f8bd 6000 	ldrh.w	r6, [sp]
 800a1b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a1ba:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800a1be:	2501      	movs	r5, #1
 800a1c0:	9503      	str	r5, [sp, #12]
 800a1c2:	4604      	mov	r4, r0
 800a1c4:	4798      	blx	r3
 800a1c6:	463a      	mov	r2, r7
 800a1c8:	4631      	mov	r1, r6
 800a1ca:	4603      	mov	r3, r0
 800a1cc:	4620      	mov	r0, r4
 800a1ce:	f7ff ff8b 	bl	800a0e8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a1d2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800a1d4:	9307      	str	r3, [sp, #28]
 800a1d6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a1da:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a1de:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a1e2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800a1e6:	4b0f      	ldr	r3, [pc, #60]	; (800a224 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800a1e8:	9004      	str	r0, [sp, #16]
 800a1ea:	881b      	ldrh	r3, [r3, #0]
 800a1ec:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800a1f0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800a1f4:	f7ff fca4 	bl	8009b40 <_ZN8touchgfx3HAL3lcdEv>
 800a1f8:	6803      	ldr	r3, [r0, #0]
 800a1fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a1fc:	4798      	blx	r3
 800a1fe:	23ff      	movs	r3, #255	; 0xff
 800a200:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800a204:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800a208:	6860      	ldr	r0, [r4, #4]
 800a20a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800a20e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800a212:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800a216:	6803      	ldr	r3, [r0, #0]
 800a218:	a903      	add	r1, sp, #12
 800a21a:	685b      	ldr	r3, [r3, #4]
 800a21c:	4798      	blx	r3
 800a21e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800a220:	b00d      	add	sp, #52	; 0x34
 800a222:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a224:	2001266a 	.word	0x2001266a

0800a228 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800a228:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a22c:	b08c      	sub	sp, #48	; 0x30
 800a22e:	461e      	mov	r6, r3
 800a230:	466d      	mov	r5, sp
 800a232:	2300      	movs	r3, #0
 800a234:	e885 0006 	stmia.w	r5, {r1, r2}
 800a238:	9306      	str	r3, [sp, #24]
 800a23a:	6803      	ldr	r3, [r0, #0]
 800a23c:	f8bd 7000 	ldrh.w	r7, [sp]
 800a240:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a242:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800a246:	2501      	movs	r5, #1
 800a248:	9503      	str	r5, [sp, #12]
 800a24a:	4604      	mov	r4, r0
 800a24c:	4798      	blx	r3
 800a24e:	4642      	mov	r2, r8
 800a250:	4639      	mov	r1, r7
 800a252:	4603      	mov	r3, r0
 800a254:	4620      	mov	r0, r4
 800a256:	f7ff ff47 	bl	800a0e8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a25a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800a25e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800a262:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a266:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800a26a:	4b11      	ldr	r3, [pc, #68]	; (800a2b0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800a26c:	9004      	str	r0, [sp, #16]
 800a26e:	881b      	ldrh	r3, [r3, #0]
 800a270:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800a274:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800a276:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800a27a:	9607      	str	r6, [sp, #28]
 800a27c:	f7ff fc60 	bl	8009b40 <_ZN8touchgfx3HAL3lcdEv>
 800a280:	6803      	ldr	r3, [r0, #0]
 800a282:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a284:	4798      	blx	r3
 800a286:	23ff      	movs	r3, #255	; 0xff
 800a288:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800a28c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800a290:	6860      	ldr	r0, [r4, #4]
 800a292:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800a296:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800a29a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800a29e:	6803      	ldr	r3, [r0, #0]
 800a2a0:	a903      	add	r1, sp, #12
 800a2a2:	685b      	ldr	r3, [r3, #4]
 800a2a4:	4798      	blx	r3
 800a2a6:	4630      	mov	r0, r6
 800a2a8:	b00c      	add	sp, #48	; 0x30
 800a2aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a2ae:	bf00      	nop
 800a2b0:	2001266a 	.word	0x2001266a

0800a2b4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800a2b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a2b6:	b085      	sub	sp, #20
 800a2b8:	ac02      	add	r4, sp, #8
 800a2ba:	e884 0006 	stmia.w	r4, {r1, r2}
 800a2be:	4605      	mov	r5, r0
 800a2c0:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800a2c4:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800a2c8:	f7ff fde6 	bl	8009e98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a2cc:	463a      	mov	r2, r7
 800a2ce:	4603      	mov	r3, r0
 800a2d0:	4631      	mov	r1, r6
 800a2d2:	4628      	mov	r0, r5
 800a2d4:	f7ff ff08 	bl	800a0e8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800a2d8:	4a05      	ldr	r2, [pc, #20]	; (800a2f0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800a2da:	682b      	ldr	r3, [r5, #0]
 800a2dc:	8812      	ldrh	r2, [r2, #0]
 800a2de:	9200      	str	r2, [sp, #0]
 800a2e0:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800a2e2:	e894 0006 	ldmia.w	r4, {r1, r2}
 800a2e6:	4603      	mov	r3, r0
 800a2e8:	4628      	mov	r0, r5
 800a2ea:	47b0      	blx	r6
 800a2ec:	b005      	add	sp, #20
 800a2ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a2f0:	2001266a 	.word	0x2001266a

0800a2f4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800a2f4:	b570      	push	{r4, r5, r6, lr}
 800a2f6:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800a2fa:	4604      	mov	r4, r0
 800a2fc:	b19b      	cbz	r3, 800a326 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800a2fe:	2002      	movs	r0, #2
 800a300:	f7f6 fa78 	bl	80007f4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800a304:	2300      	movs	r3, #0
 800a306:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800a30a:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800a30e:	6823      	ldr	r3, [r4, #0]
 800a310:	4620      	mov	r0, r4
 800a312:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800a316:	f7ff fdbf 	bl	8009e98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a31a:	462b      	mov	r3, r5
 800a31c:	4601      	mov	r1, r0
 800a31e:	4620      	mov	r0, r4
 800a320:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a324:	4718      	bx	r3
 800a326:	bd70      	pop	{r4, r5, r6, pc}

0800a328 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800a328:	b538      	push	{r3, r4, r5, lr}
 800a32a:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800a32e:	428b      	cmp	r3, r1
 800a330:	4604      	mov	r4, r0
 800a332:	460d      	mov	r5, r1
 800a334:	d006      	beq.n	800a344 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800a336:	6803      	ldr	r3, [r0, #0]
 800a338:	b929      	cbnz	r1, 800a346 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800a33a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800a33e:	4798      	blx	r3
 800a340:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800a344:	bd38      	pop	{r3, r4, r5, pc}
 800a346:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800a34a:	e7f8      	b.n	800a33e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800a34c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800a34c:	b510      	push	{r4, lr}
 800a34e:	4b0d      	ldr	r3, [pc, #52]	; (800a384 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800a350:	781b      	ldrb	r3, [r3, #0]
 800a352:	4604      	mov	r4, r0
 800a354:	b95b      	cbnz	r3, 800a36e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a356:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800a35a:	2b02      	cmp	r3, #2
 800a35c:	d007      	beq.n	800a36e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a35e:	6840      	ldr	r0, [r0, #4]
 800a360:	f000 f912 	bl	800a588 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800a364:	b118      	cbz	r0, 800a36e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800a366:	6862      	ldr	r2, [r4, #4]
 800a368:	7a53      	ldrb	r3, [r2, #9]
 800a36a:	2b00      	cmp	r3, #0
 800a36c:	d0fc      	beq.n	800a368 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800a36e:	f7f6 fb8d 	bl	8000a8c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a372:	4620      	mov	r0, r4
 800a374:	2100      	movs	r1, #0
 800a376:	f7ff ffd7 	bl	800a328 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800a37a:	4620      	mov	r0, r4
 800a37c:	f7ff fd8c 	bl	8009e98 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800a380:	bd10      	pop	{r4, pc}
 800a382:	bf00      	nop
 800a384:	2001266e 	.word	0x2001266e

0800a388 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800a388:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800a38c:	1a13      	subs	r3, r2, r0
 800a38e:	4258      	negs	r0, r3
 800a390:	4158      	adcs	r0, r3
 800a392:	4770      	bx	lr

0800a394 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800a394:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800a398:	1a9b      	subs	r3, r3, r2
 800a39a:	2b00      	cmp	r3, #0
 800a39c:	bfdc      	itt	le
 800a39e:	6882      	ldrle	r2, [r0, #8]
 800a3a0:	189b      	addle	r3, r3, r2
 800a3a2:	2b01      	cmp	r3, #1
 800a3a4:	bfcc      	ite	gt
 800a3a6:	2000      	movgt	r0, #0
 800a3a8:	2001      	movle	r0, #1
 800a3aa:	4770      	bx	lr

0800a3ac <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800a3ac:	6902      	ldr	r2, [r0, #16]
 800a3ae:	6843      	ldr	r3, [r0, #4]
 800a3b0:	2024      	movs	r0, #36	; 0x24
 800a3b2:	fb00 3002 	mla	r0, r0, r2, r3
 800a3b6:	4770      	bx	lr

0800a3b8 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800a3b8:	6803      	ldr	r3, [r0, #0]
 800a3ba:	691b      	ldr	r3, [r3, #16]
 800a3bc:	4718      	bx	r3

0800a3be <_ZN8touchgfx13DMA_Interface7executeEv>:
 800a3be:	b570      	push	{r4, r5, r6, lr}
 800a3c0:	2301      	movs	r3, #1
 800a3c2:	7203      	strb	r3, [r0, #8]
 800a3c4:	4604      	mov	r4, r0
 800a3c6:	6840      	ldr	r0, [r0, #4]
 800a3c8:	6803      	ldr	r3, [r0, #0]
 800a3ca:	699b      	ldr	r3, [r3, #24]
 800a3cc:	4798      	blx	r3
 800a3ce:	6803      	ldr	r3, [r0, #0]
 800a3d0:	2b40      	cmp	r3, #64	; 0x40
 800a3d2:	4605      	mov	r5, r0
 800a3d4:	d00c      	beq.n	800a3f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a3d6:	d810      	bhi.n	800a3fa <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800a3d8:	2b04      	cmp	r3, #4
 800a3da:	d01d      	beq.n	800a418 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800a3dc:	d804      	bhi.n	800a3e8 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800a3de:	2b01      	cmp	r3, #1
 800a3e0:	d006      	beq.n	800a3f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a3e2:	2b02      	cmp	r3, #2
 800a3e4:	d02c      	beq.n	800a440 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800a3e6:	bd70      	pop	{r4, r5, r6, pc}
 800a3e8:	2b08      	cmp	r3, #8
 800a3ea:	d01d      	beq.n	800a428 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800a3ec:	2b20      	cmp	r3, #32
 800a3ee:	d1fa      	bne.n	800a3e6 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800a3f0:	6823      	ldr	r3, [r4, #0]
 800a3f2:	4620      	mov	r0, r4
 800a3f4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a3f6:	4798      	blx	r3
 800a3f8:	e013      	b.n	800a422 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800a3fa:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800a3fe:	d0f7      	beq.n	800a3f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a400:	d804      	bhi.n	800a40c <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800a402:	2b80      	cmp	r3, #128	; 0x80
 800a404:	d0f4      	beq.n	800a3f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a406:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800a40a:	e7f0      	b.n	800a3ee <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800a40c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800a410:	d0ee      	beq.n	800a3f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800a412:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800a416:	e7e5      	b.n	800a3e4 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800a418:	6823      	ldr	r3, [r4, #0]
 800a41a:	7f01      	ldrb	r1, [r0, #28]
 800a41c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a41e:	4620      	mov	r0, r4
 800a420:	4798      	blx	r3
 800a422:	6823      	ldr	r3, [r4, #0]
 800a424:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a426:	e006      	b.n	800a436 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800a428:	6823      	ldr	r3, [r4, #0]
 800a42a:	7f01      	ldrb	r1, [r0, #28]
 800a42c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a42e:	4620      	mov	r0, r4
 800a430:	4798      	blx	r3
 800a432:	6823      	ldr	r3, [r4, #0]
 800a434:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a436:	4629      	mov	r1, r5
 800a438:	4620      	mov	r0, r4
 800a43a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a43e:	4718      	bx	r3
 800a440:	6823      	ldr	r3, [r4, #0]
 800a442:	4620      	mov	r0, r4
 800a444:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a446:	4798      	blx	r3
 800a448:	e7f3      	b.n	800a432 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800a44a <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800a44a:	4770      	bx	lr

0800a44c <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800a44c:	4770      	bx	lr

0800a44e <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800a44e:	4770      	bx	lr

0800a450 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800a450:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800a454:	1ad2      	subs	r2, r2, r3
 800a456:	2a00      	cmp	r2, #0
 800a458:	b510      	push	{r4, lr}
 800a45a:	bfdc      	itt	le
 800a45c:	6884      	ldrle	r4, [r0, #8]
 800a45e:	1912      	addle	r2, r2, r4
 800a460:	2a01      	cmp	r2, #1
 800a462:	dd16      	ble.n	800a492 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800a464:	6842      	ldr	r2, [r0, #4]
 800a466:	2424      	movs	r4, #36	; 0x24
 800a468:	fb04 2303 	mla	r3, r4, r3, r2
 800a46c:	f101 0220 	add.w	r2, r1, #32
 800a470:	f851 4b04 	ldr.w	r4, [r1], #4
 800a474:	f843 4b04 	str.w	r4, [r3], #4
 800a478:	4291      	cmp	r1, r2
 800a47a:	d1f9      	bne.n	800a470 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800a47c:	780a      	ldrb	r2, [r1, #0]
 800a47e:	701a      	strb	r2, [r3, #0]
 800a480:	68c3      	ldr	r3, [r0, #12]
 800a482:	6882      	ldr	r2, [r0, #8]
 800a484:	f3bf 8f5b 	dmb	ish
 800a488:	3301      	adds	r3, #1
 800a48a:	429a      	cmp	r2, r3
 800a48c:	bfd8      	it	le
 800a48e:	1a9b      	suble	r3, r3, r2
 800a490:	60c3      	str	r3, [r0, #12]
 800a492:	bd10      	pop	{r4, pc}

0800a494 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800a494:	6903      	ldr	r3, [r0, #16]
 800a496:	6882      	ldr	r2, [r0, #8]
 800a498:	f3bf 8f5b 	dmb	ish
 800a49c:	3301      	adds	r3, #1
 800a49e:	429a      	cmp	r2, r3
 800a4a0:	bfd8      	it	le
 800a4a2:	1a9b      	suble	r3, r3, r2
 800a4a4:	6103      	str	r3, [r0, #16]
 800a4a6:	4770      	bx	lr

0800a4a8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800a4a8:	b570      	push	{r4, r5, r6, lr}
 800a4aa:	4604      	mov	r4, r0
 800a4ac:	460e      	mov	r6, r1
 800a4ae:	6860      	ldr	r0, [r4, #4]
 800a4b0:	6803      	ldr	r3, [r0, #0]
 800a4b2:	685b      	ldr	r3, [r3, #4]
 800a4b4:	4798      	blx	r3
 800a4b6:	2800      	cmp	r0, #0
 800a4b8:	d1f9      	bne.n	800a4ae <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800a4ba:	4d0d      	ldr	r5, [pc, #52]	; (800a4f0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800a4bc:	6828      	ldr	r0, [r5, #0]
 800a4be:	6803      	ldr	r3, [r0, #0]
 800a4c0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800a4c2:	4798      	blx	r3
 800a4c4:	f7f6 faf0 	bl	8000aa8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800a4c8:	6828      	ldr	r0, [r5, #0]
 800a4ca:	2101      	movs	r1, #1
 800a4cc:	f7ff ff2c 	bl	800a328 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800a4d0:	6860      	ldr	r0, [r4, #4]
 800a4d2:	6803      	ldr	r3, [r0, #0]
 800a4d4:	4631      	mov	r1, r6
 800a4d6:	689b      	ldr	r3, [r3, #8]
 800a4d8:	4798      	blx	r3
 800a4da:	6823      	ldr	r3, [r4, #0]
 800a4dc:	4620      	mov	r0, r4
 800a4de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a4e0:	4798      	blx	r3
 800a4e2:	6828      	ldr	r0, [r5, #0]
 800a4e4:	6803      	ldr	r3, [r0, #0]
 800a4e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a4ea:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800a4ec:	4718      	bx	r3
 800a4ee:	bf00      	nop
 800a4f0:	20012670 	.word	0x20012670

0800a4f4 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800a4f4:	b508      	push	{r3, lr}
 800a4f6:	f7f6 fac9 	bl	8000a8c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800a4fa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800a4fe:	f7f6 bacd 	b.w	8000a9c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800a502 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800a502:	b510      	push	{r4, lr}
 800a504:	2114      	movs	r1, #20
 800a506:	4604      	mov	r4, r0
 800a508:	f011 f9ba 	bl	801b880 <_ZdlPvj>
 800a50c:	4620      	mov	r0, r4
 800a50e:	bd10      	pop	{r4, pc}

0800a510 <_ZN8touchgfx13DMA_Interface5startEv>:
 800a510:	b510      	push	{r4, lr}
 800a512:	4604      	mov	r4, r0
 800a514:	6840      	ldr	r0, [r0, #4]
 800a516:	6803      	ldr	r3, [r0, #0]
 800a518:	681b      	ldr	r3, [r3, #0]
 800a51a:	4798      	blx	r3
 800a51c:	b948      	cbnz	r0, 800a532 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a51e:	7a63      	ldrb	r3, [r4, #9]
 800a520:	b13b      	cbz	r3, 800a532 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a522:	7a23      	ldrb	r3, [r4, #8]
 800a524:	b92b      	cbnz	r3, 800a532 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800a526:	6823      	ldr	r3, [r4, #0]
 800a528:	4620      	mov	r0, r4
 800a52a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a52c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a530:	4718      	bx	r3
 800a532:	bd10      	pop	{r4, pc}

0800a534 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800a534:	b570      	push	{r4, r5, r6, lr}
 800a536:	4604      	mov	r4, r0
 800a538:	6840      	ldr	r0, [r0, #4]
 800a53a:	6803      	ldr	r3, [r0, #0]
 800a53c:	681b      	ldr	r3, [r3, #0]
 800a53e:	4798      	blx	r3
 800a540:	4605      	mov	r5, r0
 800a542:	b930      	cbnz	r0, 800a552 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a544:	7a23      	ldrb	r3, [r4, #8]
 800a546:	b123      	cbz	r3, 800a552 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800a548:	6860      	ldr	r0, [r4, #4]
 800a54a:	6803      	ldr	r3, [r0, #0]
 800a54c:	695b      	ldr	r3, [r3, #20]
 800a54e:	4798      	blx	r3
 800a550:	7225      	strb	r5, [r4, #8]
 800a552:	6860      	ldr	r0, [r4, #4]
 800a554:	6803      	ldr	r3, [r0, #0]
 800a556:	681b      	ldr	r3, [r3, #0]
 800a558:	4798      	blx	r3
 800a55a:	b928      	cbnz	r0, 800a568 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800a55c:	6823      	ldr	r3, [r4, #0]
 800a55e:	4620      	mov	r0, r4
 800a560:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a562:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a566:	4718      	bx	r3
 800a568:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a56c:	f7f6 baa4 	b.w	8000ab8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800a570 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800a570:	b510      	push	{r4, lr}
 800a572:	4c04      	ldr	r4, [pc, #16]	; (800a584 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800a574:	6082      	str	r2, [r0, #8]
 800a576:	2200      	movs	r2, #0
 800a578:	e9c0 4100 	strd	r4, r1, [r0]
 800a57c:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800a580:	bd10      	pop	{r4, pc}
 800a582:	bf00      	nop
 800a584:	0801dd8c 	.word	0x0801dd8c

0800a588 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800a588:	6840      	ldr	r0, [r0, #4]
 800a58a:	6803      	ldr	r3, [r0, #0]
 800a58c:	681b      	ldr	r3, [r3, #0]
 800a58e:	4718      	bx	r3

0800a590 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800a590:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800a594:	4770      	bx	lr

0800a596 <_ZN8touchgfx12ToggleButtonD1Ev>:
 800a596:	4770      	bx	lr

0800a598 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800a598:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800a59c:	b133      	cbz	r3, 800a5ac <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800a59e:	790b      	ldrb	r3, [r1, #4]
 800a5a0:	2b01      	cmp	r3, #1
 800a5a2:	bf01      	itttt	eq
 800a5a4:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 800a5a6:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 800a5a8:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 800a5aa:	8603      	strheq	r3, [r0, #48]	; 0x30
 800a5ac:	f011 b944 	b.w	801b838 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800a5b0 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 800a5b0:	8813      	ldrh	r3, [r2, #0]
 800a5b2:	8683      	strh	r3, [r0, #52]	; 0x34
 800a5b4:	f000 bc06 	b.w	800adc4 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

0800a5b8 <_ZN8touchgfx12ToggleButtonD0Ev>:
 800a5b8:	b510      	push	{r4, lr}
 800a5ba:	2138      	movs	r1, #56	; 0x38
 800a5bc:	4604      	mov	r4, r0
 800a5be:	f011 f95f 	bl	801b880 <_ZdlPvj>
 800a5c2:	4620      	mov	r0, r4
 800a5c4:	bd10      	pop	{r4, pc}

0800a5c6 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800a5c6:	b510      	push	{r4, lr}
 800a5c8:	4604      	mov	r4, r0
 800a5ca:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800a5cc:	b150      	cbz	r0, 800a5e4 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800a5ce:	6803      	ldr	r3, [r0, #0]
 800a5d0:	68db      	ldr	r3, [r3, #12]
 800a5d2:	4798      	blx	r3
 800a5d4:	b130      	cbz	r0, 800a5e4 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800a5d6:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800a5d8:	6803      	ldr	r3, [r0, #0]
 800a5da:	4621      	mov	r1, r4
 800a5dc:	689b      	ldr	r3, [r3, #8]
 800a5de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a5e2:	4718      	bx	r3
 800a5e4:	bd10      	pop	{r4, pc}

0800a5e6 <_ZNK8touchgfx6Button17invalidateContentEv>:
 800a5e6:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800a5ea:	b12a      	cbz	r2, 800a5f8 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800a5ec:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800a5f0:	b112      	cbz	r2, 800a5f8 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800a5f2:	6803      	ldr	r3, [r0, #0]
 800a5f4:	695b      	ldr	r3, [r3, #20]
 800a5f6:	4718      	bx	r3
 800a5f8:	4770      	bx	lr

0800a5fa <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800a5fa:	2000      	movs	r0, #0
 800a5fc:	4770      	bx	lr
	...

0800a600 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800a600:	4b07      	ldr	r3, [pc, #28]	; (800a620 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800a602:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800a604:	881b      	ldrh	r3, [r3, #0]
 800a606:	4293      	cmp	r3, r2
 800a608:	bf81      	itttt	hi
 800a60a:	4b06      	ldrhi	r3, [pc, #24]	; (800a624 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800a60c:	681b      	ldrhi	r3, [r3, #0]
 800a60e:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800a612:	7858      	ldrbhi	r0, [r3, #1]
 800a614:	bf8c      	ite	hi
 800a616:	f000 0003 	andhi.w	r0, r0, #3
 800a61a:	2000      	movls	r0, #0
 800a61c:	4770      	bx	lr
 800a61e:	bf00      	nop
 800a620:	200126c4 	.word	0x200126c4
 800a624:	200126c0 	.word	0x200126c0

0800a628 <_ZN8touchgfx8TextAreaD1Ev>:
 800a628:	4770      	bx	lr
	...

0800a62c <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800a62c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a630:	4b10      	ldr	r3, [pc, #64]	; (800a674 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800a632:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800a634:	881b      	ldrh	r3, [r3, #0]
 800a636:	428b      	cmp	r3, r1
 800a638:	4604      	mov	r4, r0
 800a63a:	d918      	bls.n	800a66e <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800a63c:	6803      	ldr	r3, [r0, #0]
 800a63e:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800a640:	4b0d      	ldr	r3, [pc, #52]	; (800a678 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800a642:	6818      	ldr	r0, [r3, #0]
 800a644:	f7f8 fb20 	bl	8002c88 <_ZNK8touchgfx5Texts7getTextEt>
 800a648:	6823      	ldr	r3, [r4, #0]
 800a64a:	4606      	mov	r6, r0
 800a64c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800a64e:	4620      	mov	r0, r4
 800a650:	4798      	blx	r3
 800a652:	6823      	ldr	r3, [r4, #0]
 800a654:	4607      	mov	r7, r0
 800a656:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800a65a:	4620      	mov	r0, r4
 800a65c:	4798      	blx	r3
 800a65e:	463a      	mov	r2, r7
 800a660:	4603      	mov	r3, r0
 800a662:	4631      	mov	r1, r6
 800a664:	4620      	mov	r0, r4
 800a666:	46ac      	mov	ip, r5
 800a668:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a66c:	4760      	bx	ip
 800a66e:	2000      	movs	r0, #0
 800a670:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a674:	200126c4 	.word	0x200126c4
 800a678:	200126cc 	.word	0x200126cc

0800a67c <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800a67c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800a680:	4b17      	ldr	r3, [pc, #92]	; (800a6e0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800a682:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800a684:	881b      	ldrh	r3, [r3, #0]
 800a686:	428b      	cmp	r3, r1
 800a688:	4604      	mov	r4, r0
 800a68a:	d926      	bls.n	800a6da <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800a68c:	4b15      	ldr	r3, [pc, #84]	; (800a6e4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800a68e:	681b      	ldr	r3, [r3, #0]
 800a690:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800a694:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800a698:	4b13      	ldr	r3, [pc, #76]	; (800a6e8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800a69a:	7855      	ldrb	r5, [r2, #1]
 800a69c:	681b      	ldr	r3, [r3, #0]
 800a69e:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800a6a2:	6833      	ldr	r3, [r6, #0]
 800a6a4:	69df      	ldr	r7, [r3, #28]
 800a6a6:	4b11      	ldr	r3, [pc, #68]	; (800a6ec <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800a6a8:	6818      	ldr	r0, [r3, #0]
 800a6aa:	f7f8 faed 	bl	8002c88 <_ZNK8touchgfx5Texts7getTextEt>
 800a6ae:	6823      	ldr	r3, [r4, #0]
 800a6b0:	4680      	mov	r8, r0
 800a6b2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800a6b4:	4620      	mov	r0, r4
 800a6b6:	4798      	blx	r3
 800a6b8:	6823      	ldr	r3, [r4, #0]
 800a6ba:	4681      	mov	r9, r0
 800a6bc:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800a6c0:	4620      	mov	r0, r4
 800a6c2:	4798      	blx	r3
 800a6c4:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800a6c8:	9000      	str	r0, [sp, #0]
 800a6ca:	464b      	mov	r3, r9
 800a6cc:	4642      	mov	r2, r8
 800a6ce:	4629      	mov	r1, r5
 800a6d0:	4630      	mov	r0, r6
 800a6d2:	47b8      	blx	r7
 800a6d4:	b003      	add	sp, #12
 800a6d6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a6da:	2000      	movs	r0, #0
 800a6dc:	e7fa      	b.n	800a6d4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800a6de:	bf00      	nop
 800a6e0:	200126c4 	.word	0x200126c4
 800a6e4:	200126c0 	.word	0x200126c0
 800a6e8:	200126c8 	.word	0x200126c8
 800a6ec:	200126cc 	.word	0x200126cc

0800a6f0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800a6f0:	b40e      	push	{r1, r2, r3}
 800a6f2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a6f6:	4b2f      	ldr	r3, [pc, #188]	; (800a7b4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800a6f8:	881a      	ldrh	r2, [r3, #0]
 800a6fa:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800a6fc:	429a      	cmp	r2, r3
 800a6fe:	b09d      	sub	sp, #116	; 0x74
 800a700:	4604      	mov	r4, r0
 800a702:	d954      	bls.n	800a7ae <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800a704:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800a7b8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800a708:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800a7bc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800a70c:	aa26      	add	r2, sp, #152	; 0x98
 800a70e:	9202      	str	r2, [sp, #8]
 800a710:	f8d9 2000 	ldr.w	r2, [r9]
 800a714:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800a718:	f8d8 3000 	ldr.w	r3, [r8]
 800a71c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800a720:	682b      	ldr	r3, [r5, #0]
 800a722:	4628      	mov	r0, r5
 800a724:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a726:	4798      	blx	r3
 800a728:	b207      	sxth	r7, r0
 800a72a:	4606      	mov	r6, r0
 800a72c:	a803      	add	r0, sp, #12
 800a72e:	f003 ff1d 	bl	800e56c <_ZN8touchgfx12TextProviderC1Ev>
 800a732:	682b      	ldr	r3, [r5, #0]
 800a734:	4628      	mov	r0, r5
 800a736:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800a738:	4798      	blx	r3
 800a73a:	682b      	ldr	r3, [r5, #0]
 800a73c:	4682      	mov	sl, r0
 800a73e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800a740:	4628      	mov	r0, r5
 800a742:	4798      	blx	r3
 800a744:	4653      	mov	r3, sl
 800a746:	9000      	str	r0, [sp, #0]
 800a748:	9a02      	ldr	r2, [sp, #8]
 800a74a:	9925      	ldr	r1, [sp, #148]	; 0x94
 800a74c:	a803      	add	r0, sp, #12
 800a74e:	f003 ff68 	bl	800e622 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800a752:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800a754:	f8d9 3000 	ldr.w	r3, [r9]
 800a758:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800a75c:	8925      	ldrh	r5, [r4, #8]
 800a75e:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800a762:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800a766:	eba5 050c 	sub.w	r5, r5, ip
 800a76a:	784a      	ldrb	r2, [r1, #1]
 800a76c:	f8d8 3000 	ldr.w	r3, [r8]
 800a770:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800a774:	b22d      	sxth	r5, r5
 800a776:	9500      	str	r5, [sp, #0]
 800a778:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800a77c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800a780:	a803      	add	r0, sp, #12
 800a782:	f001 fde3 	bl	800c34c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800a786:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800a78a:	18b9      	adds	r1, r7, r2
 800a78c:	2900      	cmp	r1, #0
 800a78e:	b203      	sxth	r3, r0
 800a790:	dd0b      	ble.n	800a7aa <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800a792:	3b01      	subs	r3, #1
 800a794:	fb13 f302 	smulbb	r3, r3, r2
 800a798:	fb16 3300 	smlabb	r3, r6, r0, r3
 800a79c:	b21f      	sxth	r7, r3
 800a79e:	4638      	mov	r0, r7
 800a7a0:	b01d      	add	sp, #116	; 0x74
 800a7a2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a7a6:	b003      	add	sp, #12
 800a7a8:	4770      	bx	lr
 800a7aa:	2b00      	cmp	r3, #0
 800a7ac:	dcf7      	bgt.n	800a79e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800a7ae:	2700      	movs	r7, #0
 800a7b0:	e7f5      	b.n	800a79e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800a7b2:	bf00      	nop
 800a7b4:	200126c4 	.word	0x200126c4
 800a7b8:	200126c0 	.word	0x200126c0
 800a7bc:	200126c8 	.word	0x200126c8

0800a7c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800a7c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a7c4:	4bbc      	ldr	r3, [pc, #752]	; (800aab8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800a7c6:	460c      	mov	r4, r1
 800a7c8:	881b      	ldrh	r3, [r3, #0]
 800a7ca:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800a7cc:	428b      	cmp	r3, r1
 800a7ce:	b0a9      	sub	sp, #164	; 0xa4
 800a7d0:	4680      	mov	r8, r0
 800a7d2:	d809      	bhi.n	800a7e8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800a7d4:	2300      	movs	r3, #0
 800a7d6:	f04f 32ff 	mov.w	r2, #4294967295
 800a7da:	e9c0 3200 	strd	r3, r2, [r0]
 800a7de:	6083      	str	r3, [r0, #8]
 800a7e0:	4640      	mov	r0, r8
 800a7e2:	b029      	add	sp, #164	; 0xa4
 800a7e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a7e8:	4eb4      	ldr	r6, [pc, #720]	; (800aabc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 800a7ea:	6833      	ldr	r3, [r6, #0]
 800a7ec:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800a7f0:	4bb3      	ldr	r3, [pc, #716]	; (800aac0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 800a7f2:	681b      	ldr	r3, [r3, #0]
 800a7f4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800a7f8:	4bb2      	ldr	r3, [pc, #712]	; (800aac4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800a7fa:	6818      	ldr	r0, [r3, #0]
 800a7fc:	f7f8 fa44 	bl	8002c88 <_ZNK8touchgfx5Texts7getTextEt>
 800a800:	682b      	ldr	r3, [r5, #0]
 800a802:	4681      	mov	r9, r0
 800a804:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a806:	4628      	mov	r0, r5
 800a808:	4798      	blx	r3
 800a80a:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 800a80c:	b203      	sxth	r3, r0
 800a80e:	4407      	add	r7, r0
 800a810:	9304      	str	r3, [sp, #16]
 800a812:	b2bb      	uxth	r3, r7
 800a814:	9303      	str	r3, [sp, #12]
 800a816:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800a81a:	4682      	mov	sl, r0
 800a81c:	a80f      	add	r0, sp, #60	; 0x3c
 800a81e:	2b00      	cmp	r3, #0
 800a820:	f040 80a6 	bne.w	800a970 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 800a824:	f003 fea2 	bl	800e56c <_ZN8touchgfx12TextProviderC1Ev>
 800a828:	682b      	ldr	r3, [r5, #0]
 800a82a:	4628      	mov	r0, r5
 800a82c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800a82e:	4798      	blx	r3
 800a830:	682b      	ldr	r3, [r5, #0]
 800a832:	4606      	mov	r6, r0
 800a834:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800a836:	4628      	mov	r0, r5
 800a838:	4798      	blx	r3
 800a83a:	6823      	ldr	r3, [r4, #0]
 800a83c:	4607      	mov	r7, r0
 800a83e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800a840:	4620      	mov	r0, r4
 800a842:	4798      	blx	r3
 800a844:	6823      	ldr	r3, [r4, #0]
 800a846:	4683      	mov	fp, r0
 800a848:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800a84c:	4620      	mov	r0, r4
 800a84e:	4798      	blx	r3
 800a850:	463b      	mov	r3, r7
 800a852:	e9cd b000 	strd	fp, r0, [sp]
 800a856:	4649      	mov	r1, r9
 800a858:	4632      	mov	r2, r6
 800a85a:	a80f      	add	r0, sp, #60	; 0x3c
 800a85c:	f003 fef6 	bl	800e64c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800a860:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800a864:	f8df b254 	ldr.w	fp, [pc, #596]	; 800aabc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800a868:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800a86c:	f04f 0600 	mov.w	r6, #0
 800a870:	bf0c      	ite	eq
 800a872:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 800a876:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 800a87a:	4637      	mov	r7, r6
 800a87c:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800a87e:	f8db 3000 	ldr.w	r3, [fp]
 800a882:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800a886:	4629      	mov	r1, r5
 800a888:	785b      	ldrb	r3, [r3, #1]
 800a88a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800a88e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800a892:	a80f      	add	r0, sp, #60	; 0x3c
 800a894:	f001 fa75 	bl	800bd82 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800a898:	9b03      	ldr	r3, [sp, #12]
 800a89a:	4286      	cmp	r6, r0
 800a89c:	bfb8      	it	lt
 800a89e:	4606      	movlt	r6, r0
 800a8a0:	3701      	adds	r7, #1
 800a8a2:	eba9 0903 	sub.w	r9, r9, r3
 800a8a6:	a80f      	add	r0, sp, #60	; 0x3c
 800a8a8:	b236      	sxth	r6, r6
 800a8aa:	b2bf      	uxth	r7, r7
 800a8ac:	fa0f f989 	sxth.w	r9, r9
 800a8b0:	f003 fe83 	bl	800e5ba <_ZN8touchgfx12TextProvider11endOfStringEv>
 800a8b4:	b918      	cbnz	r0, 800a8be <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800a8b6:	7a2b      	ldrb	r3, [r5, #8]
 800a8b8:	444b      	add	r3, r9
 800a8ba:	2b00      	cmp	r3, #0
 800a8bc:	dcde      	bgt.n	800a87c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 800a8be:	9b03      	ldr	r3, [sp, #12]
 800a8c0:	9a04      	ldr	r2, [sp, #16]
 800a8c2:	f895 9009 	ldrb.w	r9, [r5, #9]
 800a8c6:	fb13 f707 	smulbb	r7, r3, r7
 800a8ca:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800a8cc:	1aff      	subs	r7, r7, r3
 800a8ce:	b2bf      	uxth	r7, r7
 800a8d0:	b23b      	sxth	r3, r7
 800a8d2:	429a      	cmp	r2, r3
 800a8d4:	bfa8      	it	ge
 800a8d6:	4657      	movge	r7, sl
 800a8d8:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800a8dc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800a8e0:	6823      	ldr	r3, [r4, #0]
 800a8e2:	bf08      	it	eq
 800a8e4:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 800a8e8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800a8ea:	bf18      	it	ne
 800a8ec:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 800a8f0:	4620      	mov	r0, r4
 800a8f2:	4798      	blx	r3
 800a8f4:	444f      	add	r7, r9
 800a8f6:	fa1f f987 	uxth.w	r9, r7
 800a8fa:	2801      	cmp	r0, #1
 800a8fc:	fa0f f789 	sxth.w	r7, r9
 800a900:	b2b3      	uxth	r3, r6
 800a902:	f000 80e1 	beq.w	800aac8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 800a906:	2802      	cmp	r0, #2
 800a908:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 800a90c:	f000 80e2 	beq.w	800aad4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 800a910:	7aea      	ldrb	r2, [r5, #11]
 800a912:	7b2d      	ldrb	r5, [r5, #12]
 800a914:	b236      	sxth	r6, r6
 800a916:	1ab6      	subs	r6, r6, r2
 800a918:	442a      	add	r2, r5
 800a91a:	4413      	add	r3, r2
 800a91c:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800a920:	fa1f fa86 	uxth.w	sl, r6
 800a924:	b29b      	uxth	r3, r3
 800a926:	2a02      	cmp	r2, #2
 800a928:	fa0f fb8a 	sxth.w	fp, sl
 800a92c:	b21e      	sxth	r6, r3
 800a92e:	f000 80d5 	beq.w	800aadc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 800a932:	2a03      	cmp	r2, #3
 800a934:	f000 80dd 	beq.w	800aaf2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 800a938:	2a01      	cmp	r2, #1
 800a93a:	f040 80e5 	bne.w	800ab08 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 800a93e:	8925      	ldrh	r5, [r4, #8]
 800a940:	4633      	mov	r3, r6
 800a942:	eba5 0909 	sub.w	r9, r5, r9
 800a946:	463e      	mov	r6, r7
 800a948:	465d      	mov	r5, fp
 800a94a:	461f      	mov	r7, r3
 800a94c:	fa0f fb89 	sxth.w	fp, r9
 800a950:	4b5c      	ldr	r3, [pc, #368]	; (800aac4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800a952:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800a954:	6818      	ldr	r0, [r3, #0]
 800a956:	f7f8 f997 	bl	8002c88 <_ZNK8touchgfx5Texts7getTextEt>
 800a95a:	f8a8 b000 	strh.w	fp, [r8]
 800a95e:	f8a8 5002 	strh.w	r5, [r8, #2]
 800a962:	f8a8 6004 	strh.w	r6, [r8, #4]
 800a966:	f8a8 7006 	strh.w	r7, [r8, #6]
 800a96a:	f8c8 0008 	str.w	r0, [r8, #8]
 800a96e:	e737      	b.n	800a7e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800a970:	f003 fdfc 	bl	800e56c <_ZN8touchgfx12TextProviderC1Ev>
 800a974:	682b      	ldr	r3, [r5, #0]
 800a976:	4628      	mov	r0, r5
 800a978:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800a97a:	4798      	blx	r3
 800a97c:	682b      	ldr	r3, [r5, #0]
 800a97e:	4607      	mov	r7, r0
 800a980:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800a982:	4628      	mov	r0, r5
 800a984:	4798      	blx	r3
 800a986:	6823      	ldr	r3, [r4, #0]
 800a988:	4683      	mov	fp, r0
 800a98a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800a98c:	4620      	mov	r0, r4
 800a98e:	4798      	blx	r3
 800a990:	6822      	ldr	r2, [r4, #0]
 800a992:	9005      	str	r0, [sp, #20]
 800a994:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800a998:	4620      	mov	r0, r4
 800a99a:	4790      	blx	r2
 800a99c:	9b05      	ldr	r3, [sp, #20]
 800a99e:	9001      	str	r0, [sp, #4]
 800a9a0:	463a      	mov	r2, r7
 800a9a2:	4649      	mov	r1, r9
 800a9a4:	9300      	str	r3, [sp, #0]
 800a9a6:	a80f      	add	r0, sp, #60	; 0x3c
 800a9a8:	465b      	mov	r3, fp
 800a9aa:	f003 fe4f 	bl	800e64c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800a9ae:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800a9b2:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800a9b6:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800a9b8:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800a9bc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800a9c0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800a9c4:	bf0a      	itet	eq
 800a9c6:	464a      	moveq	r2, r9
 800a9c8:	461a      	movne	r2, r3
 800a9ca:	4699      	moveq	r9, r3
 800a9cc:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800a9d0:	1ad2      	subs	r2, r2, r3
 800a9d2:	6833      	ldr	r3, [r6, #0]
 800a9d4:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 800a9d8:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800a9dc:	af0f      	add	r7, sp, #60	; 0x3c
 800a9de:	7859      	ldrb	r1, [r3, #1]
 800a9e0:	9707      	str	r7, [sp, #28]
 800a9e2:	2300      	movs	r3, #0
 800a9e4:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800a9e8:	f8ad 3018 	strh.w	r3, [sp, #24]
 800a9ec:	f88d 1020 	strb.w	r1, [sp, #32]
 800a9f0:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800a9f4:	9509      	str	r5, [sp, #36]	; 0x24
 800a9f6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800a9fa:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 800a9fe:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 800aa02:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800aa06:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800aa0a:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800aa0e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800aa12:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800aa16:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800aa1a:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800aa1e:	b350      	cbz	r0, 800aa76 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800aa20:	682b      	ldr	r3, [r5, #0]
 800aa22:	4628      	mov	r0, r5
 800aa24:	695b      	ldr	r3, [r3, #20]
 800aa26:	4798      	blx	r3
 800aa28:	4607      	mov	r7, r0
 800aa2a:	b320      	cbz	r0, 800aa76 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800aa2c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800aa2e:	6803      	ldr	r3, [r0, #0]
 800aa30:	4639      	mov	r1, r7
 800aa32:	68db      	ldr	r3, [r3, #12]
 800aa34:	4798      	blx	r3
 800aa36:	4606      	mov	r6, r0
 800aa38:	b1e8      	cbz	r0, 800aa76 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800aa3a:	7b43      	ldrb	r3, [r0, #13]
 800aa3c:	7a82      	ldrb	r2, [r0, #10]
 800aa3e:	005b      	lsls	r3, r3, #1
 800aa40:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800aa44:	4313      	orrs	r3, r2
 800aa46:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800aa4a:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 800aa4e:	2b06      	cmp	r3, #6
 800aa50:	d111      	bne.n	800aa76 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800aa52:	9809      	ldr	r0, [sp, #36]	; 0x24
 800aa54:	6803      	ldr	r3, [r0, #0]
 800aa56:	4632      	mov	r2, r6
 800aa58:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800aa5a:	4639      	mov	r1, r7
 800aa5c:	4798      	blx	r3
 800aa5e:	7b73      	ldrb	r3, [r6, #13]
 800aa60:	005b      	lsls	r3, r3, #1
 800aa62:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800aa66:	7ab3      	ldrb	r3, [r6, #10]
 800aa68:	4313      	orrs	r3, r2
 800aa6a:	4418      	add	r0, r3
 800aa6c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800aa70:	4418      	add	r0, r3
 800aa72:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 800aa76:	2600      	movs	r6, #0
 800aa78:	4637      	mov	r7, r6
 800aa7a:	a806      	add	r0, sp, #24
 800aa7c:	f001 fb62 	bl	800c144 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800aa80:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 800aa84:	9b03      	ldr	r3, [sp, #12]
 800aa86:	4286      	cmp	r6, r0
 800aa88:	eba9 0903 	sub.w	r9, r9, r3
 800aa8c:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800aa90:	bfb8      	it	lt
 800aa92:	4606      	movlt	r6, r0
 800aa94:	3701      	adds	r7, #1
 800aa96:	b236      	sxth	r6, r6
 800aa98:	b2bf      	uxth	r7, r7
 800aa9a:	fa0f f989 	sxth.w	r9, r9
 800aa9e:	2b00      	cmp	r3, #0
 800aaa0:	f43f af0d 	beq.w	800a8be <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800aaa4:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 800aaa8:	2b00      	cmp	r3, #0
 800aaaa:	f47f af08 	bne.w	800a8be <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800aaae:	7a2b      	ldrb	r3, [r5, #8]
 800aab0:	444b      	add	r3, r9
 800aab2:	2b00      	cmp	r3, #0
 800aab4:	dce1      	bgt.n	800aa7a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 800aab6:	e702      	b.n	800a8be <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800aab8:	200126c4 	.word	0x200126c4
 800aabc:	200126c0 	.word	0x200126c0
 800aac0:	200126c8 	.word	0x200126c8
 800aac4:	200126cc 	.word	0x200126cc
 800aac8:	ebaa 0606 	sub.w	r6, sl, r6
 800aacc:	2002      	movs	r0, #2
 800aace:	fb96 f6f0 	sdiv	r6, r6, r0
 800aad2:	e71d      	b.n	800a910 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 800aad4:	441e      	add	r6, r3
 800aad6:	ebaa 0606 	sub.w	r6, sl, r6
 800aada:	e719      	b.n	800a910 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 800aadc:	8925      	ldrh	r5, [r4, #8]
 800aade:	1aed      	subs	r5, r5, r3
 800aae0:	eba5 050a 	sub.w	r5, r5, sl
 800aae4:	fa0f fb85 	sxth.w	fp, r5
 800aae8:	8965      	ldrh	r5, [r4, #10]
 800aaea:	eba5 0509 	sub.w	r5, r5, r9
 800aaee:	b22d      	sxth	r5, r5
 800aaf0:	e72e      	b.n	800a950 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800aaf2:	8965      	ldrh	r5, [r4, #10]
 800aaf4:	1aed      	subs	r5, r5, r3
 800aaf6:	eba5 050a 	sub.w	r5, r5, sl
 800aafa:	4633      	mov	r3, r6
 800aafc:	b22d      	sxth	r5, r5
 800aafe:	463e      	mov	r6, r7
 800ab00:	f04f 0b00 	mov.w	fp, #0
 800ab04:	461f      	mov	r7, r3
 800ab06:	e723      	b.n	800a950 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800ab08:	2500      	movs	r5, #0
 800ab0a:	e721      	b.n	800a950 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

0800ab0c <_ZN8touchgfx8TextAreaD0Ev>:
 800ab0c:	b510      	push	{r4, lr}
 800ab0e:	2148      	movs	r1, #72	; 0x48
 800ab10:	4604      	mov	r4, r0
 800ab12:	f010 feb5 	bl	801b880 <_ZdlPvj>
 800ab16:	4620      	mov	r0, r4
 800ab18:	bd10      	pop	{r4, pc}
	...

0800ab1c <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800ab1c:	b513      	push	{r0, r1, r4, lr}
 800ab1e:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800ab22:	4604      	mov	r4, r0
 800ab24:	b1fb      	cbz	r3, 800ab66 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800ab26:	4b16      	ldr	r3, [pc, #88]	; (800ab80 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800ab28:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800ab2a:	881b      	ldrh	r3, [r3, #0]
 800ab2c:	428b      	cmp	r3, r1
 800ab2e:	d91a      	bls.n	800ab66 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800ab30:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800ab34:	2b00      	cmp	r3, #0
 800ab36:	dd16      	ble.n	800ab66 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800ab38:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800ab3c:	2b00      	cmp	r3, #0
 800ab3e:	dd12      	ble.n	800ab66 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800ab40:	4b10      	ldr	r3, [pc, #64]	; (800ab84 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800ab42:	6818      	ldr	r0, [r3, #0]
 800ab44:	f7f8 f8a0 	bl	8002c88 <_ZNK8touchgfx5Texts7getTextEt>
 800ab48:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800ab4c:	6822      	ldr	r2, [r4, #0]
 800ab4e:	2b00      	cmp	r3, #0
 800ab50:	db06      	blt.n	800ab60 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800ab52:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800ab56:	2b00      	cmp	r3, #0
 800ab58:	db02      	blt.n	800ab60 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800ab5a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800ab5c:	4298      	cmp	r0, r3
 800ab5e:	d004      	beq.n	800ab6a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800ab60:	6953      	ldr	r3, [r2, #20]
 800ab62:	4620      	mov	r0, r4
 800ab64:	4798      	blx	r3
 800ab66:	b002      	add	sp, #8
 800ab68:	bd10      	pop	{r4, pc}
 800ab6a:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800ab6e:	c903      	ldmia	r1, {r0, r1}
 800ab70:	466b      	mov	r3, sp
 800ab72:	e883 0003 	stmia.w	r3, {r0, r1}
 800ab76:	6912      	ldr	r2, [r2, #16]
 800ab78:	4619      	mov	r1, r3
 800ab7a:	4620      	mov	r0, r4
 800ab7c:	4790      	blx	r2
 800ab7e:	e7f2      	b.n	800ab66 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800ab80:	200126c4 	.word	0x200126c4
 800ab84:	200126cc 	.word	0x200126cc

0800ab88 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800ab88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ab8c:	4b44      	ldr	r3, [pc, #272]	; (800aca0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800ab8e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800ab90:	881b      	ldrh	r3, [r3, #0]
 800ab92:	4293      	cmp	r3, r2
 800ab94:	b08e      	sub	sp, #56	; 0x38
 800ab96:	4604      	mov	r4, r0
 800ab98:	d97e      	bls.n	800ac98 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800ab9a:	6808      	ldr	r0, [r1, #0]
 800ab9c:	4d41      	ldr	r5, [pc, #260]	; (800aca4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800ab9e:	6849      	ldr	r1, [r1, #4]
 800aba0:	ab05      	add	r3, sp, #20
 800aba2:	c303      	stmia	r3!, {r0, r1}
 800aba4:	4611      	mov	r1, r2
 800aba6:	6828      	ldr	r0, [r5, #0]
 800aba8:	f7f8 f86e 	bl	8002c88 <_ZNK8touchgfx5Texts7getTextEt>
 800abac:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800abb0:	2b00      	cmp	r3, #0
 800abb2:	db11      	blt.n	800abd8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800abb4:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800abb8:	2b00      	cmp	r3, #0
 800abba:	db0d      	blt.n	800abd8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800abbc:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800abbe:	4298      	cmp	r0, r3
 800abc0:	d10a      	bne.n	800abd8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800abc2:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800abc6:	e892 0003 	ldmia.w	r2, {r0, r1}
 800abca:	ab09      	add	r3, sp, #36	; 0x24
 800abcc:	e883 0003 	stmia.w	r3, {r0, r1}
 800abd0:	4619      	mov	r1, r3
 800abd2:	a805      	add	r0, sp, #20
 800abd4:	f7fe fce4 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 800abd8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800abdc:	2b00      	cmp	r3, #0
 800abde:	dd5b      	ble.n	800ac98 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800abe0:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800abe4:	2b00      	cmp	r3, #0
 800abe6:	dd57      	ble.n	800ac98 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800abe8:	4f2f      	ldr	r7, [pc, #188]	; (800aca8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800abea:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800abec:	683b      	ldr	r3, [r7, #0]
 800abee:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800abf2:	4b2e      	ldr	r3, [pc, #184]	; (800acac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800abf4:	681b      	ldr	r3, [r3, #0]
 800abf6:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800abfa:	2e00      	cmp	r6, #0
 800abfc:	d04c      	beq.n	800ac98 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800abfe:	6823      	ldr	r3, [r4, #0]
 800ac00:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 800ac04:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800ac06:	4620      	mov	r0, r4
 800ac08:	4798      	blx	r3
 800ac0a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800ac0c:	683b      	ldr	r3, [r7, #0]
 800ac0e:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 800ac12:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 800ac16:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 800ac1a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800ac1c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800ac20:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800ac24:	785b      	ldrb	r3, [r3, #1]
 800ac26:	9609      	str	r6, [sp, #36]	; 0x24
 800ac28:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800ac2c:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800ac30:	4b1f      	ldr	r3, [pc, #124]	; (800acb0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800ac32:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800ac36:	681b      	ldr	r3, [r3, #0]
 800ac38:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 800ac3c:	910b      	str	r1, [sp, #44]	; 0x2c
 800ac3e:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 800ac42:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 800ac46:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 800ac4a:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 800ac4e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ac52:	b10a      	cbz	r2, 800ac58 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800ac54:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800ac56:	b906      	cbnz	r6, 800ac5a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800ac58:	689e      	ldr	r6, [r3, #8]
 800ac5a:	af07      	add	r7, sp, #28
 800ac5c:	4621      	mov	r1, r4
 800ac5e:	4638      	mov	r0, r7
 800ac60:	f003 f8c6 	bl	800ddf0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ac64:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800ac66:	6828      	ldr	r0, [r5, #0]
 800ac68:	f7f8 f80e 	bl	8002c88 <_ZNK8touchgfx5Texts7getTextEt>
 800ac6c:	6823      	ldr	r3, [r4, #0]
 800ac6e:	4605      	mov	r5, r0
 800ac70:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800ac72:	4620      	mov	r0, r4
 800ac74:	4798      	blx	r3
 800ac76:	6823      	ldr	r3, [r4, #0]
 800ac78:	4680      	mov	r8, r0
 800ac7a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800ac7e:	4620      	mov	r0, r4
 800ac80:	4798      	blx	r3
 800ac82:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800ac86:	ab09      	add	r3, sp, #36	; 0x24
 800ac88:	9300      	str	r3, [sp, #0]
 800ac8a:	9501      	str	r5, [sp, #4]
 800ac8c:	ab05      	add	r3, sp, #20
 800ac8e:	e897 0006 	ldmia.w	r7, {r1, r2}
 800ac92:	4630      	mov	r0, r6
 800ac94:	f7f7 ffaa 	bl	8002bec <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800ac98:	b00e      	add	sp, #56	; 0x38
 800ac9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ac9e:	bf00      	nop
 800aca0:	200126c4 	.word	0x200126c4
 800aca4:	200126cc 	.word	0x200126cc
 800aca8:	200126c0 	.word	0x200126c0
 800acac:	200126c8 	.word	0x200126c8
 800acb0:	20012670 	.word	0x20012670

0800acb4 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800acb4:	b570      	push	{r4, r5, r6, lr}
 800acb6:	6803      	ldr	r3, [r0, #0]
 800acb8:	4604      	mov	r4, r0
 800acba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800acbc:	4615      	mov	r5, r2
 800acbe:	4798      	blx	r3
 800acc0:	6823      	ldr	r3, [r4, #0]
 800acc2:	4629      	mov	r1, r5
 800acc4:	4620      	mov	r0, r4
 800acc6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800acc8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800accc:	4718      	bx	r3
	...

0800acd0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800acd0:	b538      	push	{r3, r4, r5, lr}
 800acd2:	4b0e      	ldr	r3, [pc, #56]	; (800ad0c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800acd4:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800acd6:	881b      	ldrh	r3, [r3, #0]
 800acd8:	429a      	cmp	r2, r3
 800acda:	4604      	mov	r4, r0
 800acdc:	d214      	bcs.n	800ad08 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800acde:	6803      	ldr	r3, [r0, #0]
 800ace0:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800ace2:	4798      	blx	r3
 800ace4:	6823      	ldr	r3, [r4, #0]
 800ace6:	4605      	mov	r5, r0
 800ace8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800acea:	4620      	mov	r0, r4
 800acec:	4798      	blx	r3
 800acee:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800acf2:	b22d      	sxth	r5, r5
 800acf4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800acf8:	4601      	mov	r1, r0
 800acfa:	bf06      	itte	eq
 800acfc:	4602      	moveq	r2, r0
 800acfe:	4629      	moveq	r1, r5
 800ad00:	462a      	movne	r2, r5
 800ad02:	4620      	mov	r0, r4
 800ad04:	f7ff ffd6 	bl	800acb4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800ad08:	bd38      	pop	{r3, r4, r5, pc}
 800ad0a:	bf00      	nop
 800ad0c:	200126c4 	.word	0x200126c4

0800ad10 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800ad10:	b530      	push	{r4, r5, lr}
 800ad12:	888b      	ldrh	r3, [r1, #4]
 800ad14:	8583      	strh	r3, [r0, #44]	; 0x2c
 800ad16:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800ad1a:	b085      	sub	sp, #20
 800ad1c:	4604      	mov	r4, r0
 800ad1e:	b923      	cbnz	r3, 800ad2a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800ad20:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800ad24:	b90b      	cbnz	r3, 800ad2a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800ad26:	f7ff ffd3 	bl	800acd0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800ad2a:	6823      	ldr	r3, [r4, #0]
 800ad2c:	466d      	mov	r5, sp
 800ad2e:	4621      	mov	r1, r4
 800ad30:	4628      	mov	r0, r5
 800ad32:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800ad36:	4798      	blx	r3
 800ad38:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800ad3c:	343c      	adds	r4, #60	; 0x3c
 800ad3e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800ad42:	b005      	add	sp, #20
 800ad44:	bd30      	pop	{r4, r5, pc}

0800ad46 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800ad46:	2300      	movs	r3, #0
 800ad48:	8083      	strh	r3, [r0, #4]
 800ad4a:	80c3      	strh	r3, [r0, #6]
 800ad4c:	8003      	strh	r3, [r0, #0]
 800ad4e:	8043      	strh	r3, [r0, #2]
 800ad50:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800ad54:	2bff      	cmp	r3, #255	; 0xff
 800ad56:	bf01      	itttt	eq
 800ad58:	890b      	ldrheq	r3, [r1, #8]
 800ad5a:	8083      	strheq	r3, [r0, #4]
 800ad5c:	894b      	ldrheq	r3, [r1, #10]
 800ad5e:	80c3      	strheq	r3, [r0, #6]
 800ad60:	4770      	bx	lr
	...

0800ad64 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800ad64:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ad66:	4604      	mov	r4, r0
 800ad68:	6808      	ldr	r0, [r1, #0]
 800ad6a:	6849      	ldr	r1, [r1, #4]
 800ad6c:	466b      	mov	r3, sp
 800ad6e:	c303      	stmia	r3!, {r0, r1}
 800ad70:	6823      	ldr	r3, [r4, #0]
 800ad72:	4669      	mov	r1, sp
 800ad74:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ad76:	4620      	mov	r0, r4
 800ad78:	4798      	blx	r3
 800ad7a:	4b08      	ldr	r3, [pc, #32]	; (800ad9c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800ad7c:	681b      	ldr	r3, [r3, #0]
 800ad7e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ad82:	b10a      	cbz	r2, 800ad88 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800ad84:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800ad86:	b900      	cbnz	r0, 800ad8a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800ad88:	6898      	ldr	r0, [r3, #8]
 800ad8a:	6803      	ldr	r3, [r0, #0]
 800ad8c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800ad8e:	6a1d      	ldr	r5, [r3, #32]
 800ad90:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800ad94:	4669      	mov	r1, sp
 800ad96:	47a8      	blx	r5
 800ad98:	b003      	add	sp, #12
 800ad9a:	bd30      	pop	{r4, r5, pc}
 800ad9c:	20012670 	.word	0x20012670

0800ada0 <_ZN8touchgfx3BoxD1Ev>:
 800ada0:	4770      	bx	lr

0800ada2 <_ZN8touchgfx3BoxD0Ev>:
 800ada2:	b510      	push	{r4, lr}
 800ada4:	212c      	movs	r1, #44	; 0x2c
 800ada6:	4604      	mov	r4, r0
 800ada8:	f010 fd6a 	bl	801b880 <_ZdlPvj>
 800adac:	4620      	mov	r0, r4
 800adae:	bd10      	pop	{r4, pc}

0800adb0 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800adb0:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800adb4:	b12a      	cbz	r2, 800adc2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800adb6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800adba:	b112      	cbz	r2, 800adc2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800adbc:	6803      	ldr	r3, [r0, #0]
 800adbe:	695b      	ldr	r3, [r3, #20]
 800adc0:	4718      	bx	r3
 800adc2:	4770      	bx	lr

0800adc4 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800adc4:	b570      	push	{r4, r5, r6, lr}
 800adc6:	880b      	ldrh	r3, [r1, #0]
 800adc8:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800adca:	4605      	mov	r5, r0
 800adcc:	8813      	ldrh	r3, [r2, #0]
 800adce:	f825 3f30 	strh.w	r3, [r5, #48]!
 800add2:	4604      	mov	r4, r0
 800add4:	4628      	mov	r0, r5
 800add6:	f004 ff5b 	bl	800fc90 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800adda:	4606      	mov	r6, r0
 800addc:	4628      	mov	r0, r5
 800adde:	f004 ff8b 	bl	800fcf8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ade2:	6823      	ldr	r3, [r4, #0]
 800ade4:	4605      	mov	r5, r0
 800ade6:	4631      	mov	r1, r6
 800ade8:	4620      	mov	r0, r4
 800adea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800adec:	4798      	blx	r3
 800adee:	6823      	ldr	r3, [r4, #0]
 800adf0:	4629      	mov	r1, r5
 800adf2:	4620      	mov	r0, r4
 800adf4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800adf6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800adfa:	4718      	bx	r3

0800adfc <_ZNK8touchgfx6Button12getSolidRectEv>:
 800adfc:	b510      	push	{r4, lr}
 800adfe:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800ae02:	2bff      	cmp	r3, #255	; 0xff
 800ae04:	4604      	mov	r4, r0
 800ae06:	d006      	beq.n	800ae16 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800ae08:	2300      	movs	r3, #0
 800ae0a:	8003      	strh	r3, [r0, #0]
 800ae0c:	8043      	strh	r3, [r0, #2]
 800ae0e:	8083      	strh	r3, [r0, #4]
 800ae10:	80c3      	strh	r3, [r0, #6]
 800ae12:	4620      	mov	r0, r4
 800ae14:	bd10      	pop	{r4, pc}
 800ae16:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800ae1a:	b11b      	cbz	r3, 800ae24 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800ae1c:	3130      	adds	r1, #48	; 0x30
 800ae1e:	f004 ff9f 	bl	800fd60 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800ae22:	e7f6      	b.n	800ae12 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800ae24:	312e      	adds	r1, #46	; 0x2e
 800ae26:	e7fa      	b.n	800ae1e <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800ae28 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800ae28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ae2c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800ae30:	b08a      	sub	sp, #40	; 0x28
 800ae32:	4604      	mov	r4, r0
 800ae34:	4688      	mov	r8, r1
 800ae36:	2b00      	cmp	r3, #0
 800ae38:	d066      	beq.n	800af08 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800ae3a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800ae3c:	f8ad 3014 	strh.w	r3, [sp, #20]
 800ae40:	a805      	add	r0, sp, #20
 800ae42:	f004 ff25 	bl	800fc90 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ae46:	4607      	mov	r7, r0
 800ae48:	a805      	add	r0, sp, #20
 800ae4a:	f004 ff55 	bl	800fcf8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ae4e:	f9b8 6000 	ldrsh.w	r6, [r8]
 800ae52:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800ae56:	4432      	add	r2, r6
 800ae58:	b292      	uxth	r2, r2
 800ae5a:	2300      	movs	r3, #0
 800ae5c:	fa0f fc82 	sxth.w	ip, r2
 800ae60:	459c      	cmp	ip, r3
 800ae62:	9306      	str	r3, [sp, #24]
 800ae64:	dd52      	ble.n	800af0c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800ae66:	42b7      	cmp	r7, r6
 800ae68:	dd50      	ble.n	800af0c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800ae6a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800ae6e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800ae72:	442b      	add	r3, r5
 800ae74:	b29b      	uxth	r3, r3
 800ae76:	b219      	sxth	r1, r3
 800ae78:	2900      	cmp	r1, #0
 800ae7a:	dd47      	ble.n	800af0c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800ae7c:	42a8      	cmp	r0, r5
 800ae7e:	dd45      	ble.n	800af0c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800ae80:	4567      	cmp	r7, ip
 800ae82:	bfb8      	it	lt
 800ae84:	b2ba      	uxthlt	r2, r7
 800ae86:	4288      	cmp	r0, r1
 800ae88:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800ae8c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800ae90:	bfb8      	it	lt
 800ae92:	b283      	uxthlt	r3, r0
 800ae94:	1b92      	subs	r2, r2, r6
 800ae96:	1b5b      	subs	r3, r3, r5
 800ae98:	f8ad 201c 	strh.w	r2, [sp, #28]
 800ae9c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800aea0:	f8ad 6018 	strh.w	r6, [sp, #24]
 800aea4:	f8ad 501a 	strh.w	r5, [sp, #26]
 800aea8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800aeac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800aeb0:	429a      	cmp	r2, r3
 800aeb2:	d026      	beq.n	800af02 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800aeb4:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800aeb8:	2b00      	cmp	r3, #0
 800aeba:	dd22      	ble.n	800af02 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800aebc:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800aec0:	2b00      	cmp	r3, #0
 800aec2:	dd1e      	ble.n	800af02 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800aec4:	2300      	movs	r3, #0
 800aec6:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800aeca:	6823      	ldr	r3, [r4, #0]
 800aecc:	a908      	add	r1, sp, #32
 800aece:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800aed0:	4620      	mov	r0, r4
 800aed2:	4798      	blx	r3
 800aed4:	4b0f      	ldr	r3, [pc, #60]	; (800af14 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800aed6:	681b      	ldr	r3, [r3, #0]
 800aed8:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800aedc:	b10a      	cbz	r2, 800aee2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800aede:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800aee0:	b900      	cbnz	r0, 800aee4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800aee2:	6898      	ldr	r0, [r3, #8]
 800aee4:	6801      	ldr	r1, [r0, #0]
 800aee6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800aeea:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800aeee:	2501      	movs	r5, #1
 800aef0:	9502      	str	r5, [sp, #8]
 800aef2:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800aef6:	9401      	str	r4, [sp, #4]
 800aef8:	ac06      	add	r4, sp, #24
 800aefa:	9400      	str	r4, [sp, #0]
 800aefc:	688c      	ldr	r4, [r1, #8]
 800aefe:	a905      	add	r1, sp, #20
 800af00:	47a0      	blx	r4
 800af02:	b00a      	add	sp, #40	; 0x28
 800af04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800af08:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800af0a:	e797      	b.n	800ae3c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800af0c:	2300      	movs	r3, #0
 800af0e:	9307      	str	r3, [sp, #28]
 800af10:	e7ca      	b.n	800aea8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800af12:	bf00      	nop
 800af14:	20012670 	.word	0x20012670

0800af18 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800af18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800af1c:	4b2f      	ldr	r3, [pc, #188]	; (800afdc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800af1e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800af20:	881b      	ldrh	r3, [r3, #0]
 800af22:	4293      	cmp	r3, r2
 800af24:	b08d      	sub	sp, #52	; 0x34
 800af26:	4604      	mov	r4, r0
 800af28:	460f      	mov	r7, r1
 800af2a:	d954      	bls.n	800afd6 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800af2c:	4b2c      	ldr	r3, [pc, #176]	; (800afe0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800af2e:	6819      	ldr	r1, [r3, #0]
 800af30:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800af34:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800af38:	4a2a      	ldr	r2, [pc, #168]	; (800afe4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800af3a:	6812      	ldr	r2, [r2, #0]
 800af3c:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800af40:	2900      	cmp	r1, #0
 800af42:	d048      	beq.n	800afd6 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800af44:	785a      	ldrb	r2, [r3, #1]
 800af46:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800af4a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800af4e:	4b26      	ldr	r3, [pc, #152]	; (800afe8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800af50:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 800af54:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800af58:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800af5c:	6b26      	ldr	r6, [r4, #48]	; 0x30
 800af5e:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 800af62:	9107      	str	r1, [sp, #28]
 800af64:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800af68:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800af6c:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 800af70:	681a      	ldr	r2, [r3, #0]
 800af72:	f88d 8020 	strb.w	r8, [sp, #32]
 800af76:	f892 3076 	ldrb.w	r3, [r2, #118]	; 0x76
 800af7a:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800af7e:	9609      	str	r6, [sp, #36]	; 0x24
 800af80:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800af84:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 800af88:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 800af8c:	b10b      	cbz	r3, 800af92 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800af8e:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 800af90:	b905      	cbnz	r5, 800af94 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800af92:	6895      	ldr	r5, [r2, #8]
 800af94:	ae05      	add	r6, sp, #20
 800af96:	4621      	mov	r1, r4
 800af98:	4630      	mov	r0, r6
 800af9a:	f002 ff29 	bl	800ddf0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800af9e:	4b13      	ldr	r3, [pc, #76]	; (800afec <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800afa0:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800afa2:	6818      	ldr	r0, [r3, #0]
 800afa4:	f7f7 fe70 	bl	8002c88 <_ZNK8touchgfx5Texts7getTextEt>
 800afa8:	6823      	ldr	r3, [r4, #0]
 800afaa:	4680      	mov	r8, r0
 800afac:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800afae:	4620      	mov	r0, r4
 800afb0:	4798      	blx	r3
 800afb2:	6823      	ldr	r3, [r4, #0]
 800afb4:	4681      	mov	r9, r0
 800afb6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800afba:	4620      	mov	r0, r4
 800afbc:	4798      	blx	r3
 800afbe:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800afc2:	ab07      	add	r3, sp, #28
 800afc4:	9300      	str	r3, [sp, #0]
 800afc6:	f8cd 8004 	str.w	r8, [sp, #4]
 800afca:	463b      	mov	r3, r7
 800afcc:	e896 0006 	ldmia.w	r6, {r1, r2}
 800afd0:	4628      	mov	r0, r5
 800afd2:	f7f7 fe0b 	bl	8002bec <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800afd6:	b00d      	add	sp, #52	; 0x34
 800afd8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800afdc:	200126c4 	.word	0x200126c4
 800afe0:	200126c0 	.word	0x200126c0
 800afe4:	200126c8 	.word	0x200126c8
 800afe8:	20012670 	.word	0x20012670
 800afec:	200126cc 	.word	0x200126cc

0800aff0 <_ZN8touchgfx5ImageD1Ev>:
 800aff0:	4770      	bx	lr

0800aff2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800aff2:	b570      	push	{r4, r5, r6, lr}
 800aff4:	880b      	ldrh	r3, [r1, #0]
 800aff6:	84c3      	strh	r3, [r0, #38]	; 0x26
 800aff8:	4604      	mov	r4, r0
 800affa:	4608      	mov	r0, r1
 800affc:	460d      	mov	r5, r1
 800affe:	f004 fe47 	bl	800fc90 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b002:	4606      	mov	r6, r0
 800b004:	4628      	mov	r0, r5
 800b006:	f004 fe77 	bl	800fcf8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b00a:	6823      	ldr	r3, [r4, #0]
 800b00c:	4605      	mov	r5, r0
 800b00e:	4631      	mov	r1, r6
 800b010:	4620      	mov	r0, r4
 800b012:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b014:	4798      	blx	r3
 800b016:	6823      	ldr	r3, [r4, #0]
 800b018:	4629      	mov	r1, r5
 800b01a:	4620      	mov	r0, r4
 800b01c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b01e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b022:	4718      	bx	r3

0800b024 <_ZN8touchgfx5ImageD0Ev>:
 800b024:	b510      	push	{r4, lr}
 800b026:	212c      	movs	r1, #44	; 0x2c
 800b028:	4604      	mov	r4, r0
 800b02a:	f010 fc29 	bl	801b880 <_ZdlPvj>
 800b02e:	4620      	mov	r0, r4
 800b030:	bd10      	pop	{r4, pc}

0800b032 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800b032:	b510      	push	{r4, lr}
 800b034:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800b038:	2bff      	cmp	r3, #255	; 0xff
 800b03a:	4604      	mov	r4, r0
 800b03c:	d006      	beq.n	800b04c <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800b03e:	2300      	movs	r3, #0
 800b040:	8003      	strh	r3, [r0, #0]
 800b042:	8043      	strh	r3, [r0, #2]
 800b044:	8083      	strh	r3, [r0, #4]
 800b046:	80c3      	strh	r3, [r0, #6]
 800b048:	4620      	mov	r0, r4
 800b04a:	bd10      	pop	{r4, pc}
 800b04c:	3126      	adds	r1, #38	; 0x26
 800b04e:	f004 fe87 	bl	800fd60 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800b052:	e7f9      	b.n	800b048 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800b054 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800b054:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 800b058:	b12a      	cbz	r2, 800b066 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800b05a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800b05e:	b112      	cbz	r2, 800b066 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800b060:	6803      	ldr	r3, [r0, #0]
 800b062:	695b      	ldr	r3, [r3, #20]
 800b064:	4718      	bx	r3
 800b066:	4770      	bx	lr

0800b068 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800b068:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b06c:	4604      	mov	r4, r0
 800b06e:	b088      	sub	sp, #32
 800b070:	f854 3b26 	ldr.w	r3, [r4], #38
 800b074:	2500      	movs	r5, #0
 800b076:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b078:	460f      	mov	r7, r1
 800b07a:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800b07e:	a904      	add	r1, sp, #16
 800b080:	4606      	mov	r6, r0
 800b082:	4798      	blx	r3
 800b084:	4620      	mov	r0, r4
 800b086:	f004 fe03 	bl	800fc90 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b08a:	4680      	mov	r8, r0
 800b08c:	4620      	mov	r0, r4
 800b08e:	f004 fe33 	bl	800fcf8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b092:	9506      	str	r5, [sp, #24]
 800b094:	ad06      	add	r5, sp, #24
 800b096:	f8ad 001e 	strh.w	r0, [sp, #30]
 800b09a:	4639      	mov	r1, r7
 800b09c:	4628      	mov	r0, r5
 800b09e:	f8ad 801c 	strh.w	r8, [sp, #28]
 800b0a2:	f7fe fa7d 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 800b0a6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800b0aa:	2b00      	cmp	r3, #0
 800b0ac:	dd19      	ble.n	800b0e2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800b0ae:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800b0b2:	2b00      	cmp	r3, #0
 800b0b4:	dd15      	ble.n	800b0e2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800b0b6:	4b0c      	ldr	r3, [pc, #48]	; (800b0e8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800b0b8:	681b      	ldr	r3, [r3, #0]
 800b0ba:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800b0be:	b10a      	cbz	r2, 800b0c4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800b0c0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800b0c2:	b900      	cbnz	r0, 800b0c6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800b0c4:	6898      	ldr	r0, [r3, #8]
 800b0c6:	6801      	ldr	r1, [r0, #0]
 800b0c8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800b0cc:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800b0d0:	2701      	movs	r7, #1
 800b0d2:	9702      	str	r7, [sp, #8]
 800b0d4:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800b0d8:	e9cd 5600 	strd	r5, r6, [sp]
 800b0dc:	688d      	ldr	r5, [r1, #8]
 800b0de:	4621      	mov	r1, r4
 800b0e0:	47a8      	blx	r5
 800b0e2:	b008      	add	sp, #32
 800b0e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b0e8:	20012670 	.word	0x20012670

0800b0ec <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800b0ec:	4770      	bx	lr

0800b0ee <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800b0ee:	b510      	push	{r4, lr}
 800b0f0:	2148      	movs	r1, #72	; 0x48
 800b0f2:	4604      	mov	r4, r0
 800b0f4:	f010 fbc4 	bl	801b880 <_ZdlPvj>
 800b0f8:	4620      	mov	r0, r4
 800b0fa:	bd10      	pop	{r4, pc}

0800b0fc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800b0fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b100:	b08d      	sub	sp, #52	; 0x34
 800b102:	4604      	mov	r4, r0
 800b104:	460f      	mov	r7, r1
 800b106:	f7ff fe8f 	bl	800ae28 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800b10a:	4a55      	ldr	r2, [pc, #340]	; (800b260 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 800b10c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800b10e:	8812      	ldrh	r2, [r2, #0]
 800b110:	429a      	cmp	r2, r3
 800b112:	f240 8082 	bls.w	800b21a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800b116:	4d53      	ldr	r5, [pc, #332]	; (800b264 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 800b118:	682a      	ldr	r2, [r5, #0]
 800b11a:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800b11e:	4b52      	ldr	r3, [pc, #328]	; (800b268 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 800b120:	681b      	ldr	r3, [r3, #0]
 800b122:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800b126:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 800b12a:	2200      	movs	r2, #0
 800b12c:	e9cd 2203 	strd	r2, r2, [sp, #12]
 800b130:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800b134:	2a03      	cmp	r2, #3
 800b136:	d811      	bhi.n	800b15c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800b138:	e8df f002 	tbb	[pc, r2]
 800b13c:	89727902 	.word	0x89727902
 800b140:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800b144:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800b148:	1ad2      	subs	r2, r2, r3
 800b14a:	2002      	movs	r0, #2
 800b14c:	f8ad 1010 	strh.w	r1, [sp, #16]
 800b150:	fb92 f2f0 	sdiv	r2, r2, r0
 800b154:	f8ad 3012 	strh.w	r3, [sp, #18]
 800b158:	f8ad 200e 	strh.w	r2, [sp, #14]
 800b15c:	f10d 080c 	add.w	r8, sp, #12
 800b160:	e898 0003 	ldmia.w	r8, {r0, r1}
 800b164:	f10d 0914 	add.w	r9, sp, #20
 800b168:	e889 0003 	stmia.w	r9, {r0, r1}
 800b16c:	4639      	mov	r1, r7
 800b16e:	4648      	mov	r0, r9
 800b170:	f7fe fa16 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 800b174:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800b178:	2b00      	cmp	r3, #0
 800b17a:	dd4e      	ble.n	800b21a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800b17c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800b180:	2b00      	cmp	r3, #0
 800b182:	dd4a      	ble.n	800b21a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800b184:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800b188:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b18c:	1a9b      	subs	r3, r3, r2
 800b18e:	f8ad 3014 	strh.w	r3, [sp, #20]
 800b192:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800b196:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800b19a:	1a9b      	subs	r3, r3, r2
 800b19c:	f8ad 3016 	strh.w	r3, [sp, #22]
 800b1a0:	6823      	ldr	r3, [r4, #0]
 800b1a2:	4641      	mov	r1, r8
 800b1a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b1a6:	4620      	mov	r0, r4
 800b1a8:	4798      	blx	r3
 800b1aa:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800b1ae:	2b00      	cmp	r3, #0
 800b1b0:	d053      	beq.n	800b25a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 800b1b2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b1b4:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800b1b6:	682b      	ldr	r3, [r5, #0]
 800b1b8:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 800b1bc:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 800b1c0:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800b1c4:	785b      	ldrb	r3, [r3, #1]
 800b1c6:	9209      	str	r2, [sp, #36]	; 0x24
 800b1c8:	f3c3 0501 	ubfx	r5, r3, #0, #2
 800b1cc:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800b1d0:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800b1d4:	2300      	movs	r3, #0
 800b1d6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800b1da:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800b1de:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800b1e2:	4b22      	ldr	r3, [pc, #136]	; (800b26c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 800b1e4:	9607      	str	r6, [sp, #28]
 800b1e6:	681b      	ldr	r3, [r3, #0]
 800b1e8:	f88d 5020 	strb.w	r5, [sp, #32]
 800b1ec:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800b1f0:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b1f4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800b1f8:	b10a      	cbz	r2, 800b1fe <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 800b1fa:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800b1fc:	b904      	cbnz	r4, 800b200 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 800b1fe:	689c      	ldr	r4, [r3, #8]
 800b200:	4b1b      	ldr	r3, [pc, #108]	; (800b270 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 800b202:	6818      	ldr	r0, [r3, #0]
 800b204:	f7f7 fd40 	bl	8002c88 <_ZNK8touchgfx5Texts7getTextEt>
 800b208:	ab07      	add	r3, sp, #28
 800b20a:	9001      	str	r0, [sp, #4]
 800b20c:	9300      	str	r3, [sp, #0]
 800b20e:	e898 0006 	ldmia.w	r8, {r1, r2}
 800b212:	464b      	mov	r3, r9
 800b214:	4620      	mov	r0, r4
 800b216:	f7f7 fce9 	bl	8002bec <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800b21a:	b00d      	add	sp, #52	; 0x34
 800b21c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b220:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800b224:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800b228:	1ad2      	subs	r2, r2, r3
 800b22a:	3201      	adds	r2, #1
 800b22c:	e78d      	b.n	800b14a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 800b22e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800b232:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800b236:	1ad2      	subs	r2, r2, r3
 800b238:	3201      	adds	r2, #1
 800b23a:	2002      	movs	r0, #2
 800b23c:	f8ad 3010 	strh.w	r3, [sp, #16]
 800b240:	fb92 f2f0 	sdiv	r2, r2, r0
 800b244:	f8ad 1012 	strh.w	r1, [sp, #18]
 800b248:	f8ad 200c 	strh.w	r2, [sp, #12]
 800b24c:	e786      	b.n	800b15c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800b24e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800b252:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800b256:	1ad2      	subs	r2, r2, r3
 800b258:	e7ef      	b.n	800b23a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 800b25a:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800b25c:	e7aa      	b.n	800b1b4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 800b25e:	bf00      	nop
 800b260:	200126c4 	.word	0x200126c4
 800b264:	200126c0 	.word	0x200126c0
 800b268:	200126c8 	.word	0x200126c8
 800b26c:	20012670 	.word	0x20012670
 800b270:	200126cc 	.word	0x200126cc

0800b274 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800b274:	b510      	push	{r4, lr}
 800b276:	2101      	movs	r1, #1
 800b278:	4c13      	ldr	r4, [pc, #76]	; (800b2c8 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800b27a:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800b27e:	2200      	movs	r2, #0
 800b280:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800b284:	6004      	str	r4, [r0, #0]
 800b286:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800b28a:	4c10      	ldr	r4, [pc, #64]	; (800b2cc <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800b28c:	8082      	strh	r2, [r0, #4]
 800b28e:	80c2      	strh	r2, [r0, #6]
 800b290:	8102      	strh	r2, [r0, #8]
 800b292:	8142      	strh	r2, [r0, #10]
 800b294:	8182      	strh	r2, [r0, #12]
 800b296:	81c2      	strh	r2, [r0, #14]
 800b298:	8202      	strh	r2, [r0, #16]
 800b29a:	8242      	strh	r2, [r0, #18]
 800b29c:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800b2a0:	61c2      	str	r2, [r0, #28]
 800b2a2:	8402      	strh	r2, [r0, #32]
 800b2a4:	8442      	strh	r2, [r0, #34]	; 0x22
 800b2a6:	6282      	str	r2, [r0, #40]	; 0x28
 800b2a8:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800b2ac:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800b2ae:	8601      	strh	r1, [r0, #48]	; 0x30
 800b2b0:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800b2b4:	6344      	str	r4, [r0, #52]	; 0x34
 800b2b6:	8701      	strh	r1, [r0, #56]	; 0x38
 800b2b8:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800b2bc:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800b2c0:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 800b2c4:	bd10      	pop	{r4, pc}
 800b2c6:	bf00      	nop
 800b2c8:	0801df88 	.word	0x0801df88
 800b2cc:	0801d1a8 	.word	0x0801d1a8

0800b2d0 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800b2d0:	b510      	push	{r4, lr}
 800b2d2:	6803      	ldr	r3, [r0, #0]
 800b2d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b2d6:	460c      	mov	r4, r1
 800b2d8:	4798      	blx	r3
 800b2da:	1b03      	subs	r3, r0, r4
 800b2dc:	4258      	negs	r0, r3
 800b2de:	4158      	adcs	r0, r3
 800b2e0:	bd10      	pop	{r4, pc}
	...

0800b2e4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800b2e4:	4b01      	ldr	r3, [pc, #4]	; (800b2ec <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800b2e6:	6019      	str	r1, [r3, #0]
 800b2e8:	4770      	bx	lr
 800b2ea:	bf00      	nop
 800b2ec:	20012678 	.word	0x20012678

0800b2f0 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800b2f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b2f4:	4696      	mov	lr, r2
 800b2f6:	4605      	mov	r5, r0
 800b2f8:	4614      	mov	r4, r2
 800b2fa:	460e      	mov	r6, r1
 800b2fc:	461f      	mov	r7, r3
 800b2fe:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b302:	b097      	sub	sp, #92	; 0x5c
 800b304:	f10d 0c1c 	add.w	ip, sp, #28
 800b308:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b30c:	f8de 3000 	ldr.w	r3, [lr]
 800b310:	f8cc 3000 	str.w	r3, [ip]
 800b314:	f104 0e14 	add.w	lr, r4, #20
 800b318:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b31c:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800b320:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b324:	f8de 3000 	ldr.w	r3, [lr]
 800b328:	f8cc 3000 	str.w	r3, [ip]
 800b32c:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800b330:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b334:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800b338:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b33c:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800b340:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800b344:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800b348:	f8de 3000 	ldr.w	r3, [lr]
 800b34c:	f8cc 3000 	str.w	r3, [ip]
 800b350:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800b352:	682b      	ldr	r3, [r5, #0]
 800b354:	9201      	str	r2, [sp, #4]
 800b356:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800b35a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800b35c:	9200      	str	r2, [sp, #0]
 800b35e:	f8cd 8008 	str.w	r8, [sp, #8]
 800b362:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800b366:	aa07      	add	r2, sp, #28
 800b368:	463b      	mov	r3, r7
 800b36a:	4631      	mov	r1, r6
 800b36c:	4628      	mov	r0, r5
 800b36e:	47d8      	blx	fp
 800b370:	46a6      	mov	lr, r4
 800b372:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b376:	f10d 0c1c 	add.w	ip, sp, #28
 800b37a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b37e:	f8de 3000 	ldr.w	r3, [lr]
 800b382:	f8cc 3000 	str.w	r3, [ip]
 800b386:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800b38a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800b38e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800b392:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b396:	343c      	adds	r4, #60	; 0x3c
 800b398:	f8de 3000 	ldr.w	r3, [lr]
 800b39c:	f8cc 3000 	str.w	r3, [ip]
 800b3a0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b3a2:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800b3a6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800b3aa:	6823      	ldr	r3, [r4, #0]
 800b3ac:	f8cc 3000 	str.w	r3, [ip]
 800b3b0:	682b      	ldr	r3, [r5, #0]
 800b3b2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800b3b6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800b3b8:	9201      	str	r2, [sp, #4]
 800b3ba:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800b3bc:	9200      	str	r2, [sp, #0]
 800b3be:	f8cd 8008 	str.w	r8, [sp, #8]
 800b3c2:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800b3c4:	aa07      	add	r2, sp, #28
 800b3c6:	463b      	mov	r3, r7
 800b3c8:	4631      	mov	r1, r6
 800b3ca:	4628      	mov	r0, r5
 800b3cc:	47a0      	blx	r4
 800b3ce:	b017      	add	sp, #92	; 0x5c
 800b3d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800b3d4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800b3d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b3d8:	b08d      	sub	sp, #52	; 0x34
 800b3da:	4688      	mov	r8, r1
 800b3dc:	9916      	ldr	r1, [sp, #88]	; 0x58
 800b3de:	f8d3 c000 	ldr.w	ip, [r3]
 800b3e2:	680f      	ldr	r7, [r1, #0]
 800b3e4:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800b3e8:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800b3ec:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800b3f0:	edd3 6a07 	vldr	s13, [r3, #28]
 800b3f4:	9918      	ldr	r1, [sp, #96]	; 0x60
 800b3f6:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800b3fa:	f9b1 9000 	ldrsh.w	r9, [r1]
 800b3fe:	f9ba 1000 	ldrsh.w	r1, [sl]
 800b402:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800b406:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800b40a:	eba7 070c 	sub.w	r7, r7, ip
 800b40e:	42bc      	cmp	r4, r7
 800b410:	bfa8      	it	ge
 800b412:	463c      	movge	r4, r7
 800b414:	ee07 4a90 	vmov	s15, r4
 800b418:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800b41c:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800b420:	ee25 4a04 	vmul.f32	s8, s10, s8
 800b424:	ee65 4a24 	vmul.f32	s9, s10, s9
 800b428:	ee25 5a27 	vmul.f32	s10, s10, s15
 800b42c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800b430:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800b434:	eb09 0e0c 	add.w	lr, r9, ip
 800b438:	4571      	cmp	r1, lr
 800b43a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800b43e:	ee32 1a05 	vadd.f32	s2, s4, s10
 800b442:	ee36 0a84 	vadd.f32	s0, s13, s8
 800b446:	ee61 1a87 	vmul.f32	s3, s3, s14
 800b44a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800b44e:	f340 808d 	ble.w	800b56c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800b452:	eba1 060e 	sub.w	r6, r1, lr
 800b456:	fb96 f5f4 	sdiv	r5, r6, r4
 800b45a:	ee07 5a10 	vmov	s14, r5
 800b45e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800b462:	2d00      	cmp	r5, #0
 800b464:	fb04 6615 	mls	r6, r4, r5, r6
 800b468:	eea7 0a04 	vfma.f32	s0, s14, s8
 800b46c:	eee7 0a24 	vfma.f32	s1, s14, s9
 800b470:	eea7 1a05 	vfma.f32	s2, s14, s10
 800b474:	dd13      	ble.n	800b49e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800b476:	ee70 6a44 	vsub.f32	s13, s0, s8
 800b47a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800b47e:	eef5 6a40 	vcmp.f32	s13, #0.0
 800b482:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b486:	bf18      	it	ne
 800b488:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800b48c:	ee31 2a45 	vsub.f32	s4, s2, s10
 800b490:	bf08      	it	eq
 800b492:	eeb0 7a67 	vmoveq.f32	s14, s15
 800b496:	ee61 1a87 	vmul.f32	s3, s3, s14
 800b49a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800b49e:	fb05 f204 	mul.w	r2, r5, r4
 800b4a2:	1abf      	subs	r7, r7, r2
 800b4a4:	4494      	add	ip, r2
 800b4a6:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800b4aa:	4411      	add	r1, r2
 800b4ac:	eb09 020c 	add.w	r2, r9, ip
 800b4b0:	443a      	add	r2, r7
 800b4b2:	b209      	sxth	r1, r1
 800b4b4:	428a      	cmp	r2, r1
 800b4b6:	bfc4      	itt	gt
 800b4b8:	eba1 0209 	subgt.w	r2, r1, r9
 800b4bc:	eba2 070c 	subgt.w	r7, r2, ip
 800b4c0:	2f00      	cmp	r7, #0
 800b4c2:	dd50      	ble.n	800b566 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800b4c4:	fb97 f1f4 	sdiv	r1, r7, r4
 800b4c8:	fb04 7211 	mls	r2, r4, r1, r7
 800b4cc:	b90a      	cbnz	r2, 800b4d2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800b4ce:	3901      	subs	r1, #1
 800b4d0:	4622      	mov	r2, r4
 800b4d2:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800b4d6:	6840      	ldr	r0, [r0, #4]
 800b4d8:	900b      	str	r0, [sp, #44]	; 0x2c
 800b4da:	f8d0 a000 	ldr.w	sl, [r0]
 800b4de:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800b4e0:	9008      	str	r0, [sp, #32]
 800b4e2:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800b4e6:	9818      	ldr	r0, [sp, #96]	; 0x60
 800b4e8:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800b4ec:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800b4f0:	695b      	ldr	r3, [r3, #20]
 800b4f2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800b4f4:	445b      	add	r3, fp
 800b4f6:	eef0 6a42 	vmov.f32	s13, s4
 800b4fa:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800b4fe:	ee21 3a23 	vmul.f32	s6, s2, s7
 800b502:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800b506:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800b50a:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800b50e:	9307      	str	r3, [sp, #28]
 800b510:	ee17 7a90 	vmov	r7, s15
 800b514:	ee73 7a42 	vsub.f32	s15, s6, s4
 800b518:	eeb0 7a61 	vmov.f32	s14, s3
 800b51c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800b520:	ee16 3a90 	vmov	r3, s13
 800b524:	fb97 f7f4 	sdiv	r7, r7, r4
 800b528:	ee17 ca90 	vmov	ip, s15
 800b52c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800b530:	fb9c fcf4 	sdiv	ip, ip, r4
 800b534:	fb0c 3306 	mla	r3, ip, r6, r3
 800b538:	9302      	str	r3, [sp, #8]
 800b53a:	ee17 3a10 	vmov	r3, s14
 800b53e:	44b6      	add	lr, r6
 800b540:	fb04 e505 	mla	r5, r4, r5, lr
 800b544:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800b548:	fb07 3706 	mla	r7, r7, r6, r3
 800b54c:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800b550:	e9cd 4700 	strd	r4, r7, [sp]
 800b554:	2900      	cmp	r1, #0
 800b556:	bfcc      	ite	gt
 800b558:	46a1      	movgt	r9, r4
 800b55a:	4691      	movle	r9, r2
 800b55c:	eba9 0306 	sub.w	r3, r9, r6
 800b560:	f8da 4008 	ldr.w	r4, [sl, #8]
 800b564:	47a0      	blx	r4
 800b566:	b00d      	add	sp, #52	; 0x34
 800b568:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b56c:	2500      	movs	r5, #0
 800b56e:	462e      	mov	r6, r5
 800b570:	e799      	b.n	800b4a6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800b574 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800b574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b578:	b0db      	sub	sp, #364	; 0x16c
 800b57a:	461d      	mov	r5, r3
 800b57c:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800b580:	930a      	str	r3, [sp, #40]	; 0x28
 800b582:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800b586:	930b      	str	r3, [sp, #44]	; 0x2c
 800b588:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800b58c:	9310      	str	r3, [sp, #64]	; 0x40
 800b58e:	6803      	ldr	r3, [r0, #0]
 800b590:	910f      	str	r1, [sp, #60]	; 0x3c
 800b592:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800b594:	9009      	str	r0, [sp, #36]	; 0x24
 800b596:	4614      	mov	r4, r2
 800b598:	4629      	mov	r1, r5
 800b59a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800b59e:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800b5a2:	47b8      	blx	r7
 800b5a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b5a6:	6058      	str	r0, [r3, #4]
 800b5a8:	2800      	cmp	r0, #0
 800b5aa:	f000 83a1 	beq.w	800bcf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b5ae:	682b      	ldr	r3, [r5, #0]
 800b5b0:	9314      	str	r3, [sp, #80]	; 0x50
 800b5b2:	686b      	ldr	r3, [r5, #4]
 800b5b4:	9315      	str	r3, [sp, #84]	; 0x54
 800b5b6:	4bc4      	ldr	r3, [pc, #784]	; (800b8c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800b5b8:	ed94 7a02 	vldr	s14, [r4, #8]
 800b5bc:	7819      	ldrb	r1, [r3, #0]
 800b5be:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800b5c2:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800b5c6:	2900      	cmp	r1, #0
 800b5c8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b5cc:	bf16      	itet	ne
 800b5ce:	4619      	movne	r1, r3
 800b5d0:	4611      	moveq	r1, r2
 800b5d2:	4613      	movne	r3, r2
 800b5d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b5d8:	9116      	str	r1, [sp, #88]	; 0x58
 800b5da:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800b5de:	f240 8387 	bls.w	800bcf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b5e2:	ed94 7a07 	vldr	s14, [r4, #28]
 800b5e6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b5ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b5ee:	f240 837f 	bls.w	800bcf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b5f2:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800b5f6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b5fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b5fe:	f240 8377 	bls.w	800bcf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b602:	6822      	ldr	r2, [r4, #0]
 800b604:	4bb1      	ldr	r3, [pc, #708]	; (800b8cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800b606:	429a      	cmp	r2, r3
 800b608:	f2c0 8372 	blt.w	800bcf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b60c:	49b0      	ldr	r1, [pc, #704]	; (800b8d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800b60e:	6963      	ldr	r3, [r4, #20]
 800b610:	428a      	cmp	r2, r1
 800b612:	f300 836d 	bgt.w	800bcf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b616:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800b61a:	48ae      	ldr	r0, [pc, #696]	; (800b8d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800b61c:	33ff      	adds	r3, #255	; 0xff
 800b61e:	4283      	cmp	r3, r0
 800b620:	f200 8366 	bhi.w	800bcf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b624:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800b626:	4dac      	ldr	r5, [pc, #688]	; (800b8d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800b628:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800b62c:	33ff      	adds	r3, #255	; 0xff
 800b62e:	42ab      	cmp	r3, r5
 800b630:	f200 835e 	bhi.w	800bcf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b634:	6862      	ldr	r2, [r4, #4]
 800b636:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800b63a:	33ff      	adds	r3, #255	; 0xff
 800b63c:	4283      	cmp	r3, r0
 800b63e:	f200 8357 	bhi.w	800bcf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b642:	69a1      	ldr	r1, [r4, #24]
 800b644:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800b648:	33ff      	adds	r3, #255	; 0xff
 800b64a:	4283      	cmp	r3, r0
 800b64c:	f200 8350 	bhi.w	800bcf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b650:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b652:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800b656:	30ff      	adds	r0, #255	; 0xff
 800b658:	42a8      	cmp	r0, r5
 800b65a:	f200 8349 	bhi.w	800bcf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800b65e:	428a      	cmp	r2, r1
 800b660:	f280 8110 	bge.w	800b884 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800b664:	429a      	cmp	r2, r3
 800b666:	f300 8119 	bgt.w	800b89c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800b66a:	4299      	cmp	r1, r3
 800b66c:	f280 811d 	bge.w	800b8aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800b670:	2502      	movs	r5, #2
 800b672:	2701      	movs	r7, #1
 800b674:	46a9      	mov	r9, r5
 800b676:	46b8      	mov	r8, r7
 800b678:	f04f 0a00 	mov.w	sl, #0
 800b67c:	4621      	mov	r1, r4
 800b67e:	a849      	add	r0, sp, #292	; 0x124
 800b680:	f003 fcbc 	bl	800effc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800b684:	4622      	mov	r2, r4
 800b686:	4653      	mov	r3, sl
 800b688:	a949      	add	r1, sp, #292	; 0x124
 800b68a:	f8cd 9000 	str.w	r9, [sp]
 800b68e:	a819      	add	r0, sp, #100	; 0x64
 800b690:	f003 fde4 	bl	800f25c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b694:	4622      	mov	r2, r4
 800b696:	4653      	mov	r3, sl
 800b698:	a949      	add	r1, sp, #292	; 0x124
 800b69a:	f8cd 8000 	str.w	r8, [sp]
 800b69e:	a829      	add	r0, sp, #164	; 0xa4
 800b6a0:	f003 fddc 	bl	800f25c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b6a4:	4643      	mov	r3, r8
 800b6a6:	4622      	mov	r2, r4
 800b6a8:	a949      	add	r1, sp, #292	; 0x124
 800b6aa:	f8cd 9000 	str.w	r9, [sp]
 800b6ae:	a839      	add	r0, sp, #228	; 0xe4
 800b6b0:	f003 fdd4 	bl	800f25c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800b6b4:	42af      	cmp	r7, r5
 800b6b6:	bfb5      	itete	lt
 800b6b8:	2300      	movlt	r3, #0
 800b6ba:	2301      	movge	r3, #1
 800b6bc:	930e      	strlt	r3, [sp, #56]	; 0x38
 800b6be:	930e      	strge	r3, [sp, #56]	; 0x38
 800b6c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800b6c2:	e893 0003 	ldmia.w	r3, {r0, r1}
 800b6c6:	af12      	add	r7, sp, #72	; 0x48
 800b6c8:	bfb9      	ittee	lt
 800b6ca:	ad29      	addlt	r5, sp, #164	; 0xa4
 800b6cc:	ac19      	addlt	r4, sp, #100	; 0x64
 800b6ce:	ad19      	addge	r5, sp, #100	; 0x64
 800b6d0:	ac29      	addge	r4, sp, #164	; 0xa4
 800b6d2:	e887 0003 	stmia.w	r7, {r0, r1}
 800b6d6:	b928      	cbnz	r0, 800b6e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800b6d8:	4b80      	ldr	r3, [pc, #512]	; (800b8dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800b6da:	6818      	ldr	r0, [r3, #0]
 800b6dc:	6803      	ldr	r3, [r0, #0]
 800b6de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b6e0:	4798      	blx	r3
 800b6e2:	6038      	str	r0, [r7, #0]
 800b6e4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b6e6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800b6ea:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800b6ee:	930c      	str	r3, [sp, #48]	; 0x30
 800b6f0:	990c      	ldr	r1, [sp, #48]	; 0x30
 800b6f2:	6963      	ldr	r3, [r4, #20]
 800b6f4:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800b6f6:	440b      	add	r3, r1
 800b6f8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800b6fc:	4408      	add	r0, r1
 800b6fe:	b200      	sxth	r0, r0
 800b700:	4283      	cmp	r3, r0
 800b702:	900d      	str	r0, [sp, #52]	; 0x34
 800b704:	f280 80dd 	bge.w	800b8c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800b708:	428b      	cmp	r3, r1
 800b70a:	da08      	bge.n	800b71e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b70c:	2a00      	cmp	r2, #0
 800b70e:	dd06      	ble.n	800b71e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800b710:	1acb      	subs	r3, r1, r3
 800b712:	429a      	cmp	r2, r3
 800b714:	f2c0 80e4 	blt.w	800b8e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800b718:	2b00      	cmp	r3, #0
 800b71a:	f300 80e2 	bgt.w	800b8e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800b71e:	6967      	ldr	r7, [r4, #20]
 800b720:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800b722:	443b      	add	r3, r7
 800b724:	461f      	mov	r7, r3
 800b726:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800b728:	1bdf      	subs	r7, r3, r7
 800b72a:	4297      	cmp	r7, r2
 800b72c:	bfa8      	it	ge
 800b72e:	4617      	movge	r7, r2
 800b730:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800b734:	2f00      	cmp	r7, #0
 800b736:	f340 8166 	ble.w	800ba06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800b73a:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800b73c:	6829      	ldr	r1, [r5, #0]
 800b73e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b742:	f9bb 3000 	ldrsh.w	r3, [fp]
 800b746:	6820      	ldr	r0, [r4, #0]
 800b748:	4411      	add	r1, r2
 800b74a:	4299      	cmp	r1, r3
 800b74c:	dd1a      	ble.n	800b784 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800b74e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800b752:	440b      	add	r3, r1
 800b754:	4402      	add	r2, r0
 800b756:	b21b      	sxth	r3, r3
 800b758:	429a      	cmp	r2, r3
 800b75a:	dc13      	bgt.n	800b784 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800b75c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b75e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800b760:	681b      	ldr	r3, [r3, #0]
 800b762:	9206      	str	r2, [sp, #24]
 800b764:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b766:	9205      	str	r2, [sp, #20]
 800b768:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800b76a:	9500      	str	r5, [sp, #0]
 800b76c:	e9cd b203 	strd	fp, r2, [sp, #12]
 800b770:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800b772:	9809      	ldr	r0, [sp, #36]	; 0x24
 800b774:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800b778:	a912      	add	r1, sp, #72	; 0x48
 800b77a:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800b77e:	aa49      	add	r2, sp, #292	; 0x124
 800b780:	4623      	mov	r3, r4
 800b782:	47c8      	blx	r9
 800b784:	e9d4 2300 	ldrd	r2, r3, [r4]
 800b788:	441a      	add	r2, r3
 800b78a:	6963      	ldr	r3, [r4, #20]
 800b78c:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800b790:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800b794:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800b798:	68a1      	ldr	r1, [r4, #8]
 800b79a:	ed94 6a08 	vldr	s12, [r4, #32]
 800b79e:	6022      	str	r2, [r4, #0]
 800b7a0:	3301      	adds	r3, #1
 800b7a2:	6163      	str	r3, [r4, #20]
 800b7a4:	69a3      	ldr	r3, [r4, #24]
 800b7a6:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b7aa:	3b01      	subs	r3, #1
 800b7ac:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800b7b0:	61a3      	str	r3, [r4, #24]
 800b7b2:	6923      	ldr	r3, [r4, #16]
 800b7b4:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b7b8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b7bc:	edd4 6a07 	vldr	s13, [r4, #28]
 800b7c0:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b7c4:	440b      	add	r3, r1
 800b7c6:	68e1      	ldr	r1, [r4, #12]
 800b7c8:	6123      	str	r3, [r4, #16]
 800b7ca:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b7ce:	428b      	cmp	r3, r1
 800b7d0:	edc4 6a07 	vstr	s13, [r4, #28]
 800b7d4:	db15      	blt.n	800b802 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800b7d6:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800b7da:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b7de:	3201      	adds	r2, #1
 800b7e0:	edc4 6a07 	vstr	s13, [r4, #28]
 800b7e4:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800b7e8:	6022      	str	r2, [r4, #0]
 800b7ea:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b7ee:	1a5b      	subs	r3, r3, r1
 800b7f0:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800b7f4:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800b7f8:	6123      	str	r3, [r4, #16]
 800b7fa:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b7fe:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800b802:	e9d5 2300 	ldrd	r2, r3, [r5]
 800b806:	441a      	add	r2, r3
 800b808:	696b      	ldr	r3, [r5, #20]
 800b80a:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800b80e:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800b812:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800b816:	68a9      	ldr	r1, [r5, #8]
 800b818:	ed95 6a08 	vldr	s12, [r5, #32]
 800b81c:	602a      	str	r2, [r5, #0]
 800b81e:	3301      	adds	r3, #1
 800b820:	616b      	str	r3, [r5, #20]
 800b822:	69ab      	ldr	r3, [r5, #24]
 800b824:	ee37 7a27 	vadd.f32	s14, s14, s15
 800b828:	3b01      	subs	r3, #1
 800b82a:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800b82e:	61ab      	str	r3, [r5, #24]
 800b830:	692b      	ldr	r3, [r5, #16]
 800b832:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b836:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800b83a:	edd5 6a07 	vldr	s13, [r5, #28]
 800b83e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b842:	440b      	add	r3, r1
 800b844:	68e9      	ldr	r1, [r5, #12]
 800b846:	612b      	str	r3, [r5, #16]
 800b848:	ee76 6a86 	vadd.f32	s13, s13, s12
 800b84c:	428b      	cmp	r3, r1
 800b84e:	edc5 6a07 	vstr	s13, [r5, #28]
 800b852:	db15      	blt.n	800b880 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800b854:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800b858:	ee76 6a26 	vadd.f32	s13, s12, s13
 800b85c:	3201      	adds	r2, #1
 800b85e:	edc5 6a07 	vstr	s13, [r5, #28]
 800b862:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800b866:	602a      	str	r2, [r5, #0]
 800b868:	ee36 7a87 	vadd.f32	s14, s13, s14
 800b86c:	1a5b      	subs	r3, r3, r1
 800b86e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800b872:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800b876:	612b      	str	r3, [r5, #16]
 800b878:	ee77 7a27 	vadd.f32	s15, s14, s15
 800b87c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800b880:	3f01      	subs	r7, #1
 800b882:	e757      	b.n	800b734 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800b884:	4299      	cmp	r1, r3
 800b886:	dc13      	bgt.n	800b8b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800b888:	429a      	cmp	r2, r3
 800b88a:	da14      	bge.n	800b8b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800b88c:	2502      	movs	r5, #2
 800b88e:	2703      	movs	r7, #3
 800b890:	46a9      	mov	r9, r5
 800b892:	f04f 0800 	mov.w	r8, #0
 800b896:	f04f 0a01 	mov.w	sl, #1
 800b89a:	e6ef      	b.n	800b67c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800b89c:	2501      	movs	r5, #1
 800b89e:	2700      	movs	r7, #0
 800b8a0:	46a9      	mov	r9, r5
 800b8a2:	46b8      	mov	r8, r7
 800b8a4:	f04f 0a02 	mov.w	sl, #2
 800b8a8:	e6e8      	b.n	800b67c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800b8aa:	2501      	movs	r5, #1
 800b8ac:	2702      	movs	r7, #2
 800b8ae:	e6e1      	b.n	800b674 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800b8b0:	2500      	movs	r5, #0
 800b8b2:	2701      	movs	r7, #1
 800b8b4:	e7f4      	b.n	800b8a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800b8b6:	2702      	movs	r7, #2
 800b8b8:	2503      	movs	r5, #3
 800b8ba:	f04f 0900 	mov.w	r9, #0
 800b8be:	46b8      	mov	r8, r7
 800b8c0:	e7e9      	b.n	800b896 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800b8c2:	4613      	mov	r3, r2
 800b8c4:	e728      	b.n	800b718 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800b8c6:	bf00      	nop
 800b8c8:	20012668 	.word	0x20012668
 800b8cc:	fffd8f01 	.word	0xfffd8f01
 800b8d0:	00027100 	.word	0x00027100
 800b8d4:	0004e1ff 	.word	0x0004e1ff
 800b8d8:	0004e1fe 	.word	0x0004e1fe
 800b8dc:	20012670 	.word	0x20012670
 800b8e0:	4613      	mov	r3, r2
 800b8e2:	992b      	ldr	r1, [sp, #172]	; 0xac
 800b8e4:	9111      	str	r1, [sp, #68]	; 0x44
 800b8e6:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800b8ea:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800b8ee:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800b8f0:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800b8f4:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800b8f8:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800b8fc:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800b900:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800b904:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800b908:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800b90c:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800b910:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800b914:	469e      	mov	lr, r3
 800b916:	469c      	mov	ip, r3
 800b918:	f04f 0900 	mov.w	r9, #0
 800b91c:	f1bc 0f00 	cmp.w	ip, #0
 800b920:	d147      	bne.n	800b9b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800b922:	eb03 0c07 	add.w	ip, r3, r7
 800b926:	1ad7      	subs	r7, r2, r3
 800b928:	f1b9 0f00 	cmp.w	r9, #0
 800b92c:	d009      	beq.n	800b942 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800b92e:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800b932:	9029      	str	r0, [sp, #164]	; 0xa4
 800b934:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800b938:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800b93c:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800b940:	912d      	str	r1, [sp, #180]	; 0xb4
 800b942:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800b944:	9111      	str	r1, [sp, #68]	; 0x44
 800b946:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800b94a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800b94e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800b952:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800b956:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800b95a:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800b95e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800b962:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800b966:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800b96a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800b96e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800b972:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800b976:	f04f 0800 	mov.w	r8, #0
 800b97a:	f1be 0f00 	cmp.w	lr, #0
 800b97e:	d031      	beq.n	800b9e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800b980:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800b982:	4431      	add	r1, r6
 800b984:	4549      	cmp	r1, r9
 800b986:	4450      	add	r0, sl
 800b988:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800b98c:	ee37 7a04 	vadd.f32	s14, s14, s8
 800b990:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800b994:	db08      	blt.n	800b9a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800b996:	ee77 7a85 	vadd.f32	s15, s15, s10
 800b99a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800b99e:	ee37 7a06 	vadd.f32	s14, s14, s12
 800b9a2:	3001      	adds	r0, #1
 800b9a4:	eba1 0109 	sub.w	r1, r1, r9
 800b9a8:	f10e 3eff 	add.w	lr, lr, #4294967295
 800b9ac:	f04f 0801 	mov.w	r8, #1
 800b9b0:	e7e3      	b.n	800b97a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800b9b2:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800b9b4:	4431      	add	r1, r6
 800b9b6:	4541      	cmp	r1, r8
 800b9b8:	4450      	add	r0, sl
 800b9ba:	ee37 7a24 	vadd.f32	s14, s14, s9
 800b9be:	ee77 7a84 	vadd.f32	s15, s15, s8
 800b9c2:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800b9c6:	db08      	blt.n	800b9da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800b9c8:	ee76 6a85 	vadd.f32	s13, s13, s10
 800b9cc:	ee37 7a25 	vadd.f32	s14, s14, s11
 800b9d0:	ee77 7a86 	vadd.f32	s15, s15, s12
 800b9d4:	3001      	adds	r0, #1
 800b9d6:	eba1 0108 	sub.w	r1, r1, r8
 800b9da:	f10c 3cff 	add.w	ip, ip, #4294967295
 800b9de:	f04f 0901 	mov.w	r9, #1
 800b9e2:	e79b      	b.n	800b91c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800b9e4:	449c      	add	ip, r3
 800b9e6:	1aff      	subs	r7, r7, r3
 800b9e8:	f1b8 0f00 	cmp.w	r8, #0
 800b9ec:	d009      	beq.n	800ba02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800b9ee:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800b9f2:	9019      	str	r0, [sp, #100]	; 0x64
 800b9f4:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800b9f8:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800b9fc:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800ba00:	911d      	str	r1, [sp, #116]	; 0x74
 800ba02:	1ad2      	subs	r2, r2, r3
 800ba04:	e68b      	b.n	800b71e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ba06:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ba08:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800ba0a:	2b00      	cmp	r3, #0
 800ba0c:	f000 80d1 	beq.w	800bbb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800ba10:	ad19      	add	r5, sp, #100	; 0x64
 800ba12:	ac39      	add	r4, sp, #228	; 0xe4
 800ba14:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ba16:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800ba1a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800ba1e:	930c      	str	r3, [sp, #48]	; 0x30
 800ba20:	990c      	ldr	r1, [sp, #48]	; 0x30
 800ba22:	6963      	ldr	r3, [r4, #20]
 800ba24:	440b      	add	r3, r1
 800ba26:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800ba2a:	4408      	add	r0, r1
 800ba2c:	b200      	sxth	r0, r0
 800ba2e:	4283      	cmp	r3, r0
 800ba30:	900d      	str	r0, [sp, #52]	; 0x34
 800ba32:	f280 80c1 	bge.w	800bbb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800ba36:	428b      	cmp	r3, r1
 800ba38:	da08      	bge.n	800ba4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ba3a:	2a00      	cmp	r2, #0
 800ba3c:	dd06      	ble.n	800ba4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ba3e:	1acb      	subs	r3, r1, r3
 800ba40:	429a      	cmp	r2, r3
 800ba42:	f2c0 80bb 	blt.w	800bbbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800ba46:	2b00      	cmp	r3, #0
 800ba48:	f300 80b9 	bgt.w	800bbbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800ba4c:	6967      	ldr	r7, [r4, #20]
 800ba4e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ba50:	443b      	add	r3, r7
 800ba52:	461f      	mov	r7, r3
 800ba54:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ba56:	1bdf      	subs	r7, r3, r7
 800ba58:	4297      	cmp	r7, r2
 800ba5a:	bfa8      	it	ge
 800ba5c:	4617      	movge	r7, r2
 800ba5e:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800ba62:	2f00      	cmp	r7, #0
 800ba64:	f340 813c 	ble.w	800bce0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800ba68:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ba6a:	6829      	ldr	r1, [r5, #0]
 800ba6c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ba70:	f9bb 3000 	ldrsh.w	r3, [fp]
 800ba74:	6820      	ldr	r0, [r4, #0]
 800ba76:	4411      	add	r1, r2
 800ba78:	4299      	cmp	r1, r3
 800ba7a:	dd1a      	ble.n	800bab2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ba7c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ba80:	440b      	add	r3, r1
 800ba82:	4402      	add	r2, r0
 800ba84:	b21b      	sxth	r3, r3
 800ba86:	429a      	cmp	r2, r3
 800ba88:	dc13      	bgt.n	800bab2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ba8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ba8c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ba8e:	681b      	ldr	r3, [r3, #0]
 800ba90:	9206      	str	r2, [sp, #24]
 800ba92:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ba94:	9205      	str	r2, [sp, #20]
 800ba96:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ba98:	9500      	str	r5, [sp, #0]
 800ba9a:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ba9e:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800baa0:	9809      	ldr	r0, [sp, #36]	; 0x24
 800baa2:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800baa6:	a912      	add	r1, sp, #72	; 0x48
 800baa8:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800baac:	aa49      	add	r2, sp, #292	; 0x124
 800baae:	4623      	mov	r3, r4
 800bab0:	47c8      	blx	r9
 800bab2:	e9d4 2300 	ldrd	r2, r3, [r4]
 800bab6:	441a      	add	r2, r3
 800bab8:	6963      	ldr	r3, [r4, #20]
 800baba:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800babe:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800bac2:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800bac6:	68a1      	ldr	r1, [r4, #8]
 800bac8:	ed94 6a08 	vldr	s12, [r4, #32]
 800bacc:	6022      	str	r2, [r4, #0]
 800bace:	3301      	adds	r3, #1
 800bad0:	6163      	str	r3, [r4, #20]
 800bad2:	69a3      	ldr	r3, [r4, #24]
 800bad4:	ee37 7a27 	vadd.f32	s14, s14, s15
 800bad8:	3b01      	subs	r3, #1
 800bada:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800bade:	61a3      	str	r3, [r4, #24]
 800bae0:	6923      	ldr	r3, [r4, #16]
 800bae2:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800bae6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800baea:	edd4 6a07 	vldr	s13, [r4, #28]
 800baee:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800baf2:	440b      	add	r3, r1
 800baf4:	68e1      	ldr	r1, [r4, #12]
 800baf6:	6123      	str	r3, [r4, #16]
 800baf8:	ee76 6a86 	vadd.f32	s13, s13, s12
 800bafc:	428b      	cmp	r3, r1
 800bafe:	edc4 6a07 	vstr	s13, [r4, #28]
 800bb02:	db15      	blt.n	800bb30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800bb04:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800bb08:	ee76 6a26 	vadd.f32	s13, s12, s13
 800bb0c:	3201      	adds	r2, #1
 800bb0e:	edc4 6a07 	vstr	s13, [r4, #28]
 800bb12:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800bb16:	6022      	str	r2, [r4, #0]
 800bb18:	ee36 7a87 	vadd.f32	s14, s13, s14
 800bb1c:	1a5b      	subs	r3, r3, r1
 800bb1e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800bb22:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800bb26:	6123      	str	r3, [r4, #16]
 800bb28:	ee77 7a27 	vadd.f32	s15, s14, s15
 800bb2c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800bb30:	e9d5 2300 	ldrd	r2, r3, [r5]
 800bb34:	441a      	add	r2, r3
 800bb36:	696b      	ldr	r3, [r5, #20]
 800bb38:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800bb3c:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800bb40:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800bb44:	68a9      	ldr	r1, [r5, #8]
 800bb46:	ed95 6a08 	vldr	s12, [r5, #32]
 800bb4a:	602a      	str	r2, [r5, #0]
 800bb4c:	3301      	adds	r3, #1
 800bb4e:	616b      	str	r3, [r5, #20]
 800bb50:	69ab      	ldr	r3, [r5, #24]
 800bb52:	ee37 7a27 	vadd.f32	s14, s14, s15
 800bb56:	3b01      	subs	r3, #1
 800bb58:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800bb5c:	61ab      	str	r3, [r5, #24]
 800bb5e:	692b      	ldr	r3, [r5, #16]
 800bb60:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800bb64:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800bb68:	edd5 6a07 	vldr	s13, [r5, #28]
 800bb6c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800bb70:	440b      	add	r3, r1
 800bb72:	68e9      	ldr	r1, [r5, #12]
 800bb74:	612b      	str	r3, [r5, #16]
 800bb76:	ee76 6a86 	vadd.f32	s13, s13, s12
 800bb7a:	428b      	cmp	r3, r1
 800bb7c:	edc5 6a07 	vstr	s13, [r5, #28]
 800bb80:	db15      	blt.n	800bbae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800bb82:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800bb86:	ee76 6a26 	vadd.f32	s13, s12, s13
 800bb8a:	3201      	adds	r2, #1
 800bb8c:	edc5 6a07 	vstr	s13, [r5, #28]
 800bb90:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800bb94:	602a      	str	r2, [r5, #0]
 800bb96:	ee36 7a87 	vadd.f32	s14, s13, s14
 800bb9a:	1a5b      	subs	r3, r3, r1
 800bb9c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800bba0:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800bba4:	612b      	str	r3, [r5, #16]
 800bba6:	ee77 7a27 	vadd.f32	s15, s14, s15
 800bbaa:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800bbae:	3f01      	subs	r7, #1
 800bbb0:	e757      	b.n	800ba62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800bbb2:	ad39      	add	r5, sp, #228	; 0xe4
 800bbb4:	ac19      	add	r4, sp, #100	; 0x64
 800bbb6:	e72d      	b.n	800ba14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800bbb8:	4613      	mov	r3, r2
 800bbba:	e744      	b.n	800ba46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800bbbc:	4613      	mov	r3, r2
 800bbbe:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800bbc2:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800bbc4:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800bbc8:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800bbcc:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800bbd0:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800bbd4:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800bbd8:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800bbdc:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800bbe0:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800bbe2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800bbe6:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800bbea:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800bbee:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800bbf2:	960e      	str	r6, [sp, #56]	; 0x38
 800bbf4:	469e      	mov	lr, r3
 800bbf6:	461f      	mov	r7, r3
 800bbf8:	f04f 0900 	mov.w	r9, #0
 800bbfc:	2f00      	cmp	r7, #0
 800bbfe:	d146      	bne.n	800bc8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800bc00:	449c      	add	ip, r3
 800bc02:	1ad7      	subs	r7, r2, r3
 800bc04:	f1b9 0f00 	cmp.w	r9, #0
 800bc08:	d009      	beq.n	800bc1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800bc0a:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800bc0e:	9039      	str	r0, [sp, #228]	; 0xe4
 800bc10:	913d      	str	r1, [sp, #244]	; 0xf4
 800bc12:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800bc16:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800bc1a:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800bc1e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800bc20:	910e      	str	r1, [sp, #56]	; 0x38
 800bc22:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800bc26:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800bc2a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800bc2e:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800bc32:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800bc36:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800bc3a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800bc3e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800bc42:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800bc46:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800bc4a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800bc4e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800bc52:	f04f 0800 	mov.w	r8, #0
 800bc56:	f1be 0f00 	cmp.w	lr, #0
 800bc5a:	d030      	beq.n	800bcbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800bc5c:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800bc5e:	4431      	add	r1, r6
 800bc60:	4549      	cmp	r1, r9
 800bc62:	4450      	add	r0, sl
 800bc64:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800bc68:	ee37 7a04 	vadd.f32	s14, s14, s8
 800bc6c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800bc70:	db08      	blt.n	800bc84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800bc72:	ee77 7a85 	vadd.f32	s15, s15, s10
 800bc76:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800bc7a:	ee37 7a06 	vadd.f32	s14, s14, s12
 800bc7e:	3001      	adds	r0, #1
 800bc80:	eba1 0109 	sub.w	r1, r1, r9
 800bc84:	f10e 3eff 	add.w	lr, lr, #4294967295
 800bc88:	f04f 0801 	mov.w	r8, #1
 800bc8c:	e7e3      	b.n	800bc56 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800bc8e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800bc90:	4431      	add	r1, r6
 800bc92:	4541      	cmp	r1, r8
 800bc94:	4450      	add	r0, sl
 800bc96:	ee37 7a24 	vadd.f32	s14, s14, s9
 800bc9a:	ee77 7a84 	vadd.f32	s15, s15, s8
 800bc9e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800bca2:	db08      	blt.n	800bcb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800bca4:	ee76 6a85 	vadd.f32	s13, s13, s10
 800bca8:	ee37 7a25 	vadd.f32	s14, s14, s11
 800bcac:	ee77 7a86 	vadd.f32	s15, s15, s12
 800bcb0:	3001      	adds	r0, #1
 800bcb2:	eba1 0108 	sub.w	r1, r1, r8
 800bcb6:	3f01      	subs	r7, #1
 800bcb8:	f04f 0901 	mov.w	r9, #1
 800bcbc:	e79e      	b.n	800bbfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800bcbe:	449c      	add	ip, r3
 800bcc0:	1aff      	subs	r7, r7, r3
 800bcc2:	f1b8 0f00 	cmp.w	r8, #0
 800bcc6:	d009      	beq.n	800bcdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800bcc8:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800bccc:	9019      	str	r0, [sp, #100]	; 0x64
 800bcce:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800bcd2:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800bcd6:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800bcda:	911d      	str	r1, [sp, #116]	; 0x74
 800bcdc:	1ad2      	subs	r2, r2, r3
 800bcde:	e6b5      	b.n	800ba4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800bce0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800bce2:	681b      	ldr	r3, [r3, #0]
 800bce4:	b923      	cbnz	r3, 800bcf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800bce6:	4b04      	ldr	r3, [pc, #16]	; (800bcf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800bce8:	6818      	ldr	r0, [r3, #0]
 800bcea:	6803      	ldr	r3, [r0, #0]
 800bcec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bcee:	4798      	blx	r3
 800bcf0:	b05b      	add	sp, #364	; 0x16c
 800bcf2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bcf6:	bf00      	nop
 800bcf8:	20012670 	.word	0x20012670

0800bcfc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 800bcfc:	b570      	push	{r4, r5, r6, lr}
 800bcfe:	4604      	mov	r4, r0
 800bd00:	f89d 601c 	ldrb.w	r6, [sp, #28]
 800bd04:	9805      	ldr	r0, [sp, #20]
 800bd06:	6061      	str	r1, [r4, #4]
 800bd08:	2500      	movs	r5, #0
 800bd0a:	f89d 1010 	ldrb.w	r1, [sp, #16]
 800bd0e:	8263      	strh	r3, [r4, #18]
 800bd10:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800bd14:	8025      	strh	r5, [r4, #0]
 800bd16:	7221      	strb	r1, [r4, #8]
 800bd18:	7266      	strb	r6, [r4, #9]
 800bd1a:	60e0      	str	r0, [r4, #12]
 800bd1c:	8222      	strh	r2, [r4, #16]
 800bd1e:	82a3      	strh	r3, [r4, #20]
 800bd20:	82e5      	strh	r5, [r4, #22]
 800bd22:	8325      	strh	r5, [r4, #24]
 800bd24:	8365      	strh	r5, [r4, #26]
 800bd26:	83a5      	strh	r5, [r4, #28]
 800bd28:	83e5      	strh	r5, [r4, #30]
 800bd2a:	8425      	strh	r5, [r4, #32]
 800bd2c:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 800bd30:	b32e      	cbz	r6, 800bd7e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800bd32:	6803      	ldr	r3, [r0, #0]
 800bd34:	695b      	ldr	r3, [r3, #20]
 800bd36:	4798      	blx	r3
 800bd38:	4606      	mov	r6, r0
 800bd3a:	b300      	cbz	r0, 800bd7e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800bd3c:	68e0      	ldr	r0, [r4, #12]
 800bd3e:	6803      	ldr	r3, [r0, #0]
 800bd40:	4631      	mov	r1, r6
 800bd42:	68db      	ldr	r3, [r3, #12]
 800bd44:	4798      	blx	r3
 800bd46:	4605      	mov	r5, r0
 800bd48:	b1c8      	cbz	r0, 800bd7e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800bd4a:	7b43      	ldrb	r3, [r0, #13]
 800bd4c:	7a82      	ldrb	r2, [r0, #10]
 800bd4e:	005b      	lsls	r3, r3, #1
 800bd50:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800bd54:	4313      	orrs	r3, r2
 800bd56:	8423      	strh	r3, [r4, #32]
 800bd58:	7a63      	ldrb	r3, [r4, #9]
 800bd5a:	2b06      	cmp	r3, #6
 800bd5c:	d10f      	bne.n	800bd7e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800bd5e:	68e0      	ldr	r0, [r4, #12]
 800bd60:	6803      	ldr	r3, [r0, #0]
 800bd62:	462a      	mov	r2, r5
 800bd64:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bd66:	4631      	mov	r1, r6
 800bd68:	4798      	blx	r3
 800bd6a:	7b6b      	ldrb	r3, [r5, #13]
 800bd6c:	005b      	lsls	r3, r3, #1
 800bd6e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800bd72:	7aab      	ldrb	r3, [r5, #10]
 800bd74:	4313      	orrs	r3, r2
 800bd76:	4418      	add	r0, r3
 800bd78:	8c23      	ldrh	r3, [r4, #32]
 800bd7a:	4418      	add	r0, r3
 800bd7c:	8420      	strh	r0, [r4, #32]
 800bd7e:	4620      	mov	r0, r4
 800bd80:	bd70      	pop	{r4, r5, r6, pc}

0800bd82 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800bd82:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bd86:	2400      	movs	r4, #0
 800bd88:	b085      	sub	sp, #20
 800bd8a:	4681      	mov	r9, r0
 800bd8c:	4688      	mov	r8, r1
 800bd8e:	4692      	mov	sl, r2
 800bd90:	469b      	mov	fp, r3
 800bd92:	4627      	mov	r7, r4
 800bd94:	4625      	mov	r5, r4
 800bd96:	4626      	mov	r6, r4
 800bd98:	4554      	cmp	r4, sl
 800bd9a:	da2a      	bge.n	800bdf2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800bd9c:	2300      	movs	r3, #0
 800bd9e:	9303      	str	r3, [sp, #12]
 800bda0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bda4:	429d      	cmp	r5, r3
 800bda6:	d004      	beq.n	800bdb2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800bda8:	f242 030b 	movw	r3, #8203	; 0x200b
 800bdac:	429d      	cmp	r5, r3
 800bdae:	bf18      	it	ne
 800bdb0:	462f      	movne	r7, r5
 800bdb2:	ab03      	add	r3, sp, #12
 800bdb4:	4642      	mov	r2, r8
 800bdb6:	4659      	mov	r1, fp
 800bdb8:	4648      	mov	r0, r9
 800bdba:	f002 ff35 	bl	800ec28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800bdbe:	4605      	mov	r5, r0
 800bdc0:	b1b8      	cbz	r0, 800bdf2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800bdc2:	280a      	cmp	r0, #10
 800bdc4:	d015      	beq.n	800bdf2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800bdc6:	9a03      	ldr	r2, [sp, #12]
 800bdc8:	b18a      	cbz	r2, 800bdee <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800bdca:	7b50      	ldrb	r0, [r2, #13]
 800bdcc:	7a93      	ldrb	r3, [r2, #10]
 800bdce:	8895      	ldrh	r5, [r2, #4]
 800bdd0:	0040      	lsls	r0, r0, #1
 800bdd2:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800bdd6:	4303      	orrs	r3, r0
 800bdd8:	9301      	str	r3, [sp, #4]
 800bdda:	f8d8 3000 	ldr.w	r3, [r8]
 800bdde:	4639      	mov	r1, r7
 800bde0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bde2:	4640      	mov	r0, r8
 800bde4:	4798      	blx	r3
 800bde6:	9b01      	ldr	r3, [sp, #4]
 800bde8:	4418      	add	r0, r3
 800bdea:	4406      	add	r6, r0
 800bdec:	b2b6      	uxth	r6, r6
 800bdee:	3401      	adds	r4, #1
 800bdf0:	e7d2      	b.n	800bd98 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800bdf2:	4630      	mov	r0, r6
 800bdf4:	b005      	add	sp, #20
 800bdf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800bdfa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800bdfa:	2a02      	cmp	r2, #2
 800bdfc:	b530      	push	{r4, r5, lr}
 800bdfe:	d011      	beq.n	800be24 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800be00:	2a03      	cmp	r2, #3
 800be02:	d01c      	beq.n	800be3e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800be04:	2a01      	cmp	r2, #1
 800be06:	d10c      	bne.n	800be22 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800be08:	888b      	ldrh	r3, [r1, #4]
 800be0a:	8801      	ldrh	r1, [r0, #0]
 800be0c:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800be10:	8844      	ldrh	r4, [r0, #2]
 800be12:	8004      	strh	r4, [r0, #0]
 800be14:	1a5b      	subs	r3, r3, r1
 800be16:	1a9b      	subs	r3, r3, r2
 800be18:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800be1c:	8043      	strh	r3, [r0, #2]
 800be1e:	8081      	strh	r1, [r0, #4]
 800be20:	80c2      	strh	r2, [r0, #6]
 800be22:	bd30      	pop	{r4, r5, pc}
 800be24:	88cb      	ldrh	r3, [r1, #6]
 800be26:	8842      	ldrh	r2, [r0, #2]
 800be28:	1a9b      	subs	r3, r3, r2
 800be2a:	88c2      	ldrh	r2, [r0, #6]
 800be2c:	1a9b      	subs	r3, r3, r2
 800be2e:	888a      	ldrh	r2, [r1, #4]
 800be30:	8801      	ldrh	r1, [r0, #0]
 800be32:	8043      	strh	r3, [r0, #2]
 800be34:	1a52      	subs	r2, r2, r1
 800be36:	8881      	ldrh	r1, [r0, #4]
 800be38:	1a52      	subs	r2, r2, r1
 800be3a:	8002      	strh	r2, [r0, #0]
 800be3c:	e7f1      	b.n	800be22 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800be3e:	88cb      	ldrh	r3, [r1, #6]
 800be40:	8841      	ldrh	r1, [r0, #2]
 800be42:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800be46:	f9b0 5000 	ldrsh.w	r5, [r0]
 800be4a:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800be4e:	8045      	strh	r5, [r0, #2]
 800be50:	1a5b      	subs	r3, r3, r1
 800be52:	1a9b      	subs	r3, r3, r2
 800be54:	8003      	strh	r3, [r0, #0]
 800be56:	8082      	strh	r2, [r0, #4]
 800be58:	80c4      	strh	r4, [r0, #6]
 800be5a:	e7e2      	b.n	800be22 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800be5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800be5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800be60:	b09f      	sub	sp, #124	; 0x7c
 800be62:	9116      	str	r1, [sp, #88]	; 0x58
 800be64:	9317      	str	r3, [sp, #92]	; 0x5c
 800be66:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800be68:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800be6a:	8809      	ldrh	r1, [r1, #0]
 800be6c:	889b      	ldrh	r3, [r3, #4]
 800be6e:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800be72:	9212      	str	r2, [sp, #72]	; 0x48
 800be74:	440b      	add	r3, r1
 800be76:	b21b      	sxth	r3, r3
 800be78:	9310      	str	r3, [sp, #64]	; 0x40
 800be7a:	f8d8 3000 	ldr.w	r3, [r8]
 800be7e:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800be82:	7b19      	ldrb	r1, [r3, #12]
 800be84:	7adb      	ldrb	r3, [r3, #11]
 800be86:	9011      	str	r0, [sp, #68]	; 0x44
 800be88:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800be8c:	9114      	str	r1, [sp, #80]	; 0x50
 800be8e:	9315      	str	r3, [sp, #84]	; 0x54
 800be90:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 800be94:	2a00      	cmp	r2, #0
 800be96:	d06a      	beq.n	800bf6e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800be98:	f898 3010 	ldrb.w	r3, [r8, #16]
 800be9c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800be9e:	2b06      	cmp	r3, #6
 800bea0:	bf14      	ite	ne
 800bea2:	2301      	movne	r3, #1
 800bea4:	2302      	moveq	r3, #2
 800bea6:	4413      	add	r3, r2
 800bea8:	f04f 0900 	mov.w	r9, #0
 800beac:	930f      	str	r3, [sp, #60]	; 0x3c
 800beae:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800beb2:	464c      	mov	r4, r9
 800beb4:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800beb8:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800bebc:	4293      	cmp	r3, r2
 800bebe:	f280 808f 	bge.w	800bfe0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800bec2:	2300      	movs	r3, #0
 800bec4:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 800bec8:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 800becc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bed0:	429c      	cmp	r4, r3
 800bed2:	d006      	beq.n	800bee2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 800bed4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bed6:	f242 020b 	movw	r2, #8203	; 0x200b
 800beda:	4294      	cmp	r4, r2
 800bedc:	bf18      	it	ne
 800bede:	4623      	movne	r3, r4
 800bee0:	930d      	str	r3, [sp, #52]	; 0x34
 800bee2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800bee4:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800bee6:	f8d8 2000 	ldr.w	r2, [r8]
 800beea:	428b      	cmp	r3, r1
 800beec:	db41      	blt.n	800bf72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800beee:	6813      	ldr	r3, [r2, #0]
 800bef0:	4610      	mov	r0, r2
 800bef2:	695b      	ldr	r3, [r3, #20]
 800bef4:	4798      	blx	r3
 800bef6:	4604      	mov	r4, r0
 800bef8:	f8d8 0000 	ldr.w	r0, [r8]
 800befc:	6803      	ldr	r3, [r0, #0]
 800befe:	aa1d      	add	r2, sp, #116	; 0x74
 800bf00:	689d      	ldr	r5, [r3, #8]
 800bf02:	4621      	mov	r1, r4
 800bf04:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800bf08:	47a8      	blx	r5
 800bf0a:	901c      	str	r0, [sp, #112]	; 0x70
 800bf0c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bf10:	429c      	cmp	r4, r3
 800bf12:	f000 80eb 	beq.w	800c0ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800bf16:	f242 030b 	movw	r3, #8203	; 0x200b
 800bf1a:	429c      	cmp	r4, r3
 800bf1c:	f000 80e6 	beq.w	800c0ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800bf20:	2c00      	cmp	r4, #0
 800bf22:	f000 80f8 	beq.w	800c116 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 800bf26:	2c0a      	cmp	r4, #10
 800bf28:	d060      	beq.n	800bfec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800bf2a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800bf2c:	b36a      	cbz	r2, 800bf8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 800bf2e:	8894      	ldrh	r4, [r2, #4]
 800bf30:	f1bb 0f00 	cmp.w	fp, #0
 800bf34:	d03b      	beq.n	800bfae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800bf36:	f892 900d 	ldrb.w	r9, [r2, #13]
 800bf3a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800bf3e:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800bf42:	f892 900a 	ldrb.w	r9, [r2, #10]
 800bf46:	f1bb 0f01 	cmp.w	fp, #1
 800bf4a:	ea49 0903 	orr.w	r9, r9, r3
 800bf4e:	d134      	bne.n	800bfba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 800bf50:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bf52:	eba6 0609 	sub.w	r6, r6, r9
 800bf56:	2b00      	cmp	r3, #0
 800bf58:	d14f      	bne.n	800bffa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800bf5a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800bf5c:	eb09 0306 	add.w	r3, r9, r6
 800bf60:	4413      	add	r3, r2
 800bf62:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800bf64:	f9b2 2000 	ldrsh.w	r2, [r2]
 800bf68:	4293      	cmp	r3, r2
 800bf6a:	da51      	bge.n	800c010 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800bf6c:	e038      	b.n	800bfe0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800bf6e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800bf70:	e79a      	b.n	800bea8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 800bf72:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800bf76:	9301      	str	r3, [sp, #4]
 800bf78:	ab1d      	add	r3, sp, #116	; 0x74
 800bf7a:	9300      	str	r3, [sp, #0]
 800bf7c:	4659      	mov	r1, fp
 800bf7e:	ab1c      	add	r3, sp, #112	; 0x70
 800bf80:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800bf82:	f002 fe9a 	bl	800ecba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800bf86:	4604      	mov	r4, r0
 800bf88:	e7c0      	b.n	800bf0c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 800bf8a:	f8d8 0000 	ldr.w	r0, [r8]
 800bf8e:	6803      	ldr	r3, [r0, #0]
 800bf90:	691b      	ldr	r3, [r3, #16]
 800bf92:	4798      	blx	r3
 800bf94:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800bf98:	4298      	cmp	r0, r3
 800bf9a:	f000 80a7 	beq.w	800c0ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800bf9e:	f242 030b 	movw	r3, #8203	; 0x200b
 800bfa2:	4298      	cmp	r0, r3
 800bfa4:	f000 80a2 	beq.w	800c0ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800bfa8:	f1bb 0f00 	cmp.w	fp, #0
 800bfac:	d100      	bne.n	800bfb0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 800bfae:	444e      	add	r6, r9
 800bfb0:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800bfb2:	2a00      	cmp	r2, #0
 800bfb4:	d1bf      	bne.n	800bf36 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800bfb6:	4691      	mov	r9, r2
 800bfb8:	e098      	b.n	800c0ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800bfba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800bfbc:	2b00      	cmp	r3, #0
 800bfbe:	f000 80ac 	beq.w	800c11a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 800bfc2:	f1bb 0f00 	cmp.w	fp, #0
 800bfc6:	d118      	bne.n	800bffa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800bfc8:	f8d8 0000 	ldr.w	r0, [r8]
 800bfcc:	990d      	ldr	r1, [sp, #52]	; 0x34
 800bfce:	6803      	ldr	r3, [r0, #0]
 800bfd0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bfd2:	4798      	blx	r3
 800bfd4:	4406      	add	r6, r0
 800bfd6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800bfd8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800bfda:	1af3      	subs	r3, r6, r3
 800bfdc:	4293      	cmp	r3, r2
 800bfde:	dd17      	ble.n	800c010 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800bfe0:	2c00      	cmp	r4, #0
 800bfe2:	f000 8098 	beq.w	800c116 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 800bfe6:	2c0a      	cmp	r4, #10
 800bfe8:	f040 8086 	bne.w	800c0f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 800bfec:	240a      	movs	r4, #10
 800bfee:	fab4 f084 	clz	r0, r4
 800bff2:	0940      	lsrs	r0, r0, #5
 800bff4:	b01f      	add	sp, #124	; 0x7c
 800bff6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bffa:	f8d8 0000 	ldr.w	r0, [r8]
 800bffe:	990d      	ldr	r1, [sp, #52]	; 0x34
 800c000:	6803      	ldr	r3, [r0, #0]
 800c002:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c004:	4798      	blx	r3
 800c006:	f1bb 0f01 	cmp.w	fp, #1
 800c00a:	eba6 0600 	sub.w	r6, r6, r0
 800c00e:	d0a4      	beq.n	800bf5a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 800c010:	981c      	ldr	r0, [sp, #112]	; 0x70
 800c012:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800c014:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800c018:	f9b3 7000 	ldrsh.w	r7, [r3]
 800c01c:	7b43      	ldrb	r3, [r0, #13]
 800c01e:	015b      	lsls	r3, r3, #5
 800c020:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800c024:	7983      	ldrb	r3, [r0, #6]
 800c026:	4431      	add	r1, r6
 800c028:	4313      	orrs	r3, r2
 800c02a:	440b      	add	r3, r1
 800c02c:	42bb      	cmp	r3, r7
 800c02e:	db5d      	blt.n	800c0ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800c030:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800c032:	4299      	cmp	r1, r3
 800c034:	da5a      	bge.n	800c0ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800c036:	f8d8 0000 	ldr.w	r0, [r8]
 800c03a:	6803      	ldr	r3, [r0, #0]
 800c03c:	42b7      	cmp	r7, r6
 800c03e:	bfc8      	it	gt
 800c040:	1bbf      	subgt	r7, r7, r6
 800c042:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c044:	bfcc      	ite	gt
 800c046:	b2bf      	uxthgt	r7, r7
 800c048:	2700      	movle	r7, #0
 800c04a:	4798      	blx	r3
 800c04c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800c04e:	7b5a      	ldrb	r2, [r3, #13]
 800c050:	00d1      	lsls	r1, r2, #3
 800c052:	f401 7580 	and.w	r5, r1, #256	; 0x100
 800c056:	7a19      	ldrb	r1, [r3, #8]
 800c058:	4329      	orrs	r1, r5
 800c05a:	0655      	lsls	r5, r2, #25
 800c05c:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 800c05e:	bf44      	itt	mi
 800c060:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800c064:	b209      	sxthmi	r1, r1
 800c066:	1945      	adds	r5, r0, r5
 800c068:	1a6d      	subs	r5, r5, r1
 800c06a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800c06c:	b2ad      	uxth	r5, r5
 800c06e:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800c072:	fa0f fa85 	sxth.w	sl, r5
 800c076:	4551      	cmp	r1, sl
 800c078:	dd3c      	ble.n	800c0f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 800c07a:	0112      	lsls	r2, r2, #4
 800c07c:	79d8      	ldrb	r0, [r3, #7]
 800c07e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800c082:	4302      	orrs	r2, r0
 800c084:	4492      	add	sl, r2
 800c086:	4551      	cmp	r1, sl
 800c088:	dc30      	bgt.n	800c0ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 800c08a:	1b4d      	subs	r5, r1, r5
 800c08c:	b22d      	sxth	r5, r5
 800c08e:	468a      	mov	sl, r1
 800c090:	9319      	str	r3, [sp, #100]	; 0x64
 800c092:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800c094:	f8d8 0000 	ldr.w	r0, [r8]
 800c098:	681a      	ldr	r2, [r3, #0]
 800c09a:	6801      	ldr	r1, [r0, #0]
 800c09c:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 800c09e:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800c0a0:	9313      	str	r3, [sp, #76]	; 0x4c
 800c0a2:	9218      	str	r2, [sp, #96]	; 0x60
 800c0a4:	6c09      	ldr	r1, [r1, #64]	; 0x40
 800c0a6:	4788      	blx	r1
 800c0a8:	f898 1006 	ldrb.w	r1, [r8, #6]
 800c0ac:	910b      	str	r1, [sp, #44]	; 0x2c
 800c0ae:	f898 100e 	ldrb.w	r1, [r8, #14]
 800c0b2:	910a      	str	r1, [sp, #40]	; 0x28
 800c0b4:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800c0b8:	9109      	str	r1, [sp, #36]	; 0x24
 800c0ba:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800c0be:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800c0c0:	9305      	str	r3, [sp, #20]
 800c0c2:	b2ad      	uxth	r5, r5
 800c0c4:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800c0c8:	e9cd 7502 	strd	r7, r5, [sp, #8]
 800c0cc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800c0ce:	9304      	str	r3, [sp, #16]
 800c0d0:	4437      	add	r7, r6
 800c0d2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800c0d4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800c0d6:	9206      	str	r2, [sp, #24]
 800c0d8:	b23f      	sxth	r7, r7
 800c0da:	f8cd a004 	str.w	sl, [sp, #4]
 800c0de:	9700      	str	r7, [sp, #0]
 800c0e0:	681a      	ldr	r2, [r3, #0]
 800c0e2:	9916      	ldr	r1, [sp, #88]	; 0x58
 800c0e4:	685b      	ldr	r3, [r3, #4]
 800c0e6:	9811      	ldr	r0, [sp, #68]	; 0x44
 800c0e8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800c0ea:	47a8      	blx	r5
 800c0ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800c0ee:	3301      	adds	r3, #1
 800c0f0:	930e      	str	r3, [sp, #56]	; 0x38
 800c0f2:	e6e1      	b.n	800beb8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 800c0f4:	2500      	movs	r5, #0
 800c0f6:	e7cb      	b.n	800c090 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 800c0f8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800c0fa:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800c0fc:	3501      	adds	r5, #1
 800c0fe:	429d      	cmp	r5, r3
 800c100:	f6bf af75 	bge.w	800bfee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800c104:	4659      	mov	r1, fp
 800c106:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800c108:	f7f6 fd2c 	bl	8002b64 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800c10c:	4604      	mov	r4, r0
 800c10e:	b110      	cbz	r0, 800c116 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 800c110:	280a      	cmp	r0, #10
 800c112:	d1f2      	bne.n	800c0fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 800c114:	e76a      	b.n	800bfec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800c116:	2400      	movs	r4, #0
 800c118:	e769      	b.n	800bfee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800c11a:	f1bb 0f00 	cmp.w	fp, #0
 800c11e:	f43f af5a 	beq.w	800bfd6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 800c122:	e775      	b.n	800c010 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0800c124 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800c124:	b530      	push	{r4, r5, lr}
 800c126:	8ac4      	ldrh	r4, [r0, #22]
 800c128:	8b45      	ldrh	r5, [r0, #26]
 800c12a:	8343      	strh	r3, [r0, #26]
 800c12c:	442c      	add	r4, r5
 800c12e:	1ae4      	subs	r4, r4, r3
 800c130:	82c4      	strh	r4, [r0, #22]
 800c132:	8b83      	ldrh	r3, [r0, #28]
 800c134:	8b04      	ldrh	r4, [r0, #24]
 800c136:	4422      	add	r2, r4
 800c138:	440c      	add	r4, r1
 800c13a:	1a59      	subs	r1, r3, r1
 800c13c:	83c2      	strh	r2, [r0, #30]
 800c13e:	8304      	strh	r4, [r0, #24]
 800c140:	8381      	strh	r1, [r0, #28]
 800c142:	bd30      	pop	{r4, r5, pc}

0800c144 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 800c144:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c148:	4604      	mov	r4, r0
 800c14a:	8a47      	ldrh	r7, [r0, #18]
 800c14c:	68c0      	ldr	r0, [r0, #12]
 800c14e:	6803      	ldr	r3, [r0, #0]
 800c150:	b085      	sub	sp, #20
 800c152:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c154:	4798      	blx	r3
 800c156:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 800c15a:	7a63      	ldrb	r3, [r4, #9]
 800c15c:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 800c160:	42b7      	cmp	r7, r6
 800c162:	f103 33ff 	add.w	r3, r3, #4294967295
 800c166:	bfac      	ite	ge
 800c168:	f04f 0900 	movge.w	r9, #0
 800c16c:	f04f 0901 	movlt.w	r9, #1
 800c170:	2b05      	cmp	r3, #5
 800c172:	d804      	bhi.n	800c17e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 800c174:	e8df f003 	tbb	[pc, r3]
 800c178:	470e0854 	.word	0x470e0854
 800c17c:	4c4c      	.short	0x4c4c
 800c17e:	2500      	movs	r5, #0
 800c180:	46a9      	mov	r9, r5
 800c182:	462e      	mov	r6, r5
 800c184:	462f      	mov	r7, r5
 800c186:	e00d      	b.n	800c1a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800c188:	42b7      	cmp	r7, r6
 800c18a:	bfb4      	ite	lt
 800c18c:	2600      	movlt	r6, #0
 800c18e:	2601      	movge	r6, #1
 800c190:	2500      	movs	r5, #0
 800c192:	e7f7      	b.n	800c184 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 800c194:	42b7      	cmp	r7, r6
 800c196:	464d      	mov	r5, r9
 800c198:	f04f 0900 	mov.w	r9, #0
 800c19c:	bfb4      	ite	lt
 800c19e:	2600      	movlt	r6, #0
 800c1a0:	2601      	movge	r6, #1
 800c1a2:	464f      	mov	r7, r9
 800c1a4:	f04f 0800 	mov.w	r8, #0
 800c1a8:	f8a4 8016 	strh.w	r8, [r4, #22]
 800c1ac:	f8a4 8018 	strh.w	r8, [r4, #24]
 800c1b0:	f8cd 8004 	str.w	r8, [sp, #4]
 800c1b4:	2300      	movs	r3, #0
 800c1b6:	9303      	str	r3, [sp, #12]
 800c1b8:	8823      	ldrh	r3, [r4, #0]
 800c1ba:	2b20      	cmp	r3, #32
 800c1bc:	d034      	beq.n	800c228 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 800c1be:	f242 010b 	movw	r1, #8203	; 0x200b
 800c1c2:	1a5a      	subs	r2, r3, r1
 800c1c4:	f1d2 0a00 	rsbs	sl, r2, #0
 800c1c8:	eb4a 0a02 	adc.w	sl, sl, r2
 800c1cc:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800c1d0:	4293      	cmp	r3, r2
 800c1d2:	d009      	beq.n	800c1e8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 800c1d4:	428b      	cmp	r3, r1
 800c1d6:	9a01      	ldr	r2, [sp, #4]
 800c1d8:	bf18      	it	ne
 800c1da:	461a      	movne	r2, r3
 800c1dc:	9201      	str	r2, [sp, #4]
 800c1de:	bf0c      	ite	eq
 800c1e0:	f04f 0a01 	moveq.w	sl, #1
 800c1e4:	f04f 0a00 	movne.w	sl, #0
 800c1e8:	ab03      	add	r3, sp, #12
 800c1ea:	68e2      	ldr	r2, [r4, #12]
 800c1ec:	7a21      	ldrb	r1, [r4, #8]
 800c1ee:	6860      	ldr	r0, [r4, #4]
 800c1f0:	f002 fd1a 	bl	800ec28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c1f4:	8020      	strh	r0, [r4, #0]
 800c1f6:	b9d8      	cbnz	r0, 800c230 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 800c1f8:	8ba2      	ldrh	r2, [r4, #28]
 800c1fa:	2300      	movs	r3, #0
 800c1fc:	4611      	mov	r1, r2
 800c1fe:	4620      	mov	r0, r4
 800c200:	f7ff ff90 	bl	800c124 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800c204:	e06e      	b.n	800c2e4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 800c206:	2500      	movs	r5, #0
 800c208:	46a9      	mov	r9, r5
 800c20a:	462e      	mov	r6, r5
 800c20c:	2701      	movs	r7, #1
 800c20e:	e7c9      	b.n	800c1a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800c210:	42b7      	cmp	r7, r6
 800c212:	f04f 0500 	mov.w	r5, #0
 800c216:	bfb4      	ite	lt
 800c218:	2700      	movlt	r7, #0
 800c21a:	2701      	movge	r7, #1
 800c21c:	462e      	mov	r6, r5
 800c21e:	e7c1      	b.n	800c1a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800c220:	2500      	movs	r5, #0
 800c222:	46a9      	mov	r9, r5
 800c224:	2601      	movs	r6, #1
 800c226:	e7ad      	b.n	800c184 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 800c228:	9301      	str	r3, [sp, #4]
 800c22a:	f04f 0a01 	mov.w	sl, #1
 800c22e:	e7db      	b.n	800c1e8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 800c230:	8b63      	ldrh	r3, [r4, #26]
 800c232:	280a      	cmp	r0, #10
 800c234:	f103 0301 	add.w	r3, r3, #1
 800c238:	8363      	strh	r3, [r4, #26]
 800c23a:	d0dd      	beq.n	800c1f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 800c23c:	9a03      	ldr	r2, [sp, #12]
 800c23e:	bb62      	cbnz	r2, 800c29a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 800c240:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800c244:	4298      	cmp	r0, r3
 800c246:	d003      	beq.n	800c250 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 800c248:	f242 030b 	movw	r3, #8203	; 0x200b
 800c24c:	4298      	cmp	r0, r3
 800c24e:	d1b1      	bne.n	800c1b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c250:	8823      	ldrh	r3, [r4, #0]
 800c252:	8ba1      	ldrh	r1, [r4, #28]
 800c254:	2b20      	cmp	r3, #32
 800c256:	d003      	beq.n	800c260 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 800c258:	f242 000b 	movw	r0, #8203	; 0x200b
 800c25c:	4283      	cmp	r3, r0
 800c25e:	d131      	bne.n	800c2c4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 800c260:	f1ba 0f00 	cmp.w	sl, #0
 800c264:	bf0a      	itet	eq
 800c266:	4688      	moveq	r8, r1
 800c268:	4650      	movne	r0, sl
 800c26a:	2001      	moveq	r0, #1
 800c26c:	440a      	add	r2, r1
 800c26e:	8b23      	ldrh	r3, [r4, #24]
 800c270:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800c274:	b292      	uxth	r2, r2
 800c276:	83a2      	strh	r2, [r4, #28]
 800c278:	4413      	add	r3, r2
 800c27a:	f1b9 0f00 	cmp.w	r9, #0
 800c27e:	d102      	bne.n	800c286 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 800c280:	2d00      	cmp	r5, #0
 800c282:	d042      	beq.n	800c30a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 800c284:	b300      	cbz	r0, 800c2c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 800c286:	8c21      	ldrh	r1, [r4, #32]
 800c288:	4419      	add	r1, r3
 800c28a:	458c      	cmp	ip, r1
 800c28c:	da37      	bge.n	800c2fe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 800c28e:	8ae1      	ldrh	r1, [r4, #22]
 800c290:	2900      	cmp	r1, #0
 800c292:	d034      	beq.n	800c2fe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 800c294:	4563      	cmp	r3, ip
 800c296:	dd8d      	ble.n	800c1b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c298:	e01d      	b.n	800c2d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 800c29a:	8893      	ldrh	r3, [r2, #4]
 800c29c:	8023      	strh	r3, [r4, #0]
 800c29e:	f892 b00d 	ldrb.w	fp, [r2, #13]
 800c2a2:	9901      	ldr	r1, [sp, #4]
 800c2a4:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 800c2a8:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 800c2ac:	f892 b00a 	ldrb.w	fp, [r2, #10]
 800c2b0:	ea4b 0b00 	orr.w	fp, fp, r0
 800c2b4:	68e0      	ldr	r0, [r4, #12]
 800c2b6:	6803      	ldr	r3, [r0, #0]
 800c2b8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c2ba:	4798      	blx	r3
 800c2bc:	eb0b 0200 	add.w	r2, fp, r0
 800c2c0:	b292      	uxth	r2, r2
 800c2c2:	e7c5      	b.n	800c250 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 800c2c4:	2000      	movs	r0, #0
 800c2c6:	e7d1      	b.n	800c26c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 800c2c8:	4563      	cmp	r3, ip
 800c2ca:	f77f af73 	ble.w	800c1b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c2ce:	8ae3      	ldrh	r3, [r4, #22]
 800c2d0:	2b00      	cmp	r3, #0
 800c2d2:	f43f af6f 	beq.w	800c1b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c2d6:	2301      	movs	r3, #1
 800c2d8:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 800c2dc:	8c22      	ldrh	r2, [r4, #32]
 800c2de:	8be3      	ldrh	r3, [r4, #30]
 800c2e0:	4413      	add	r3, r2
 800c2e2:	83e3      	strh	r3, [r4, #30]
 800c2e4:	68e0      	ldr	r0, [r4, #12]
 800c2e6:	6803      	ldr	r3, [r0, #0]
 800c2e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c2ea:	4798      	blx	r3
 800c2ec:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 800c2f0:	4418      	add	r0, r3
 800c2f2:	8a63      	ldrh	r3, [r4, #18]
 800c2f4:	1a18      	subs	r0, r3, r0
 800c2f6:	8260      	strh	r0, [r4, #18]
 800c2f8:	b005      	add	sp, #20
 800c2fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c2fe:	2300      	movs	r3, #0
 800c300:	4611      	mov	r1, r2
 800c302:	4620      	mov	r0, r4
 800c304:	f7ff ff0e 	bl	800c124 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800c308:	e754      	b.n	800c1b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c30a:	4563      	cmp	r3, ip
 800c30c:	dd14      	ble.n	800c338 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 800c30e:	b117      	cbz	r7, 800c316 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 800c310:	2301      	movs	r3, #1
 800c312:	460a      	mov	r2, r1
 800c314:	e772      	b.n	800c1fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 800c316:	2e00      	cmp	r6, #0
 800c318:	f43f af4c 	beq.w	800c1b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c31c:	2800      	cmp	r0, #0
 800c31e:	f47f af49 	bne.w	800c1b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c322:	f1ba 0f00 	cmp.w	sl, #0
 800c326:	d002      	beq.n	800c32e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 800c328:	2301      	movs	r3, #1
 800c32a:	4642      	mov	r2, r8
 800c32c:	e767      	b.n	800c1fe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 800c32e:	8ae3      	ldrh	r3, [r4, #22]
 800c330:	2b00      	cmp	r3, #0
 800c332:	f43f af3f 	beq.w	800c1b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c336:	e7d5      	b.n	800c2e4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 800c338:	2800      	cmp	r0, #0
 800c33a:	f47f af3b 	bne.w	800c1b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c33e:	f1ba 0f00 	cmp.w	sl, #0
 800c342:	f43f af37 	beq.w	800c1b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800c346:	2301      	movs	r3, #1
 800c348:	4642      	mov	r2, r8
 800c34a:	e7da      	b.n	800c302 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

0800c34c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800c34c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c34e:	4605      	mov	r5, r0
 800c350:	b08f      	sub	sp, #60	; 0x3c
 800c352:	4617      	mov	r7, r2
 800c354:	461c      	mov	r4, r3
 800c356:	460e      	mov	r6, r1
 800c358:	b1d1      	cbz	r1, 800c390 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800c35a:	681b      	ldr	r3, [r3, #0]
 800c35c:	4620      	mov	r0, r4
 800c35e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c360:	4798      	blx	r3
 800c362:	4240      	negs	r0, r0
 800c364:	b200      	sxth	r0, r0
 800c366:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800c36a:	9603      	str	r6, [sp, #12]
 800c36c:	9700      	str	r7, [sp, #0]
 800c36e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c372:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 800c376:	4629      	mov	r1, r5
 800c378:	a805      	add	r0, sp, #20
 800c37a:	f7ff fcbf 	bl	800bcfc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800c37e:	2401      	movs	r4, #1
 800c380:	a805      	add	r0, sp, #20
 800c382:	f7ff fedf 	bl	800c144 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800c386:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800c38a:	b163      	cbz	r3, 800c3a6 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 800c38c:	3401      	adds	r4, #1
 800c38e:	e7f7      	b.n	800c380 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800c390:	f002 fd18 	bl	800edc4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c394:	2401      	movs	r4, #1
 800c396:	280a      	cmp	r0, #10
 800c398:	4628      	mov	r0, r5
 800c39a:	bf08      	it	eq
 800c39c:	3401      	addeq	r4, #1
 800c39e:	f002 fd11 	bl	800edc4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c3a2:	2800      	cmp	r0, #0
 800c3a4:	d1f7      	bne.n	800c396 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 800c3a6:	b2a0      	uxth	r0, r4
 800c3a8:	b00f      	add	sp, #60	; 0x3c
 800c3aa:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c3ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800c3ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c3b0:	b0e3      	sub	sp, #396	; 0x18c
 800c3b2:	461c      	mov	r4, r3
 800c3b4:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 800c3b6:	4683      	mov	fp, r0
 800c3b8:	4688      	mov	r8, r1
 800c3ba:	2b00      	cmp	r3, #0
 800c3bc:	f000 810f 	beq.w	800c5de <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 800c3c0:	6823      	ldr	r3, [r4, #0]
 800c3c2:	2b00      	cmp	r3, #0
 800c3c4:	f000 810b 	beq.w	800c5de <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 800c3c8:	7ba3      	ldrb	r3, [r4, #14]
 800c3ca:	2b00      	cmp	r3, #0
 800c3cc:	f000 8107 	beq.w	800c5de <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 800c3d0:	6810      	ldr	r0, [r2, #0]
 800c3d2:	6851      	ldr	r1, [r2, #4]
 800c3d4:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 800c3d8:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800c3dc:	ad0a      	add	r5, sp, #40	; 0x28
 800c3de:	462b      	mov	r3, r5
 800c3e0:	c303      	stmia	r3!, {r0, r1}
 800c3e2:	2100      	movs	r1, #0
 800c3e4:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800c3e8:	910c      	str	r1, [sp, #48]	; 0x30
 800c3ea:	79a2      	ldrb	r2, [r4, #6]
 800c3ec:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800c3f0:	a90c      	add	r1, sp, #48	; 0x30
 800c3f2:	4628      	mov	r0, r5
 800c3f4:	f7ff fd01 	bl	800bdfa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800c3f8:	a90c      	add	r1, sp, #48	; 0x30
 800c3fa:	4608      	mov	r0, r1
 800c3fc:	79a2      	ldrb	r2, [r4, #6]
 800c3fe:	f7ff fcfc 	bl	800bdfa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800c402:	a817      	add	r0, sp, #92	; 0x5c
 800c404:	f002 f8b2 	bl	800e56c <_ZN8touchgfx12TextProviderC1Ev>
 800c408:	6820      	ldr	r0, [r4, #0]
 800c40a:	6803      	ldr	r3, [r0, #0]
 800c40c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c40e:	4798      	blx	r3
 800c410:	4606      	mov	r6, r0
 800c412:	6820      	ldr	r0, [r4, #0]
 800c414:	6803      	ldr	r3, [r0, #0]
 800c416:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800c418:	4798      	blx	r3
 800c41a:	4633      	mov	r3, r6
 800c41c:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 800c41e:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 800c420:	9000      	str	r0, [sp, #0]
 800c422:	a817      	add	r0, sp, #92	; 0x5c
 800c424:	f002 f8fd 	bl	800e622 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c428:	6820      	ldr	r0, [r4, #0]
 800c42a:	f894 a004 	ldrb.w	sl, [r4, #4]
 800c42e:	6803      	ldr	r3, [r0, #0]
 800c430:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c432:	4798      	blx	r3
 800c434:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 800c438:	6823      	ldr	r3, [r4, #0]
 800c43a:	4607      	mov	r7, r0
 800c43c:	4406      	add	r6, r0
 800c43e:	a830      	add	r0, sp, #192	; 0xc0
 800c440:	f893 9009 	ldrb.w	r9, [r3, #9]
 800c444:	f002 f892 	bl	800e56c <_ZN8touchgfx12TextProviderC1Ev>
 800c448:	7c23      	ldrb	r3, [r4, #16]
 800c44a:	b17b      	cbz	r3, 800c46c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 800c44c:	6820      	ldr	r0, [r4, #0]
 800c44e:	6803      	ldr	r3, [r0, #0]
 800c450:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c452:	4798      	blx	r3
 800c454:	9009      	str	r0, [sp, #36]	; 0x24
 800c456:	6820      	ldr	r0, [r4, #0]
 800c458:	6802      	ldr	r2, [r0, #0]
 800c45a:	6d12      	ldr	r2, [r2, #80]	; 0x50
 800c45c:	4790      	blx	r2
 800c45e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c460:	9000      	str	r0, [sp, #0]
 800c462:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 800c464:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 800c466:	a830      	add	r0, sp, #192	; 0xc0
 800c468:	f002 f8db 	bl	800e622 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800c46c:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 800c470:	7be2      	ldrb	r2, [r4, #15]
 800c472:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800c476:	1a8a      	subs	r2, r1, r2
 800c478:	7c21      	ldrb	r1, [r4, #16]
 800c47a:	9103      	str	r1, [sp, #12]
 800c47c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 800c480:	9102      	str	r1, [sp, #8]
 800c482:	6821      	ldr	r1, [r4, #0]
 800c484:	9101      	str	r1, [sp, #4]
 800c486:	7961      	ldrb	r1, [r4, #5]
 800c488:	9100      	str	r1, [sp, #0]
 800c48a:	b292      	uxth	r2, r2
 800c48c:	a930      	add	r1, sp, #192	; 0xc0
 800c48e:	a80e      	add	r0, sp, #56	; 0x38
 800c490:	f7ff fc34 	bl	800bcfc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800c494:	2e00      	cmp	r6, #0
 800c496:	dc5b      	bgt.n	800c550 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 800c498:	af17      	add	r7, sp, #92	; 0x5c
 800c49a:	f04f 0900 	mov.w	r9, #0
 800c49e:	7c23      	ldrb	r3, [r4, #16]
 800c4a0:	2b00      	cmp	r3, #0
 800c4a2:	f000 80ae 	beq.w	800c602 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800c4a6:	a80e      	add	r0, sp, #56	; 0x38
 800c4a8:	f7ff fe4c 	bl	800c144 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800c4ac:	f1ba 0f00 	cmp.w	sl, #0
 800c4b0:	f000 80a2 	beq.w	800c5f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24c>
 800c4b4:	7c23      	ldrb	r3, [r4, #16]
 800c4b6:	9309      	str	r3, [sp, #36]	; 0x24
 800c4b8:	2264      	movs	r2, #100	; 0x64
 800c4ba:	4639      	mov	r1, r7
 800c4bc:	a849      	add	r0, sp, #292	; 0x124
 800c4be:	f00f fa8b 	bl	801b9d8 <memcpy>
 800c4c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c4c4:	2b00      	cmp	r3, #0
 800c4c6:	f000 80a4 	beq.w	800c612 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x266>
 800c4ca:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 800c4ce:	7922      	ldrb	r2, [r4, #4]
 800c4d0:	2a01      	cmp	r2, #1
 800c4d2:	f040 8087 	bne.w	800c5e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800c4d6:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 800c4da:	1ac0      	subs	r0, r0, r3
 800c4dc:	2302      	movs	r3, #2
 800c4de:	fb90 f0f3 	sdiv	r0, r0, r3
 800c4e2:	b200      	sxth	r0, r0
 800c4e4:	7c23      	ldrb	r3, [r4, #16]
 800c4e6:	2b00      	cmp	r3, #0
 800c4e8:	f000 8088 	beq.w	800c5fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x250>
 800c4ec:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 800c4f0:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 800c4f4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800c4f8:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800c4fc:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 800c500:	4410      	add	r0, r2
 800c502:	b200      	sxth	r0, r0
 800c504:	9000      	str	r0, [sp, #0]
 800c506:	e9cd 9703 	strd	r9, r7, [sp, #12]
 800c50a:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800c50e:	4642      	mov	r2, r8
 800c510:	2100      	movs	r1, #0
 800c512:	4658      	mov	r0, fp
 800c514:	f7ff fca2 	bl	800be5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800c518:	2800      	cmp	r0, #0
 800c51a:	d160      	bne.n	800c5de <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 800c51c:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 800c520:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 800c524:	b2b2      	uxth	r2, r6
 800c526:	4413      	add	r3, r2
 800c528:	1a8a      	subs	r2, r1, r2
 800c52a:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 800c52e:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 800c532:	b21b      	sxth	r3, r3
 800c534:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800c538:	2a00      	cmp	r2, #0
 800c53a:	d150      	bne.n	800c5de <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 800c53c:	6822      	ldr	r2, [r4, #0]
 800c53e:	8869      	ldrh	r1, [r5, #2]
 800c540:	7a12      	ldrb	r2, [r2, #8]
 800c542:	1a9b      	subs	r3, r3, r2
 800c544:	88ea      	ldrh	r2, [r5, #6]
 800c546:	440a      	add	r2, r1
 800c548:	b212      	sxth	r2, r2
 800c54a:	4293      	cmp	r3, r2
 800c54c:	dda7      	ble.n	800c49e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 800c54e:	e046      	b.n	800c5de <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 800c550:	7c23      	ldrb	r3, [r4, #16]
 800c552:	444f      	add	r7, r9
 800c554:	b1c3      	cbz	r3, 800c588 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 800c556:	f64f 79ff 	movw	r9, #65535	; 0xffff
 800c55a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800c55e:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800c562:	443b      	add	r3, r7
 800c564:	4293      	cmp	r3, r2
 800c566:	da97      	bge.n	800c498 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800c568:	a80e      	add	r0, sp, #56	; 0x38
 800c56a:	f7ff fdeb 	bl	800c144 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800c56e:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 800c572:	3b01      	subs	r3, #1
 800c574:	b29b      	uxth	r3, r3
 800c576:	454b      	cmp	r3, r9
 800c578:	9309      	str	r3, [sp, #36]	; 0x24
 800c57a:	d021      	beq.n	800c5c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 800c57c:	7961      	ldrb	r1, [r4, #5]
 800c57e:	a817      	add	r0, sp, #92	; 0x5c
 800c580:	f7f6 faf0 	bl	8002b64 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800c584:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c586:	e7f4      	b.n	800c572 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 800c588:	fa1f f986 	uxth.w	r9, r6
 800c58c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800c590:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800c594:	443b      	add	r3, r7
 800c596:	4293      	cmp	r3, r2
 800c598:	f6bf af7e 	bge.w	800c498 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 800c59c:	a817      	add	r0, sp, #92	; 0x5c
 800c59e:	f002 fc11 	bl	800edc4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c5a2:	b1e0      	cbz	r0, 800c5de <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 800c5a4:	280a      	cmp	r0, #10
 800c5a6:	d1f1      	bne.n	800c58c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800c5a8:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 800c5ac:	444b      	add	r3, r9
 800c5ae:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800c5b2:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800c5b6:	eba3 0309 	sub.w	r3, r3, r9
 800c5ba:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800c5be:	e7e5      	b.n	800c58c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 800c5c0:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 800c5c4:	b2b3      	uxth	r3, r6
 800c5c6:	441a      	add	r2, r3
 800c5c8:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800c5cc:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 800c5d0:	1ad3      	subs	r3, r2, r3
 800c5d2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800c5d6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800c5da:	2b00      	cmp	r3, #0
 800c5dc:	d1bd      	bne.n	800c55a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 800c5de:	b063      	add	sp, #396	; 0x18c
 800c5e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c5e4:	2a02      	cmp	r2, #2
 800c5e6:	d105      	bne.n	800c5f4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x248>
 800c5e8:	7be2      	ldrb	r2, [r4, #15]
 800c5ea:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 800c5ee:	1a80      	subs	r0, r0, r2
 800c5f0:	1ac0      	subs	r0, r0, r3
 800c5f2:	e776      	b.n	800c4e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 800c5f4:	2000      	movs	r0, #0
 800c5f6:	e775      	b.n	800c4e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800c5f8:	7be0      	ldrb	r0, [r4, #15]
 800c5fa:	e773      	b.n	800c4e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 800c5fc:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800c600:	e776      	b.n	800c4f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 800c602:	f1ba 0f00 	cmp.w	sl, #0
 800c606:	d0f7      	beq.n	800c5f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24c>
 800c608:	2264      	movs	r2, #100	; 0x64
 800c60a:	4639      	mov	r1, r7
 800c60c:	a849      	add	r0, sp, #292	; 0x124
 800c60e:	f00f f9e3 	bl	801b9d8 <memcpy>
 800c612:	2300      	movs	r3, #0
 800c614:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800c618:	6821      	ldr	r1, [r4, #0]
 800c61a:	a849      	add	r0, sp, #292	; 0x124
 800c61c:	f7ff fbb1 	bl	800bd82 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800c620:	b203      	sxth	r3, r0
 800c622:	e754      	b.n	800c4ce <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0800c624 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800c624:	2b03      	cmp	r3, #3
 800c626:	d818      	bhi.n	800c65a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800c628:	e8df f003 	tbb	[pc, r3]
 800c62c:	130d0602 	.word	0x130d0602
 800c630:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c634:	1850      	adds	r0, r2, r1
 800c636:	4770      	bx	lr
 800c638:	8803      	ldrh	r3, [r0, #0]
 800c63a:	8880      	ldrh	r0, [r0, #4]
 800c63c:	4418      	add	r0, r3
 800c63e:	b200      	sxth	r0, r0
 800c640:	1a80      	subs	r0, r0, r2
 800c642:	3801      	subs	r0, #1
 800c644:	4770      	bx	lr
 800c646:	8803      	ldrh	r3, [r0, #0]
 800c648:	8880      	ldrh	r0, [r0, #4]
 800c64a:	4418      	add	r0, r3
 800c64c:	b200      	sxth	r0, r0
 800c64e:	1a40      	subs	r0, r0, r1
 800c650:	e7f7      	b.n	800c642 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800c652:	f9b0 0000 	ldrsh.w	r0, [r0]
 800c656:	4410      	add	r0, r2
 800c658:	4770      	bx	lr
 800c65a:	2000      	movs	r0, #0
 800c65c:	4770      	bx	lr

0800c65e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800c65e:	2b03      	cmp	r3, #3
 800c660:	d817      	bhi.n	800c692 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800c662:	e8df f003 	tbb	[pc, r3]
 800c666:	0602      	.short	0x0602
 800c668:	1009      	.short	0x1009
 800c66a:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800c66e:	1850      	adds	r0, r2, r1
 800c670:	4770      	bx	lr
 800c672:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800c676:	e7fa      	b.n	800c66e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800c678:	8843      	ldrh	r3, [r0, #2]
 800c67a:	88c0      	ldrh	r0, [r0, #6]
 800c67c:	4418      	add	r0, r3
 800c67e:	b200      	sxth	r0, r0
 800c680:	1a80      	subs	r0, r0, r2
 800c682:	3801      	subs	r0, #1
 800c684:	4770      	bx	lr
 800c686:	8843      	ldrh	r3, [r0, #2]
 800c688:	88c0      	ldrh	r0, [r0, #6]
 800c68a:	4418      	add	r0, r3
 800c68c:	b200      	sxth	r0, r0
 800c68e:	1a40      	subs	r0, r0, r1
 800c690:	e7f7      	b.n	800c682 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800c692:	2000      	movs	r0, #0
 800c694:	4770      	bx	lr
	...

0800c698 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800c698:	4b01      	ldr	r3, [pc, #4]	; (800c6a0 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800c69a:	2200      	movs	r2, #0
 800c69c:	601a      	str	r2, [r3, #0]
 800c69e:	4770      	bx	lr
 800c6a0:	20012678 	.word	0x20012678

0800c6a4 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800c6a4:	4603      	mov	r3, r0
 800c6a6:	b1c8      	cbz	r0, 800c6dc <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800c6a8:	0c02      	lsrs	r2, r0, #16
 800c6aa:	0412      	lsls	r2, r2, #16
 800c6ac:	b9a2      	cbnz	r2, 800c6d8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800c6ae:	0403      	lsls	r3, r0, #16
 800c6b0:	2010      	movs	r0, #16
 800c6b2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800c6b6:	bf04      	itt	eq
 800c6b8:	021b      	lsleq	r3, r3, #8
 800c6ba:	3008      	addeq	r0, #8
 800c6bc:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800c6c0:	bf04      	itt	eq
 800c6c2:	011b      	lsleq	r3, r3, #4
 800c6c4:	3004      	addeq	r0, #4
 800c6c6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800c6ca:	bf04      	itt	eq
 800c6cc:	009b      	lsleq	r3, r3, #2
 800c6ce:	3002      	addeq	r0, #2
 800c6d0:	2b00      	cmp	r3, #0
 800c6d2:	db04      	blt.n	800c6de <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800c6d4:	3001      	adds	r0, #1
 800c6d6:	4770      	bx	lr
 800c6d8:	2000      	movs	r0, #0
 800c6da:	e7ea      	b.n	800c6b2 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800c6dc:	2020      	movs	r0, #32
 800c6de:	4770      	bx	lr

0800c6e0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800c6e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c6e4:	b087      	sub	sp, #28
 800c6e6:	4681      	mov	r9, r0
 800c6e8:	4698      	mov	r8, r3
 800c6ea:	4610      	mov	r0, r2
 800c6ec:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800c6f0:	460d      	mov	r5, r1
 800c6f2:	b981      	cbnz	r1, 800c716 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 800c6f4:	b14b      	cbz	r3, 800c70a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 800c6f6:	460b      	mov	r3, r1
 800c6f8:	e9cd 4700 	strd	r4, r7, [sp]
 800c6fc:	464a      	mov	r2, r9
 800c6fe:	4641      	mov	r1, r8
 800c700:	f7ff ffee 	bl	800c6e0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c704:	b007      	add	sp, #28
 800c706:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c70a:	f04f 33ff 	mov.w	r3, #4294967295
 800c70e:	603b      	str	r3, [r7, #0]
 800c710:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800c714:	e7f6      	b.n	800c704 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800c716:	fa32 fa01 	lsrs.w	sl, r2, r1
 800c71a:	d107      	bne.n	800c72c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 800c71c:	fb09 f602 	mul.w	r6, r9, r2
 800c720:	fbb6 f0f4 	udiv	r0, r6, r4
 800c724:	fb04 6610 	mls	r6, r4, r0, r6
 800c728:	603e      	str	r6, [r7, #0]
 800c72a:	e7eb      	b.n	800c704 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800c72c:	2601      	movs	r6, #1
 800c72e:	408e      	lsls	r6, r1
 800c730:	3e01      	subs	r6, #1
 800c732:	4016      	ands	r6, r2
 800c734:	fa09 fb01 	lsl.w	fp, r9, r1
 800c738:	4630      	mov	r0, r6
 800c73a:	fbbb f3f4 	udiv	r3, fp, r4
 800c73e:	9302      	str	r3, [sp, #8]
 800c740:	fb0a f303 	mul.w	r3, sl, r3
 800c744:	9303      	str	r3, [sp, #12]
 800c746:	f7ff ffad 	bl	800c6a4 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c74a:	464a      	mov	r2, r9
 800c74c:	460b      	mov	r3, r1
 800c74e:	e9cd 4700 	strd	r4, r7, [sp]
 800c752:	4601      	mov	r1, r0
 800c754:	4630      	mov	r0, r6
 800c756:	f7ff ffc3 	bl	800c6e0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c75a:	9b02      	ldr	r3, [sp, #8]
 800c75c:	fb04 bb13 	mls	fp, r4, r3, fp
 800c760:	4606      	mov	r6, r0
 800c762:	4658      	mov	r0, fp
 800c764:	eb05 0108 	add.w	r1, r5, r8
 800c768:	f7ff ff9c 	bl	800c6a4 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c76c:	ab05      	add	r3, sp, #20
 800c76e:	e9cd 4300 	strd	r4, r3, [sp]
 800c772:	465a      	mov	r2, fp
 800c774:	4603      	mov	r3, r0
 800c776:	4650      	mov	r0, sl
 800c778:	f7ff ffb2 	bl	800c6e0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c77c:	6839      	ldr	r1, [r7, #0]
 800c77e:	9a05      	ldr	r2, [sp, #20]
 800c780:	9b03      	ldr	r3, [sp, #12]
 800c782:	4411      	add	r1, r2
 800c784:	fbb1 f2f4 	udiv	r2, r1, r4
 800c788:	18d3      	adds	r3, r2, r3
 800c78a:	441e      	add	r6, r3
 800c78c:	fb04 1412 	mls	r4, r4, r2, r1
 800c790:	4430      	add	r0, r6
 800c792:	603c      	str	r4, [r7, #0]
 800c794:	e7b6      	b.n	800c704 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0800c796 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800c796:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c79a:	b085      	sub	sp, #20
 800c79c:	f1b0 0900 	subs.w	r9, r0, #0
 800c7a0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800c7a2:	461d      	mov	r5, r3
 800c7a4:	bfbf      	itttt	lt
 800c7a6:	6823      	ldrlt	r3, [r4, #0]
 800c7a8:	425b      	neglt	r3, r3
 800c7aa:	f1c9 0900 	rsblt	r9, r9, #0
 800c7ae:	6023      	strlt	r3, [r4, #0]
 800c7b0:	bfb4      	ite	lt
 800c7b2:	f04f 36ff 	movlt.w	r6, #4294967295
 800c7b6:	2601      	movge	r6, #1
 800c7b8:	2a00      	cmp	r2, #0
 800c7ba:	4617      	mov	r7, r2
 800c7bc:	da04      	bge.n	800c7c8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800c7be:	6823      	ldr	r3, [r4, #0]
 800c7c0:	425b      	negs	r3, r3
 800c7c2:	4257      	negs	r7, r2
 800c7c4:	4276      	negs	r6, r6
 800c7c6:	6023      	str	r3, [r4, #0]
 800c7c8:	2d00      	cmp	r5, #0
 800c7ca:	4638      	mov	r0, r7
 800c7cc:	bfba      	itte	lt
 800c7ce:	426d      	neglt	r5, r5
 800c7d0:	f04f 38ff 	movlt.w	r8, #4294967295
 800c7d4:	f04f 0801 	movge.w	r8, #1
 800c7d8:	f7ff ff64 	bl	800c6a4 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800c7dc:	ab03      	add	r3, sp, #12
 800c7de:	e9cd 5300 	strd	r5, r3, [sp]
 800c7e2:	463a      	mov	r2, r7
 800c7e4:	4603      	mov	r3, r0
 800c7e6:	4648      	mov	r0, r9
 800c7e8:	f7ff ff7a 	bl	800c6e0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800c7ec:	6823      	ldr	r3, [r4, #0]
 800c7ee:	9a03      	ldr	r2, [sp, #12]
 800c7f0:	4546      	cmp	r6, r8
 800c7f2:	441a      	add	r2, r3
 800c7f4:	fb92 f3f5 	sdiv	r3, r2, r5
 800c7f8:	4418      	add	r0, r3
 800c7fa:	bf18      	it	ne
 800c7fc:	4240      	negne	r0, r0
 800c7fe:	fb05 2313 	mls	r3, r5, r3, r2
 800c802:	1c72      	adds	r2, r6, #1
 800c804:	6023      	str	r3, [r4, #0]
 800c806:	d105      	bne.n	800c814 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800c808:	2b00      	cmp	r3, #0
 800c80a:	f1c3 0200 	rsb	r2, r3, #0
 800c80e:	db0b      	blt.n	800c828 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800c810:	6022      	str	r2, [r4, #0]
 800c812:	e006      	b.n	800c822 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c814:	2e01      	cmp	r6, #1
 800c816:	d104      	bne.n	800c822 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c818:	2b00      	cmp	r3, #0
 800c81a:	da02      	bge.n	800c822 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800c81c:	442b      	add	r3, r5
 800c81e:	3801      	subs	r0, #1
 800c820:	6023      	str	r3, [r4, #0]
 800c822:	b005      	add	sp, #20
 800c824:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c828:	3801      	subs	r0, #1
 800c82a:	1b52      	subs	r2, r2, r5
 800c82c:	e7f0      	b.n	800c810 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0800c830 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800c830:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800c834:	4c1c      	ldr	r4, [pc, #112]	; (800c8a8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800c836:	6807      	ldr	r7, [r0, #0]
 800c838:	69a3      	ldr	r3, [r4, #24]
 800c83a:	4605      	mov	r5, r0
 800c83c:	b92b      	cbnz	r3, 800c84a <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800c83e:	6840      	ldr	r0, [r0, #4]
 800c840:	e9c5 7000 	strd	r7, r0, [r5]
 800c844:	b004      	add	sp, #16
 800c846:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c84a:	68a2      	ldr	r2, [r4, #8]
 800c84c:	6820      	ldr	r0, [r4, #0]
 800c84e:	ae04      	add	r6, sp, #16
 800c850:	f04f 0802 	mov.w	r8, #2
 800c854:	fb93 f1f8 	sdiv	r1, r3, r8
 800c858:	440a      	add	r2, r1
 800c85a:	f846 2d04 	str.w	r2, [r6, #-4]!
 800c85e:	69e1      	ldr	r1, [r4, #28]
 800c860:	9600      	str	r6, [sp, #0]
 800c862:	463a      	mov	r2, r7
 800c864:	f7ff ff97 	bl	800c796 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c868:	69a3      	ldr	r3, [r4, #24]
 800c86a:	686a      	ldr	r2, [r5, #4]
 800c86c:	6a21      	ldr	r1, [r4, #32]
 800c86e:	9600      	str	r6, [sp, #0]
 800c870:	4607      	mov	r7, r0
 800c872:	6860      	ldr	r0, [r4, #4]
 800c874:	f7ff ff8f 	bl	800c796 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c878:	6962      	ldr	r2, [r4, #20]
 800c87a:	69a3      	ldr	r3, [r4, #24]
 800c87c:	fb93 f8f8 	sdiv	r8, r3, r8
 800c880:	4442      	add	r2, r8
 800c882:	9203      	str	r2, [sp, #12]
 800c884:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c886:	682a      	ldr	r2, [r5, #0]
 800c888:	9600      	str	r6, [sp, #0]
 800c88a:	4407      	add	r7, r0
 800c88c:	68e0      	ldr	r0, [r4, #12]
 800c88e:	f7ff ff82 	bl	800c796 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c892:	9600      	str	r6, [sp, #0]
 800c894:	4680      	mov	r8, r0
 800c896:	69a3      	ldr	r3, [r4, #24]
 800c898:	686a      	ldr	r2, [r5, #4]
 800c89a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800c89c:	6920      	ldr	r0, [r4, #16]
 800c89e:	f7ff ff7a 	bl	800c796 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800c8a2:	4440      	add	r0, r8
 800c8a4:	e7cc      	b.n	800c840 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800c8a6:	bf00      	nop
 800c8a8:	2001267c 	.word	0x2001267c

0800c8ac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800c8ac:	4b07      	ldr	r3, [pc, #28]	; (800c8cc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800c8ae:	781b      	ldrb	r3, [r3, #0]
 800c8b0:	2b01      	cmp	r3, #1
 800c8b2:	d109      	bne.n	800c8c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800c8b4:	f9b1 3000 	ldrsh.w	r3, [r1]
 800c8b8:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c8bc:	8003      	strh	r3, [r0, #0]
 800c8be:	4b04      	ldr	r3, [pc, #16]	; (800c8d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800c8c0:	881b      	ldrh	r3, [r3, #0]
 800c8c2:	3b01      	subs	r3, #1
 800c8c4:	1a9b      	subs	r3, r3, r2
 800c8c6:	800b      	strh	r3, [r1, #0]
 800c8c8:	4770      	bx	lr
 800c8ca:	bf00      	nop
 800c8cc:	20012668 	.word	0x20012668
 800c8d0:	20012664 	.word	0x20012664

0800c8d4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800c8d4:	b510      	push	{r4, lr}
 800c8d6:	4b07      	ldr	r3, [pc, #28]	; (800c8f4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800c8d8:	781b      	ldrb	r3, [r3, #0]
 800c8da:	2b01      	cmp	r3, #1
 800c8dc:	d108      	bne.n	800c8f0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800c8de:	4b06      	ldr	r3, [pc, #24]	; (800c8f8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800c8e0:	880c      	ldrh	r4, [r1, #0]
 800c8e2:	881b      	ldrh	r3, [r3, #0]
 800c8e4:	f9b0 2000 	ldrsh.w	r2, [r0]
 800c8e8:	3b01      	subs	r3, #1
 800c8ea:	1b1b      	subs	r3, r3, r4
 800c8ec:	8003      	strh	r3, [r0, #0]
 800c8ee:	800a      	strh	r2, [r1, #0]
 800c8f0:	bd10      	pop	{r4, pc}
 800c8f2:	bf00      	nop
 800c8f4:	20012668 	.word	0x20012668
 800c8f8:	20012664 	.word	0x20012664

0800c8fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800c8fc:	b510      	push	{r4, lr}
 800c8fe:	4b0a      	ldr	r3, [pc, #40]	; (800c928 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800c900:	781b      	ldrb	r3, [r3, #0]
 800c902:	2b01      	cmp	r3, #1
 800c904:	d10e      	bne.n	800c924 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800c906:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800c90a:	8843      	ldrh	r3, [r0, #2]
 800c90c:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c910:	8044      	strh	r4, [r0, #2]
 800c912:	18ca      	adds	r2, r1, r3
 800c914:	4b05      	ldr	r3, [pc, #20]	; (800c92c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800c916:	881b      	ldrh	r3, [r3, #0]
 800c918:	1a9b      	subs	r3, r3, r2
 800c91a:	8003      	strh	r3, [r0, #0]
 800c91c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c920:	80c3      	strh	r3, [r0, #6]
 800c922:	8081      	strh	r1, [r0, #4]
 800c924:	bd10      	pop	{r4, pc}
 800c926:	bf00      	nop
 800c928:	20012668 	.word	0x20012668
 800c92c:	20012664 	.word	0x20012664

0800c930 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800c930:	4b08      	ldr	r3, [pc, #32]	; (800c954 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800c932:	781b      	ldrb	r3, [r3, #0]
 800c934:	2b01      	cmp	r3, #1
 800c936:	d10c      	bne.n	800c952 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800c938:	8803      	ldrh	r3, [r0, #0]
 800c93a:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800c93e:	8842      	ldrh	r2, [r0, #2]
 800c940:	8002      	strh	r2, [r0, #0]
 800c942:	185a      	adds	r2, r3, r1
 800c944:	4b04      	ldr	r3, [pc, #16]	; (800c958 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800c946:	881b      	ldrh	r3, [r3, #0]
 800c948:	1a9b      	subs	r3, r3, r2
 800c94a:	8043      	strh	r3, [r0, #2]
 800c94c:	88c3      	ldrh	r3, [r0, #6]
 800c94e:	8083      	strh	r3, [r0, #4]
 800c950:	80c1      	strh	r1, [r0, #6]
 800c952:	4770      	bx	lr
 800c954:	20012668 	.word	0x20012668
 800c958:	20012664 	.word	0x20012664

0800c95c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800c95c:	b510      	push	{r4, lr}
 800c95e:	4b07      	ldr	r3, [pc, #28]	; (800c97c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800c960:	781b      	ldrb	r3, [r3, #0]
 800c962:	2b01      	cmp	r3, #1
 800c964:	d108      	bne.n	800c978 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800c966:	f9b1 3000 	ldrsh.w	r3, [r1]
 800c96a:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c96e:	8003      	strh	r3, [r0, #0]
 800c970:	8893      	ldrh	r3, [r2, #4]
 800c972:	3b01      	subs	r3, #1
 800c974:	1b1b      	subs	r3, r3, r4
 800c976:	800b      	strh	r3, [r1, #0]
 800c978:	bd10      	pop	{r4, pc}
 800c97a:	bf00      	nop
 800c97c:	20012668 	.word	0x20012668

0800c980 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800c980:	b510      	push	{r4, lr}
 800c982:	4b0a      	ldr	r3, [pc, #40]	; (800c9ac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800c984:	781b      	ldrb	r3, [r3, #0]
 800c986:	2b01      	cmp	r3, #1
 800c988:	460a      	mov	r2, r1
 800c98a:	d10d      	bne.n	800c9a8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800c98c:	8881      	ldrh	r1, [r0, #4]
 800c98e:	8803      	ldrh	r3, [r0, #0]
 800c990:	440b      	add	r3, r1
 800c992:	4601      	mov	r1, r0
 800c994:	3b01      	subs	r3, #1
 800c996:	f821 3b02 	strh.w	r3, [r1], #2
 800c99a:	f7ff ffdf 	bl	800c95c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800c99e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800c9a2:	88c2      	ldrh	r2, [r0, #6]
 800c9a4:	8082      	strh	r2, [r0, #4]
 800c9a6:	80c3      	strh	r3, [r0, #6]
 800c9a8:	bd10      	pop	{r4, pc}
 800c9aa:	bf00      	nop
 800c9ac:	20012668 	.word	0x20012668

0800c9b0 <_ZN8touchgfx11Application13requestRedrawEv>:
 800c9b0:	4b06      	ldr	r3, [pc, #24]	; (800c9cc <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800c9b2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c9b6:	4b06      	ldr	r3, [pc, #24]	; (800c9d0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800c9b8:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 800c9bc:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c9c0:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 800c9c4:	2100      	movs	r1, #0
 800c9c6:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 800c9ca:	4770      	bx	lr
 800c9cc:	20012664 	.word	0x20012664
 800c9d0:	20012666 	.word	0x20012666

0800c9d4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800c9d4:	4b03      	ldr	r3, [pc, #12]	; (800c9e4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800c9d6:	6818      	ldr	r0, [r3, #0]
 800c9d8:	b110      	cbz	r0, 800c9e0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800c9da:	6803      	ldr	r3, [r0, #0]
 800c9dc:	699b      	ldr	r3, [r3, #24]
 800c9de:	4718      	bx	r3
 800c9e0:	4770      	bx	lr
 800c9e2:	bf00      	nop
 800c9e4:	200126ac 	.word	0x200126ac

0800c9e8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800c9e8:	4770      	bx	lr
	...

0800c9ec <_ZN8touchgfx11Application4drawEv>:
 800c9ec:	b507      	push	{r0, r1, r2, lr}
 800c9ee:	4b09      	ldr	r3, [pc, #36]	; (800ca14 <_ZN8touchgfx11Application4drawEv+0x28>)
 800c9f0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c9f4:	4b08      	ldr	r3, [pc, #32]	; (800ca18 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800c9f6:	f8ad 2004 	strh.w	r2, [sp, #4]
 800c9fa:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c9fe:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ca02:	6803      	ldr	r3, [r0, #0]
 800ca04:	2100      	movs	r1, #0
 800ca06:	9100      	str	r1, [sp, #0]
 800ca08:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ca0a:	4669      	mov	r1, sp
 800ca0c:	4798      	blx	r3
 800ca0e:	b003      	add	sp, #12
 800ca10:	f85d fb04 	ldr.w	pc, [sp], #4
 800ca14:	20012664 	.word	0x20012664
 800ca18:	20012666 	.word	0x20012666

0800ca1c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800ca1c:	4b03      	ldr	r3, [pc, #12]	; (800ca2c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800ca1e:	6818      	ldr	r0, [r3, #0]
 800ca20:	b110      	cbz	r0, 800ca28 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800ca22:	6803      	ldr	r3, [r0, #0]
 800ca24:	69db      	ldr	r3, [r3, #28]
 800ca26:	4718      	bx	r3
 800ca28:	4770      	bx	lr
 800ca2a:	bf00      	nop
 800ca2c:	200126ac 	.word	0x200126ac

0800ca30 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800ca30:	4b03      	ldr	r3, [pc, #12]	; (800ca40 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800ca32:	6818      	ldr	r0, [r3, #0]
 800ca34:	b110      	cbz	r0, 800ca3c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800ca36:	6803      	ldr	r3, [r0, #0]
 800ca38:	6a1b      	ldr	r3, [r3, #32]
 800ca3a:	4718      	bx	r3
 800ca3c:	4770      	bx	lr
 800ca3e:	bf00      	nop
 800ca40:	200126ac 	.word	0x200126ac

0800ca44 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800ca44:	2300      	movs	r3, #0
 800ca46:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 800ca4a:	4770      	bx	lr

0800ca4c <_ZN8touchgfx11Application14handleKeyEventEh>:
 800ca4c:	4b03      	ldr	r3, [pc, #12]	; (800ca5c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800ca4e:	6818      	ldr	r0, [r3, #0]
 800ca50:	b110      	cbz	r0, 800ca58 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800ca52:	6803      	ldr	r3, [r0, #0]
 800ca54:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ca56:	4718      	bx	r3
 800ca58:	4770      	bx	lr
 800ca5a:	bf00      	nop
 800ca5c:	200126ac 	.word	0x200126ac

0800ca60 <_ZN8touchgfx11ApplicationD1Ev>:
 800ca60:	4770      	bx	lr

0800ca62 <_ZN8touchgfx11ApplicationD0Ev>:
 800ca62:	b510      	push	{r4, lr}
 800ca64:	f44f 719e 	mov.w	r1, #316	; 0x13c
 800ca68:	4604      	mov	r4, r0
 800ca6a:	f00e ff09 	bl	801b880 <_ZdlPvj>
 800ca6e:	4620      	mov	r0, r4
 800ca70:	bd10      	pop	{r4, pc}

0800ca72 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800ca72:	b510      	push	{r4, lr}
 800ca74:	f9b1 4000 	ldrsh.w	r4, [r1]
 800ca78:	888a      	ldrh	r2, [r1, #4]
 800ca7a:	f9b0 3000 	ldrsh.w	r3, [r0]
 800ca7e:	4422      	add	r2, r4
 800ca80:	b212      	sxth	r2, r2
 800ca82:	4293      	cmp	r3, r2
 800ca84:	da15      	bge.n	800cab2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800ca86:	8882      	ldrh	r2, [r0, #4]
 800ca88:	4413      	add	r3, r2
 800ca8a:	b21b      	sxth	r3, r3
 800ca8c:	429c      	cmp	r4, r3
 800ca8e:	da10      	bge.n	800cab2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800ca90:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800ca94:	88c9      	ldrh	r1, [r1, #6]
 800ca96:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800ca9a:	4419      	add	r1, r3
 800ca9c:	b209      	sxth	r1, r1
 800ca9e:	428a      	cmp	r2, r1
 800caa0:	da07      	bge.n	800cab2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800caa2:	88c0      	ldrh	r0, [r0, #6]
 800caa4:	4410      	add	r0, r2
 800caa6:	b200      	sxth	r0, r0
 800caa8:	4283      	cmp	r3, r0
 800caaa:	bfac      	ite	ge
 800caac:	2000      	movge	r0, #0
 800caae:	2001      	movlt	r0, #1
 800cab0:	bd10      	pop	{r4, pc}
 800cab2:	2000      	movs	r0, #0
 800cab4:	e7fc      	b.n	800cab0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800cab6 <_ZN8touchgfx4Rect10restrictToEss>:
 800cab6:	f9b0 3000 	ldrsh.w	r3, [r0]
 800caba:	2b00      	cmp	r3, #0
 800cabc:	b510      	push	{r4, lr}
 800cabe:	da04      	bge.n	800caca <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800cac0:	8884      	ldrh	r4, [r0, #4]
 800cac2:	4423      	add	r3, r4
 800cac4:	8083      	strh	r3, [r0, #4]
 800cac6:	2300      	movs	r3, #0
 800cac8:	8003      	strh	r3, [r0, #0]
 800caca:	f9b0 4000 	ldrsh.w	r4, [r0]
 800cace:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800cad2:	1b09      	subs	r1, r1, r4
 800cad4:	428b      	cmp	r3, r1
 800cad6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800cada:	bfc8      	it	gt
 800cadc:	8081      	strhgt	r1, [r0, #4]
 800cade:	2b00      	cmp	r3, #0
 800cae0:	da04      	bge.n	800caec <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800cae2:	88c1      	ldrh	r1, [r0, #6]
 800cae4:	440b      	add	r3, r1
 800cae6:	80c3      	strh	r3, [r0, #6]
 800cae8:	2300      	movs	r3, #0
 800caea:	8043      	strh	r3, [r0, #2]
 800caec:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800caf0:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800caf4:	1a52      	subs	r2, r2, r1
 800caf6:	4293      	cmp	r3, r2
 800caf8:	bfc8      	it	gt
 800cafa:	80c2      	strhgt	r2, [r0, #6]
 800cafc:	bd10      	pop	{r4, pc}
	...

0800cb00 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800cb00:	b510      	push	{r4, lr}
 800cb02:	4b10      	ldr	r3, [pc, #64]	; (800cb44 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800cb04:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cb08:	4b0f      	ldr	r3, [pc, #60]	; (800cb48 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800cb0a:	460c      	mov	r4, r1
 800cb0c:	4620      	mov	r0, r4
 800cb0e:	f9b3 1000 	ldrsh.w	r1, [r3]
 800cb12:	f7ff ffd0 	bl	800cab6 <_ZN8touchgfx4Rect10restrictToEss>
 800cb16:	4b0d      	ldr	r3, [pc, #52]	; (800cb4c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800cb18:	6818      	ldr	r0, [r3, #0]
 800cb1a:	b190      	cbz	r0, 800cb42 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800cb1c:	6803      	ldr	r3, [r0, #0]
 800cb1e:	4621      	mov	r1, r4
 800cb20:	689b      	ldr	r3, [r3, #8]
 800cb22:	4798      	blx	r3
 800cb24:	4b0a      	ldr	r3, [pc, #40]	; (800cb50 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800cb26:	6818      	ldr	r0, [r3, #0]
 800cb28:	b118      	cbz	r0, 800cb32 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800cb2a:	6803      	ldr	r3, [r0, #0]
 800cb2c:	4621      	mov	r1, r4
 800cb2e:	689b      	ldr	r3, [r3, #8]
 800cb30:	4798      	blx	r3
 800cb32:	4b08      	ldr	r3, [pc, #32]	; (800cb54 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800cb34:	6818      	ldr	r0, [r3, #0]
 800cb36:	6803      	ldr	r3, [r0, #0]
 800cb38:	4621      	mov	r1, r4
 800cb3a:	69db      	ldr	r3, [r3, #28]
 800cb3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cb40:	4718      	bx	r3
 800cb42:	bd10      	pop	{r4, pc}
 800cb44:	20012666 	.word	0x20012666
 800cb48:	20012664 	.word	0x20012664
 800cb4c:	200126ac 	.word	0x200126ac
 800cb50:	200126a8 	.word	0x200126a8
 800cb54:	20012670 	.word	0x20012670

0800cb58 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800cb58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cb5a:	4606      	mov	r6, r0
 800cb5c:	4608      	mov	r0, r1
 800cb5e:	460f      	mov	r7, r1
 800cb60:	f7fc fd61 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cb64:	b9e8      	cbnz	r0, 800cba2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cb66:	f9b7 5000 	ldrsh.w	r5, [r7]
 800cb6a:	f9b6 4000 	ldrsh.w	r4, [r6]
 800cb6e:	42a5      	cmp	r5, r4
 800cb70:	db17      	blt.n	800cba2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cb72:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800cb76:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800cb7a:	429a      	cmp	r2, r3
 800cb7c:	db11      	blt.n	800cba2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cb7e:	88b9      	ldrh	r1, [r7, #4]
 800cb80:	440d      	add	r5, r1
 800cb82:	88b1      	ldrh	r1, [r6, #4]
 800cb84:	440c      	add	r4, r1
 800cb86:	b22d      	sxth	r5, r5
 800cb88:	b224      	sxth	r4, r4
 800cb8a:	42a5      	cmp	r5, r4
 800cb8c:	dc09      	bgt.n	800cba2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800cb8e:	88f8      	ldrh	r0, [r7, #6]
 800cb90:	4410      	add	r0, r2
 800cb92:	88f2      	ldrh	r2, [r6, #6]
 800cb94:	4413      	add	r3, r2
 800cb96:	b200      	sxth	r0, r0
 800cb98:	b21b      	sxth	r3, r3
 800cb9a:	4298      	cmp	r0, r3
 800cb9c:	bfcc      	ite	gt
 800cb9e:	2000      	movgt	r0, #0
 800cba0:	2001      	movle	r0, #1
 800cba2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800cba4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800cba4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cba6:	4604      	mov	r4, r0
 800cba8:	4608      	mov	r0, r1
 800cbaa:	460d      	mov	r5, r1
 800cbac:	f7fc fd3b 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cbb0:	b978      	cbnz	r0, 800cbd2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800cbb2:	4620      	mov	r0, r4
 800cbb4:	f7fc fd37 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cbb8:	f9b5 6000 	ldrsh.w	r6, [r5]
 800cbbc:	b150      	cbz	r0, 800cbd4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800cbbe:	8026      	strh	r6, [r4, #0]
 800cbc0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800cbc4:	8063      	strh	r3, [r4, #2]
 800cbc6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800cbca:	80a3      	strh	r3, [r4, #4]
 800cbcc:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800cbd0:	80e3      	strh	r3, [r4, #6]
 800cbd2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cbd4:	f9b4 1000 	ldrsh.w	r1, [r4]
 800cbd8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800cbdc:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800cbe0:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800cbe4:	88ed      	ldrh	r5, [r5, #6]
 800cbe6:	42b1      	cmp	r1, r6
 800cbe8:	460f      	mov	r7, r1
 800cbea:	bfa8      	it	ge
 800cbec:	4637      	movge	r7, r6
 800cbee:	4293      	cmp	r3, r2
 800cbf0:	4618      	mov	r0, r3
 800cbf2:	4466      	add	r6, ip
 800cbf4:	bfa8      	it	ge
 800cbf6:	4610      	movge	r0, r2
 800cbf8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800cbfc:	8027      	strh	r7, [r4, #0]
 800cbfe:	442a      	add	r2, r5
 800cc00:	88e5      	ldrh	r5, [r4, #6]
 800cc02:	8060      	strh	r0, [r4, #2]
 800cc04:	4461      	add	r1, ip
 800cc06:	442b      	add	r3, r5
 800cc08:	b236      	sxth	r6, r6
 800cc0a:	b209      	sxth	r1, r1
 800cc0c:	b212      	sxth	r2, r2
 800cc0e:	b21b      	sxth	r3, r3
 800cc10:	428e      	cmp	r6, r1
 800cc12:	bfac      	ite	ge
 800cc14:	ebc7 0106 	rsbge	r1, r7, r6
 800cc18:	ebc7 0101 	rsblt	r1, r7, r1
 800cc1c:	429a      	cmp	r2, r3
 800cc1e:	bfac      	ite	ge
 800cc20:	ebc0 0202 	rsbge	r2, r0, r2
 800cc24:	ebc0 0203 	rsblt	r2, r0, r3
 800cc28:	80a1      	strh	r1, [r4, #4]
 800cc2a:	80e2      	strh	r2, [r4, #6]
 800cc2c:	e7d1      	b.n	800cbd2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800cc30 <_ZN8touchgfx11Application11getInstanceEv>:
 800cc30:	4b01      	ldr	r3, [pc, #4]	; (800cc38 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800cc32:	6818      	ldr	r0, [r3, #0]
 800cc34:	4770      	bx	lr
 800cc36:	bf00      	nop
 800cc38:	200126bc 	.word	0x200126bc

0800cc3c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800cc3c:	b510      	push	{r4, lr}
 800cc3e:	2300      	movs	r3, #0
 800cc40:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 800cc44:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 800cc48:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 800cc4c:	4604      	mov	r4, r0
 800cc4e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800cc52:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 800cc56:	429a      	cmp	r2, r3
 800cc58:	d90e      	bls.n	800cc78 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800cc5a:	18e2      	adds	r2, r4, r3
 800cc5c:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 800cc60:	b122      	cbz	r2, 800cc6c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800cc62:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800cc66:	6803      	ldr	r3, [r0, #0]
 800cc68:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800cc6a:	4798      	blx	r3
 800cc6c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800cc70:	3301      	adds	r3, #1
 800cc72:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 800cc76:	e7ea      	b.n	800cc4e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800cc78:	bd10      	pop	{r4, pc}

0800cc7a <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800cc7a:	2300      	movs	r3, #0
 800cc7c:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 800cc80:	f100 0284 	add.w	r2, r0, #132	; 0x84
 800cc84:	30a4      	adds	r0, #164	; 0xa4
 800cc86:	f802 3b01 	strb.w	r3, [r2], #1
 800cc8a:	4282      	cmp	r2, r0
 800cc8c:	d1fb      	bne.n	800cc86 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800cc8e:	4770      	bx	lr

0800cc90 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800cc90:	b570      	push	{r4, r5, r6, lr}
 800cc92:	4c0b      	ldr	r4, [pc, #44]	; (800ccc0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800cc94:	4605      	mov	r5, r0
 800cc96:	6820      	ldr	r0, [r4, #0]
 800cc98:	460e      	mov	r6, r1
 800cc9a:	b110      	cbz	r0, 800cca2 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800cc9c:	6803      	ldr	r3, [r0, #0]
 800cc9e:	695b      	ldr	r3, [r3, #20]
 800cca0:	4798      	blx	r3
 800cca2:	1d28      	adds	r0, r5, #4
 800cca4:	f7ff ffe9 	bl	800cc7a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800cca8:	6026      	str	r6, [r4, #0]
 800ccaa:	6833      	ldr	r3, [r6, #0]
 800ccac:	4630      	mov	r0, r6
 800ccae:	68db      	ldr	r3, [r3, #12]
 800ccb0:	4798      	blx	r3
 800ccb2:	682b      	ldr	r3, [r5, #0]
 800ccb4:	4628      	mov	r0, r5
 800ccb6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ccb8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ccbc:	4718      	bx	r3
 800ccbe:	bf00      	nop
 800ccc0:	200126ac 	.word	0x200126ac

0800ccc4 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800ccc4:	2300      	movs	r3, #0
 800ccc6:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 800ccca:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 800ccce:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ccd0:	461a      	mov	r2, r3
 800ccd2:	461c      	mov	r4, r3
 800ccd4:	461d      	mov	r5, r3
 800ccd6:	459c      	cmp	ip, r3
 800ccd8:	dd1a      	ble.n	800cd10 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800ccda:	18c6      	adds	r6, r0, r3
 800ccdc:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 800cce0:	b16e      	cbz	r6, 800ccfe <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800cce2:	429a      	cmp	r2, r3
 800cce4:	d008      	beq.n	800ccf8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800cce6:	fa1f fe82 	uxth.w	lr, r2
 800ccea:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800ccee:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800ccf2:	1887      	adds	r7, r0, r2
 800ccf4:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 800ccf8:	3201      	adds	r2, #1
 800ccfa:	3301      	adds	r3, #1
 800ccfc:	e7eb      	b.n	800ccd6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800ccfe:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 800cd02:	4299      	cmp	r1, r3
 800cd04:	bfa8      	it	ge
 800cd06:	3501      	addge	r5, #1
 800cd08:	429e      	cmp	r6, r3
 800cd0a:	bfc8      	it	gt
 800cd0c:	3401      	addgt	r4, #1
 800cd0e:	e7f4      	b.n	800ccfa <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800cd10:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 800cd14:	1b49      	subs	r1, r1, r5
 800cd16:	1b1b      	subs	r3, r3, r4
 800cd18:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 800cd1c:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 800cd20:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 800cd24:	4293      	cmp	r3, r2
 800cd26:	dd03      	ble.n	800cd30 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800cd28:	3b01      	subs	r3, #1
 800cd2a:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 800cd2e:	e7f7      	b.n	800cd20 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800cd30:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800cd34 <_ZN8touchgfx11Application15handleTickEventEv>:
 800cd34:	b570      	push	{r4, r5, r6, lr}
 800cd36:	4d16      	ldr	r5, [pc, #88]	; (800cd90 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800cd38:	4604      	mov	r4, r0
 800cd3a:	6828      	ldr	r0, [r5, #0]
 800cd3c:	b140      	cbz	r0, 800cd50 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800cd3e:	7a03      	ldrb	r3, [r0, #8]
 800cd40:	b933      	cbnz	r3, 800cd50 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800cd42:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 800cd46:	6803      	ldr	r3, [r0, #0]
 800cd48:	689b      	ldr	r3, [r3, #8]
 800cd4a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cd4e:	4718      	bx	r3
 800cd50:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 800cd54:	4e0f      	ldr	r6, [pc, #60]	; (800cd94 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800cd56:	b973      	cbnz	r3, 800cd76 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800cd58:	b168      	cbz	r0, 800cd76 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800cd5a:	7a03      	ldrb	r3, [r0, #8]
 800cd5c:	b15b      	cbz	r3, 800cd76 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800cd5e:	6830      	ldr	r0, [r6, #0]
 800cd60:	b110      	cbz	r0, 800cd68 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800cd62:	6803      	ldr	r3, [r0, #0]
 800cd64:	691b      	ldr	r3, [r3, #16]
 800cd66:	4798      	blx	r3
 800cd68:	6828      	ldr	r0, [r5, #0]
 800cd6a:	6803      	ldr	r3, [r0, #0]
 800cd6c:	68db      	ldr	r3, [r3, #12]
 800cd6e:	4798      	blx	r3
 800cd70:	2301      	movs	r3, #1
 800cd72:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 800cd76:	3404      	adds	r4, #4
 800cd78:	4620      	mov	r0, r4
 800cd7a:	f7ff ff5f 	bl	800cc3c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800cd7e:	4620      	mov	r0, r4
 800cd80:	f7ff ffa0 	bl	800ccc4 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800cd84:	6830      	ldr	r0, [r6, #0]
 800cd86:	b110      	cbz	r0, 800cd8e <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800cd88:	6803      	ldr	r3, [r0, #0]
 800cd8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cd8c:	e7dd      	b.n	800cd4a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800cd8e:	bd70      	pop	{r4, r5, r6, pc}
 800cd90:	200126b0 	.word	0x200126b0
 800cd94:	200126ac 	.word	0x200126ac

0800cd98 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800cd98:	4603      	mov	r3, r0
 800cd9a:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800cd9e:	2200      	movs	r2, #0
 800cda0:	801a      	strh	r2, [r3, #0]
 800cda2:	805a      	strh	r2, [r3, #2]
 800cda4:	809a      	strh	r2, [r3, #4]
 800cda6:	80da      	strh	r2, [r3, #6]
 800cda8:	3308      	adds	r3, #8
 800cdaa:	428b      	cmp	r3, r1
 800cdac:	d1f8      	bne.n	800cda0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800cdae:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800cdb2:	4770      	bx	lr

0800cdb4 <_ZN8touchgfx11ApplicationC1Ev>:
 800cdb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cdb6:	4606      	mov	r6, r0
 800cdb8:	4b1c      	ldr	r3, [pc, #112]	; (800ce2c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800cdba:	f846 3b04 	str.w	r3, [r6], #4
 800cdbe:	4604      	mov	r4, r0
 800cdc0:	2500      	movs	r5, #0
 800cdc2:	22a8      	movs	r2, #168	; 0xa8
 800cdc4:	2100      	movs	r1, #0
 800cdc6:	4630      	mov	r0, r6
 800cdc8:	f00e fe14 	bl	801b9f4 <memset>
 800cdcc:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 800cdd0:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 800cdd4:	f7ff ffe0 	bl	800cd98 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800cdd8:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 800cddc:	f7ff ffdc 	bl	800cd98 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800cde0:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800cde4:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800cde8:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 800cdec:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 800cdf0:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 800cdf4:	490e      	ldr	r1, [pc, #56]	; (800ce30 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800cdf6:	480f      	ldr	r0, [pc, #60]	; (800ce34 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800cdf8:	4f0f      	ldr	r7, [pc, #60]	; (800ce38 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800cdfa:	f00e fc19 	bl	801b630 <CRC_Lock>
 800cdfe:	4b0f      	ldr	r3, [pc, #60]	; (800ce3c <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800ce00:	b158      	cbz	r0, 800ce1a <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800ce02:	801d      	strh	r5, [r3, #0]
 800ce04:	4a0e      	ldr	r2, [pc, #56]	; (800ce40 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800ce06:	2300      	movs	r3, #0
 800ce08:	6013      	str	r3, [r2, #0]
 800ce0a:	4a0e      	ldr	r2, [pc, #56]	; (800ce44 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800ce0c:	603b      	str	r3, [r7, #0]
 800ce0e:	4630      	mov	r0, r6
 800ce10:	6013      	str	r3, [r2, #0]
 800ce12:	f7ff ff32 	bl	800cc7a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800ce16:	4620      	mov	r0, r4
 800ce18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ce1a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ce1e:	2002      	movs	r0, #2
 800ce20:	801a      	strh	r2, [r3, #0]
 800ce22:	6038      	str	r0, [r7, #0]
 800ce24:	f001 fa28 	bl	800e278 <_ZN8touchgfx6Screen4drawEv>
 800ce28:	e7ec      	b.n	800ce04 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 800ce2a:	bf00      	nop
 800ce2c:	0801dffc 	.word	0x0801dffc
 800ce30:	b5e8b5cd 	.word	0xb5e8b5cd
 800ce34:	f407a5c2 	.word	0xf407a5c2
 800ce38:	200126ac 	.word	0x200126ac
 800ce3c:	20000084 	.word	0x20000084
 800ce40:	200126bc 	.word	0x200126bc
 800ce44:	200126b0 	.word	0x200126b0

0800ce48 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800ce48:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800ce4c:	3b01      	subs	r3, #1
 800ce4e:	b29b      	uxth	r3, r3
 800ce50:	428b      	cmp	r3, r1
 800ce52:	b510      	push	{r4, lr}
 800ce54:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800ce58:	d908      	bls.n	800ce6c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800ce5a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800ce5e:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800ce62:	681a      	ldr	r2, [r3, #0]
 800ce64:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800ce68:	685a      	ldr	r2, [r3, #4]
 800ce6a:	6062      	str	r2, [r4, #4]
 800ce6c:	bd10      	pop	{r4, pc}
	...

0800ce70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800ce70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce74:	4b8f      	ldr	r3, [pc, #572]	; (800d0b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 800ce76:	b08f      	sub	sp, #60	; 0x3c
 800ce78:	ac0a      	add	r4, sp, #40	; 0x28
 800ce7a:	e884 0006 	stmia.w	r4, {r1, r2}
 800ce7e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ce82:	4b8d      	ldr	r3, [pc, #564]	; (800d0b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 800ce84:	4683      	mov	fp, r0
 800ce86:	f9b3 1000 	ldrsh.w	r1, [r3]
 800ce8a:	4620      	mov	r0, r4
 800ce8c:	f7ff fe13 	bl	800cab6 <_ZN8touchgfx4Rect10restrictToEss>
 800ce90:	4620      	mov	r0, r4
 800ce92:	f7fc fbc8 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ce96:	2800      	cmp	r0, #0
 800ce98:	d16a      	bne.n	800cf70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800ce9a:	9403      	str	r4, [sp, #12]
 800ce9c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 800cea0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 800cea4:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 800cea8:	35a4      	adds	r5, #164	; 0xa4
 800ceaa:	9301      	str	r3, [sp, #4]
 800ceac:	b15c      	cbz	r4, 800cec6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800ceae:	4629      	mov	r1, r5
 800ceb0:	9803      	ldr	r0, [sp, #12]
 800ceb2:	f7ff fe51 	bl	800cb58 <_ZNK8touchgfx4Rect8includesERKS0_>
 800ceb6:	3c01      	subs	r4, #1
 800ceb8:	b118      	cbz	r0, 800cec2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 800ceba:	b2a1      	uxth	r1, r4
 800cebc:	9801      	ldr	r0, [sp, #4]
 800cebe:	f7ff ffc3 	bl	800ce48 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800cec2:	3d08      	subs	r5, #8
 800cec4:	e7f2      	b.n	800ceac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 800cec6:	f8bb 80ec 	ldrh.w	r8, [fp, #236]	; 0xec
 800ceca:	f8cd 8010 	str.w	r8, [sp, #16]
 800cece:	f108 33ff 	add.w	r3, r8, #4294967295
 800ced2:	9302      	str	r3, [sp, #8]
 800ced4:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 800ced8:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 800cedc:	9306      	str	r3, [sp, #24]
 800cede:	445c      	add	r4, fp
 800cee0:	2500      	movs	r5, #0
 800cee2:	4626      	mov	r6, r4
 800cee4:	f8cd 8014 	str.w	r8, [sp, #20]
 800cee8:	462f      	mov	r7, r5
 800ceea:	9b05      	ldr	r3, [sp, #20]
 800ceec:	2b00      	cmp	r3, #0
 800ceee:	d073      	beq.n	800cfd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800cef0:	9903      	ldr	r1, [sp, #12]
 800cef2:	4630      	mov	r0, r6
 800cef4:	f7ff fdbd 	bl	800ca72 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800cef8:	b350      	cbz	r0, 800cf50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800cefa:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 800cefe:	f9b6 c000 	ldrsh.w	ip, [r6]
 800cf02:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 800cf06:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 800cf0a:	45e6      	cmp	lr, ip
 800cf0c:	db33      	blt.n	800cf76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800cf0e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 800cf12:	88b3      	ldrh	r3, [r6, #4]
 800cf14:	4472      	add	r2, lr
 800cf16:	4463      	add	r3, ip
 800cf18:	b212      	sxth	r2, r2
 800cf1a:	b21b      	sxth	r3, r3
 800cf1c:	429a      	cmp	r2, r3
 800cf1e:	dc2a      	bgt.n	800cf76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800cf20:	88f3      	ldrh	r3, [r6, #6]
 800cf22:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 800cf26:	fa1f f289 	uxth.w	r2, r9
 800cf2a:	4413      	add	r3, r2
 800cf2c:	b29b      	uxth	r3, r3
 800cf2e:	45ca      	cmp	sl, r9
 800cf30:	fa0f fe83 	sxth.w	lr, r3
 800cf34:	fa1f fc8a 	uxth.w	ip, sl
 800cf38:	db0f      	blt.n	800cf5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800cf3a:	eba3 030c 	sub.w	r3, r3, ip
 800cf3e:	1ac9      	subs	r1, r1, r3
 800cf40:	b209      	sxth	r1, r1
 800cf42:	2900      	cmp	r1, #0
 800cf44:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 800cf48:	dd12      	ble.n	800cf70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800cf4a:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 800cf4e:	4605      	mov	r5, r0
 800cf50:	9b05      	ldr	r3, [sp, #20]
 800cf52:	3b01      	subs	r3, #1
 800cf54:	9305      	str	r3, [sp, #20]
 800cf56:	3e08      	subs	r6, #8
 800cf58:	e7c7      	b.n	800ceea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800cf5a:	4461      	add	r1, ip
 800cf5c:	b209      	sxth	r1, r1
 800cf5e:	4571      	cmp	r1, lr
 800cf60:	dc38      	bgt.n	800cfd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800cf62:	eba2 020c 	sub.w	r2, r2, ip
 800cf66:	b212      	sxth	r2, r2
 800cf68:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800cf6c:	2a00      	cmp	r2, #0
 800cf6e:	dcee      	bgt.n	800cf4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800cf70:	b00f      	add	sp, #60	; 0x3c
 800cf72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cf76:	45ca      	cmp	sl, r9
 800cf78:	db2c      	blt.n	800cfd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800cf7a:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800cf7e:	449a      	add	sl, r3
 800cf80:	88f3      	ldrh	r3, [r6, #6]
 800cf82:	4499      	add	r9, r3
 800cf84:	fa0f fa8a 	sxth.w	sl, sl
 800cf88:	fa0f f989 	sxth.w	r9, r9
 800cf8c:	45ca      	cmp	sl, r9
 800cf8e:	dc21      	bgt.n	800cfd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800cf90:	88b3      	ldrh	r3, [r6, #4]
 800cf92:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 800cf96:	fa1f f28c 	uxth.w	r2, ip
 800cf9a:	4413      	add	r3, r2
 800cf9c:	b29b      	uxth	r3, r3
 800cf9e:	45e6      	cmp	lr, ip
 800cfa0:	fa1f f98e 	uxth.w	r9, lr
 800cfa4:	fa0f fa83 	sxth.w	sl, r3
 800cfa8:	db0a      	blt.n	800cfc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 800cfaa:	eba3 0309 	sub.w	r3, r3, r9
 800cfae:	1ac9      	subs	r1, r1, r3
 800cfb0:	b209      	sxth	r1, r1
 800cfb2:	2900      	cmp	r1, #0
 800cfb4:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 800cfb8:	ddda      	ble.n	800cf70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800cfba:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 800cfbe:	e7c6      	b.n	800cf4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800cfc0:	4449      	add	r1, r9
 800cfc2:	b209      	sxth	r1, r1
 800cfc4:	4551      	cmp	r1, sl
 800cfc6:	dc05      	bgt.n	800cfd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 800cfc8:	eba2 0209 	sub.w	r2, r2, r9
 800cfcc:	b212      	sxth	r2, r2
 800cfce:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800cfd2:	e7cb      	b.n	800cf6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800cfd4:	4607      	mov	r7, r0
 800cfd6:	e7bb      	b.n	800cf50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800cfd8:	2d00      	cmp	r5, #0
 800cfda:	d181      	bne.n	800cee0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 800cfdc:	2f00      	cmp	r7, #0
 800cfde:	f000 81dd 	beq.w	800d39c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800cfe2:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 800cfe6:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 800cfea:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 800cfee:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 800cff2:	b2b9      	uxth	r1, r7
 800cff4:	b2b3      	uxth	r3, r6
 800cff6:	441a      	add	r2, r3
 800cff8:	448a      	add	sl, r1
 800cffa:	b292      	uxth	r2, r2
 800cffc:	fa1f fa8a 	uxth.w	sl, sl
 800d000:	fa0f f882 	sxth.w	r8, r2
 800d004:	9105      	str	r1, [sp, #20]
 800d006:	fa0f f98a 	sxth.w	r9, sl
 800d00a:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800d00e:	9b04      	ldr	r3, [sp, #16]
 800d010:	2b00      	cmp	r3, #0
 800d012:	d053      	beq.n	800d0bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800d014:	9903      	ldr	r1, [sp, #12]
 800d016:	4620      	mov	r0, r4
 800d018:	f7ff fd2b 	bl	800ca72 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d01c:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800d020:	b1c0      	cbz	r0, 800d054 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800d022:	f9b4 e000 	ldrsh.w	lr, [r4]
 800d026:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800d02a:	4576      	cmp	r6, lr
 800d02c:	dc23      	bgt.n	800d076 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800d02e:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800d032:	44f4      	add	ip, lr
 800d034:	fa0f fc8c 	sxth.w	ip, ip
 800d038:	45e0      	cmp	r8, ip
 800d03a:	db1c      	blt.n	800d076 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800d03c:	428f      	cmp	r7, r1
 800d03e:	fa1f fc81 	uxth.w	ip, r1
 800d042:	88e1      	ldrh	r1, [r4, #6]
 800d044:	dc0d      	bgt.n	800d062 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800d046:	ebaa 0c0c 	sub.w	ip, sl, ip
 800d04a:	eba1 010c 	sub.w	r1, r1, ip
 800d04e:	f8a4 9002 	strh.w	r9, [r4, #2]
 800d052:	80e1      	strh	r1, [r4, #6]
 800d054:	4628      	mov	r0, r5
 800d056:	9904      	ldr	r1, [sp, #16]
 800d058:	3901      	subs	r1, #1
 800d05a:	9104      	str	r1, [sp, #16]
 800d05c:	3c08      	subs	r4, #8
 800d05e:	4605      	mov	r5, r0
 800d060:	e7d3      	b.n	800d00a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19a>
 800d062:	4461      	add	r1, ip
 800d064:	b209      	sxth	r1, r1
 800d066:	4549      	cmp	r1, r9
 800d068:	dcf5      	bgt.n	800d056 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d06a:	9905      	ldr	r1, [sp, #20]
 800d06c:	eba1 0c0c 	sub.w	ip, r1, ip
 800d070:	f8a4 c006 	strh.w	ip, [r4, #6]
 800d074:	e7ee      	b.n	800d054 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800d076:	428f      	cmp	r7, r1
 800d078:	dced      	bgt.n	800d056 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d07a:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 800d07e:	4461      	add	r1, ip
 800d080:	b209      	sxth	r1, r1
 800d082:	4589      	cmp	r9, r1
 800d084:	dbe7      	blt.n	800d056 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d086:	4576      	cmp	r6, lr
 800d088:	fa1f fc8e 	uxth.w	ip, lr
 800d08c:	88a1      	ldrh	r1, [r4, #4]
 800d08e:	dc07      	bgt.n	800d0a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 800d090:	eba2 0c0c 	sub.w	ip, r2, ip
 800d094:	eba1 010c 	sub.w	r1, r1, ip
 800d098:	f8a4 8000 	strh.w	r8, [r4]
 800d09c:	80a1      	strh	r1, [r4, #4]
 800d09e:	e7d9      	b.n	800d054 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800d0a0:	4461      	add	r1, ip
 800d0a2:	b209      	sxth	r1, r1
 800d0a4:	4588      	cmp	r8, r1
 800d0a6:	dbd6      	blt.n	800d056 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800d0a8:	eba3 0c0c 	sub.w	ip, r3, ip
 800d0ac:	f8a4 c004 	strh.w	ip, [r4, #4]
 800d0b0:	e7d0      	b.n	800d054 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800d0b2:	bf00      	nop
 800d0b4:	20012666 	.word	0x20012666
 800d0b8:	20012664 	.word	0x20012664
 800d0bc:	2d00      	cmp	r5, #0
 800d0be:	f000 816d 	beq.w	800d39c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800d0c2:	9b06      	ldr	r3, [sp, #24]
 800d0c4:	445b      	add	r3, fp
 800d0c6:	461c      	mov	r4, r3
 800d0c8:	9b02      	ldr	r3, [sp, #8]
 800d0ca:	3301      	adds	r3, #1
 800d0cc:	f000 8166 	beq.w	800d39c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 800d0d0:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 800d0d4:	4629      	mov	r1, r5
 800d0d6:	9803      	ldr	r0, [sp, #12]
 800d0d8:	f7ff fd3e 	bl	800cb58 <_ZNK8touchgfx4Rect8includesERKS0_>
 800d0dc:	b120      	cbz	r0, 800d0e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 800d0de:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800d0e2:	9801      	ldr	r0, [sp, #4]
 800d0e4:	f7ff feb0 	bl	800ce48 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d0e8:	9903      	ldr	r1, [sp, #12]
 800d0ea:	4628      	mov	r0, r5
 800d0ec:	f7ff fcc1 	bl	800ca72 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d0f0:	2800      	cmp	r0, #0
 800d0f2:	f000 809c 	beq.w	800d22e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800d0f6:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 800d0fa:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 800d0fe:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 800d102:	9309      	str	r3, [sp, #36]	; 0x24
 800d104:	fa1f f189 	uxth.w	r1, r9
 800d108:	eb01 0c03 	add.w	ip, r1, r3
 800d10c:	fa1f fa8c 	uxth.w	sl, ip
 800d110:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 800d114:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 800d118:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 800d11c:	b283      	uxth	r3, r0
 800d11e:	eb03 050c 	add.w	r5, r3, ip
 800d122:	b2ad      	uxth	r5, r5
 800d124:	9505      	str	r5, [sp, #20]
 800d126:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 800d12a:	9504      	str	r5, [sp, #16]
 800d12c:	4548      	cmp	r0, r9
 800d12e:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 800d132:	f340 8099 	ble.w	800d268 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 800d136:	1a5b      	subs	r3, r3, r1
 800d138:	b29b      	uxth	r3, r3
 800d13a:	4596      	cmp	lr, r2
 800d13c:	fa0f f08a 	sxth.w	r0, sl
 800d140:	b21e      	sxth	r6, r3
 800d142:	dd2e      	ble.n	800d1a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 800d144:	9f02      	ldr	r7, [sp, #8]
 800d146:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 800d14a:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800d14e:	9f04      	ldr	r7, [sp, #16]
 800d150:	1a3f      	subs	r7, r7, r0
 800d152:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 800d156:	fa1f fe8e 	uxth.w	lr, lr
 800d15a:	b292      	uxth	r2, r2
 800d15c:	ebae 0102 	sub.w	r1, lr, r2
 800d160:	44a6      	add	lr, r4
 800d162:	4402      	add	r2, r0
 800d164:	b289      	uxth	r1, r1
 800d166:	fa0f fe8e 	sxth.w	lr, lr
 800d16a:	b212      	sxth	r2, r2
 800d16c:	b20d      	sxth	r5, r1
 800d16e:	ebae 0202 	sub.w	r2, lr, r2
 800d172:	436f      	muls	r7, r5
 800d174:	4372      	muls	r2, r6
 800d176:	4297      	cmp	r7, r2
 800d178:	db09      	blt.n	800d18e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 800d17a:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 800d17e:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 800d182:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800d186:	449c      	add	ip, r3
 800d188:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 800d18c:	e686      	b.n	800ce9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d18e:	4421      	add	r1, r4
 800d190:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 800d194:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 800d198:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 800d19c:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 800d1a0:	e67c      	b.n	800ce9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d1a2:	9f04      	ldr	r7, [sp, #16]
 800d1a4:	42b8      	cmp	r0, r7
 800d1a6:	da27      	bge.n	800d1f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 800d1a8:	9902      	ldr	r1, [sp, #8]
 800d1aa:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 800d1ae:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 800d1b2:	eb05 010e 	add.w	r1, r5, lr
 800d1b6:	fa1f f881 	uxth.w	r8, r1
 800d1ba:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 800d1be:	4411      	add	r1, r2
 800d1c0:	eba1 0108 	sub.w	r1, r1, r8
 800d1c4:	b289      	uxth	r1, r1
 800d1c6:	fa0f f988 	sxth.w	r9, r8
 800d1ca:	eba2 020e 	sub.w	r2, r2, lr
 800d1ce:	fa0f f881 	sxth.w	r8, r1
 800d1d2:	1a3f      	subs	r7, r7, r0
 800d1d4:	4372      	muls	r2, r6
 800d1d6:	fb08 f707 	mul.w	r7, r8, r7
 800d1da:	42ba      	cmp	r2, r7
 800d1dc:	dc06      	bgt.n	800d1ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 800d1de:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 800d1e2:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 800d1e6:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 800d1ea:	e7ca      	b.n	800d182 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 800d1ec:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 800d1f0:	4429      	add	r1, r5
 800d1f2:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 800d1f6:	e651      	b.n	800ce9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d1f8:	9805      	ldr	r0, [sp, #20]
 800d1fa:	ebaa 0000 	sub.w	r0, sl, r0
 800d1fe:	b280      	uxth	r0, r0
 800d200:	2d06      	cmp	r5, #6
 800d202:	fa0f fe80 	sxth.w	lr, r0
 800d206:	d817      	bhi.n	800d238 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 800d208:	9b04      	ldr	r3, [sp, #16]
 800d20a:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 800d20e:	1c6b      	adds	r3, r5, #1
 800d210:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 800d214:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 800d218:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 800d21c:	9b01      	ldr	r3, [sp, #4]
 800d21e:	9801      	ldr	r0, [sp, #4]
 800d220:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d224:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800d228:	805a      	strh	r2, [r3, #2]
 800d22a:	809e      	strh	r6, [r3, #4]
 800d22c:	80d9      	strh	r1, [r3, #6]
 800d22e:	9b02      	ldr	r3, [sp, #8]
 800d230:	3b01      	subs	r3, #1
 800d232:	9302      	str	r3, [sp, #8]
 800d234:	3c08      	subs	r4, #8
 800d236:	e747      	b.n	800d0c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 800d238:	9a02      	ldr	r2, [sp, #8]
 800d23a:	45b6      	cmp	lr, r6
 800d23c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800d240:	db0d      	blt.n	800d25e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800d242:	449c      	add	ip, r3
 800d244:	fa1f fc8c 	uxth.w	ip, ip
 800d248:	445a      	add	r2, fp
 800d24a:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 800d24e:	448c      	add	ip, r1
 800d250:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 800d254:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 800d258:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 800d25c:	e61e      	b.n	800ce9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d25e:	445a      	add	r2, fp
 800d260:	4484      	add	ip, r0
 800d262:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 800d266:	e78f      	b.n	800d188 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d268:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 800d26c:	fa1f f18e 	uxth.w	r1, lr
 800d270:	eb01 0806 	add.w	r8, r1, r6
 800d274:	b293      	uxth	r3, r2
 800d276:	fa1f f888 	uxth.w	r8, r8
 800d27a:	9306      	str	r3, [sp, #24]
 800d27c:	fa0f f388 	sxth.w	r3, r8
 800d280:	9307      	str	r3, [sp, #28]
 800d282:	9f06      	ldr	r7, [sp, #24]
 800d284:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 800d288:	443b      	add	r3, r7
 800d28a:	b29b      	uxth	r3, r3
 800d28c:	4596      	cmp	lr, r2
 800d28e:	9308      	str	r3, [sp, #32]
 800d290:	da24      	bge.n	800d2dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 800d292:	9905      	ldr	r1, [sp, #20]
 800d294:	eba3 0308 	sub.w	r3, r3, r8
 800d298:	ebaa 0401 	sub.w	r4, sl, r1
 800d29c:	b2a4      	uxth	r4, r4
 800d29e:	b29b      	uxth	r3, r3
 800d2a0:	b225      	sxth	r5, r4
 800d2a2:	b219      	sxth	r1, r3
 800d2a4:	eba2 020e 	sub.w	r2, r2, lr
 800d2a8:	eba9 0000 	sub.w	r0, r9, r0
 800d2ac:	436a      	muls	r2, r5
 800d2ae:	4348      	muls	r0, r1
 800d2b0:	4282      	cmp	r2, r0
 800d2b2:	9a02      	ldr	r2, [sp, #8]
 800d2b4:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800d2b8:	445a      	add	r2, fp
 800d2ba:	dc06      	bgt.n	800d2ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 800d2bc:	9b07      	ldr	r3, [sp, #28]
 800d2be:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 800d2c2:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 800d2c6:	44a4      	add	ip, r4
 800d2c8:	e75e      	b.n	800d188 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d2ca:	9904      	ldr	r1, [sp, #16]
 800d2cc:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 800d2d0:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 800d2d4:	4433      	add	r3, r6
 800d2d6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800d2da:	e5df      	b.n	800ce9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d2dc:	9f06      	ldr	r7, [sp, #24]
 800d2de:	9b04      	ldr	r3, [sp, #16]
 800d2e0:	1bc9      	subs	r1, r1, r7
 800d2e2:	fa0f f78a 	sxth.w	r7, sl
 800d2e6:	b289      	uxth	r1, r1
 800d2e8:	429f      	cmp	r7, r3
 800d2ea:	fa0f fe81 	sxth.w	lr, r1
 800d2ee:	dd23      	ble.n	800d338 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 800d2f0:	9a05      	ldr	r2, [sp, #20]
 800d2f2:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d2f6:	9d07      	ldr	r5, [sp, #28]
 800d2f8:	ebaa 0202 	sub.w	r2, sl, r2
 800d2fc:	b292      	uxth	r2, r2
 800d2fe:	eba5 0a03 	sub.w	sl, r5, r3
 800d302:	b214      	sxth	r4, r2
 800d304:	eba9 0000 	sub.w	r0, r9, r0
 800d308:	9b02      	ldr	r3, [sp, #8]
 800d30a:	fb0e f000 	mul.w	r0, lr, r0
 800d30e:	fb04 fa0a 	mul.w	sl, r4, sl
 800d312:	00db      	lsls	r3, r3, #3
 800d314:	4550      	cmp	r0, sl
 800d316:	445b      	add	r3, fp
 800d318:	db03      	blt.n	800d322 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 800d31a:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 800d31e:	4494      	add	ip, r2
 800d320:	e732      	b.n	800d188 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 800d322:	9a04      	ldr	r2, [sp, #16]
 800d324:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 800d328:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 800d32c:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 800d330:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 800d334:	4431      	add	r1, r6
 800d336:	e75c      	b.n	800d1f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 800d338:	9b08      	ldr	r3, [sp, #32]
 800d33a:	eba3 0308 	sub.w	r3, r3, r8
 800d33e:	b29b      	uxth	r3, r3
 800d340:	2d06      	cmp	r5, #6
 800d342:	b218      	sxth	r0, r3
 800d344:	d813      	bhi.n	800d36e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 800d346:	9b07      	ldr	r3, [sp, #28]
 800d348:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 800d34c:	1c6b      	adds	r3, r5, #1
 800d34e:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 800d352:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 800d356:	9b01      	ldr	r3, [sp, #4]
 800d358:	9901      	ldr	r1, [sp, #4]
 800d35a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d35e:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 800d362:	805a      	strh	r2, [r3, #2]
 800d364:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800d366:	809a      	strh	r2, [r3, #4]
 800d368:	f8a3 e006 	strh.w	lr, [r3, #6]
 800d36c:	e75f      	b.n	800d22e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 800d36e:	9c02      	ldr	r4, [sp, #8]
 800d370:	4570      	cmp	r0, lr
 800d372:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800d376:	db0d      	blt.n	800d394 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 800d378:	4431      	add	r1, r6
 800d37a:	9b06      	ldr	r3, [sp, #24]
 800d37c:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800d380:	b289      	uxth	r1, r1
 800d382:	445c      	add	r4, fp
 800d384:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 800d388:	4419      	add	r1, r3
 800d38a:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 800d38e:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 800d392:	e583      	b.n	800ce9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d394:	445c      	add	r4, fp
 800d396:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 800d39a:	e79b      	b.n	800d2d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 800d39c:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 800d3a0:	2e07      	cmp	r6, #7
 800d3a2:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 800d3a6:	d812      	bhi.n	800d3ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x55e>
 800d3a8:	1c75      	adds	r5, r6, #1
 800d3aa:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 800d3ae:	9d01      	ldr	r5, [sp, #4]
 800d3b0:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 800d3b4:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 800d3b8:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 800d3bc:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 800d3c0:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 800d3c4:	442c      	add	r4, r5
 800d3c6:	8061      	strh	r1, [r4, #2]
 800d3c8:	80a2      	strh	r2, [r4, #4]
 800d3ca:	80e3      	strh	r3, [r4, #6]
 800d3cc:	e5d0      	b.n	800cf70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800d3ce:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 800d3d2:	3e01      	subs	r6, #1
 800d3d4:	445c      	add	r4, fp
 800d3d6:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 800d3da:	f04f 37ff 	mov.w	r7, #4294967295
 800d3de:	2500      	movs	r5, #0
 800d3e0:	9305      	str	r3, [sp, #20]
 800d3e2:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 800d3e6:	9302      	str	r3, [sp, #8]
 800d3e8:	1e72      	subs	r2, r6, #1
 800d3ea:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 800d3ee:	9304      	str	r3, [sp, #16]
 800d3f0:	4691      	mov	r9, r2
 800d3f2:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 800d3f6:	f1b9 3fff 	cmp.w	r9, #4294967295
 800d3fa:	bf14      	ite	ne
 800d3fc:	9905      	ldrne	r1, [sp, #20]
 800d3fe:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 800d402:	6818      	ldr	r0, [r3, #0]
 800d404:	9207      	str	r2, [sp, #28]
 800d406:	bf18      	it	ne
 800d408:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 800d40c:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800d410:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800d414:	f8be 8004 	ldrh.w	r8, [lr, #4]
 800d418:	9306      	str	r3, [sp, #24]
 800d41a:	fb18 f801 	smulbb	r8, r8, r1
 800d41e:	6859      	ldr	r1, [r3, #4]
 800d420:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800d424:	4671      	mov	r1, lr
 800d426:	a80c      	add	r0, sp, #48	; 0x30
 800d428:	f7ff fbbc 	bl	800cba4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d42c:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 800d430:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 800d434:	9b04      	ldr	r3, [sp, #16]
 800d436:	9a02      	ldr	r2, [sp, #8]
 800d438:	fb10 f001 	smulbb	r0, r0, r1
 800d43c:	fb02 8803 	mla	r8, r2, r3, r8
 800d440:	eba0 0108 	sub.w	r1, r0, r8
 800d444:	f04f 0c08 	mov.w	ip, #8
 800d448:	fb90 f0fc 	sdiv	r0, r0, ip
 800d44c:	4288      	cmp	r0, r1
 800d44e:	dc20      	bgt.n	800d492 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x622>
 800d450:	4551      	cmp	r1, sl
 800d452:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800d456:	da03      	bge.n	800d460 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5f0>
 800d458:	b1d9      	cbz	r1, 800d492 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x622>
 800d45a:	468a      	mov	sl, r1
 800d45c:	464f      	mov	r7, r9
 800d45e:	4635      	mov	r5, r6
 800d460:	f109 39ff 	add.w	r9, r9, #4294967295
 800d464:	f119 0f02 	cmn.w	r9, #2
 800d468:	d1c5      	bne.n	800d3f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x586>
 800d46a:	4616      	mov	r6, r2
 800d46c:	3201      	adds	r2, #1
 800d46e:	f1a4 0408 	sub.w	r4, r4, #8
 800d472:	d1b6      	bne.n	800d3e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x572>
 800d474:	9b01      	ldr	r3, [sp, #4]
 800d476:	b2ac      	uxth	r4, r5
 800d478:	00ed      	lsls	r5, r5, #3
 800d47a:	1958      	adds	r0, r3, r5
 800d47c:	1c7b      	adds	r3, r7, #1
 800d47e:	d10b      	bne.n	800d498 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x628>
 800d480:	4601      	mov	r1, r0
 800d482:	9803      	ldr	r0, [sp, #12]
 800d484:	f7ff fb8e 	bl	800cba4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d488:	4621      	mov	r1, r4
 800d48a:	9801      	ldr	r0, [sp, #4]
 800d48c:	f7ff fcdc 	bl	800ce48 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d490:	e504      	b.n	800ce9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800d492:	464f      	mov	r7, r9
 800d494:	4635      	mov	r5, r6
 800d496:	e7ed      	b.n	800d474 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x604>
 800d498:	9b01      	ldr	r3, [sp, #4]
 800d49a:	00ff      	lsls	r7, r7, #3
 800d49c:	19d9      	adds	r1, r3, r7
 800d49e:	f7ff fb81 	bl	800cba4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d4a2:	9b03      	ldr	r3, [sp, #12]
 800d4a4:	cb03      	ldmia	r3!, {r0, r1}
 800d4a6:	445f      	add	r7, fp
 800d4a8:	445d      	add	r5, fp
 800d4aa:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 800d4ae:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 800d4b2:	f855 0fac 	ldr.w	r0, [r5, #172]!
 800d4b6:	9b03      	ldr	r3, [sp, #12]
 800d4b8:	6869      	ldr	r1, [r5, #4]
 800d4ba:	c303      	stmia	r3!, {r0, r1}
 800d4bc:	e7e4      	b.n	800d488 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x618>
 800d4be:	bf00      	nop

0800d4c0 <_ZN8touchgfx11Application10invalidateEv>:
 800d4c0:	4b09      	ldr	r3, [pc, #36]	; (800d4e8 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800d4c2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d4c6:	4b09      	ldr	r3, [pc, #36]	; (800d4ec <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800d4c8:	b082      	sub	sp, #8
 800d4ca:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d4ce:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d4d2:	2100      	movs	r1, #0
 800d4d4:	9100      	str	r1, [sp, #0]
 800d4d6:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d4da:	ab02      	add	r3, sp, #8
 800d4dc:	e913 0006 	ldmdb	r3, {r1, r2}
 800d4e0:	b002      	add	sp, #8
 800d4e2:	f7ff bcc5 	b.w	800ce70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d4e6:	bf00      	nop
 800d4e8:	20012664 	.word	0x20012664
 800d4ec:	20012666 	.word	0x20012666

0800d4f0 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800d4f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d4f4:	f500 7698 	add.w	r6, r0, #304	; 0x130
 800d4f8:	b09b      	sub	sp, #108	; 0x6c
 800d4fa:	4604      	mov	r4, r0
 800d4fc:	4630      	mov	r0, r6
 800d4fe:	f7fc f892 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d502:	4605      	mov	r5, r0
 800d504:	b940      	cbnz	r0, 800d518 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 800d506:	e896 0006 	ldmia.w	r6, {r1, r2}
 800d50a:	4620      	mov	r0, r4
 800d50c:	f7ff fcb0 	bl	800ce70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d510:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800d514:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 800d518:	4bc9      	ldr	r3, [pc, #804]	; (800d840 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800d51a:	681b      	ldr	r3, [r3, #0]
 800d51c:	2b00      	cmp	r3, #0
 800d51e:	d03e      	beq.n	800d59e <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 800d520:	4dc8      	ldr	r5, [pc, #800]	; (800d844 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 800d522:	4628      	mov	r0, r5
 800d524:	f7fc f87f 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d528:	4606      	mov	r6, r0
 800d52a:	2800      	cmp	r0, #0
 800d52c:	d137      	bne.n	800d59e <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 800d52e:	4628      	mov	r0, r5
 800d530:	f7ff f9e4 	bl	800c8fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d534:	6829      	ldr	r1, [r5, #0]
 800d536:	686a      	ldr	r2, [r5, #4]
 800d538:	4620      	mov	r0, r4
 800d53a:	f7ff fc99 	bl	800ce70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d53e:	802e      	strh	r6, [r5, #0]
 800d540:	806e      	strh	r6, [r5, #2]
 800d542:	80ae      	strh	r6, [r5, #4]
 800d544:	80ee      	strh	r6, [r5, #6]
 800d546:	ae09      	add	r6, sp, #36	; 0x24
 800d548:	4630      	mov	r0, r6
 800d54a:	f7ff fc25 	bl	800cd98 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d54e:	4abe      	ldr	r2, [pc, #760]	; (800d848 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 800d550:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 800d554:	8815      	ldrh	r5, [r2, #0]
 800d556:	9202      	str	r2, [sp, #8]
 800d558:	462b      	mov	r3, r5
 800d55a:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 800d55e:	429f      	cmp	r7, r3
 800d560:	d924      	bls.n	800d5ac <_ZN8touchgfx11Application15drawCachedAreasEv+0xbc>
 800d562:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 800d566:	2907      	cmp	r1, #7
 800d568:	d816      	bhi.n	800d598 <_ZN8touchgfx11Application15drawCachedAreasEv+0xa8>
 800d56a:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 800d56e:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 800d572:	f9b2 9002 	ldrsh.w	r9, [r2, #2]
 800d576:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 800d57a:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 800d57e:	1c4a      	adds	r2, r1, #1
 800d580:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 800d584:	eb06 02c1 	add.w	r2, r6, r1, lsl #3
 800d588:	f826 8031 	strh.w	r8, [r6, r1, lsl #3]
 800d58c:	f8a2 9002 	strh.w	r9, [r2, #2]
 800d590:	f8a2 e004 	strh.w	lr, [r2, #4]
 800d594:	f8a2 c006 	strh.w	ip, [r2, #6]
 800d598:	3301      	adds	r3, #1
 800d59a:	b29b      	uxth	r3, r3
 800d59c:	e7df      	b.n	800d55e <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e>
 800d59e:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 800d5a2:	2b00      	cmp	r3, #0
 800d5a4:	d1cf      	bne.n	800d546 <_ZN8touchgfx11Application15drawCachedAreasEv+0x56>
 800d5a6:	b01b      	add	sp, #108	; 0x6c
 800d5a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d5ac:	462f      	mov	r7, r5
 800d5ae:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 800d5b2:	42bb      	cmp	r3, r7
 800d5b4:	d90b      	bls.n	800d5ce <_ZN8touchgfx11Application15drawCachedAreasEv+0xde>
 800d5b6:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 800d5ba:	4620      	mov	r0, r4
 800d5bc:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 800d5c0:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 800d5c4:	3701      	adds	r7, #1
 800d5c6:	f7ff fc53 	bl	800ce70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d5ca:	b2bf      	uxth	r7, r7
 800d5cc:	e7ef      	b.n	800d5ae <_ZN8touchgfx11Application15drawCachedAreasEv+0xbe>
 800d5ce:	4a9f      	ldr	r2, [pc, #636]	; (800d84c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 800d5d0:	6813      	ldr	r3, [r2, #0]
 800d5d2:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800d5d6:	2b01      	cmp	r3, #1
 800d5d8:	4690      	mov	r8, r2
 800d5da:	f040 80e6 	bne.w	800d7aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ba>
 800d5de:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800d5e2:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 800d5e6:	4629      	mov	r1, r5
 800d5e8:	33ae      	adds	r3, #174	; 0xae
 800d5ea:	2500      	movs	r5, #0
 800d5ec:	428f      	cmp	r7, r1
 800d5ee:	f103 0308 	add.w	r3, r3, #8
 800d5f2:	dd0a      	ble.n	800d60a <_ZN8touchgfx11Application15drawCachedAreasEv+0x11a>
 800d5f4:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800d5f8:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 800d5fc:	4402      	add	r2, r0
 800d5fe:	b212      	sxth	r2, r2
 800d600:	4295      	cmp	r5, r2
 800d602:	bfb8      	it	lt
 800d604:	4615      	movlt	r5, r2
 800d606:	3101      	adds	r1, #1
 800d608:	e7f0      	b.n	800d5ec <_ZN8touchgfx11Application15drawCachedAreasEv+0xfc>
 800d60a:	4b91      	ldr	r3, [pc, #580]	; (800d850 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 800d60c:	f8df b23c 	ldr.w	fp, [pc, #572]	; 800d84c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>
 800d610:	881b      	ldrh	r3, [r3, #0]
 800d612:	2b0f      	cmp	r3, #15
 800d614:	bf88      	it	hi
 800d616:	ea4f 0ad3 	movhi.w	sl, r3, lsr #3
 800d61a:	f04f 0300 	mov.w	r3, #0
 800d61e:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800d622:	bf98      	it	ls
 800d624:	f04f 0a01 	movls.w	sl, #1
 800d628:	46d8      	mov	r8, fp
 800d62a:	f8bd 701a 	ldrh.w	r7, [sp, #26]
 800d62e:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 800d632:	4438      	add	r0, r7
 800d634:	b207      	sxth	r7, r0
 800d636:	f8db 0000 	ldr.w	r0, [fp]
 800d63a:	42bd      	cmp	r5, r7
 800d63c:	6803      	ldr	r3, [r0, #0]
 800d63e:	f340 8084 	ble.w	800d74a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800d642:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800d646:	4798      	blx	r3
 800d648:	eb07 030a 	add.w	r3, r7, sl
 800d64c:	4298      	cmp	r0, r3
 800d64e:	da07      	bge.n	800d660 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 800d650:	4285      	cmp	r5, r0
 800d652:	dd05      	ble.n	800d660 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 800d654:	4287      	cmp	r7, r0
 800d656:	dd6d      	ble.n	800d734 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 800d658:	2f00      	cmp	r7, #0
 800d65a:	dd6b      	ble.n	800d734 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 800d65c:	4628      	mov	r0, r5
 800d65e:	e004      	b.n	800d66a <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 800d660:	4287      	cmp	r7, r0
 800d662:	dcfb      	bgt.n	800d65c <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
 800d664:	42a8      	cmp	r0, r5
 800d666:	bfa8      	it	ge
 800d668:	4628      	movge	r0, r5
 800d66a:	4b7a      	ldr	r3, [pc, #488]	; (800d854 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>)
 800d66c:	f8ad 7016 	strh.w	r7, [sp, #22]
 800d670:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d674:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d678:	9b02      	ldr	r3, [sp, #8]
 800d67a:	1bc0      	subs	r0, r0, r7
 800d67c:	2200      	movs	r2, #0
 800d67e:	881f      	ldrh	r7, [r3, #0]
 800d680:	f8ad 2014 	strh.w	r2, [sp, #20]
 800d684:	f8ad 001a 	strh.w	r0, [sp, #26]
 800d688:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 800d68c:	42bb      	cmp	r3, r7
 800d68e:	d9cc      	bls.n	800d62a <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 800d690:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 800d694:	ab07      	add	r3, sp, #28
 800d696:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800d69a:	6851      	ldr	r1, [r2, #4]
 800d69c:	c303      	stmia	r3!, {r0, r1}
 800d69e:	a905      	add	r1, sp, #20
 800d6a0:	a807      	add	r0, sp, #28
 800d6a2:	f7ff f9e6 	bl	800ca72 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d6a6:	2800      	cmp	r0, #0
 800d6a8:	d04c      	beq.n	800d744 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 800d6aa:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 800d6ae:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 800d6b2:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 800d6b6:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800d6ba:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800d6be:	9303      	str	r3, [sp, #12]
 800d6c0:	4686      	mov	lr, r0
 800d6c2:	4290      	cmp	r0, r2
 800d6c4:	4448      	add	r0, r9
 800d6c6:	f8bd 9018 	ldrh.w	r9, [sp, #24]
 800d6ca:	bfb8      	it	lt
 800d6cc:	4696      	movlt	lr, r2
 800d6ce:	444a      	add	r2, r9
 800d6d0:	4299      	cmp	r1, r3
 800d6d2:	b280      	uxth	r0, r0
 800d6d4:	b292      	uxth	r2, r2
 800d6d6:	468c      	mov	ip, r1
 800d6d8:	fa0f f982 	sxth.w	r9, r2
 800d6dc:	bfb8      	it	lt
 800d6de:	469c      	movlt	ip, r3
 800d6e0:	b203      	sxth	r3, r0
 800d6e2:	454b      	cmp	r3, r9
 800d6e4:	bfb8      	it	lt
 800d6e6:	4602      	movlt	r2, r0
 800d6e8:	eba2 020e 	sub.w	r2, r2, lr
 800d6ec:	f8ad 2020 	strh.w	r2, [sp, #32]
 800d6f0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 800d6f4:	9b03      	ldr	r3, [sp, #12]
 800d6f6:	f8ad e01c 	strh.w	lr, [sp, #28]
 800d6fa:	4411      	add	r1, r2
 800d6fc:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800d700:	f8ad c01e 	strh.w	ip, [sp, #30]
 800d704:	4413      	add	r3, r2
 800d706:	b289      	uxth	r1, r1
 800d708:	b29b      	uxth	r3, r3
 800d70a:	b208      	sxth	r0, r1
 800d70c:	b21a      	sxth	r2, r3
 800d70e:	4290      	cmp	r0, r2
 800d710:	bfb8      	it	lt
 800d712:	460b      	movlt	r3, r1
 800d714:	eba3 030c 	sub.w	r3, r3, ip
 800d718:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800d71c:	a807      	add	r0, sp, #28
 800d71e:	f7fb ff82 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d722:	b920      	cbnz	r0, 800d72e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 800d724:	6823      	ldr	r3, [r4, #0]
 800d726:	a907      	add	r1, sp, #28
 800d728:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d72a:	4620      	mov	r0, r4
 800d72c:	4798      	blx	r3
 800d72e:	3701      	adds	r7, #1
 800d730:	b2bf      	uxth	r7, r7
 800d732:	e7a9      	b.n	800d688 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 800d734:	f8d8 0000 	ldr.w	r0, [r8]
 800d738:	6803      	ldr	r3, [r0, #0]
 800d73a:	2101      	movs	r1, #1
 800d73c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800d740:	4798      	blx	r3
 800d742:	e772      	b.n	800d62a <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 800d744:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800d748:	e7e8      	b.n	800d71c <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 800d74a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d74c:	4798      	blx	r3
 800d74e:	4b42      	ldr	r3, [pc, #264]	; (800d858 <_ZN8touchgfx11Application15drawCachedAreasEv+0x368>)
 800d750:	781b      	ldrb	r3, [r3, #0]
 800d752:	2b00      	cmp	r3, #0
 800d754:	f43f af27 	beq.w	800d5a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 800d758:	2300      	movs	r3, #0
 800d75a:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 800d75e:	9b02      	ldr	r3, [sp, #8]
 800d760:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 800d764:	881b      	ldrh	r3, [r3, #0]
 800d766:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 800d76a:	429d      	cmp	r5, r3
 800d76c:	f67f af1b 	bls.w	800d5a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 800d770:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 800d774:	2907      	cmp	r1, #7
 800d776:	d815      	bhi.n	800d7a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b4>
 800d778:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 800d77c:	f936 8033 	ldrsh.w	r8, [r6, r3, lsl #3]
 800d780:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 800d784:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 800d788:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 800d78c:	1c4a      	adds	r2, r1, #1
 800d78e:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 800d792:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 800d796:	f820 8031 	strh.w	r8, [r0, r1, lsl #3]
 800d79a:	f8a2 e002 	strh.w	lr, [r2, #2]
 800d79e:	f8a2 c004 	strh.w	ip, [r2, #4]
 800d7a2:	80d7      	strh	r7, [r2, #6]
 800d7a4:	3301      	adds	r3, #1
 800d7a6:	b29b      	uxth	r3, r3
 800d7a8:	e7df      	b.n	800d76a <_ZN8touchgfx11Application15drawCachedAreasEv+0x27a>
 800d7aa:	2b02      	cmp	r3, #2
 800d7ac:	f040 8136 	bne.w	800da1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 800d7b0:	4b2a      	ldr	r3, [pc, #168]	; (800d85c <_ZN8touchgfx11Application15drawCachedAreasEv+0x36c>)
 800d7b2:	781b      	ldrb	r3, [r3, #0]
 800d7b4:	2b01      	cmp	r3, #1
 800d7b6:	f104 09ac 	add.w	r9, r4, #172	; 0xac
 800d7ba:	f000 809c 	beq.w	800d8f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 800d7be:	9b02      	ldr	r3, [sp, #8]
 800d7c0:	f8b4 20ec 	ldrh.w	r2, [r4, #236]	; 0xec
 800d7c4:	f8b3 b000 	ldrh.w	fp, [r3]
 800d7c8:	f10b 0b01 	add.w	fp, fp, #1
 800d7cc:	fa1f fb8b 	uxth.w	fp, fp
 800d7d0:	2a00      	cmp	r2, #0
 800d7d2:	d0bc      	beq.n	800d74e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800d7d4:	f8b4 50ae 	ldrh.w	r5, [r4, #174]	; 0xae
 800d7d8:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 800d7dc:	441d      	add	r5, r3
 800d7de:	b22d      	sxth	r5, r5
 800d7e0:	4659      	mov	r1, fp
 800d7e2:	f04f 0800 	mov.w	r8, #0
 800d7e6:	b28b      	uxth	r3, r1
 800d7e8:	429a      	cmp	r2, r3
 800d7ea:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 800d7ee:	f240 80c1 	bls.w	800d974 <_ZN8touchgfx11Application15drawCachedAreasEv+0x484>
 800d7f2:	4427      	add	r7, r4
 800d7f4:	eb04 0ec1 	add.w	lr, r4, r1, lsl #3
 800d7f8:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 800d7fc:	f9be c0ae 	ldrsh.w	ip, [lr, #174]	; 0xae
 800d800:	4563      	cmp	r3, ip
 800d802:	4608      	mov	r0, r1
 800d804:	f340 80a3 	ble.w	800d94e <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 800d808:	f8be 50b2 	ldrh.w	r5, [lr, #178]	; 0xb2
 800d80c:	4465      	add	r5, ip
 800d80e:	b22d      	sxth	r5, r5
 800d810:	429d      	cmp	r5, r3
 800d812:	bfa8      	it	ge
 800d814:	461d      	movge	r5, r3
 800d816:	3101      	adds	r1, #1
 800d818:	4680      	mov	r8, r0
 800d81a:	e7e4      	b.n	800d7e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
 800d81c:	d10b      	bne.n	800d836 <_ZN8touchgfx11Application15drawCachedAreasEv+0x346>
 800d81e:	f9b5 c0b2 	ldrsh.w	ip, [r5, #178]	; 0xb2
 800d822:	f9ba 10b2 	ldrsh.w	r1, [sl, #178]	; 0xb2
 800d826:	458c      	cmp	ip, r1
 800d828:	bfb4      	ite	lt
 800d82a:	469c      	movlt	ip, r3
 800d82c:	46bc      	movge	ip, r7
 800d82e:	4572      	cmp	r2, lr
 800d830:	bfb8      	it	lt
 800d832:	4672      	movlt	r2, lr
 800d834:	e088      	b.n	800d948 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 800d836:	428a      	cmp	r2, r1
 800d838:	bfb8      	it	lt
 800d83a:	460a      	movlt	r2, r1
 800d83c:	46bc      	mov	ip, r7
 800d83e:	e083      	b.n	800d948 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 800d840:	200126a8 	.word	0x200126a8
 800d844:	200126b4 	.word	0x200126b4
 800d848:	20000084 	.word	0x20000084
 800d84c:	20012670 	.word	0x20012670
 800d850:	20012666 	.word	0x20012666
 800d854:	20012664 	.word	0x20012664
 800d858:	2001266e 	.word	0x2001266e
 800d85c:	20012668 	.word	0x20012668
 800d860:	1961      	adds	r1, r4, r5
 800d862:	ab07      	add	r3, sp, #28
 800d864:	f851 0fac 	ldr.w	r0, [r1, #172]!
 800d868:	6849      	ldr	r1, [r1, #4]
 800d86a:	c303      	stmia	r3!, {r0, r1}
 800d86c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d870:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800d874:	2b13      	cmp	r3, #19
 800d876:	bfd8      	it	le
 800d878:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800d87c:	f8ad 201c 	strh.w	r2, [sp, #28]
 800d880:	440b      	add	r3, r1
 800d882:	1a9b      	subs	r3, r3, r2
 800d884:	a807      	add	r0, sp, #28
 800d886:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d88a:	f7ff f851 	bl	800c930 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800d88e:	a807      	add	r0, sp, #28
 800d890:	f7fb fec9 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d894:	bb78      	cbnz	r0, 800d8f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 800d896:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800d89a:	f8d8 0000 	ldr.w	r0, [r8]
 800d89e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800d8a2:	f8d0 e000 	ldr.w	lr, [r0]
 800d8a6:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800d8aa:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800d8ae:	f1bc 0f14 	cmp.w	ip, #20
 800d8b2:	bfa8      	it	ge
 800d8b4:	f04f 0c14 	movge.w	ip, #20
 800d8b8:	fa1f fc8c 	uxth.w	ip, ip
 800d8bc:	f8cd c000 	str.w	ip, [sp]
 800d8c0:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 800d8c4:	47d0      	blx	sl
 800d8c6:	4682      	mov	sl, r0
 800d8c8:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d8cc:	a807      	add	r0, sp, #28
 800d8ce:	f7ff f815 	bl	800c8fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d8d2:	6823      	ldr	r3, [r4, #0]
 800d8d4:	4425      	add	r5, r4
 800d8d6:	4620      	mov	r0, r4
 800d8d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d8da:	a907      	add	r1, sp, #28
 800d8dc:	4798      	blx	r3
 800d8de:	f8b5 00b0 	ldrh.w	r0, [r5, #176]	; 0xb0
 800d8e2:	eba0 000a 	sub.w	r0, r0, sl
 800d8e6:	b200      	sxth	r0, r0
 800d8e8:	f8a5 00b0 	strh.w	r0, [r5, #176]	; 0xb0
 800d8ec:	b918      	cbnz	r0, 800d8f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 800d8ee:	b2b9      	uxth	r1, r7
 800d8f0:	4648      	mov	r0, r9
 800d8f2:	f7ff faa9 	bl	800ce48 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d8f6:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 800d8fa:	f1bb 0f00 	cmp.w	fp, #0
 800d8fe:	f43f af26 	beq.w	800d74e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800d902:	9b02      	ldr	r3, [sp, #8]
 800d904:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 800d908:	881b      	ldrh	r3, [r3, #0]
 800d90a:	3301      	adds	r3, #1
 800d90c:	b29b      	uxth	r3, r3
 800d90e:	2700      	movs	r7, #0
 800d910:	b299      	uxth	r1, r3
 800d912:	458b      	cmp	fp, r1
 800d914:	ea4f 05c7 	mov.w	r5, r7, lsl #3
 800d918:	d9a2      	bls.n	800d860 <_ZN8touchgfx11Application15drawCachedAreasEv+0x370>
 800d91a:	4425      	add	r5, r4
 800d91c:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 800d920:	f8b5 10b0 	ldrh.w	r1, [r5, #176]	; 0xb0
 800d924:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 800d928:	f9ba e0ac 	ldrsh.w	lr, [sl, #172]	; 0xac
 800d92c:	4408      	add	r0, r1
 800d92e:	f8ba 10b0 	ldrh.w	r1, [sl, #176]	; 0xb0
 800d932:	4471      	add	r1, lr
 800d934:	b200      	sxth	r0, r0
 800d936:	b209      	sxth	r1, r1
 800d938:	4288      	cmp	r0, r1
 800d93a:	469c      	mov	ip, r3
 800d93c:	f6bf af6e 	bge.w	800d81c <_ZN8touchgfx11Application15drawCachedAreasEv+0x32c>
 800d940:	4586      	cmp	lr, r0
 800d942:	4672      	mov	r2, lr
 800d944:	bfb8      	it	lt
 800d946:	4602      	movlt	r2, r0
 800d948:	3301      	adds	r3, #1
 800d94a:	4667      	mov	r7, ip
 800d94c:	e7e0      	b.n	800d910 <_ZN8touchgfx11Application15drawCachedAreasEv+0x420>
 800d94e:	d10c      	bne.n	800d96a <_ZN8touchgfx11Application15drawCachedAreasEv+0x47a>
 800d950:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 800d954:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 800d958:	4287      	cmp	r7, r0
 800d95a:	bfb4      	ite	lt
 800d95c:	4608      	movlt	r0, r1
 800d95e:	4640      	movge	r0, r8
 800d960:	f8be 70b2 	ldrh.w	r7, [lr, #178]	; 0xb2
 800d964:	443b      	add	r3, r7
 800d966:	b21b      	sxth	r3, r3
 800d968:	e752      	b.n	800d810 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 800d96a:	4565      	cmp	r5, ip
 800d96c:	bfa8      	it	ge
 800d96e:	4665      	movge	r5, ip
 800d970:	4640      	mov	r0, r8
 800d972:	e750      	b.n	800d816 <_ZN8touchgfx11Application15drawCachedAreasEv+0x326>
 800d974:	eb09 0007 	add.w	r0, r9, r7
 800d978:	4427      	add	r7, r4
 800d97a:	9203      	str	r2, [sp, #12]
 800d97c:	f9b7 a0b2 	ldrsh.w	sl, [r7, #178]	; 0xb2
 800d980:	f1ba 0f13 	cmp.w	sl, #19
 800d984:	bfde      	ittt	le
 800d986:	f8b7 50ae 	ldrhle.w	r5, [r7, #174]	; 0xae
 800d98a:	4455      	addle	r5, sl
 800d98c:	b22d      	sxthle	r5, r5
 800d98e:	f7fb fe4a 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d992:	9a03      	ldr	r2, [sp, #12]
 800d994:	2800      	cmp	r0, #0
 800d996:	f47f af1b 	bne.w	800d7d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e0>
 800d99a:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 800d99e:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d9a2:	482a      	ldr	r0, [pc, #168]	; (800da4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>)
 800d9a4:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 800d9a8:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 800d9ac:	6800      	ldr	r0, [r0, #0]
 800d9ae:	f8ad 101c 	strh.w	r1, [sp, #28]
 800d9b2:	1aad      	subs	r5, r5, r2
 800d9b4:	2d14      	cmp	r5, #20
 800d9b6:	f8ad 201e 	strh.w	r2, [sp, #30]
 800d9ba:	f8ad 3020 	strh.w	r3, [sp, #32]
 800d9be:	bfa8      	it	ge
 800d9c0:	2514      	movge	r5, #20
 800d9c2:	f8d0 c000 	ldr.w	ip, [r0]
 800d9c6:	b2ad      	uxth	r5, r5
 800d9c8:	fa1f fa8a 	uxth.w	sl, sl
 800d9cc:	4555      	cmp	r5, sl
 800d9ce:	bf94      	ite	ls
 800d9d0:	9500      	strls	r5, [sp, #0]
 800d9d2:	f8cd a000 	strhi.w	sl, [sp]
 800d9d6:	b292      	uxth	r2, r2
 800d9d8:	f8dc 5090 	ldr.w	r5, [ip, #144]	; 0x90
 800d9dc:	b29b      	uxth	r3, r3
 800d9de:	b289      	uxth	r1, r1
 800d9e0:	47a8      	blx	r5
 800d9e2:	6823      	ldr	r3, [r4, #0]
 800d9e4:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800d9e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800d9ea:	a907      	add	r1, sp, #28
 800d9ec:	4620      	mov	r0, r4
 800d9ee:	4798      	blx	r3
 800d9f0:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800d9f4:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 800d9f8:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 800d9fc:	1a5b      	subs	r3, r3, r1
 800d9fe:	440a      	add	r2, r1
 800da00:	b21b      	sxth	r3, r3
 800da02:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 800da06:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 800da0a:	2b00      	cmp	r3, #0
 800da0c:	f47f aed7 	bne.w	800d7be <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 800da10:	fa1f f188 	uxth.w	r1, r8
 800da14:	4648      	mov	r0, r9
 800da16:	f7ff fa17 	bl	800ce48 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800da1a:	e6d0      	b.n	800d7be <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 800da1c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 800da20:	42ab      	cmp	r3, r5
 800da22:	f67f ae94 	bls.w	800d74e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 800da26:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800da2a:	ab07      	add	r3, sp, #28
 800da2c:	f852 0fac 	ldr.w	r0, [r2, #172]!
 800da30:	6851      	ldr	r1, [r2, #4]
 800da32:	c303      	stmia	r3!, {r0, r1}
 800da34:	a807      	add	r0, sp, #28
 800da36:	f7fb fdf6 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 800da3a:	b920      	cbnz	r0, 800da46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x556>
 800da3c:	6823      	ldr	r3, [r4, #0]
 800da3e:	a907      	add	r1, sp, #28
 800da40:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800da42:	4620      	mov	r0, r4
 800da44:	4798      	blx	r3
 800da46:	3501      	adds	r5, #1
 800da48:	b2ad      	uxth	r5, r5
 800da4a:	e7e7      	b.n	800da1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 800da4c:	20012670 	.word	0x20012670

0800da50 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800da50:	4b03      	ldr	r3, [pc, #12]	; (800da60 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800da52:	2200      	movs	r2, #0
 800da54:	801a      	strh	r2, [r3, #0]
 800da56:	805a      	strh	r2, [r3, #2]
 800da58:	809a      	strh	r2, [r3, #4]
 800da5a:	80da      	strh	r2, [r3, #6]
 800da5c:	4770      	bx	lr
 800da5e:	bf00      	nop
 800da60:	200126b4 	.word	0x200126b4

0800da64 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800da64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800da68:	4606      	mov	r6, r0
 800da6a:	b09d      	sub	sp, #116	; 0x74
 800da6c:	a803      	add	r0, sp, #12
 800da6e:	4614      	mov	r4, r2
 800da70:	468a      	mov	sl, r1
 800da72:	461d      	mov	r5, r3
 800da74:	f000 fd7a 	bl	800e56c <_ZN8touchgfx12TextProviderC1Ev>
 800da78:	6833      	ldr	r3, [r6, #0]
 800da7a:	4630      	mov	r0, r6
 800da7c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800da7e:	4798      	blx	r3
 800da80:	6833      	ldr	r3, [r6, #0]
 800da82:	4607      	mov	r7, r0
 800da84:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800da86:	4630      	mov	r0, r6
 800da88:	4798      	blx	r3
 800da8a:	462a      	mov	r2, r5
 800da8c:	9000      	str	r0, [sp, #0]
 800da8e:	4621      	mov	r1, r4
 800da90:	463b      	mov	r3, r7
 800da92:	a803      	add	r0, sp, #12
 800da94:	f000 fdc5 	bl	800e622 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800da98:	2500      	movs	r5, #0
 800da9a:	462c      	mov	r4, r5
 800da9c:	46a9      	mov	r9, r5
 800da9e:	46a8      	mov	r8, r5
 800daa0:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800daa4:	2300      	movs	r3, #0
 800daa6:	9302      	str	r3, [sp, #8]
 800daa8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800daac:	429c      	cmp	r4, r3
 800daae:	d002      	beq.n	800dab6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800dab0:	455c      	cmp	r4, fp
 800dab2:	bf18      	it	ne
 800dab4:	4625      	movne	r5, r4
 800dab6:	ab02      	add	r3, sp, #8
 800dab8:	4632      	mov	r2, r6
 800daba:	4651      	mov	r1, sl
 800dabc:	a803      	add	r0, sp, #12
 800dabe:	f001 f8b3 	bl	800ec28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800dac2:	4604      	mov	r4, r0
 800dac4:	b108      	cbz	r0, 800daca <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800dac6:	280a      	cmp	r0, #10
 800dac8:	d10a      	bne.n	800dae0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800daca:	45c1      	cmp	r9, r8
 800dacc:	bf38      	it	cc
 800dace:	46c1      	movcc	r9, r8
 800dad0:	f04f 0800 	mov.w	r8, #0
 800dad4:	2c00      	cmp	r4, #0
 800dad6:	d1e5      	bne.n	800daa4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800dad8:	4648      	mov	r0, r9
 800dada:	b01d      	add	sp, #116	; 0x74
 800dadc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dae0:	9a02      	ldr	r2, [sp, #8]
 800dae2:	2a00      	cmp	r2, #0
 800dae4:	d0de      	beq.n	800daa4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800dae6:	7b57      	ldrb	r7, [r2, #13]
 800dae8:	6833      	ldr	r3, [r6, #0]
 800daea:	8894      	ldrh	r4, [r2, #4]
 800daec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800daee:	007f      	lsls	r7, r7, #1
 800daf0:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800daf4:	7a97      	ldrb	r7, [r2, #10]
 800daf6:	4629      	mov	r1, r5
 800daf8:	4307      	orrs	r7, r0
 800dafa:	4630      	mov	r0, r6
 800dafc:	4798      	blx	r3
 800dafe:	4438      	add	r0, r7
 800db00:	4480      	add	r8, r0
 800db02:	fa1f f888 	uxth.w	r8, r8
 800db06:	e7e5      	b.n	800dad4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800db08 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800db08:	b508      	push	{r3, lr}
 800db0a:	6803      	ldr	r3, [r0, #0]
 800db0c:	68db      	ldr	r3, [r3, #12]
 800db0e:	4798      	blx	r3
 800db10:	b128      	cbz	r0, 800db1e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800db12:	7b43      	ldrb	r3, [r0, #13]
 800db14:	7a80      	ldrb	r0, [r0, #10]
 800db16:	005b      	lsls	r3, r3, #1
 800db18:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800db1c:	4318      	orrs	r0, r3
 800db1e:	bd08      	pop	{r3, pc}

0800db20 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800db20:	b40e      	push	{r1, r2, r3}
 800db22:	b5f0      	push	{r4, r5, r6, r7, lr}
 800db24:	b09e      	sub	sp, #120	; 0x78
 800db26:	ab23      	add	r3, sp, #140	; 0x8c
 800db28:	4605      	mov	r5, r0
 800db2a:	f853 4b04 	ldr.w	r4, [r3], #4
 800db2e:	9303      	str	r3, [sp, #12]
 800db30:	a805      	add	r0, sp, #20
 800db32:	f000 fd1b 	bl	800e56c <_ZN8touchgfx12TextProviderC1Ev>
 800db36:	682b      	ldr	r3, [r5, #0]
 800db38:	4628      	mov	r0, r5
 800db3a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800db3c:	4798      	blx	r3
 800db3e:	682b      	ldr	r3, [r5, #0]
 800db40:	4606      	mov	r6, r0
 800db42:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800db44:	4628      	mov	r0, r5
 800db46:	4798      	blx	r3
 800db48:	4633      	mov	r3, r6
 800db4a:	ae1e      	add	r6, sp, #120	; 0x78
 800db4c:	4621      	mov	r1, r4
 800db4e:	9000      	str	r0, [sp, #0]
 800db50:	9a03      	ldr	r2, [sp, #12]
 800db52:	2400      	movs	r4, #0
 800db54:	a805      	add	r0, sp, #20
 800db56:	f000 fd64 	bl	800e622 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800db5a:	f846 4d68 	str.w	r4, [r6, #-104]!
 800db5e:	462a      	mov	r2, r5
 800db60:	4633      	mov	r3, r6
 800db62:	4621      	mov	r1, r4
 800db64:	a805      	add	r0, sp, #20
 800db66:	f001 f85f 	bl	800ec28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800db6a:	b1f0      	cbz	r0, 800dbaa <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 800db6c:	280a      	cmp	r0, #10
 800db6e:	d018      	beq.n	800dba2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800db70:	9f04      	ldr	r7, [sp, #16]
 800db72:	b1b7      	cbz	r7, 800dba2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800db74:	7b78      	ldrb	r0, [r7, #13]
 800db76:	7a3b      	ldrb	r3, [r7, #8]
 800db78:	88ea      	ldrh	r2, [r5, #6]
 800db7a:	00c1      	lsls	r1, r0, #3
 800db7c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800db80:	4319      	orrs	r1, r3
 800db82:	0643      	lsls	r3, r0, #25
 800db84:	bf44      	itt	mi
 800db86:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800db8a:	b219      	sxthmi	r1, r3
 800db8c:	0100      	lsls	r0, r0, #4
 800db8e:	79fb      	ldrb	r3, [r7, #7]
 800db90:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800db94:	4303      	orrs	r3, r0
 800db96:	4413      	add	r3, r2
 800db98:	1a5b      	subs	r3, r3, r1
 800db9a:	b21b      	sxth	r3, r3
 800db9c:	429c      	cmp	r4, r3
 800db9e:	bfb8      	it	lt
 800dba0:	461c      	movlt	r4, r3
 800dba2:	4633      	mov	r3, r6
 800dba4:	462a      	mov	r2, r5
 800dba6:	2100      	movs	r1, #0
 800dba8:	e7dc      	b.n	800db64 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800dbaa:	b2a0      	uxth	r0, r4
 800dbac:	b01e      	add	sp, #120	; 0x78
 800dbae:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800dbb2:	b003      	add	sp, #12
 800dbb4:	4770      	bx	lr

0800dbb6 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 800dbb6:	7a43      	ldrb	r3, [r0, #9]
 800dbb8:	8880      	ldrh	r0, [r0, #4]
 800dbba:	4418      	add	r0, r3
 800dbbc:	b280      	uxth	r0, r0
 800dbbe:	4770      	bx	lr

0800dbc0 <_ZNK8touchgfx4Font13getFontHeightEv>:
 800dbc0:	6803      	ldr	r3, [r0, #0]
 800dbc2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800dbc4:	4718      	bx	r3

0800dbc6 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800dbc6:	b40e      	push	{r1, r2, r3}
 800dbc8:	b570      	push	{r4, r5, r6, lr}
 800dbca:	b09d      	sub	sp, #116	; 0x74
 800dbcc:	ab21      	add	r3, sp, #132	; 0x84
 800dbce:	4604      	mov	r4, r0
 800dbd0:	f853 5b04 	ldr.w	r5, [r3], #4
 800dbd4:	9302      	str	r3, [sp, #8]
 800dbd6:	a803      	add	r0, sp, #12
 800dbd8:	f000 fcc8 	bl	800e56c <_ZN8touchgfx12TextProviderC1Ev>
 800dbdc:	6823      	ldr	r3, [r4, #0]
 800dbde:	4620      	mov	r0, r4
 800dbe0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800dbe2:	4798      	blx	r3
 800dbe4:	6823      	ldr	r3, [r4, #0]
 800dbe6:	4606      	mov	r6, r0
 800dbe8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800dbea:	4620      	mov	r0, r4
 800dbec:	4798      	blx	r3
 800dbee:	4633      	mov	r3, r6
 800dbf0:	9000      	str	r0, [sp, #0]
 800dbf2:	9a02      	ldr	r2, [sp, #8]
 800dbf4:	4629      	mov	r1, r5
 800dbf6:	a803      	add	r0, sp, #12
 800dbf8:	f000 fd13 	bl	800e622 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800dbfc:	a803      	add	r0, sp, #12
 800dbfe:	f001 f8e1 	bl	800edc4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800dc02:	2401      	movs	r4, #1
 800dc04:	b2a3      	uxth	r3, r4
 800dc06:	b140      	cbz	r0, 800dc1a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 800dc08:	280a      	cmp	r0, #10
 800dc0a:	bf08      	it	eq
 800dc0c:	3301      	addeq	r3, #1
 800dc0e:	a803      	add	r0, sp, #12
 800dc10:	bf08      	it	eq
 800dc12:	b21c      	sxtheq	r4, r3
 800dc14:	f001 f8d6 	bl	800edc4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800dc18:	e7f4      	b.n	800dc04 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800dc1a:	4618      	mov	r0, r3
 800dc1c:	b01d      	add	sp, #116	; 0x74
 800dc1e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dc22:	b003      	add	sp, #12
 800dc24:	4770      	bx	lr

0800dc26 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800dc26:	b40e      	push	{r1, r2, r3}
 800dc28:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dc2a:	b09e      	sub	sp, #120	; 0x78
 800dc2c:	ab23      	add	r3, sp, #140	; 0x8c
 800dc2e:	4604      	mov	r4, r0
 800dc30:	f853 5b04 	ldr.w	r5, [r3], #4
 800dc34:	9303      	str	r3, [sp, #12]
 800dc36:	a805      	add	r0, sp, #20
 800dc38:	f000 fc98 	bl	800e56c <_ZN8touchgfx12TextProviderC1Ev>
 800dc3c:	6823      	ldr	r3, [r4, #0]
 800dc3e:	4620      	mov	r0, r4
 800dc40:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800dc42:	4798      	blx	r3
 800dc44:	6823      	ldr	r3, [r4, #0]
 800dc46:	4606      	mov	r6, r0
 800dc48:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800dc4a:	4620      	mov	r0, r4
 800dc4c:	4798      	blx	r3
 800dc4e:	4633      	mov	r3, r6
 800dc50:	4629      	mov	r1, r5
 800dc52:	9000      	str	r0, [sp, #0]
 800dc54:	9a03      	ldr	r2, [sp, #12]
 800dc56:	a805      	add	r0, sp, #20
 800dc58:	ad1e      	add	r5, sp, #120	; 0x78
 800dc5a:	f000 fce2 	bl	800e622 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800dc5e:	2100      	movs	r1, #0
 800dc60:	f845 1d68 	str.w	r1, [r5, #-104]!
 800dc64:	4622      	mov	r2, r4
 800dc66:	462b      	mov	r3, r5
 800dc68:	a805      	add	r0, sp, #20
 800dc6a:	f000 ffdd 	bl	800ec28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800dc6e:	f647 76ff 	movw	r6, #32767	; 0x7fff
 800dc72:	b1d8      	cbz	r0, 800dcac <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 800dc74:	280a      	cmp	r0, #10
 800dc76:	d012      	beq.n	800dc9e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800dc78:	9804      	ldr	r0, [sp, #16]
 800dc7a:	b180      	cbz	r0, 800dc9e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 800dc7c:	7b47      	ldrb	r7, [r0, #13]
 800dc7e:	88e2      	ldrh	r2, [r4, #6]
 800dc80:	00fb      	lsls	r3, r7, #3
 800dc82:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800dc86:	7a03      	ldrb	r3, [r0, #8]
 800dc88:	430b      	orrs	r3, r1
 800dc8a:	0679      	lsls	r1, r7, #25
 800dc8c:	bf44      	itt	mi
 800dc8e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800dc92:	b21b      	sxthmi	r3, r3
 800dc94:	1ad3      	subs	r3, r2, r3
 800dc96:	b21b      	sxth	r3, r3
 800dc98:	429e      	cmp	r6, r3
 800dc9a:	bfa8      	it	ge
 800dc9c:	461e      	movge	r6, r3
 800dc9e:	462b      	mov	r3, r5
 800dca0:	4622      	mov	r2, r4
 800dca2:	2100      	movs	r1, #0
 800dca4:	a805      	add	r0, sp, #20
 800dca6:	f000 ffbf 	bl	800ec28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800dcaa:	e7e2      	b.n	800dc72 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 800dcac:	4630      	mov	r0, r6
 800dcae:	b01e      	add	sp, #120	; 0x78
 800dcb0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800dcb4:	b003      	add	sp, #12
 800dcb6:	4770      	bx	lr

0800dcb8 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800dcb8:	b513      	push	{r0, r1, r4, lr}
 800dcba:	6803      	ldr	r3, [r0, #0]
 800dcbc:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800dcc0:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800dcc4:	f8ad 1004 	strh.w	r1, [sp, #4]
 800dcc8:	2400      	movs	r4, #0
 800dcca:	9400      	str	r4, [sp, #0]
 800dccc:	f8ad 2006 	strh.w	r2, [sp, #6]
 800dcd0:	691b      	ldr	r3, [r3, #16]
 800dcd2:	4669      	mov	r1, sp
 800dcd4:	4798      	blx	r3
 800dcd6:	b002      	add	sp, #8
 800dcd8:	bd10      	pop	{r4, pc}

0800dcda <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800dcda:	b538      	push	{r3, r4, r5, lr}
 800dcdc:	680b      	ldr	r3, [r1, #0]
 800dcde:	460c      	mov	r4, r1
 800dce0:	68db      	ldr	r3, [r3, #12]
 800dce2:	4605      	mov	r5, r0
 800dce4:	4798      	blx	r3
 800dce6:	6823      	ldr	r3, [r4, #0]
 800dce8:	4620      	mov	r0, r4
 800dcea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dcec:	4629      	mov	r1, r5
 800dcee:	4798      	blx	r3
 800dcf0:	4628      	mov	r0, r5
 800dcf2:	bd38      	pop	{r3, r4, r5, pc}

0800dcf4 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800dcf4:	b410      	push	{r4}
 800dcf6:	880a      	ldrh	r2, [r1, #0]
 800dcf8:	8884      	ldrh	r4, [r0, #4]
 800dcfa:	4422      	add	r2, r4
 800dcfc:	800a      	strh	r2, [r1, #0]
 800dcfe:	88c4      	ldrh	r4, [r0, #6]
 800dd00:	884a      	ldrh	r2, [r1, #2]
 800dd02:	4422      	add	r2, r4
 800dd04:	804a      	strh	r2, [r1, #2]
 800dd06:	6940      	ldr	r0, [r0, #20]
 800dd08:	b120      	cbz	r0, 800dd14 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800dd0a:	6803      	ldr	r3, [r0, #0]
 800dd0c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800dd10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dd12:	4718      	bx	r3
 800dd14:	f85d 4b04 	ldr.w	r4, [sp], #4
 800dd18:	4770      	bx	lr

0800dd1a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800dd1a:	b570      	push	{r4, r5, r6, lr}
 800dd1c:	8882      	ldrh	r2, [r0, #4]
 800dd1e:	880b      	ldrh	r3, [r1, #0]
 800dd20:	4413      	add	r3, r2
 800dd22:	800b      	strh	r3, [r1, #0]
 800dd24:	88c2      	ldrh	r2, [r0, #6]
 800dd26:	884b      	ldrh	r3, [r1, #2]
 800dd28:	460c      	mov	r4, r1
 800dd2a:	4413      	add	r3, r2
 800dd2c:	804b      	strh	r3, [r1, #2]
 800dd2e:	4605      	mov	r5, r0
 800dd30:	1d01      	adds	r1, r0, #4
 800dd32:	4620      	mov	r0, r4
 800dd34:	f7fb fc34 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 800dd38:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800dd3c:	2b00      	cmp	r3, #0
 800dd3e:	dd0b      	ble.n	800dd58 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800dd40:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800dd44:	2b00      	cmp	r3, #0
 800dd46:	dd07      	ble.n	800dd58 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800dd48:	6968      	ldr	r0, [r5, #20]
 800dd4a:	b128      	cbz	r0, 800dd58 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800dd4c:	6803      	ldr	r3, [r0, #0]
 800dd4e:	4621      	mov	r1, r4
 800dd50:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800dd52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dd56:	4718      	bx	r3
 800dd58:	bd70      	pop	{r4, r5, r6, pc}
	...

0800dd5c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800dd5c:	b570      	push	{r4, r5, r6, lr}
 800dd5e:	8882      	ldrh	r2, [r0, #4]
 800dd60:	880b      	ldrh	r3, [r1, #0]
 800dd62:	4413      	add	r3, r2
 800dd64:	800b      	strh	r3, [r1, #0]
 800dd66:	88c2      	ldrh	r2, [r0, #6]
 800dd68:	884b      	ldrh	r3, [r1, #2]
 800dd6a:	460c      	mov	r4, r1
 800dd6c:	4413      	add	r3, r2
 800dd6e:	804b      	strh	r3, [r1, #2]
 800dd70:	4605      	mov	r5, r0
 800dd72:	1d01      	adds	r1, r0, #4
 800dd74:	4620      	mov	r0, r4
 800dd76:	f7fb fc13 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 800dd7a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800dd7e:	2b00      	cmp	r3, #0
 800dd80:	dd18      	ble.n	800ddb4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800dd82:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800dd86:	2b00      	cmp	r3, #0
 800dd88:	dd14      	ble.n	800ddb4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800dd8a:	6968      	ldr	r0, [r5, #20]
 800dd8c:	b128      	cbz	r0, 800dd9a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800dd8e:	6803      	ldr	r3, [r0, #0]
 800dd90:	4621      	mov	r1, r4
 800dd92:	691b      	ldr	r3, [r3, #16]
 800dd94:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dd98:	4718      	bx	r3
 800dd9a:	4b07      	ldr	r3, [pc, #28]	; (800ddb8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 800dd9c:	681b      	ldr	r3, [r3, #0]
 800dd9e:	3304      	adds	r3, #4
 800dda0:	429d      	cmp	r5, r3
 800dda2:	d107      	bne.n	800ddb4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800dda4:	f7fe ff44 	bl	800cc30 <_ZN8touchgfx11Application11getInstanceEv>
 800dda8:	6821      	ldr	r1, [r4, #0]
 800ddaa:	6862      	ldr	r2, [r4, #4]
 800ddac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ddb0:	f7ff b85e 	b.w	800ce70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800ddb4:	bd70      	pop	{r4, r5, r6, pc}
 800ddb6:	bf00      	nop
 800ddb8:	200126ac 	.word	0x200126ac

0800ddbc <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800ddbc:	b570      	push	{r4, r5, r6, lr}
 800ddbe:	4604      	mov	r4, r0
 800ddc0:	4616      	mov	r6, r2
 800ddc2:	460d      	mov	r5, r1
 800ddc4:	b901      	cbnz	r1, 800ddc8 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800ddc6:	b192      	cbz	r2, 800ddee <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 800ddc8:	6823      	ldr	r3, [r4, #0]
 800ddca:	4620      	mov	r0, r4
 800ddcc:	699b      	ldr	r3, [r3, #24]
 800ddce:	4798      	blx	r3
 800ddd0:	88e2      	ldrh	r2, [r4, #6]
 800ddd2:	88a1      	ldrh	r1, [r4, #4]
 800ddd4:	4432      	add	r2, r6
 800ddd6:	4429      	add	r1, r5
 800ddd8:	4620      	mov	r0, r4
 800ddda:	b212      	sxth	r2, r2
 800dddc:	b209      	sxth	r1, r1
 800ddde:	f7f4 fbac 	bl	800253a <_ZN8touchgfx8Drawable5setXYEss>
 800dde2:	6823      	ldr	r3, [r4, #0]
 800dde4:	4620      	mov	r0, r4
 800dde6:	699b      	ldr	r3, [r3, #24]
 800dde8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ddec:	4718      	bx	r3
 800ddee:	bd70      	pop	{r4, r5, r6, pc}

0800ddf0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800ddf0:	b510      	push	{r4, lr}
 800ddf2:	4604      	mov	r4, r0
 800ddf4:	4608      	mov	r0, r1
 800ddf6:	2300      	movs	r3, #0
 800ddf8:	8023      	strh	r3, [r4, #0]
 800ddfa:	8063      	strh	r3, [r4, #2]
 800ddfc:	6803      	ldr	r3, [r0, #0]
 800ddfe:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800de02:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800de06:	80a1      	strh	r1, [r4, #4]
 800de08:	80e2      	strh	r2, [r4, #6]
 800de0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800de0c:	4621      	mov	r1, r4
 800de0e:	4798      	blx	r3
 800de10:	4620      	mov	r0, r4
 800de12:	bd10      	pop	{r4, pc}

0800de14 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 800de14:	b530      	push	{r4, r5, lr}
 800de16:	8083      	strh	r3, [r0, #4]
 800de18:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800de1c:	80c3      	strh	r3, [r0, #6]
 800de1e:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800de22:	7203      	strb	r3, [r0, #8]
 800de24:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800de28:	f89d 5018 	ldrb.w	r5, [sp, #24]
 800de2c:	7243      	strb	r3, [r0, #9]
 800de2e:	7a83      	ldrb	r3, [r0, #10]
 800de30:	6141      	str	r1, [r0, #20]
 800de32:	f365 0306 	bfi	r3, r5, #0, #7
 800de36:	f89d 501c 	ldrb.w	r5, [sp, #28]
 800de3a:	8302      	strh	r2, [r0, #24]
 800de3c:	f365 13c7 	bfi	r3, r5, #7, #1
 800de40:	7283      	strb	r3, [r0, #10]
 800de42:	f89d 3020 	ldrb.w	r3, [sp, #32]
 800de46:	72c3      	strb	r3, [r0, #11]
 800de48:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 800de4c:	7303      	strb	r3, [r0, #12]
 800de4e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800de52:	81c3      	strh	r3, [r0, #14]
 800de54:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800de58:	8203      	strh	r3, [r0, #16]
 800de5a:	4b01      	ldr	r3, [pc, #4]	; (800de60 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 800de5c:	6003      	str	r3, [r0, #0]
 800de5e:	bd30      	pop	{r4, r5, pc}
 800de60:	0801e048 	.word	0x0801e048

0800de64 <_ZNK8touchgfx9ConstFont4findEt>:
 800de64:	b5f0      	push	{r4, r5, r6, r7, lr}
 800de66:	6944      	ldr	r4, [r0, #20]
 800de68:	b3bc      	cbz	r4, 800deda <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800de6a:	88a3      	ldrh	r3, [r4, #4]
 800de6c:	8b02      	ldrh	r2, [r0, #24]
 800de6e:	1acb      	subs	r3, r1, r3
 800de70:	f102 32ff 	add.w	r2, r2, #4294967295
 800de74:	d431      	bmi.n	800deda <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800de76:	4293      	cmp	r3, r2
 800de78:	dd0c      	ble.n	800de94 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800de7a:	230e      	movs	r3, #14
 800de7c:	fb03 4302 	mla	r3, r3, r2, r4
 800de80:	889b      	ldrh	r3, [r3, #4]
 800de82:	1a5b      	subs	r3, r3, r1
 800de84:	1ad3      	subs	r3, r2, r3
 800de86:	429a      	cmp	r2, r3
 800de88:	db27      	blt.n	800deda <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800de8a:	2b00      	cmp	r3, #0
 800de8c:	bfbc      	itt	lt
 800de8e:	2302      	movlt	r3, #2
 800de90:	fb92 f3f3 	sdivlt	r3, r2, r3
 800de94:	2500      	movs	r5, #0
 800de96:	260e      	movs	r6, #14
 800de98:	4295      	cmp	r5, r2
 800de9a:	dc1e      	bgt.n	800deda <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800de9c:	fb06 4003 	mla	r0, r6, r3, r4
 800dea0:	8887      	ldrh	r7, [r0, #4]
 800dea2:	42b9      	cmp	r1, r7
 800dea4:	d01a      	beq.n	800dedc <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800dea6:	d20d      	bcs.n	800dec4 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800dea8:	1e5a      	subs	r2, r3, #1
 800deaa:	4295      	cmp	r5, r2
 800deac:	dc15      	bgt.n	800deda <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800deae:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800deb2:	1a5b      	subs	r3, r3, r1
 800deb4:	1ad3      	subs	r3, r2, r3
 800deb6:	429a      	cmp	r2, r3
 800deb8:	db0f      	blt.n	800deda <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800deba:	429d      	cmp	r5, r3
 800debc:	ddec      	ble.n	800de98 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800debe:	1953      	adds	r3, r2, r5
 800dec0:	105b      	asrs	r3, r3, #1
 800dec2:	e7e9      	b.n	800de98 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800dec4:	1c5d      	adds	r5, r3, #1
 800dec6:	42aa      	cmp	r2, r5
 800dec8:	db07      	blt.n	800deda <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800deca:	8a43      	ldrh	r3, [r0, #18]
 800decc:	1acb      	subs	r3, r1, r3
 800dece:	442b      	add	r3, r5
 800ded0:	429d      	cmp	r5, r3
 800ded2:	dc02      	bgt.n	800deda <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800ded4:	429a      	cmp	r2, r3
 800ded6:	dadf      	bge.n	800de98 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800ded8:	e7f1      	b.n	800debe <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800deda:	2000      	movs	r0, #0
 800dedc:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800dede <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800dede:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dee0:	4604      	mov	r4, r0
 800dee2:	4617      	mov	r7, r2
 800dee4:	461e      	mov	r6, r3
 800dee6:	b911      	cbnz	r1, 800deee <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800dee8:	2500      	movs	r5, #0
 800deea:	4628      	mov	r0, r5
 800deec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800deee:	290a      	cmp	r1, #10
 800def0:	d0fa      	beq.n	800dee8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800def2:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800def6:	4291      	cmp	r1, r2
 800def8:	d0f6      	beq.n	800dee8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800defa:	f242 020b 	movw	r2, #8203	; 0x200b
 800defe:	4291      	cmp	r1, r2
 800df00:	d0f2      	beq.n	800dee8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800df02:	f7ff ffaf 	bl	800de64 <_ZNK8touchgfx9ConstFont4findEt>
 800df06:	4605      	mov	r5, r0
 800df08:	b950      	cbnz	r0, 800df20 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800df0a:	6823      	ldr	r3, [r4, #0]
 800df0c:	4620      	mov	r0, r4
 800df0e:	691b      	ldr	r3, [r3, #16]
 800df10:	4798      	blx	r3
 800df12:	4601      	mov	r1, r0
 800df14:	4620      	mov	r0, r4
 800df16:	f7ff ffa5 	bl	800de64 <_ZNK8touchgfx9ConstFont4findEt>
 800df1a:	4605      	mov	r5, r0
 800df1c:	2800      	cmp	r0, #0
 800df1e:	d0e3      	beq.n	800dee8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800df20:	6823      	ldr	r3, [r4, #0]
 800df22:	4629      	mov	r1, r5
 800df24:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800df26:	4620      	mov	r0, r4
 800df28:	4798      	blx	r3
 800df2a:	6038      	str	r0, [r7, #0]
 800df2c:	6823      	ldr	r3, [r4, #0]
 800df2e:	4620      	mov	r0, r4
 800df30:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800df32:	4798      	blx	r3
 800df34:	7030      	strb	r0, [r6, #0]
 800df36:	e7d8      	b.n	800deea <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800df38 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 800df38:	2000      	movs	r0, #0
 800df3a:	4770      	bx	lr

0800df3c <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 800df3c:	2001      	movs	r0, #1
 800df3e:	4770      	bx	lr

0800df40 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 800df40:	2002      	movs	r0, #2
 800df42:	4770      	bx	lr

0800df44 <_ZN8touchgfx6ScreenD1Ev>:
 800df44:	4770      	bx	lr

0800df46 <_ZN8touchgfx12GestureEventD1Ev>:
 800df46:	4770      	bx	lr

0800df48 <_ZN8touchgfx9DragEventD1Ev>:
 800df48:	4770      	bx	lr

0800df4a <_ZN8touchgfx10ClickEventD1Ev>:
 800df4a:	4770      	bx	lr

0800df4c <_ZN8touchgfx10ClickEventD0Ev>:
 800df4c:	b510      	push	{r4, lr}
 800df4e:	210c      	movs	r1, #12
 800df50:	4604      	mov	r4, r0
 800df52:	f00d fc95 	bl	801b880 <_ZdlPvj>
 800df56:	4620      	mov	r0, r4
 800df58:	bd10      	pop	{r4, pc}

0800df5a <_ZN8touchgfx9DragEventD0Ev>:
 800df5a:	b510      	push	{r4, lr}
 800df5c:	2110      	movs	r1, #16
 800df5e:	4604      	mov	r4, r0
 800df60:	f00d fc8e 	bl	801b880 <_ZdlPvj>
 800df64:	4620      	mov	r0, r4
 800df66:	bd10      	pop	{r4, pc}

0800df68 <_ZN8touchgfx12GestureEventD0Ev>:
 800df68:	b510      	push	{r4, lr}
 800df6a:	210c      	movs	r1, #12
 800df6c:	4604      	mov	r4, r0
 800df6e:	f00d fc87 	bl	801b880 <_ZdlPvj>
 800df72:	4620      	mov	r0, r4
 800df74:	bd10      	pop	{r4, pc}

0800df76 <_ZN8touchgfx6ScreenD0Ev>:
 800df76:	b510      	push	{r4, lr}
 800df78:	213c      	movs	r1, #60	; 0x3c
 800df7a:	4604      	mov	r4, r0
 800df7c:	f00d fc80 	bl	801b880 <_ZdlPvj>
 800df80:	4620      	mov	r0, r4
 800df82:	bd10      	pop	{r4, pc}

0800df84 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800df84:	b530      	push	{r4, r5, lr}
 800df86:	460d      	mov	r5, r1
 800df88:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800df8a:	b087      	sub	sp, #28
 800df8c:	4604      	mov	r4, r0
 800df8e:	b301      	cbz	r1, 800dfd2 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800df90:	a801      	add	r0, sp, #4
 800df92:	f7ff ff2d 	bl	800ddf0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800df96:	892a      	ldrh	r2, [r5, #8]
 800df98:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800df9c:	7928      	ldrb	r0, [r5, #4]
 800df9e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800dfa2:	f88d 0010 	strb.w	r0, [sp, #16]
 800dfa6:	1ad2      	subs	r2, r2, r3
 800dfa8:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800dfaa:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800dfac:	f8ad 1012 	strh.w	r1, [sp, #18]
 800dfb0:	441a      	add	r2, r3
 800dfb2:	896b      	ldrh	r3, [r5, #10]
 800dfb4:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800dfb8:	f8ad 2014 	strh.w	r2, [sp, #20]
 800dfbc:	1b5b      	subs	r3, r3, r5
 800dfbe:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800dfc0:	442b      	add	r3, r5
 800dfc2:	4d05      	ldr	r5, [pc, #20]	; (800dfd8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800dfc4:	9503      	str	r5, [sp, #12]
 800dfc6:	f8ad 3016 	strh.w	r3, [sp, #22]
 800dfca:	6803      	ldr	r3, [r0, #0]
 800dfcc:	a903      	add	r1, sp, #12
 800dfce:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800dfd0:	4798      	blx	r3
 800dfd2:	b007      	add	sp, #28
 800dfd4:	bd30      	pop	{r4, r5, pc}
 800dfd6:	bf00      	nop
 800dfd8:	0801e0d0 	.word	0x0801e0d0

0800dfdc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800dfdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dfe0:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800dfe2:	b08a      	sub	sp, #40	; 0x28
 800dfe4:	4604      	mov	r4, r0
 800dfe6:	460d      	mov	r5, r1
 800dfe8:	b113      	cbz	r3, 800dff0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 800dfea:	790b      	ldrb	r3, [r1, #4]
 800dfec:	2b00      	cmp	r3, #0
 800dfee:	d044      	beq.n	800e07a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800dff0:	f104 0804 	add.w	r8, r4, #4
 800dff4:	4641      	mov	r1, r8
 800dff6:	a803      	add	r0, sp, #12
 800dff8:	f7ff fefa 	bl	800ddf0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dffc:	792b      	ldrb	r3, [r5, #4]
 800dffe:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 800e002:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800e006:	b983      	cbnz	r3, 800e02a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 800e008:	892a      	ldrh	r2, [r5, #8]
 800e00a:	88e9      	ldrh	r1, [r5, #6]
 800e00c:	f104 0336 	add.w	r3, r4, #54	; 0x36
 800e010:	1b92      	subs	r2, r2, r6
 800e012:	1bc9      	subs	r1, r1, r7
 800e014:	9301      	str	r3, [sp, #4]
 800e016:	f104 0334 	add.w	r3, r4, #52	; 0x34
 800e01a:	9300      	str	r3, [sp, #0]
 800e01c:	b212      	sxth	r2, r2
 800e01e:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800e022:	b209      	sxth	r1, r1
 800e024:	4640      	mov	r0, r8
 800e026:	f7fb f9d7 	bl	80093d8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 800e02a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e02c:	b329      	cbz	r1, 800e07a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800e02e:	a805      	add	r0, sp, #20
 800e030:	f7ff fede 	bl	800ddf0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e034:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800e038:	792b      	ldrb	r3, [r5, #4]
 800e03a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e03c:	f88d 3020 	strb.w	r3, [sp, #32]
 800e040:	1abf      	subs	r7, r7, r2
 800e042:	88ea      	ldrh	r2, [r5, #6]
 800e044:	4417      	add	r7, r2
 800e046:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 800e048:	4417      	add	r7, r2
 800e04a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800e04e:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800e052:	1ab6      	subs	r6, r6, r2
 800e054:	892a      	ldrh	r2, [r5, #8]
 800e056:	4416      	add	r6, r2
 800e058:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800e05a:	4416      	add	r6, r2
 800e05c:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 800e060:	4a07      	ldr	r2, [pc, #28]	; (800e080 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 800e062:	9207      	str	r2, [sp, #28]
 800e064:	2600      	movs	r6, #0
 800e066:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 800e06a:	6803      	ldr	r3, [r0, #0]
 800e06c:	a907      	add	r1, sp, #28
 800e06e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e070:	4798      	blx	r3
 800e072:	792b      	ldrb	r3, [r5, #4]
 800e074:	b10b      	cbz	r3, 800e07a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800e076:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800e07a:	b00a      	add	sp, #40	; 0x28
 800e07c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e080:	0801e0a8 	.word	0x0801e0a8

0800e084 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800e084:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e088:	460c      	mov	r4, r1
 800e08a:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800e08c:	b088      	sub	sp, #32
 800e08e:	4605      	mov	r5, r0
 800e090:	2900      	cmp	r1, #0
 800e092:	d06d      	beq.n	800e170 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 800e094:	4668      	mov	r0, sp
 800e096:	f7ff feab 	bl	800ddf0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e09a:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 800e09c:	88e3      	ldrh	r3, [r4, #6]
 800e09e:	f9bd 8000 	ldrsh.w	r8, [sp]
 800e0a2:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 800e0a6:	440b      	add	r3, r1
 800e0a8:	b21b      	sxth	r3, r3
 800e0aa:	4543      	cmp	r3, r8
 800e0ac:	db31      	blt.n	800e112 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e0ae:	f8bd c004 	ldrh.w	ip, [sp, #4]
 800e0b2:	44c4      	add	ip, r8
 800e0b4:	fa0f fc8c 	sxth.w	ip, ip
 800e0b8:	4563      	cmp	r3, ip
 800e0ba:	da2a      	bge.n	800e112 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e0bc:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 800e0be:	8926      	ldrh	r6, [r4, #8]
 800e0c0:	4416      	add	r6, r2
 800e0c2:	b236      	sxth	r6, r6
 800e0c4:	42be      	cmp	r6, r7
 800e0c6:	db24      	blt.n	800e112 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e0c8:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800e0cc:	4438      	add	r0, r7
 800e0ce:	b200      	sxth	r0, r0
 800e0d0:	4286      	cmp	r6, r0
 800e0d2:	da1e      	bge.n	800e112 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e0d4:	8963      	ldrh	r3, [r4, #10]
 800e0d6:	4419      	add	r1, r3
 800e0d8:	b209      	sxth	r1, r1
 800e0da:	4541      	cmp	r1, r8
 800e0dc:	db08      	blt.n	800e0f0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800e0de:	4561      	cmp	r1, ip
 800e0e0:	da06      	bge.n	800e0f0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800e0e2:	89a3      	ldrh	r3, [r4, #12]
 800e0e4:	441a      	add	r2, r3
 800e0e6:	b212      	sxth	r2, r2
 800e0e8:	42ba      	cmp	r2, r7
 800e0ea:	db01      	blt.n	800e0f0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800e0ec:	4282      	cmp	r2, r0
 800e0ee:	db10      	blt.n	800e112 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800e0f0:	4b21      	ldr	r3, [pc, #132]	; (800e178 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 800e0f2:	9304      	str	r3, [sp, #16]
 800e0f4:	2302      	movs	r3, #2
 800e0f6:	f88d 3014 	strb.w	r3, [sp, #20]
 800e0fa:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800e0fc:	2300      	movs	r3, #0
 800e0fe:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e102:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e106:	f8ad 301a 	strh.w	r3, [sp, #26]
 800e10a:	6803      	ldr	r3, [r0, #0]
 800e10c:	a904      	add	r1, sp, #16
 800e10e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e110:	4798      	blx	r3
 800e112:	1d29      	adds	r1, r5, #4
 800e114:	a802      	add	r0, sp, #8
 800e116:	f7ff fe6b 	bl	800ddf0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e11a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800e11e:	88e0      	ldrh	r0, [r4, #6]
 800e120:	7921      	ldrb	r1, [r4, #4]
 800e122:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800e126:	8922      	ldrh	r2, [r4, #8]
 800e128:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800e12a:	f88d 1014 	strb.w	r1, [sp, #20]
 800e12e:	eba3 0808 	sub.w	r8, r3, r8
 800e132:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800e136:	1bdf      	subs	r7, r3, r7
 800e138:	b2bb      	uxth	r3, r7
 800e13a:	fa1f f888 	uxth.w	r8, r8
 800e13e:	8967      	ldrh	r7, [r4, #10]
 800e140:	89a4      	ldrh	r4, [r4, #12]
 800e142:	4440      	add	r0, r8
 800e144:	4460      	add	r0, ip
 800e146:	441a      	add	r2, r3
 800e148:	44b8      	add	r8, r7
 800e14a:	4423      	add	r3, r4
 800e14c:	f8ad 0016 	strh.w	r0, [sp, #22]
 800e150:	4433      	add	r3, r6
 800e152:	4432      	add	r2, r6
 800e154:	44e0      	add	r8, ip
 800e156:	4c09      	ldr	r4, [pc, #36]	; (800e17c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 800e158:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800e15a:	9404      	str	r4, [sp, #16]
 800e15c:	f8ad 2018 	strh.w	r2, [sp, #24]
 800e160:	f8ad 801a 	strh.w	r8, [sp, #26]
 800e164:	f8ad 301c 	strh.w	r3, [sp, #28]
 800e168:	6803      	ldr	r3, [r0, #0]
 800e16a:	a904      	add	r1, sp, #16
 800e16c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800e16e:	4798      	blx	r3
 800e170:	b008      	add	sp, #32
 800e172:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e176:	bf00      	nop
 800e178:	0801e0a8 	.word	0x0801e0a8
 800e17c:	0801e0bc 	.word	0x0801e0bc

0800e180 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800e180:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e182:	4604      	mov	r4, r0
 800e184:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800e188:	3201      	adds	r2, #1
 800e18a:	d112      	bne.n	800e1b2 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800e18c:	6803      	ldr	r3, [r0, #0]
 800e18e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800e192:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e196:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e19a:	2500      	movs	r5, #0
 800e19c:	9500      	str	r5, [sp, #0]
 800e19e:	466d      	mov	r5, sp
 800e1a0:	4629      	mov	r1, r5
 800e1a2:	f8ad 2006 	strh.w	r2, [sp, #6]
 800e1a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e1a8:	4798      	blx	r3
 800e1aa:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e1ae:	e884 0003 	stmia.w	r4, {r0, r1}
 800e1b2:	4620      	mov	r0, r4
 800e1b4:	b003      	add	sp, #12
 800e1b6:	bd30      	pop	{r4, r5, pc}

0800e1b8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800e1b8:	b513      	push	{r0, r1, r4, lr}
 800e1ba:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800e1be:	3301      	adds	r3, #1
 800e1c0:	4604      	mov	r4, r0
 800e1c2:	d109      	bne.n	800e1d8 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800e1c4:	4601      	mov	r1, r0
 800e1c6:	4668      	mov	r0, sp
 800e1c8:	f7ff fe12 	bl	800ddf0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e1cc:	f8bd 3000 	ldrh.w	r3, [sp]
 800e1d0:	8423      	strh	r3, [r4, #32]
 800e1d2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e1d6:	8463      	strh	r3, [r4, #34]	; 0x22
 800e1d8:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800e1dc:	b002      	add	sp, #8
 800e1de:	bd10      	pop	{r4, pc}

0800e1e0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800e1e0:	b513      	push	{r0, r1, r4, lr}
 800e1e2:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800e1e6:	3301      	adds	r3, #1
 800e1e8:	4604      	mov	r4, r0
 800e1ea:	d109      	bne.n	800e200 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800e1ec:	4601      	mov	r1, r0
 800e1ee:	4668      	mov	r0, sp
 800e1f0:	f7ff fdfe 	bl	800ddf0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e1f4:	f8bd 3000 	ldrh.w	r3, [sp]
 800e1f8:	8423      	strh	r3, [r4, #32]
 800e1fa:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e1fe:	8463      	strh	r3, [r4, #34]	; 0x22
 800e200:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800e204:	b002      	add	sp, #8
 800e206:	bd10      	pop	{r4, pc}

0800e208 <_ZN8touchgfx6ScreenC1Ev>:
 800e208:	b570      	push	{r4, r5, r6, lr}
 800e20a:	4605      	mov	r5, r0
 800e20c:	4b16      	ldr	r3, [pc, #88]	; (800e268 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800e20e:	f845 3b04 	str.w	r3, [r5], #4
 800e212:	2300      	movs	r3, #0
 800e214:	8103      	strh	r3, [r0, #8]
 800e216:	8143      	strh	r3, [r0, #10]
 800e218:	8183      	strh	r3, [r0, #12]
 800e21a:	81c3      	strh	r3, [r0, #14]
 800e21c:	8203      	strh	r3, [r0, #16]
 800e21e:	8243      	strh	r3, [r0, #18]
 800e220:	8283      	strh	r3, [r0, #20]
 800e222:	82c3      	strh	r3, [r0, #22]
 800e224:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800e228:	6203      	str	r3, [r0, #32]
 800e22a:	8483      	strh	r3, [r0, #36]	; 0x24
 800e22c:	84c3      	strh	r3, [r0, #38]	; 0x26
 800e22e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800e232:	4a0e      	ldr	r2, [pc, #56]	; (800e26c <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800e234:	6343      	str	r3, [r0, #52]	; 0x34
 800e236:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 800e23a:	4b0d      	ldr	r3, [pc, #52]	; (800e270 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800e23c:	6042      	str	r2, [r0, #4]
 800e23e:	f9b3 6000 	ldrsh.w	r6, [r3]
 800e242:	6b93      	ldr	r3, [r2, #56]	; 0x38
 800e244:	4a0b      	ldr	r2, [pc, #44]	; (800e274 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800e246:	4604      	mov	r4, r0
 800e248:	2101      	movs	r1, #1
 800e24a:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800e24e:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 800e252:	f9b2 1000 	ldrsh.w	r1, [r2]
 800e256:	4628      	mov	r0, r5
 800e258:	4798      	blx	r3
 800e25a:	6863      	ldr	r3, [r4, #4]
 800e25c:	4628      	mov	r0, r5
 800e25e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e260:	4631      	mov	r1, r6
 800e262:	4798      	blx	r3
 800e264:	4620      	mov	r0, r4
 800e266:	bd70      	pop	{r4, r5, r6, pc}
 800e268:	0801e0e4 	.word	0x0801e0e4
 800e26c:	0801dcf0 	.word	0x0801dcf0
 800e270:	20012666 	.word	0x20012666
 800e274:	20012664 	.word	0x20012664

0800e278 <_ZN8touchgfx6Screen4drawEv>:
 800e278:	b507      	push	{r0, r1, r2, lr}
 800e27a:	4b09      	ldr	r3, [pc, #36]	; (800e2a0 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800e27c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e280:	4b08      	ldr	r3, [pc, #32]	; (800e2a4 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800e282:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e286:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e28a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e28e:	6803      	ldr	r3, [r0, #0]
 800e290:	2100      	movs	r1, #0
 800e292:	9100      	str	r1, [sp, #0]
 800e294:	689b      	ldr	r3, [r3, #8]
 800e296:	4669      	mov	r1, sp
 800e298:	4798      	blx	r3
 800e29a:	b003      	add	sp, #12
 800e29c:	f85d fb04 	ldr.w	pc, [sp], #4
 800e2a0:	20012664 	.word	0x20012664
 800e2a4:	20012666 	.word	0x20012666

0800e2a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800e2a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e2ac:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800e2b0:	2b00      	cmp	r3, #0
 800e2b2:	b089      	sub	sp, #36	; 0x24
 800e2b4:	4680      	mov	r8, r0
 800e2b6:	460c      	mov	r4, r1
 800e2b8:	4615      	mov	r5, r2
 800e2ba:	dd0e      	ble.n	800e2da <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e2bc:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800e2c0:	2b00      	cmp	r3, #0
 800e2c2:	dd0a      	ble.n	800e2da <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e2c4:	4628      	mov	r0, r5
 800e2c6:	f7ff ff5b 	bl	800e180 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e2ca:	4621      	mov	r1, r4
 800e2cc:	f7fe fbd1 	bl	800ca72 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e2d0:	69eb      	ldr	r3, [r5, #28]
 800e2d2:	b928      	cbnz	r0, 800e2e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800e2d4:	461d      	mov	r5, r3
 800e2d6:	2b00      	cmp	r3, #0
 800e2d8:	d1f4      	bne.n	800e2c4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800e2da:	b009      	add	sp, #36	; 0x24
 800e2dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e2e0:	ae04      	add	r6, sp, #16
 800e2e2:	2b00      	cmp	r3, #0
 800e2e4:	f000 80b5 	beq.w	800e452 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800e2e8:	682b      	ldr	r3, [r5, #0]
 800e2ea:	4629      	mov	r1, r5
 800e2ec:	68db      	ldr	r3, [r3, #12]
 800e2ee:	a802      	add	r0, sp, #8
 800e2f0:	4798      	blx	r3
 800e2f2:	4628      	mov	r0, r5
 800e2f4:	f7ff ff60 	bl	800e1b8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800e2f8:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800e2fc:	4407      	add	r7, r0
 800e2fe:	4628      	mov	r0, r5
 800e300:	f7ff ff6e 	bl	800e1e0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800e304:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800e308:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800e30c:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e310:	4418      	add	r0, r3
 800e312:	4621      	mov	r1, r4
 800e314:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800e318:	f8ad 0012 	strh.w	r0, [sp, #18]
 800e31c:	b23f      	sxth	r7, r7
 800e31e:	4630      	mov	r0, r6
 800e320:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e324:	f8ad 7010 	strh.w	r7, [sp, #16]
 800e328:	f7fb f93a 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 800e32c:	4628      	mov	r0, r5
 800e32e:	f7ff ff27 	bl	800e180 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e332:	4602      	mov	r2, r0
 800e334:	e896 0003 	ldmia.w	r6, {r0, r1}
 800e338:	ab06      	add	r3, sp, #24
 800e33a:	e883 0003 	stmia.w	r3, {r0, r1}
 800e33e:	4611      	mov	r1, r2
 800e340:	4618      	mov	r0, r3
 800e342:	f7fb f92d 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 800e346:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e34a:	f9b4 1000 	ldrsh.w	r1, [r4]
 800e34e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800e352:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800e356:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800e35a:	4299      	cmp	r1, r3
 800e35c:	d10b      	bne.n	800e376 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800e35e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800e362:	4552      	cmp	r2, sl
 800e364:	d107      	bne.n	800e376 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800e366:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800e36a:	455a      	cmp	r2, fp
 800e36c:	d103      	bne.n	800e376 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800e36e:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800e372:	454a      	cmp	r2, r9
 800e374:	d06d      	beq.n	800e452 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800e376:	f1bb 0f00 	cmp.w	fp, #0
 800e37a:	dd65      	ble.n	800e448 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800e37c:	f1b9 0f00 	cmp.w	r9, #0
 800e380:	dd62      	ble.n	800e448 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800e382:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800e386:	fa1f f08a 	uxth.w	r0, sl
 800e38a:	4552      	cmp	r2, sl
 800e38c:	9000      	str	r0, [sp, #0]
 800e38e:	da12      	bge.n	800e3b6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800e390:	9301      	str	r3, [sp, #4]
 800e392:	9b00      	ldr	r3, [sp, #0]
 800e394:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800e398:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e39c:	1a9a      	subs	r2, r3, r2
 800e39e:	f8ad 1010 	strh.w	r1, [sp, #16]
 800e3a2:	f8ad 0014 	strh.w	r0, [sp, #20]
 800e3a6:	f8ad 2016 	strh.w	r2, [sp, #22]
 800e3aa:	69ea      	ldr	r2, [r5, #28]
 800e3ac:	4631      	mov	r1, r6
 800e3ae:	4640      	mov	r0, r8
 800e3b0:	f7ff ff7a 	bl	800e2a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e3b4:	9b01      	ldr	r3, [sp, #4]
 800e3b6:	f9b4 2000 	ldrsh.w	r2, [r4]
 800e3ba:	429a      	cmp	r2, r3
 800e3bc:	b29f      	uxth	r7, r3
 800e3be:	da0d      	bge.n	800e3dc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800e3c0:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e3c4:	1aba      	subs	r2, r7, r2
 800e3c6:	f8ad a012 	strh.w	sl, [sp, #18]
 800e3ca:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e3ce:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e3d2:	69ea      	ldr	r2, [r5, #28]
 800e3d4:	4631      	mov	r1, r6
 800e3d6:	4640      	mov	r0, r8
 800e3d8:	f7ff ff66 	bl	800e2a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e3dc:	8822      	ldrh	r2, [r4, #0]
 800e3de:	88a3      	ldrh	r3, [r4, #4]
 800e3e0:	445f      	add	r7, fp
 800e3e2:	4413      	add	r3, r2
 800e3e4:	b29b      	uxth	r3, r3
 800e3e6:	b2bf      	uxth	r7, r7
 800e3e8:	b23a      	sxth	r2, r7
 800e3ea:	b219      	sxth	r1, r3
 800e3ec:	4291      	cmp	r1, r2
 800e3ee:	dd0d      	ble.n	800e40c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800e3f0:	1bdb      	subs	r3, r3, r7
 800e3f2:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e3f6:	f8ad a012 	strh.w	sl, [sp, #18]
 800e3fa:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e3fe:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e402:	69ea      	ldr	r2, [r5, #28]
 800e404:	4631      	mov	r1, r6
 800e406:	4640      	mov	r0, r8
 800e408:	f7ff ff4e 	bl	800e2a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e40c:	88e2      	ldrh	r2, [r4, #6]
 800e40e:	8863      	ldrh	r3, [r4, #2]
 800e410:	4413      	add	r3, r2
 800e412:	9a00      	ldr	r2, [sp, #0]
 800e414:	444a      	add	r2, r9
 800e416:	b29b      	uxth	r3, r3
 800e418:	fa1f f982 	uxth.w	r9, r2
 800e41c:	fa0f f289 	sxth.w	r2, r9
 800e420:	b219      	sxth	r1, r3
 800e422:	428a      	cmp	r2, r1
 800e424:	da15      	bge.n	800e452 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800e426:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800e42a:	f9b4 0000 	ldrsh.w	r0, [r4]
 800e42e:	f8ad 1014 	strh.w	r1, [sp, #20]
 800e432:	eba3 0309 	sub.w	r3, r3, r9
 800e436:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e43a:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e43e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e442:	69ea      	ldr	r2, [r5, #28]
 800e444:	4631      	mov	r1, r6
 800e446:	e001      	b.n	800e44c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800e448:	69ea      	ldr	r2, [r5, #28]
 800e44a:	4621      	mov	r1, r4
 800e44c:	4640      	mov	r0, r8
 800e44e:	f7ff ff2b 	bl	800e2a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e452:	4628      	mov	r0, r5
 800e454:	f7ff fe94 	bl	800e180 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e458:	6861      	ldr	r1, [r4, #4]
 800e45a:	4602      	mov	r2, r0
 800e45c:	6820      	ldr	r0, [r4, #0]
 800e45e:	4633      	mov	r3, r6
 800e460:	c303      	stmia	r3!, {r0, r1}
 800e462:	4611      	mov	r1, r2
 800e464:	4630      	mov	r0, r6
 800e466:	f7fb f89b 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 800e46a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800e46e:	2b00      	cmp	r3, #0
 800e470:	f77f af33 	ble.w	800e2da <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e474:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e478:	2b00      	cmp	r3, #0
 800e47a:	f77f af2e 	ble.w	800e2da <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800e47e:	4628      	mov	r0, r5
 800e480:	f7ff fe9a 	bl	800e1b8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800e484:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800e488:	1a18      	subs	r0, r3, r0
 800e48a:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e48e:	4628      	mov	r0, r5
 800e490:	f7ff fea6 	bl	800e1e0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800e494:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e498:	1a18      	subs	r0, r3, r0
 800e49a:	f8ad 0012 	strh.w	r0, [sp, #18]
 800e49e:	682b      	ldr	r3, [r5, #0]
 800e4a0:	4631      	mov	r1, r6
 800e4a2:	689b      	ldr	r3, [r3, #8]
 800e4a4:	4628      	mov	r0, r5
 800e4a6:	4798      	blx	r3
 800e4a8:	e717      	b.n	800e2da <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800e4aa <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800e4aa:	b570      	push	{r4, r5, r6, lr}
 800e4ac:	460c      	mov	r4, r1
 800e4ae:	b086      	sub	sp, #24
 800e4b0:	1d06      	adds	r6, r0, #4
 800e4b2:	2300      	movs	r3, #0
 800e4b4:	4631      	mov	r1, r6
 800e4b6:	4605      	mov	r5, r0
 800e4b8:	a802      	add	r0, sp, #8
 800e4ba:	9301      	str	r3, [sp, #4]
 800e4bc:	f7ff fc98 	bl	800ddf0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e4c0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800e4c4:	8822      	ldrh	r2, [r4, #0]
 800e4c6:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800e4ca:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800e4ce:	f8ad 0014 	strh.w	r0, [sp, #20]
 800e4d2:	1ad2      	subs	r2, r2, r3
 800e4d4:	8863      	ldrh	r3, [r4, #2]
 800e4d6:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e4da:	1a5b      	subs	r3, r3, r1
 800e4dc:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800e4e0:	f8ad 1016 	strh.w	r1, [sp, #22]
 800e4e4:	aa01      	add	r2, sp, #4
 800e4e6:	a904      	add	r1, sp, #16
 800e4e8:	4630      	mov	r0, r6
 800e4ea:	f8ad 3012 	strh.w	r3, [sp, #18]
 800e4ee:	f7fb f92f 	bl	8009750 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800e4f2:	9a01      	ldr	r2, [sp, #4]
 800e4f4:	b11a      	cbz	r2, 800e4fe <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 800e4f6:	4621      	mov	r1, r4
 800e4f8:	4628      	mov	r0, r5
 800e4fa:	f7ff fed5 	bl	800e2a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e4fe:	b006      	add	sp, #24
 800e500:	bd70      	pop	{r4, r5, r6, pc}

0800e502 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800e502:	b530      	push	{r4, r5, lr}
 800e504:	4602      	mov	r2, r0
 800e506:	4604      	mov	r4, r0
 800e508:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800e50c:	b085      	sub	sp, #20
 800e50e:	460d      	mov	r5, r1
 800e510:	6851      	ldr	r1, [r2, #4]
 800e512:	466b      	mov	r3, sp
 800e514:	c303      	stmia	r3!, {r0, r1}
 800e516:	4629      	mov	r1, r5
 800e518:	4668      	mov	r0, sp
 800e51a:	f7fb f841 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 800e51e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e522:	b12b      	cbz	r3, 800e530 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 800e524:	4669      	mov	r1, sp
 800e526:	4620      	mov	r0, r4
 800e528:	f7ff ffbf 	bl	800e4aa <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800e52c:	b005      	add	sp, #20
 800e52e:	bd30      	pop	{r4, r5, pc}
 800e530:	3404      	adds	r4, #4
 800e532:	4621      	mov	r1, r4
 800e534:	a802      	add	r0, sp, #8
 800e536:	f7ff fc5b 	bl	800ddf0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e53a:	f8bd 3000 	ldrh.w	r3, [sp]
 800e53e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800e542:	1a9b      	subs	r3, r3, r2
 800e544:	f8ad 3000 	strh.w	r3, [sp]
 800e548:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800e54c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e550:	4669      	mov	r1, sp
 800e552:	1a9b      	subs	r3, r3, r2
 800e554:	4620      	mov	r0, r4
 800e556:	f8ad 3002 	strh.w	r3, [sp, #2]
 800e55a:	f7fb f8c0 	bl	80096de <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800e55e:	e7e5      	b.n	800e52c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0800e560 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800e560:	680a      	ldr	r2, [r1, #0]
 800e562:	460b      	mov	r3, r1
 800e564:	6992      	ldr	r2, [r2, #24]
 800e566:	1d01      	adds	r1, r0, #4
 800e568:	4618      	mov	r0, r3
 800e56a:	4710      	bx	r2

0800e56c <_ZN8touchgfx12TextProviderC1Ev>:
 800e56c:	b538      	push	{r3, r4, r5, lr}
 800e56e:	2500      	movs	r5, #0
 800e570:	2302      	movs	r3, #2
 800e572:	4604      	mov	r4, r0
 800e574:	e9c0 5500 	strd	r5, r5, [r0]
 800e578:	7403      	strb	r3, [r0, #16]
 800e57a:	6145      	str	r5, [r0, #20]
 800e57c:	7605      	strb	r5, [r0, #24]
 800e57e:	83c5      	strh	r5, [r0, #30]
 800e580:	8405      	strh	r5, [r0, #32]
 800e582:	86c5      	strh	r5, [r0, #54]	; 0x36
 800e584:	8705      	strh	r5, [r0, #56]	; 0x38
 800e586:	87c5      	strh	r5, [r0, #62]	; 0x3e
 800e588:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 800e58c:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 800e590:	220e      	movs	r2, #14
 800e592:	4629      	mov	r1, r5
 800e594:	304c      	adds	r0, #76	; 0x4c
 800e596:	f00d fa2d 	bl	801b9f4 <memset>
 800e59a:	2301      	movs	r3, #1
 800e59c:	4620      	mov	r0, r4
 800e59e:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 800e5a2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800e5a6:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 800e5aa:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 800e5ae:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 800e5b2:	f7f4 fb19 	bl	8002be8 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800e5b6:	4620      	mov	r0, r4
 800e5b8:	bd38      	pop	{r3, r4, r5, pc}

0800e5ba <_ZN8touchgfx12TextProvider11endOfStringEv>:
 800e5ba:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800e5bc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800e5c0:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 800e5c2:	fab0 f080 	clz	r0, r0
 800e5c6:	0940      	lsrs	r0, r0, #5
 800e5c8:	4770      	bx	lr

0800e5ca <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800e5ca:	b530      	push	{r4, r5, lr}
 800e5cc:	2500      	movs	r5, #0
 800e5ce:	2401      	movs	r4, #1
 800e5d0:	6843      	ldr	r3, [r0, #4]
 800e5d2:	b913      	cbnz	r3, 800e5da <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800e5d4:	6803      	ldr	r3, [r0, #0]
 800e5d6:	b313      	cbz	r3, 800e61e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800e5d8:	6043      	str	r3, [r0, #4]
 800e5da:	7e03      	ldrb	r3, [r0, #24]
 800e5dc:	b143      	cbz	r3, 800e5f0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800e5de:	6943      	ldr	r3, [r0, #20]
 800e5e0:	b12b      	cbz	r3, 800e5ee <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e5e2:	881a      	ldrh	r2, [r3, #0]
 800e5e4:	b11a      	cbz	r2, 800e5ee <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e5e6:	1c9a      	adds	r2, r3, #2
 800e5e8:	6142      	str	r2, [r0, #20]
 800e5ea:	8818      	ldrh	r0, [r3, #0]
 800e5ec:	bd30      	pop	{r4, r5, pc}
 800e5ee:	7605      	strb	r5, [r0, #24]
 800e5f0:	6843      	ldr	r3, [r0, #4]
 800e5f2:	8819      	ldrh	r1, [r3, #0]
 800e5f4:	b199      	cbz	r1, 800e61e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800e5f6:	1c9a      	adds	r2, r3, #2
 800e5f8:	2902      	cmp	r1, #2
 800e5fa:	6042      	str	r2, [r0, #4]
 800e5fc:	d1f5      	bne.n	800e5ea <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800e5fe:	7c03      	ldrb	r3, [r0, #16]
 800e600:	2b01      	cmp	r3, #1
 800e602:	d8e5      	bhi.n	800e5d0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e604:	1c5a      	adds	r2, r3, #1
 800e606:	3302      	adds	r3, #2
 800e608:	7402      	strb	r2, [r0, #16]
 800e60a:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800e60e:	6143      	str	r3, [r0, #20]
 800e610:	2b00      	cmp	r3, #0
 800e612:	d0dd      	beq.n	800e5d0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e614:	881b      	ldrh	r3, [r3, #0]
 800e616:	2b00      	cmp	r3, #0
 800e618:	d0da      	beq.n	800e5d0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e61a:	7604      	strb	r4, [r0, #24]
 800e61c:	e7d8      	b.n	800e5d0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e61e:	2000      	movs	r0, #0
 800e620:	e7e4      	b.n	800e5ec <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800e622 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800e622:	b430      	push	{r4, r5}
 800e624:	6001      	str	r1, [r0, #0]
 800e626:	2100      	movs	r1, #0
 800e628:	6041      	str	r1, [r0, #4]
 800e62a:	6815      	ldr	r5, [r2, #0]
 800e62c:	6085      	str	r5, [r0, #8]
 800e62e:	6852      	ldr	r2, [r2, #4]
 800e630:	6443      	str	r3, [r0, #68]	; 0x44
 800e632:	9b02      	ldr	r3, [sp, #8]
 800e634:	60c2      	str	r2, [r0, #12]
 800e636:	7401      	strb	r1, [r0, #16]
 800e638:	6141      	str	r1, [r0, #20]
 800e63a:	7601      	strb	r1, [r0, #24]
 800e63c:	8701      	strh	r1, [r0, #56]	; 0x38
 800e63e:	8401      	strh	r1, [r0, #32]
 800e640:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800e644:	6483      	str	r3, [r0, #72]	; 0x48
 800e646:	bc30      	pop	{r4, r5}
 800e648:	f7f4 bace 	b.w	8002be8 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800e64c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 800e64c:	b408      	push	{r3}
 800e64e:	b510      	push	{r4, lr}
 800e650:	b085      	sub	sp, #20
 800e652:	ac07      	add	r4, sp, #28
 800e654:	f854 3b04 	ldr.w	r3, [r4], #4
 800e658:	9300      	str	r3, [sp, #0]
 800e65a:	4613      	mov	r3, r2
 800e65c:	4622      	mov	r2, r4
 800e65e:	9403      	str	r4, [sp, #12]
 800e660:	f7ff ffdf 	bl	800e622 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e664:	b005      	add	sp, #20
 800e666:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e66a:	b001      	add	sp, #4
 800e66c:	4770      	bx	lr

0800e66e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800e66e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e670:	4605      	mov	r5, r0
 800e672:	4608      	mov	r0, r1
 800e674:	b1e9      	cbz	r1, 800e6b2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800e676:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 800e67a:	460b      	mov	r3, r1
 800e67c:	f101 0708 	add.w	r7, r1, #8
 800e680:	4622      	mov	r2, r4
 800e682:	6818      	ldr	r0, [r3, #0]
 800e684:	6859      	ldr	r1, [r3, #4]
 800e686:	4626      	mov	r6, r4
 800e688:	c603      	stmia	r6!, {r0, r1}
 800e68a:	3308      	adds	r3, #8
 800e68c:	42bb      	cmp	r3, r7
 800e68e:	4634      	mov	r4, r6
 800e690:	d1f7      	bne.n	800e682 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800e692:	6818      	ldr	r0, [r3, #0]
 800e694:	6030      	str	r0, [r6, #0]
 800e696:	889b      	ldrh	r3, [r3, #4]
 800e698:	80b3      	strh	r3, [r6, #4]
 800e69a:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 800e69e:	015b      	lsls	r3, r3, #5
 800e6a0:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800e6a4:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 800e6a8:	430b      	orrs	r3, r1
 800e6aa:	425b      	negs	r3, r3
 800e6ac:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 800e6b0:	4610      	mov	r0, r2
 800e6b2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e6b4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800e6b4:	b538      	push	{r3, r4, r5, lr}
 800e6b6:	460c      	mov	r4, r1
 800e6b8:	6811      	ldr	r1, [r2, #0]
 800e6ba:	4610      	mov	r0, r2
 800e6bc:	68cd      	ldr	r5, [r1, #12]
 800e6be:	4619      	mov	r1, r3
 800e6c0:	47a8      	blx	r5
 800e6c2:	2800      	cmp	r0, #0
 800e6c4:	bf08      	it	eq
 800e6c6:	4620      	moveq	r0, r4
 800e6c8:	bd38      	pop	{r3, r4, r5, pc}
	...

0800e6cc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800e6cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e6ce:	4604      	mov	r4, r0
 800e6d0:	4615      	mov	r5, r2
 800e6d2:	4608      	mov	r0, r1
 800e6d4:	b93a      	cbnz	r2, 800e6e6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800e6d6:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800e6da:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 800e6de:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800e6e2:	4628      	mov	r0, r5
 800e6e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e6e6:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800e6ea:	8893      	ldrh	r3, [r2, #4]
 800e6ec:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800e6f0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800e6f4:	79ee      	ldrb	r6, [r5, #7]
 800e6f6:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 800e6fa:	4316      	orrs	r6, r2
 800e6fc:	19da      	adds	r2, r3, r7
 800e6fe:	b291      	uxth	r1, r2
 800e700:	291d      	cmp	r1, #29
 800e702:	b2b7      	uxth	r7, r6
 800e704:	d87a      	bhi.n	800e7fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 800e706:	2201      	movs	r2, #1
 800e708:	408a      	lsls	r2, r1
 800e70a:	4975      	ldr	r1, [pc, #468]	; (800e8e0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 800e70c:	420a      	tst	r2, r1
 800e70e:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800e712:	d12d      	bne.n	800e770 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 800e714:	f412 7f60 	tst.w	r2, #896	; 0x380
 800e718:	d070      	beq.n	800e7fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 800e71a:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 800e71e:	462b      	mov	r3, r5
 800e720:	f105 0e08 	add.w	lr, r5, #8
 800e724:	4615      	mov	r5, r2
 800e726:	6818      	ldr	r0, [r3, #0]
 800e728:	6859      	ldr	r1, [r3, #4]
 800e72a:	4694      	mov	ip, r2
 800e72c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800e730:	3308      	adds	r3, #8
 800e732:	4573      	cmp	r3, lr
 800e734:	4662      	mov	r2, ip
 800e736:	d1f6      	bne.n	800e726 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 800e738:	6818      	ldr	r0, [r3, #0]
 800e73a:	f8cc 0000 	str.w	r0, [ip]
 800e73e:	889b      	ldrh	r3, [r3, #4]
 800e740:	f8ac 3004 	strh.w	r3, [ip, #4]
 800e744:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800e748:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 800e74c:	b2b3      	uxth	r3, r6
 800e74e:	1aca      	subs	r2, r1, r3
 800e750:	b292      	uxth	r2, r2
 800e752:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 800e756:	10d2      	asrs	r2, r2, #3
 800e758:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800e75c:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800e760:	4302      	orrs	r2, r0
 800e762:	1bcf      	subs	r7, r1, r7
 800e764:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 800e768:	1afb      	subs	r3, r7, r3
 800e76a:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 800e76e:	e7b8      	b.n	800e6e2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800e770:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e772:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800e776:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800e778:	f640 6333 	movw	r3, #3635	; 0xe33
 800e77c:	4299      	cmp	r1, r3
 800e77e:	d110      	bne.n	800e7a2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 800e780:	6803      	ldr	r3, [r0, #0]
 800e782:	68db      	ldr	r3, [r3, #12]
 800e784:	4798      	blx	r3
 800e786:	7b41      	ldrb	r1, [r0, #13]
 800e788:	00cb      	lsls	r3, r1, #3
 800e78a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e78e:	7a03      	ldrb	r3, [r0, #8]
 800e790:	0648      	lsls	r0, r1, #25
 800e792:	ea43 0302 	orr.w	r3, r3, r2
 800e796:	bf44      	itt	mi
 800e798:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e79c:	b21b      	sxthmi	r3, r3
 800e79e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e7a2:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 800e7a6:	443b      	add	r3, r7
 800e7a8:	4433      	add	r3, r6
 800e7aa:	b29b      	uxth	r3, r3
 800e7ac:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 800e7b0:	462a      	mov	r2, r5
 800e7b2:	f105 0c08 	add.w	ip, r5, #8
 800e7b6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e7ba:	4635      	mov	r5, r6
 800e7bc:	6810      	ldr	r0, [r2, #0]
 800e7be:	6851      	ldr	r1, [r2, #4]
 800e7c0:	4637      	mov	r7, r6
 800e7c2:	c703      	stmia	r7!, {r0, r1}
 800e7c4:	3208      	adds	r2, #8
 800e7c6:	4562      	cmp	r2, ip
 800e7c8:	463e      	mov	r6, r7
 800e7ca:	d1f7      	bne.n	800e7bc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 800e7cc:	6810      	ldr	r0, [r2, #0]
 800e7ce:	6038      	str	r0, [r7, #0]
 800e7d0:	8892      	ldrh	r2, [r2, #4]
 800e7d2:	80ba      	strh	r2, [r7, #4]
 800e7d4:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800e7d8:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800e7dc:	10db      	asrs	r3, r3, #3
 800e7de:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800e7e2:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800e7e6:	4313      	orrs	r3, r2
 800e7e8:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800e7ec:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 800e7f0:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800e7f4:	1a9b      	subs	r3, r3, r2
 800e7f6:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800e7fa:	e772      	b.n	800e6e2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800e7fc:	f023 0204 	bic.w	r2, r3, #4
 800e800:	f640 611b 	movw	r1, #3611	; 0xe1b
 800e804:	428a      	cmp	r2, r1
 800e806:	d003      	beq.n	800e810 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 800e808:	f640 621d 	movw	r2, #3613	; 0xe1d
 800e80c:	4293      	cmp	r3, r2
 800e80e:	d120      	bne.n	800e852 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 800e810:	3b01      	subs	r3, #1
 800e812:	4602      	mov	r2, r0
 800e814:	b29b      	uxth	r3, r3
 800e816:	4629      	mov	r1, r5
 800e818:	4620      	mov	r0, r4
 800e81a:	f7ff ff4b 	bl	800e6b4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800e81e:	7b41      	ldrb	r1, [r0, #13]
 800e820:	00cb      	lsls	r3, r1, #3
 800e822:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e826:	7a03      	ldrb	r3, [r0, #8]
 800e828:	0649      	lsls	r1, r1, #25
 800e82a:	ea43 0302 	orr.w	r3, r3, r2
 800e82e:	bf44      	itt	mi
 800e830:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e834:	b21b      	sxthmi	r3, r3
 800e836:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e83a:	7b6b      	ldrb	r3, [r5, #13]
 800e83c:	7aaa      	ldrb	r2, [r5, #10]
 800e83e:	005b      	lsls	r3, r3, #1
 800e840:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e844:	4313      	orrs	r3, r2
 800e846:	115a      	asrs	r2, r3, #5
 800e848:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800e84c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 800e850:	e036      	b.n	800e8c0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 800e852:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800e856:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800e85a:	7a2a      	ldrb	r2, [r5, #8]
 800e85c:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800e860:	ea42 0201 	orr.w	r2, r2, r1
 800e864:	bf1c      	itt	ne
 800e866:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800e86a:	b212      	sxthne	r2, r2
 800e86c:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800e870:	f640 6109 	movw	r1, #3593	; 0xe09
 800e874:	f023 0210 	bic.w	r2, r3, #16
 800e878:	428a      	cmp	r2, r1
 800e87a:	d003      	beq.n	800e884 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 800e87c:	f640 6213 	movw	r2, #3603	; 0xe13
 800e880:	4293      	cmp	r3, r2
 800e882:	d12a      	bne.n	800e8da <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 800e884:	7b6e      	ldrb	r6, [r5, #13]
 800e886:	0076      	lsls	r6, r6, #1
 800e888:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800e88c:	7aae      	ldrb	r6, [r5, #10]
 800e88e:	4316      	orrs	r6, r2
 800e890:	f640 6213 	movw	r2, #3603	; 0xe13
 800e894:	4293      	cmp	r3, r2
 800e896:	bf18      	it	ne
 800e898:	f103 33ff 	addne.w	r3, r3, #4294967295
 800e89c:	4602      	mov	r2, r0
 800e89e:	bf14      	ite	ne
 800e8a0:	b29b      	uxthne	r3, r3
 800e8a2:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800e8a6:	4629      	mov	r1, r5
 800e8a8:	4620      	mov	r0, r4
 800e8aa:	f7ff ff03 	bl	800e6b4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800e8ae:	7b43      	ldrb	r3, [r0, #13]
 800e8b0:	7a82      	ldrb	r2, [r0, #10]
 800e8b2:	005b      	lsls	r3, r3, #1
 800e8b4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e8b8:	4313      	orrs	r3, r2
 800e8ba:	1af6      	subs	r6, r6, r3
 800e8bc:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 800e8c0:	7b69      	ldrb	r1, [r5, #13]
 800e8c2:	00cb      	lsls	r3, r1, #3
 800e8c4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e8c8:	7a2b      	ldrb	r3, [r5, #8]
 800e8ca:	4313      	orrs	r3, r2
 800e8cc:	064a      	lsls	r2, r1, #25
 800e8ce:	bf44      	itt	mi
 800e8d0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e8d4:	b21b      	sxthmi	r3, r3
 800e8d6:	1bdb      	subs	r3, r3, r7
 800e8d8:	e747      	b.n	800e76a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 800e8da:	2300      	movs	r3, #0
 800e8dc:	e7b6      	b.n	800e84c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 800e8de:	bf00      	nop
 800e8e0:	3fc00079 	.word	0x3fc00079

0800e8e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800e8e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e8e8:	4604      	mov	r4, r0
 800e8ea:	b942      	cbnz	r2, 800e8fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800e8ec:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800e8f0:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 800e8f4:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 800e8f8:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 800e8fc:	e047      	b.n	800e98e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800e8fe:	7b51      	ldrb	r1, [r2, #13]
 800e900:	8893      	ldrh	r3, [r2, #4]
 800e902:	010d      	lsls	r5, r1, #4
 800e904:	f405 7080 	and.w	r0, r5, #256	; 0x100
 800e908:	79d5      	ldrb	r5, [r2, #7]
 800e90a:	4305      	orrs	r5, r0
 800e90c:	2d04      	cmp	r5, #4
 800e90e:	bfcc      	ite	gt
 800e910:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 800e914:	f04f 0e01 	movle.w	lr, #1
 800e918:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800e91c:	f200 80ab 	bhi.w	800ea76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 800e920:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800e924:	4283      	cmp	r3, r0
 800e926:	d216      	bcs.n	800e956 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800e928:	f240 605b 	movw	r0, #1627	; 0x65b
 800e92c:	4283      	cmp	r3, r0
 800e92e:	d859      	bhi.n	800e9e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 800e930:	f240 6057 	movw	r0, #1623	; 0x657
 800e934:	4283      	cmp	r3, r0
 800e936:	d20e      	bcs.n	800e956 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800e938:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800e93c:	d24a      	bcs.n	800e9d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 800e93e:	f240 604e 	movw	r0, #1614	; 0x64e
 800e942:	4283      	cmp	r3, r0
 800e944:	d207      	bcs.n	800e956 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800e946:	f240 601a 	movw	r0, #1562	; 0x61a
 800e94a:	4283      	cmp	r3, r0
 800e94c:	d02a      	beq.n	800e9a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800e94e:	d821      	bhi.n	800e994 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 800e950:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800e954:	d35b      	bcc.n	800ea0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800e956:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 800e95a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e95e:	f040 80d0 	bne.w	800eb02 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800e962:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 800e966:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e96a:	f040 80ca 	bne.w	800eb02 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800e96e:	00cb      	lsls	r3, r1, #3
 800e970:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800e974:	7a13      	ldrb	r3, [r2, #8]
 800e976:	0649      	lsls	r1, r1, #25
 800e978:	ea43 0300 	orr.w	r3, r3, r0
 800e97c:	bf44      	itt	mi
 800e97e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e982:	b21b      	sxthmi	r3, r3
 800e984:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800e988:	1b5d      	subs	r5, r3, r5
 800e98a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800e98e:	4610      	mov	r0, r2
 800e990:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e994:	f240 604b 	movw	r0, #1611	; 0x64b
 800e998:	4283      	cmp	r3, r0
 800e99a:	d338      	bcc.n	800ea0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800e99c:	f240 604c 	movw	r0, #1612	; 0x64c
 800e9a0:	4283      	cmp	r3, r0
 800e9a2:	d9d8      	bls.n	800e956 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800e9a4:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 800e9a8:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 800e9ac:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800e9b0:	f040 80f2 	bne.w	800eb98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 800e9b4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800e9b8:	f040 80ee 	bne.w	800eb98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 800e9bc:	00cb      	lsls	r3, r1, #3
 800e9be:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800e9c2:	7a13      	ldrb	r3, [r2, #8]
 800e9c4:	064e      	lsls	r6, r1, #25
 800e9c6:	ea43 0300 	orr.w	r3, r3, r0
 800e9ca:	bf44      	itt	mi
 800e9cc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800e9d0:	b21b      	sxthmi	r3, r3
 800e9d2:	e7d9      	b.n	800e988 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 800e9d4:	f240 6054 	movw	r0, #1620	; 0x654
 800e9d8:	4283      	cmp	r3, r0
 800e9da:	d8e3      	bhi.n	800e9a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800e9dc:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800e9e0:	d9e0      	bls.n	800e9a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800e9e2:	e7b8      	b.n	800e956 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800e9e4:	f240 6074 	movw	r0, #1652	; 0x674
 800e9e8:	4283      	cmp	r3, r0
 800e9ea:	d0b4      	beq.n	800e956 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800e9ec:	d82d      	bhi.n	800ea4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 800e9ee:	f240 605e 	movw	r0, #1630	; 0x65e
 800e9f2:	4283      	cmp	r3, r0
 800e9f4:	d804      	bhi.n	800ea00 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 800e9f6:	f240 605d 	movw	r0, #1629	; 0x65d
 800e9fa:	4283      	cmp	r3, r0
 800e9fc:	d3d2      	bcc.n	800e9a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800e9fe:	e7aa      	b.n	800e956 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ea00:	f240 605f 	movw	r0, #1631	; 0x65f
 800ea04:	4283      	cmp	r3, r0
 800ea06:	d0cd      	beq.n	800e9a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ea08:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800ea0c:	d0a3      	beq.n	800e956 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ea0e:	00cb      	lsls	r3, r1, #3
 800ea10:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800ea14:	7a13      	ldrb	r3, [r2, #8]
 800ea16:	0649      	lsls	r1, r1, #25
 800ea18:	ea43 0300 	orr.w	r3, r3, r0
 800ea1c:	bf44      	itt	mi
 800ea1e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ea22:	b21b      	sxthmi	r3, r3
 800ea24:	1b5d      	subs	r5, r3, r5
 800ea26:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800ea2a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800ea2e:	7b53      	ldrb	r3, [r2, #13]
 800ea30:	015b      	lsls	r3, r3, #5
 800ea32:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800ea36:	7993      	ldrb	r3, [r2, #6]
 800ea38:	430b      	orrs	r3, r1
 800ea3a:	005b      	lsls	r3, r3, #1
 800ea3c:	2105      	movs	r1, #5
 800ea3e:	fb93 f3f1 	sdiv	r3, r3, r1
 800ea42:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800ea46:	440b      	add	r3, r1
 800ea48:	e756      	b.n	800e8f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800ea4a:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800ea4e:	4283      	cmp	r3, r0
 800ea50:	d809      	bhi.n	800ea66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 800ea52:	f240 60df 	movw	r0, #1759	; 0x6df
 800ea56:	4283      	cmp	r3, r0
 800ea58:	f4bf af7d 	bcs.w	800e956 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ea5c:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800ea60:	2b05      	cmp	r3, #5
 800ea62:	d8d4      	bhi.n	800ea0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800ea64:	e777      	b.n	800e956 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ea66:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800ea6a:	4283      	cmp	r3, r0
 800ea6c:	d09a      	beq.n	800e9a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ea6e:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800ea72:	4283      	cmp	r3, r0
 800ea74:	e7ca      	b.n	800ea0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800ea76:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800ea7a:	d22b      	bcs.n	800ead4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 800ea7c:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800ea80:	4283      	cmp	r3, r0
 800ea82:	d28f      	bcs.n	800e9a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ea84:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800ea88:	4283      	cmp	r3, r0
 800ea8a:	d816      	bhi.n	800eaba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 800ea8c:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800ea90:	4283      	cmp	r3, r0
 800ea92:	f4bf af60 	bcs.w	800e956 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ea96:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800ea9a:	4283      	cmp	r3, r0
 800ea9c:	d80a      	bhi.n	800eab4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 800ea9e:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800eaa2:	4283      	cmp	r3, r0
 800eaa4:	f4bf af57 	bcs.w	800e956 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800eaa8:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800eaac:	4283      	cmp	r3, r0
 800eaae:	f43f af79 	beq.w	800e9a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800eab2:	e7ac      	b.n	800ea0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800eab4:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800eab8:	e7f8      	b.n	800eaac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 800eaba:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800eabe:	4283      	cmp	r3, r0
 800eac0:	d802      	bhi.n	800eac8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 800eac2:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800eac6:	e798      	b.n	800e9fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 800eac8:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800eacc:	4283      	cmp	r3, r0
 800eace:	f47f af42 	bne.w	800e956 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800ead2:	e767      	b.n	800e9a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800ead4:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800ead8:	4283      	cmp	r3, r0
 800eada:	f43f af63 	beq.w	800e9a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800eade:	d802      	bhi.n	800eae6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 800eae0:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800eae4:	e7f2      	b.n	800eacc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 800eae6:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800eaea:	4283      	cmp	r3, r0
 800eaec:	d805      	bhi.n	800eafa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 800eaee:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800eaf2:	4283      	cmp	r3, r0
 800eaf4:	f4ff af2f 	bcc.w	800e956 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800eaf8:	e754      	b.n	800e9a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800eafa:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800eafe:	4283      	cmp	r3, r0
 800eb00:	e7af      	b.n	800ea62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 800eb02:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 800eb06:	4617      	mov	r7, r2
 800eb08:	f102 0808 	add.w	r8, r2, #8
 800eb0c:	4666      	mov	r6, ip
 800eb0e:	6838      	ldr	r0, [r7, #0]
 800eb10:	6879      	ldr	r1, [r7, #4]
 800eb12:	46e6      	mov	lr, ip
 800eb14:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800eb18:	3708      	adds	r7, #8
 800eb1a:	4547      	cmp	r7, r8
 800eb1c:	46f4      	mov	ip, lr
 800eb1e:	d1f6      	bne.n	800eb0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 800eb20:	6838      	ldr	r0, [r7, #0]
 800eb22:	f8ce 0000 	str.w	r0, [lr]
 800eb26:	88b9      	ldrh	r1, [r7, #4]
 800eb28:	f8ae 1004 	strh.w	r1, [lr, #4]
 800eb2c:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 800eb30:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800eb34:	d009      	beq.n	800eb4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 800eb36:	7b51      	ldrb	r1, [r2, #13]
 800eb38:	7992      	ldrb	r2, [r2, #6]
 800eb3a:	0149      	lsls	r1, r1, #5
 800eb3c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800eb40:	4311      	orrs	r1, r2
 800eb42:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800eb46:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 800eb4a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800eb4e:	b2ad      	uxth	r5, r5
 800eb50:	d00d      	beq.n	800eb6e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 800eb52:	442b      	add	r3, r5
 800eb54:	b29b      	uxth	r3, r3
 800eb56:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800eb5a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800eb5e:	10db      	asrs	r3, r3, #3
 800eb60:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800eb64:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800eb68:	4313      	orrs	r3, r2
 800eb6a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800eb6e:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 800eb72:	00cb      	lsls	r3, r1, #3
 800eb74:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800eb78:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800eb7c:	064f      	lsls	r7, r1, #25
 800eb7e:	ea43 0302 	orr.w	r3, r3, r2
 800eb82:	bf44      	itt	mi
 800eb84:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800eb88:	b21b      	sxthmi	r3, r3
 800eb8a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800eb8e:	1b5b      	subs	r3, r3, r5
 800eb90:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 800eb94:	4632      	mov	r2, r6
 800eb96:	e6fa      	b.n	800e98e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800eb98:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 800eb9c:	4617      	mov	r7, r2
 800eb9e:	f102 0908 	add.w	r9, r2, #8
 800eba2:	4666      	mov	r6, ip
 800eba4:	6838      	ldr	r0, [r7, #0]
 800eba6:	6879      	ldr	r1, [r7, #4]
 800eba8:	46e0      	mov	r8, ip
 800ebaa:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800ebae:	3708      	adds	r7, #8
 800ebb0:	454f      	cmp	r7, r9
 800ebb2:	46c4      	mov	ip, r8
 800ebb4:	d1f6      	bne.n	800eba4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 800ebb6:	6838      	ldr	r0, [r7, #0]
 800ebb8:	f8c8 0000 	str.w	r0, [r8]
 800ebbc:	88b9      	ldrh	r1, [r7, #4]
 800ebbe:	f8a8 1004 	strh.w	r1, [r8, #4]
 800ebc2:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 800ebc6:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800ebca:	d009      	beq.n	800ebe0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 800ebcc:	7b51      	ldrb	r1, [r2, #13]
 800ebce:	7992      	ldrb	r2, [r2, #6]
 800ebd0:	0149      	lsls	r1, r1, #5
 800ebd2:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800ebd6:	4311      	orrs	r1, r2
 800ebd8:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800ebdc:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 800ebe0:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800ebe4:	d00e      	beq.n	800ec04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 800ebe6:	eba3 030e 	sub.w	r3, r3, lr
 800ebea:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800ebee:	b29b      	uxth	r3, r3
 800ebf0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800ebf4:	10db      	asrs	r3, r3, #3
 800ebf6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800ebfa:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800ebfe:	4313      	orrs	r3, r2
 800ec00:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800ec04:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 800ec08:	00cb      	lsls	r3, r1, #3
 800ec0a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ec0e:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800ec12:	0648      	lsls	r0, r1, #25
 800ec14:	ea43 0302 	orr.w	r3, r3, r2
 800ec18:	bf44      	itt	mi
 800ec1a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ec1e:	b21b      	sxthmi	r3, r3
 800ec20:	1b5d      	subs	r5, r3, r5
 800ec22:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800ec26:	e7b5      	b.n	800eb94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0800ec28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800ec28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ec2c:	461e      	mov	r6, r3
 800ec2e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800ec30:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800ec34:	4604      	mov	r4, r0
 800ec36:	4617      	mov	r7, r2
 800ec38:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800ec3c:	f7f3 ff92 	bl	8002b64 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ec40:	4605      	mov	r5, r0
 800ec42:	b918      	cbnz	r0, 800ec4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 800ec44:	6030      	str	r0, [r6, #0]
 800ec46:	4628      	mov	r0, r5
 800ec48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ec4c:	683b      	ldr	r3, [r7, #0]
 800ec4e:	4601      	mov	r1, r0
 800ec50:	68db      	ldr	r3, [r3, #12]
 800ec52:	4638      	mov	r0, r7
 800ec54:	4798      	blx	r3
 800ec56:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800ec5a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800ec5e:	4602      	mov	r2, r0
 800ec60:	6030      	str	r0, [r6, #0]
 800ec62:	d213      	bcs.n	800ec8c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 800ec64:	4643      	mov	r3, r8
 800ec66:	4639      	mov	r1, r7
 800ec68:	4620      	mov	r0, r4
 800ec6a:	f7ff fe3b 	bl	800e8e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800ec6e:	6030      	str	r0, [r6, #0]
 800ec70:	6833      	ldr	r3, [r6, #0]
 800ec72:	b143      	cbz	r3, 800ec86 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 800ec74:	7b5a      	ldrb	r2, [r3, #13]
 800ec76:	7a9b      	ldrb	r3, [r3, #10]
 800ec78:	0052      	lsls	r2, r2, #1
 800ec7a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800ec7e:	4313      	orrs	r3, r2
 800ec80:	bf0c      	ite	eq
 800ec82:	2301      	moveq	r3, #1
 800ec84:	2300      	movne	r3, #0
 800ec86:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 800ec8a:	e7dc      	b.n	800ec46 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 800ec8c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800ec90:	b29b      	uxth	r3, r3
 800ec92:	2b7f      	cmp	r3, #127	; 0x7f
 800ec94:	d804      	bhi.n	800eca0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 800ec96:	4639      	mov	r1, r7
 800ec98:	4620      	mov	r0, r4
 800ec9a:	f7ff fd17 	bl	800e6cc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800ec9e:	e7e6      	b.n	800ec6e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 800eca0:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800eca4:	2b00      	cmp	r3, #0
 800eca6:	d0e3      	beq.n	800ec70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 800eca8:	f640 1302 	movw	r3, #2306	; 0x902
 800ecac:	429d      	cmp	r5, r3
 800ecae:	d1df      	bne.n	800ec70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 800ecb0:	4601      	mov	r1, r0
 800ecb2:	4620      	mov	r0, r4
 800ecb4:	f7ff fcdb 	bl	800e66e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800ecb8:	e7d9      	b.n	800ec6e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0800ecba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800ecba:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ecbe:	461e      	mov	r6, r3
 800ecc0:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800ecc2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800ecc6:	4604      	mov	r4, r0
 800ecc8:	4617      	mov	r7, r2
 800ecca:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800ecce:	f7f3 ff49 	bl	8002b64 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ecd2:	4605      	mov	r5, r0
 800ecd4:	b918      	cbnz	r0, 800ecde <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 800ecd6:	6030      	str	r0, [r6, #0]
 800ecd8:	4628      	mov	r0, r5
 800ecda:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ecde:	683b      	ldr	r3, [r7, #0]
 800ece0:	4601      	mov	r1, r0
 800ece2:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800ece6:	4638      	mov	r0, r7
 800ece8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800ecec:	47c8      	blx	r9
 800ecee:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800ecf2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800ecf6:	4602      	mov	r2, r0
 800ecf8:	6030      	str	r0, [r6, #0]
 800ecfa:	d213      	bcs.n	800ed24 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 800ecfc:	4643      	mov	r3, r8
 800ecfe:	4639      	mov	r1, r7
 800ed00:	4620      	mov	r0, r4
 800ed02:	f7ff fdef 	bl	800e8e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800ed06:	6030      	str	r0, [r6, #0]
 800ed08:	6833      	ldr	r3, [r6, #0]
 800ed0a:	b143      	cbz	r3, 800ed1e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 800ed0c:	7b5a      	ldrb	r2, [r3, #13]
 800ed0e:	7a9b      	ldrb	r3, [r3, #10]
 800ed10:	0052      	lsls	r2, r2, #1
 800ed12:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800ed16:	4313      	orrs	r3, r2
 800ed18:	bf0c      	ite	eq
 800ed1a:	2301      	moveq	r3, #1
 800ed1c:	2300      	movne	r3, #0
 800ed1e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 800ed22:	e7d9      	b.n	800ecd8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 800ed24:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800ed28:	b29b      	uxth	r3, r3
 800ed2a:	2b7f      	cmp	r3, #127	; 0x7f
 800ed2c:	d804      	bhi.n	800ed38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 800ed2e:	4639      	mov	r1, r7
 800ed30:	4620      	mov	r0, r4
 800ed32:	f7ff fccb 	bl	800e6cc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800ed36:	e7e6      	b.n	800ed06 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 800ed38:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800ed3c:	2b00      	cmp	r3, #0
 800ed3e:	d0e3      	beq.n	800ed08 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 800ed40:	f640 1302 	movw	r3, #2306	; 0x902
 800ed44:	429d      	cmp	r5, r3
 800ed46:	d1df      	bne.n	800ed08 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 800ed48:	4601      	mov	r1, r0
 800ed4a:	4620      	mov	r0, r4
 800ed4c:	f7ff fc8f 	bl	800e66e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800ed50:	e7d9      	b.n	800ed06 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0800ed52 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800ed52:	b510      	push	{r4, lr}
 800ed54:	4604      	mov	r4, r0
 800ed56:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 800ed5a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800ed5c:	b1f1      	cbz	r1, 800ed9c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 800ed5e:	2b0a      	cmp	r3, #10
 800ed60:	d02f      	beq.n	800edc2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 800ed62:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800ed64:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800ed68:	3901      	subs	r1, #1
 800ed6a:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 800ed6c:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 800ed70:	1c51      	adds	r1, r2, #1
 800ed72:	b289      	uxth	r1, r1
 800ed74:	2901      	cmp	r1, #1
 800ed76:	bf84      	itt	hi
 800ed78:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800ed7c:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 800ed7e:	f103 0201 	add.w	r2, r3, #1
 800ed82:	8722      	strh	r2, [r4, #56]	; 0x38
 800ed84:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800ed86:	bf98      	it	ls
 800ed88:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 800ed8a:	4413      	add	r3, r2
 800ed8c:	b29b      	uxth	r3, r3
 800ed8e:	2b09      	cmp	r3, #9
 800ed90:	bf88      	it	hi
 800ed92:	3b0a      	subhi	r3, #10
 800ed94:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800ed98:	8458      	strh	r0, [r3, #34]	; 0x22
 800ed9a:	e7dc      	b.n	800ed56 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800ed9c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800ed9e:	2b0a      	cmp	r3, #10
 800eda0:	d00f      	beq.n	800edc2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 800eda2:	4620      	mov	r0, r4
 800eda4:	f7ff fc11 	bl	800e5ca <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800eda8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800edaa:	1c5a      	adds	r2, r3, #1
 800edac:	8722      	strh	r2, [r4, #56]	; 0x38
 800edae:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800edb0:	4413      	add	r3, r2
 800edb2:	b29b      	uxth	r3, r3
 800edb4:	2b09      	cmp	r3, #9
 800edb6:	bf88      	it	hi
 800edb8:	3b0a      	subhi	r3, #10
 800edba:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800edbe:	8458      	strh	r0, [r3, #34]	; 0x22
 800edc0:	e7ec      	b.n	800ed9c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 800edc2:	bd10      	pop	{r4, pc}

0800edc4 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800edc4:	b538      	push	{r3, r4, r5, lr}
 800edc6:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800edc8:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 800edcc:	4604      	mov	r4, r0
 800edce:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 800edd0:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 800edd2:	3a01      	subs	r2, #1
 800edd4:	8702      	strh	r2, [r0, #56]	; 0x38
 800edd6:	1c5a      	adds	r2, r3, #1
 800edd8:	b292      	uxth	r2, r2
 800edda:	2a09      	cmp	r2, #9
 800eddc:	bf86      	itte	hi
 800edde:	3b09      	subhi	r3, #9
 800ede0:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 800ede2:	86c2      	strhls	r2, [r0, #54]	; 0x36
 800ede4:	f7ff ffb5 	bl	800ed52 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800ede8:	8c23      	ldrh	r3, [r4, #32]
 800edea:	2b01      	cmp	r3, #1
 800edec:	bf9c      	itt	ls
 800edee:	3301      	addls	r3, #1
 800edf0:	8423      	strhls	r3, [r4, #32]
 800edf2:	8be3      	ldrh	r3, [r4, #30]
 800edf4:	b90b      	cbnz	r3, 800edfa <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 800edf6:	2302      	movs	r3, #2
 800edf8:	83e3      	strh	r3, [r4, #30]
 800edfa:	8be3      	ldrh	r3, [r4, #30]
 800edfc:	3b01      	subs	r3, #1
 800edfe:	b29b      	uxth	r3, r3
 800ee00:	83e3      	strh	r3, [r4, #30]
 800ee02:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ee06:	4628      	mov	r0, r5
 800ee08:	8365      	strh	r5, [r4, #26]
 800ee0a:	bd38      	pop	{r3, r4, r5, pc}

0800ee0c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800ee0c:	428a      	cmp	r2, r1
 800ee0e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ee12:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 800ee14:	d931      	bls.n	800ee7a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 800ee16:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 800ee18:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 800ee1c:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 800ee20:	19ee      	adds	r6, r5, r7
 800ee22:	1a54      	subs	r4, r2, r1
 800ee24:	3e01      	subs	r6, #1
 800ee26:	fa1f fe84 	uxth.w	lr, r4
 800ee2a:	b2b4      	uxth	r4, r6
 800ee2c:	eba4 090e 	sub.w	r9, r4, lr
 800ee30:	fa1f f989 	uxth.w	r9, r9
 800ee34:	2c09      	cmp	r4, #9
 800ee36:	4626      	mov	r6, r4
 800ee38:	bf88      	it	hi
 800ee3a:	f1a4 060a 	subhi.w	r6, r4, #10
 800ee3e:	f1bc 0f00 	cmp.w	ip, #0
 800ee42:	bf08      	it	eq
 800ee44:	f04f 0c02 	moveq.w	ip, #2
 800ee48:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 800ee4c:	f10c 3cff 	add.w	ip, ip, #4294967295
 800ee50:	fa1f fc8c 	uxth.w	ip, ip
 800ee54:	3c01      	subs	r4, #1
 800ee56:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 800ee5a:	b2a4      	uxth	r4, r4
 800ee5c:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 800ee60:	454c      	cmp	r4, r9
 800ee62:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 800ee66:	d1e5      	bne.n	800ee34 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 800ee68:	eba5 050e 	sub.w	r5, r5, lr
 800ee6c:	eb0e 0408 	add.w	r4, lr, r8
 800ee70:	8705      	strh	r5, [r0, #56]	; 0x38
 800ee72:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 800ee76:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 800ee7a:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 800ee7c:	1a64      	subs	r4, r4, r1
 800ee7e:	4439      	add	r1, r7
 800ee80:	b289      	uxth	r1, r1
 800ee82:	2909      	cmp	r1, #9
 800ee84:	bf88      	it	hi
 800ee86:	390a      	subhi	r1, #10
 800ee88:	8704      	strh	r4, [r0, #56]	; 0x38
 800ee8a:	86c1      	strh	r1, [r0, #54]	; 0x36
 800ee8c:	250a      	movs	r5, #10
 800ee8e:	b18a      	cbz	r2, 800eeb4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 800ee90:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 800ee92:	3a01      	subs	r2, #1
 800ee94:	b292      	uxth	r2, r2
 800ee96:	3101      	adds	r1, #1
 800ee98:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800ee9c:	8701      	strh	r1, [r0, #56]	; 0x38
 800ee9e:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 800eea0:	b901      	cbnz	r1, 800eea4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 800eea2:	86c5      	strh	r5, [r0, #54]	; 0x36
 800eea4:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 800eea6:	3901      	subs	r1, #1
 800eea8:	b289      	uxth	r1, r1
 800eeaa:	86c1      	strh	r1, [r0, #54]	; 0x36
 800eeac:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800eeb0:	844c      	strh	r4, [r1, #34]	; 0x22
 800eeb2:	e7ec      	b.n	800ee8e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 800eeb4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800eeb8:	f7ff bf4b 	b.w	800ed52 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0800eebc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800eebc:	b570      	push	{r4, r5, r6, lr}
 800eebe:	2500      	movs	r5, #0
 800eec0:	4295      	cmp	r5, r2
 800eec2:	d011      	beq.n	800eee8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 800eec4:	8bc4      	ldrh	r4, [r0, #30]
 800eec6:	f831 6b02 	ldrh.w	r6, [r1], #2
 800eeca:	4414      	add	r4, r2
 800eecc:	3c01      	subs	r4, #1
 800eece:	1b64      	subs	r4, r4, r5
 800eed0:	b2a4      	uxth	r4, r4
 800eed2:	2c01      	cmp	r4, #1
 800eed4:	bf88      	it	hi
 800eed6:	3c02      	subhi	r4, #2
 800eed8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800eedc:	8b64      	ldrh	r4, [r4, #26]
 800eede:	42b4      	cmp	r4, r6
 800eee0:	d117      	bne.n	800ef12 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 800eee2:	3501      	adds	r5, #1
 800eee4:	b2ad      	uxth	r5, r5
 800eee6:	e7eb      	b.n	800eec0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 800eee8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800eeec:	2400      	movs	r4, #0
 800eeee:	4413      	add	r3, r2
 800eef0:	b2a2      	uxth	r2, r4
 800eef2:	429a      	cmp	r2, r3
 800eef4:	da0f      	bge.n	800ef16 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 800eef6:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 800eef8:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800eefc:	4432      	add	r2, r6
 800eefe:	b292      	uxth	r2, r2
 800ef00:	2a09      	cmp	r2, #9
 800ef02:	bf88      	it	hi
 800ef04:	3a0a      	subhi	r2, #10
 800ef06:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800ef0a:	3401      	adds	r4, #1
 800ef0c:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 800ef0e:	42aa      	cmp	r2, r5
 800ef10:	d0ee      	beq.n	800eef0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 800ef12:	2000      	movs	r0, #0
 800ef14:	bd70      	pop	{r4, r5, r6, pc}
 800ef16:	2001      	movs	r0, #1
 800ef18:	e7fc      	b.n	800ef14 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0800ef1a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800ef1a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ef1e:	4605      	mov	r5, r0
 800ef20:	4616      	mov	r6, r2
 800ef22:	1c8c      	adds	r4, r1, #2
 800ef24:	8809      	ldrh	r1, [r1, #0]
 800ef26:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800ef2a:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800ef2e:	42b3      	cmp	r3, r6
 800ef30:	d124      	bne.n	800ef7c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800ef32:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800ef36:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800ef3a:	f001 070f 	and.w	r7, r1, #15
 800ef3e:	f8cd 8000 	str.w	r8, [sp]
 800ef42:	464b      	mov	r3, r9
 800ef44:	4652      	mov	r2, sl
 800ef46:	4621      	mov	r1, r4
 800ef48:	4628      	mov	r0, r5
 800ef4a:	f7ff ffb7 	bl	800eebc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800ef4e:	4683      	mov	fp, r0
 800ef50:	b168      	cbz	r0, 800ef6e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800ef52:	eb0a 0109 	add.w	r1, sl, r9
 800ef56:	4441      	add	r1, r8
 800ef58:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800ef5c:	463a      	mov	r2, r7
 800ef5e:	4649      	mov	r1, r9
 800ef60:	4628      	mov	r0, r5
 800ef62:	f7ff ff53 	bl	800ee0c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800ef66:	4658      	mov	r0, fp
 800ef68:	b003      	add	sp, #12
 800ef6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ef6e:	eb07 010a 	add.w	r1, r7, sl
 800ef72:	4449      	add	r1, r9
 800ef74:	4441      	add	r1, r8
 800ef76:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800ef7a:	e7d2      	b.n	800ef22 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800ef7c:	f04f 0b00 	mov.w	fp, #0
 800ef80:	e7f1      	b.n	800ef66 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800ef82 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800ef82:	b570      	push	{r4, r5, r6, lr}
 800ef84:	8810      	ldrh	r0, [r2, #0]
 800ef86:	4298      	cmp	r0, r3
 800ef88:	d817      	bhi.n	800efba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800ef8a:	1e48      	subs	r0, r1, #1
 800ef8c:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800ef90:	4298      	cmp	r0, r3
 800ef92:	d312      	bcc.n	800efba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800ef94:	2400      	movs	r4, #0
 800ef96:	428c      	cmp	r4, r1
 800ef98:	d20f      	bcs.n	800efba <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800ef9a:	1860      	adds	r0, r4, r1
 800ef9c:	1040      	asrs	r0, r0, #1
 800ef9e:	0085      	lsls	r5, r0, #2
 800efa0:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800efa4:	42b3      	cmp	r3, r6
 800efa6:	d902      	bls.n	800efae <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800efa8:	3001      	adds	r0, #1
 800efaa:	b284      	uxth	r4, r0
 800efac:	e7f3      	b.n	800ef96 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800efae:	d201      	bcs.n	800efb4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800efb0:	b281      	uxth	r1, r0
 800efb2:	e7f0      	b.n	800ef96 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800efb4:	442a      	add	r2, r5
 800efb6:	8850      	ldrh	r0, [r2, #2]
 800efb8:	bd70      	pop	{r4, r5, r6, pc}
 800efba:	2000      	movs	r0, #0
 800efbc:	e7fc      	b.n	800efb8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800efbe <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800efbe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800efc2:	6c45      	ldr	r5, [r0, #68]	; 0x44
 800efc4:	886f      	ldrh	r7, [r5, #2]
 800efc6:	4604      	mov	r4, r0
 800efc8:	087f      	lsrs	r7, r7, #1
 800efca:	260b      	movs	r6, #11
 800efcc:	3e01      	subs	r6, #1
 800efce:	d013      	beq.n	800eff8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 800efd0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800efd2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800efd6:	462a      	mov	r2, r5
 800efd8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800efdc:	4639      	mov	r1, r7
 800efde:	4643      	mov	r3, r8
 800efe0:	4620      	mov	r0, r4
 800efe2:	f7ff ffce 	bl	800ef82 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800efe6:	b138      	cbz	r0, 800eff8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 800efe8:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800efec:	4642      	mov	r2, r8
 800efee:	4620      	mov	r0, r4
 800eff0:	f7ff ff93 	bl	800ef1a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800eff4:	2800      	cmp	r0, #0
 800eff6:	d1e9      	bne.n	800efcc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800eff8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800effc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 800effc:	b570      	push	{r4, r5, r6, lr}
 800effe:	694a      	ldr	r2, [r1, #20]
 800f000:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800f002:	684b      	ldr	r3, [r1, #4]
 800f004:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 800f006:	1b54      	subs	r4, r2, r5
 800f008:	f000 8106 	beq.w	800f218 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 800f00c:	1b9b      	subs	r3, r3, r6
 800f00e:	d003      	beq.n	800f018 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800f010:	4363      	muls	r3, r4
 800f012:	2210      	movs	r2, #16
 800f014:	fb93 f3f2 	sdiv	r3, r3, r2
 800f018:	680c      	ldr	r4, [r1, #0]
 800f01a:	698a      	ldr	r2, [r1, #24]
 800f01c:	1b65      	subs	r5, r4, r5
 800f01e:	f000 80fd 	beq.w	800f21c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 800f022:	1b92      	subs	r2, r2, r6
 800f024:	d003      	beq.n	800f02e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800f026:	436a      	muls	r2, r5
 800f028:	2410      	movs	r4, #16
 800f02a:	fb92 f2f4 	sdiv	r2, r2, r4
 800f02e:	1a9b      	subs	r3, r3, r2
 800f030:	ee07 3a90 	vmov	s15, r3
 800f034:	ed9f 4a88 	vldr	s8, [pc, #544]	; 800f258 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 800f038:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f03c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800f040:	ee67 7a84 	vmul.f32	s15, s15, s8
 800f044:	460a      	mov	r2, r1
 800f046:	ee87 3a27 	vdiv.f32	s6, s14, s15
 800f04a:	4603      	mov	r3, r0
 800f04c:	f100 040c 	add.w	r4, r0, #12
 800f050:	eeb1 6a43 	vneg.f32	s12, s6
 800f054:	edd2 7a02 	vldr	s15, [r2, #8]
 800f058:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800f05c:	3214      	adds	r2, #20
 800f05e:	ece3 6a01 	vstmia	r3!, {s13}
 800f062:	ed52 7a02 	vldr	s15, [r2, #-8]
 800f066:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800f06a:	429c      	cmp	r4, r3
 800f06c:	edc3 7a02 	vstr	s15, [r3, #8]
 800f070:	ed52 7a01 	vldr	s15, [r2, #-4]
 800f074:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800f078:	edc3 7a05 	vstr	s15, [r3, #20]
 800f07c:	d1ea      	bne.n	800f054 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 800f07e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800f080:	698b      	ldr	r3, [r1, #24]
 800f082:	edd0 4a02 	vldr	s9, [r0, #8]
 800f086:	edd0 3a00 	vldr	s7, [r0]
 800f08a:	edd0 6a01 	vldr	s13, [r0, #4]
 800f08e:	ed90 5a05 	vldr	s10, [r0, #20]
 800f092:	ed90 2a03 	vldr	s4, [r0, #12]
 800f096:	edd0 5a04 	vldr	s11, [r0, #16]
 800f09a:	ed90 1a07 	vldr	s2, [r0, #28]
 800f09e:	edd0 2a06 	vldr	s5, [r0, #24]
 800f0a2:	1a9b      	subs	r3, r3, r2
 800f0a4:	ee07 3a90 	vmov	s15, r3
 800f0a8:	684b      	ldr	r3, [r1, #4]
 800f0aa:	1a9b      	subs	r3, r3, r2
 800f0ac:	ee07 3a10 	vmov	s14, r3
 800f0b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f0b4:	ee76 6ae4 	vsub.f32	s13, s13, s9
 800f0b8:	ee67 7a84 	vmul.f32	s15, s15, s8
 800f0bc:	ee73 4ae4 	vsub.f32	s9, s7, s9
 800f0c0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f0c4:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 800f0c8:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f0cc:	ee75 5ac5 	vsub.f32	s11, s11, s10
 800f0d0:	eee6 7a87 	vfma.f32	s15, s13, s14
 800f0d4:	ee32 5a45 	vsub.f32	s10, s4, s10
 800f0d8:	ee67 7a83 	vmul.f32	s15, s15, s6
 800f0dc:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 800f0e0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800f0e2:	694a      	ldr	r2, [r1, #20]
 800f0e4:	1b13      	subs	r3, r2, r4
 800f0e6:	ee07 3a10 	vmov	s14, r3
 800f0ea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f0ee:	680b      	ldr	r3, [r1, #0]
 800f0f0:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f0f4:	1b1b      	subs	r3, r3, r4
 800f0f6:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 800f0fa:	ee07 3a10 	vmov	s14, r3
 800f0fe:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f102:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f106:	eee6 4a87 	vfma.f32	s9, s13, s14
 800f10a:	ee64 4a86 	vmul.f32	s9, s9, s12
 800f10e:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 800f112:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800f114:	698b      	ldr	r3, [r1, #24]
 800f116:	1a9b      	subs	r3, r3, r2
 800f118:	ee06 3a90 	vmov	s13, r3
 800f11c:	684b      	ldr	r3, [r1, #4]
 800f11e:	1a9b      	subs	r3, r3, r2
 800f120:	ee07 3a10 	vmov	s14, r3
 800f124:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800f128:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f12c:	ee66 6a84 	vmul.f32	s13, s13, s8
 800f130:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f134:	ee65 6a66 	vnmul.f32	s13, s10, s13
 800f138:	eee5 6a87 	vfma.f32	s13, s11, s14
 800f13c:	ee66 6a83 	vmul.f32	s13, s13, s6
 800f140:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 800f144:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800f146:	694a      	ldr	r2, [r1, #20]
 800f148:	1b13      	subs	r3, r2, r4
 800f14a:	ee07 3a10 	vmov	s14, r3
 800f14e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f152:	680b      	ldr	r3, [r1, #0]
 800f154:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f158:	1b1b      	subs	r3, r3, r4
 800f15a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 800f15e:	ee07 3a10 	vmov	s14, r3
 800f162:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f166:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f16a:	eea5 5a87 	vfma.f32	s10, s11, s14
 800f16e:	edd0 5a08 	vldr	s11, [r0, #32]
 800f172:	ee25 5a06 	vmul.f32	s10, s10, s12
 800f176:	ee31 1a65 	vsub.f32	s2, s2, s11
 800f17a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 800f17e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800f180:	698b      	ldr	r3, [r1, #24]
 800f182:	1a9b      	subs	r3, r3, r2
 800f184:	ee07 3a10 	vmov	s14, r3
 800f188:	684b      	ldr	r3, [r1, #4]
 800f18a:	1a9b      	subs	r3, r3, r2
 800f18c:	ee01 3a90 	vmov	s3, r3
 800f190:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f194:	ee72 5ae5 	vsub.f32	s11, s5, s11
 800f198:	ee27 7a04 	vmul.f32	s14, s14, s8
 800f19c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 800f1a0:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 800f1a4:	ee61 1a84 	vmul.f32	s3, s3, s8
 800f1a8:	eea1 7a21 	vfma.f32	s14, s2, s3
 800f1ac:	ee27 7a03 	vmul.f32	s14, s14, s6
 800f1b0:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 800f1b4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800f1b6:	694a      	ldr	r2, [r1, #20]
 800f1b8:	1b13      	subs	r3, r2, r4
 800f1ba:	ee03 3a10 	vmov	s6, r3
 800f1be:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800f1c2:	680b      	ldr	r3, [r1, #0]
 800f1c4:	ee23 3a04 	vmul.f32	s6, s6, s8
 800f1c8:	1b1b      	subs	r3, r3, r4
 800f1ca:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 800f1ce:	ee03 3a10 	vmov	s6, r3
 800f1d2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800f1d6:	ee23 4a04 	vmul.f32	s8, s6, s8
 800f1da:	eee1 5a04 	vfma.f32	s11, s2, s8
 800f1de:	ee25 6a86 	vmul.f32	s12, s11, s12
 800f1e2:	ee62 5a67 	vnmul.f32	s11, s4, s15
 800f1e6:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 800f1ea:	eee3 5aa6 	vfma.f32	s11, s7, s13
 800f1ee:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 800f1f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f1f6:	dd13      	ble.n	800f220 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 800f1f8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800f1fc:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 800f200:	63c3      	str	r3, [r0, #60]	; 0x3c
 800f202:	eee3 7a87 	vfma.f32	s15, s7, s14
 800f206:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800f20a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f20e:	dd15      	ble.n	800f23c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 800f210:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800f214:	6403      	str	r3, [r0, #64]	; 0x40
 800f216:	bd70      	pop	{r4, r5, r6, pc}
 800f218:	4623      	mov	r3, r4
 800f21a:	e6fd      	b.n	800f018 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800f21c:	462a      	mov	r2, r5
 800f21e:	e706      	b.n	800f02e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800f220:	d502      	bpl.n	800f228 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 800f222:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800f226:	e7e9      	b.n	800f1fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 800f228:	ee22 2a64 	vnmul.f32	s4, s4, s9
 800f22c:	eea3 2a85 	vfma.f32	s4, s7, s10
 800f230:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 800f234:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f238:	dade      	bge.n	800f1f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 800f23a:	e7f2      	b.n	800f222 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 800f23c:	d502      	bpl.n	800f244 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 800f23e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800f242:	e7e7      	b.n	800f214 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 800f244:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 800f248:	eee3 4a86 	vfma.f32	s9, s7, s12
 800f24c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 800f250:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f254:	dadc      	bge.n	800f210 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 800f256:	e7f2      	b.n	800f23e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 800f258:	3d800000 	.word	0x3d800000

0800f25c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 800f25c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f260:	2714      	movs	r7, #20
 800f262:	435f      	muls	r7, r3
 800f264:	eb02 0c07 	add.w	ip, r2, r7
 800f268:	f8dc 5004 	ldr.w	r5, [ip, #4]
 800f26c:	f115 0e0f 	adds.w	lr, r5, #15
 800f270:	f100 80a2 	bmi.w	800f3b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 800f274:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 800f278:	9c08      	ldr	r4, [sp, #32]
 800f27a:	f8c0 e014 	str.w	lr, [r0, #20]
 800f27e:	2614      	movs	r6, #20
 800f280:	4366      	muls	r6, r4
 800f282:	eb02 0806 	add.w	r8, r2, r6
 800f286:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800f28a:	f115 040f 	adds.w	r4, r5, #15
 800f28e:	f100 809f 	bmi.w	800f3d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 800f292:	1124      	asrs	r4, r4, #4
 800f294:	eba4 040e 	sub.w	r4, r4, lr
 800f298:	6184      	str	r4, [r0, #24]
 800f29a:	2c00      	cmp	r4, #0
 800f29c:	f000 808a 	beq.w	800f3b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 800f2a0:	f8dc 9004 	ldr.w	r9, [ip, #4]
 800f2a4:	f8d8 4004 	ldr.w	r4, [r8, #4]
 800f2a8:	5995      	ldr	r5, [r2, r6]
 800f2aa:	eba4 0809 	sub.w	r8, r4, r9
 800f2ae:	59d4      	ldr	r4, [r2, r7]
 800f2b0:	eba5 0a04 	sub.w	sl, r5, r4
 800f2b4:	ea4f 150a 	mov.w	r5, sl, lsl #4
 800f2b8:	fb0e fe05 	mul.w	lr, lr, r5
 800f2bc:	fb0a ee19 	mls	lr, sl, r9, lr
 800f2c0:	fb08 e404 	mla	r4, r8, r4, lr
 800f2c4:	ea4f 1608 	mov.w	r6, r8, lsl #4
 800f2c8:	3c01      	subs	r4, #1
 800f2ca:	19a4      	adds	r4, r4, r6
 800f2cc:	f100 808c 	bmi.w	800f3e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 800f2d0:	fb94 fef6 	sdiv	lr, r4, r6
 800f2d4:	f8c0 e000 	str.w	lr, [r0]
 800f2d8:	fb06 441e 	mls	r4, r6, lr, r4
 800f2dc:	6104      	str	r4, [r0, #16]
 800f2de:	2d00      	cmp	r5, #0
 800f2e0:	f2c0 8095 	blt.w	800f40e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 800f2e4:	fb95 f4f6 	sdiv	r4, r5, r6
 800f2e8:	6044      	str	r4, [r0, #4]
 800f2ea:	fb06 5514 	mls	r5, r6, r4, r5
 800f2ee:	6085      	str	r5, [r0, #8]
 800f2f0:	60c6      	str	r6, [r0, #12]
 800f2f2:	f8dc 4004 	ldr.w	r4, [ip, #4]
 800f2f6:	6945      	ldr	r5, [r0, #20]
 800f2f8:	59d2      	ldr	r2, [r2, r7]
 800f2fa:	eddf 6a4d 	vldr	s13, [pc, #308]	; 800f430 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 800f2fe:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 800f302:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 800f306:	ee07 4a10 	vmov	s14, r4
 800f30a:	6804      	ldr	r4, [r0, #0]
 800f30c:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 800f310:	ee07 2a90 	vmov	s15, r2
 800f314:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f318:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800f31c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800f320:	ee27 7a26 	vmul.f32	s14, s14, s13
 800f324:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800f328:	edd3 6a00 	vldr	s13, [r3]
 800f32c:	eee6 6a07 	vfma.f32	s13, s12, s14
 800f330:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 800f334:	eee6 6a27 	vfma.f32	s13, s12, s15
 800f338:	edc0 6a07 	vstr	s13, [r0, #28]
 800f33c:	edd0 6a01 	vldr	s13, [r0, #4]
 800f340:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 800f344:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 800f348:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800f34c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800f350:	ed80 6a08 	vstr	s12, [r0, #32]
 800f354:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800f356:	6242      	str	r2, [r0, #36]	; 0x24
 800f358:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 800f35c:	ed93 6a03 	vldr	s12, [r3, #12]
 800f360:	eea5 6a87 	vfma.f32	s12, s11, s14
 800f364:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 800f368:	eea5 6aa7 	vfma.f32	s12, s11, s15
 800f36c:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 800f370:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 800f374:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 800f378:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800f37c:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 800f380:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800f382:	6302      	str	r2, [r0, #48]	; 0x30
 800f384:	ed93 6a06 	vldr	s12, [r3, #24]
 800f388:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 800f38c:	eea5 6a87 	vfma.f32	s12, s11, s14
 800f390:	eeb0 7a46 	vmov.f32	s14, s12
 800f394:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 800f398:	eea6 7a27 	vfma.f32	s14, s12, s15
 800f39c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 800f3a0:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 800f3a4:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 800f3a8:	eee6 7a87 	vfma.f32	s15, s13, s14
 800f3ac:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 800f3b0:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 800f3b2:	63c3      	str	r3, [r0, #60]	; 0x3c
 800f3b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f3b8:	f1c5 0501 	rsb	r5, r5, #1
 800f3bc:	f015 050f 	ands.w	r5, r5, #15
 800f3c0:	bf18      	it	ne
 800f3c2:	2501      	movne	r5, #1
 800f3c4:	2410      	movs	r4, #16
 800f3c6:	fb9e fef4 	sdiv	lr, lr, r4
 800f3ca:	ebae 0e05 	sub.w	lr, lr, r5
 800f3ce:	e753      	b.n	800f278 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 800f3d0:	f1c5 0501 	rsb	r5, r5, #1
 800f3d4:	f015 050f 	ands.w	r5, r5, #15
 800f3d8:	bf18      	it	ne
 800f3da:	2501      	movne	r5, #1
 800f3dc:	f04f 0910 	mov.w	r9, #16
 800f3e0:	fb94 f4f9 	sdiv	r4, r4, r9
 800f3e4:	1b64      	subs	r4, r4, r5
 800f3e6:	e755      	b.n	800f294 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 800f3e8:	4264      	negs	r4, r4
 800f3ea:	fb94 fef6 	sdiv	lr, r4, r6
 800f3ee:	f1ce 0800 	rsb	r8, lr, #0
 800f3f2:	fb06 441e 	mls	r4, r6, lr, r4
 800f3f6:	f8c0 8000 	str.w	r8, [r0]
 800f3fa:	6104      	str	r4, [r0, #16]
 800f3fc:	2c00      	cmp	r4, #0
 800f3fe:	f43f af6e 	beq.w	800f2de <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 800f402:	ea6f 0e0e 	mvn.w	lr, lr
 800f406:	f8c0 e000 	str.w	lr, [r0]
 800f40a:	1b34      	subs	r4, r6, r4
 800f40c:	e766      	b.n	800f2dc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 800f40e:	426d      	negs	r5, r5
 800f410:	fb95 f4f6 	sdiv	r4, r5, r6
 800f414:	f1c4 0e00 	rsb	lr, r4, #0
 800f418:	fb06 5514 	mls	r5, r6, r4, r5
 800f41c:	f8c0 e004 	str.w	lr, [r0, #4]
 800f420:	6085      	str	r5, [r0, #8]
 800f422:	2d00      	cmp	r5, #0
 800f424:	f43f af64 	beq.w	800f2f0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 800f428:	43e4      	mvns	r4, r4
 800f42a:	6044      	str	r4, [r0, #4]
 800f42c:	1b75      	subs	r5, r6, r5
 800f42e:	e75e      	b.n	800f2ee <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 800f430:	3d800000 	.word	0x3d800000

0800f434 <_ZN8touchgfx7Unicode6strlenEPKt>:
 800f434:	4602      	mov	r2, r0
 800f436:	b148      	cbz	r0, 800f44c <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 800f438:	2300      	movs	r3, #0
 800f43a:	b298      	uxth	r0, r3
 800f43c:	3301      	adds	r3, #1
 800f43e:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800f442:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 800f446:	2900      	cmp	r1, #0
 800f448:	d1f7      	bne.n	800f43a <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 800f44a:	4770      	bx	lr
 800f44c:	4770      	bx	lr

0800f44e <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 800f44e:	b530      	push	{r4, r5, lr}
 800f450:	4604      	mov	r4, r0
 800f452:	b159      	cbz	r1, 800f46c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 800f454:	b148      	cbz	r0, 800f46a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800f456:	2300      	movs	r3, #0
 800f458:	b298      	uxth	r0, r3
 800f45a:	4282      	cmp	r2, r0
 800f45c:	d905      	bls.n	800f46a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800f45e:	5ccd      	ldrb	r5, [r1, r3]
 800f460:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 800f464:	3301      	adds	r3, #1
 800f466:	2d00      	cmp	r5, #0
 800f468:	d1f6      	bne.n	800f458 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 800f46a:	bd30      	pop	{r4, r5, pc}
 800f46c:	4608      	mov	r0, r1
 800f46e:	e7fc      	b.n	800f46a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0800f470 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 800f470:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f472:	b08b      	sub	sp, #44	; 0x2c
 800f474:	468c      	mov	ip, r1
 800f476:	2100      	movs	r1, #0
 800f478:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800f47c:	ae01      	add	r6, sp, #4
 800f47e:	211f      	movs	r1, #31
 800f480:	fbb0 f7f3 	udiv	r7, r0, r3
 800f484:	fb03 0517 	mls	r5, r3, r7, r0
 800f488:	b2ec      	uxtb	r4, r5
 800f48a:	2d09      	cmp	r5, #9
 800f48c:	bfd4      	ite	le
 800f48e:	3430      	addle	r4, #48	; 0x30
 800f490:	3457      	addgt	r4, #87	; 0x57
 800f492:	b2e4      	uxtb	r4, r4
 800f494:	558c      	strb	r4, [r1, r6]
 800f496:	4638      	mov	r0, r7
 800f498:	1e4c      	subs	r4, r1, #1
 800f49a:	b92f      	cbnz	r7, 800f4a8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 800f49c:	4431      	add	r1, r6
 800f49e:	4660      	mov	r0, ip
 800f4a0:	f7ff ffd5 	bl	800f44e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800f4a4:	b00b      	add	sp, #44	; 0x2c
 800f4a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f4a8:	4621      	mov	r1, r4
 800f4aa:	e7e9      	b.n	800f480 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

0800f4ac <_ZN8touchgfx7Unicode4itoaElPtti>:
 800f4ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f4ae:	4607      	mov	r7, r0
 800f4b0:	b08b      	sub	sp, #44	; 0x2c
 800f4b2:	4608      	mov	r0, r1
 800f4b4:	b341      	cbz	r1, 800f508 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 800f4b6:	1e99      	subs	r1, r3, #2
 800f4b8:	2922      	cmp	r1, #34	; 0x22
 800f4ba:	d825      	bhi.n	800f508 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 800f4bc:	2100      	movs	r1, #0
 800f4be:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800f4c2:	463c      	mov	r4, r7
 800f4c4:	261f      	movs	r6, #31
 800f4c6:	f10d 0c04 	add.w	ip, sp, #4
 800f4ca:	fb94 fef3 	sdiv	lr, r4, r3
 800f4ce:	fb03 441e 	mls	r4, r3, lr, r4
 800f4d2:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 800f4d6:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 800f4da:	b2ec      	uxtb	r4, r5
 800f4dc:	2d09      	cmp	r5, #9
 800f4de:	bfd4      	ite	le
 800f4e0:	3430      	addle	r4, #48	; 0x30
 800f4e2:	3457      	addgt	r4, #87	; 0x57
 800f4e4:	b2e4      	uxtb	r4, r4
 800f4e6:	f80c 4006 	strb.w	r4, [ip, r6]
 800f4ea:	4674      	mov	r4, lr
 800f4ec:	1e71      	subs	r1, r6, #1
 800f4ee:	b96c      	cbnz	r4, 800f50c <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 800f4f0:	2f00      	cmp	r7, #0
 800f4f2:	da05      	bge.n	800f500 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 800f4f4:	ab0a      	add	r3, sp, #40	; 0x28
 800f4f6:	4419      	add	r1, r3
 800f4f8:	232d      	movs	r3, #45	; 0x2d
 800f4fa:	f801 3c24 	strb.w	r3, [r1, #-36]
 800f4fe:	1eb1      	subs	r1, r6, #2
 800f500:	3101      	adds	r1, #1
 800f502:	4461      	add	r1, ip
 800f504:	f7ff ffa3 	bl	800f44e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800f508:	b00b      	add	sp, #44	; 0x2c
 800f50a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f50c:	460e      	mov	r6, r1
 800f50e:	e7dc      	b.n	800f4ca <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

0800f510 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 800f510:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f514:	4691      	mov	r9, r2
 800f516:	b085      	sub	sp, #20
 800f518:	6802      	ldr	r2, [r0, #0]
 800f51a:	9201      	str	r2, [sp, #4]
 800f51c:	4688      	mov	r8, r1
 800f51e:	4683      	mov	fp, r0
 800f520:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 800f524:	9103      	str	r1, [sp, #12]
 800f526:	4610      	mov	r0, r2
 800f528:	461c      	mov	r4, r3
 800f52a:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800f52e:	9302      	str	r3, [sp, #8]
 800f530:	f7ff ff80 	bl	800f434 <_ZN8touchgfx7Unicode6strlenEPKt>
 800f534:	f1b8 0f00 	cmp.w	r8, #0
 800f538:	bf0c      	ite	eq
 800f53a:	4684      	moveq	ip, r0
 800f53c:	f100 0c01 	addne.w	ip, r0, #1
 800f540:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 800f544:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 800f548:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800f54a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f54c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 800f550:	9903      	ldr	r1, [sp, #12]
 800f552:	fa1f fc8c 	uxth.w	ip, ip
 800f556:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800f55a:	d041      	beq.n	800f5e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 800f55c:	d834      	bhi.n	800f5c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 800f55e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 800f562:	d059      	beq.n	800f618 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 800f564:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 800f568:	d03a      	beq.n	800f5e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 800f56a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 800f56e:	d034      	beq.n	800f5da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 800f570:	2400      	movs	r4, #0
 800f572:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 800f576:	3a01      	subs	r2, #1
 800f578:	b169      	cbz	r1, 800f596 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f57a:	9911      	ldr	r1, [sp, #68]	; 0x44
 800f57c:	458c      	cmp	ip, r1
 800f57e:	da09      	bge.n	800f594 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 800f580:	eba1 010c 	sub.w	r1, r1, ip
 800f584:	b289      	uxth	r1, r1
 800f586:	b933      	cbnz	r3, 800f596 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f588:	2e00      	cmp	r6, #0
 800f58a:	d051      	beq.n	800f630 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 800f58c:	2800      	cmp	r0, #0
 800f58e:	d04f      	beq.n	800f630 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 800f590:	440c      	add	r4, r1
 800f592:	b2a4      	uxth	r4, r4
 800f594:	2100      	movs	r1, #0
 800f596:	682b      	ldr	r3, [r5, #0]
 800f598:	4293      	cmp	r3, r2
 800f59a:	da07      	bge.n	800f5ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 800f59c:	f1b8 0f00 	cmp.w	r8, #0
 800f5a0:	d004      	beq.n	800f5ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 800f5a2:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 800f5a6:	682b      	ldr	r3, [r5, #0]
 800f5a8:	3301      	adds	r3, #1
 800f5aa:	602b      	str	r3, [r5, #0]
 800f5ac:	2730      	movs	r7, #48	; 0x30
 800f5ae:	2c00      	cmp	r4, #0
 800f5b0:	d04e      	beq.n	800f650 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800f5b2:	682e      	ldr	r6, [r5, #0]
 800f5b4:	3c01      	subs	r4, #1
 800f5b6:	42b2      	cmp	r2, r6
 800f5b8:	b2a4      	uxth	r4, r4
 800f5ba:	dd49      	ble.n	800f650 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800f5bc:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 800f5c0:	682b      	ldr	r3, [r5, #0]
 800f5c2:	3301      	adds	r3, #1
 800f5c4:	602b      	str	r3, [r5, #0]
 800f5c6:	e7f2      	b.n	800f5ae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 800f5c8:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 800f5cc:	d01d      	beq.n	800f60a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 800f5ce:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 800f5d2:	d002      	beq.n	800f5da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 800f5d4:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 800f5d8:	e7c9      	b.n	800f56e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 800f5da:	4684      	mov	ip, r0
 800f5dc:	f04f 0800 	mov.w	r8, #0
 800f5e0:	2c00      	cmp	r4, #0
 800f5e2:	d0c6      	beq.n	800f572 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f5e4:	b947      	cbnz	r7, 800f5f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 800f5e6:	2801      	cmp	r0, #1
 800f5e8:	d106      	bne.n	800f5f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 800f5ea:	8814      	ldrh	r4, [r2, #0]
 800f5ec:	2c30      	cmp	r4, #48	; 0x30
 800f5ee:	bf02      	ittt	eq
 800f5f0:	3202      	addeq	r2, #2
 800f5f2:	f8cb 2000 	streq.w	r2, [fp]
 800f5f6:	4638      	moveq	r0, r7
 800f5f8:	45bc      	cmp	ip, r7
 800f5fa:	da14      	bge.n	800f626 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 800f5fc:	b2bf      	uxth	r7, r7
 800f5fe:	eba7 040c 	sub.w	r4, r7, ip
 800f602:	b2a4      	uxth	r4, r4
 800f604:	46bc      	mov	ip, r7
 800f606:	2600      	movs	r6, #0
 800f608:	e7b3      	b.n	800f572 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f60a:	4684      	mov	ip, r0
 800f60c:	b16c      	cbz	r4, 800f62a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 800f60e:	42b8      	cmp	r0, r7
 800f610:	dd00      	ble.n	800f614 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 800f612:	b2b8      	uxth	r0, r7
 800f614:	2400      	movs	r4, #0
 800f616:	e003      	b.n	800f620 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 800f618:	f04f 0c01 	mov.w	ip, #1
 800f61c:	2400      	movs	r4, #0
 800f61e:	4660      	mov	r0, ip
 800f620:	4626      	mov	r6, r4
 800f622:	46a0      	mov	r8, r4
 800f624:	e7a5      	b.n	800f572 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f626:	2400      	movs	r4, #0
 800f628:	e7ed      	b.n	800f606 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 800f62a:	4626      	mov	r6, r4
 800f62c:	46a0      	mov	r8, r4
 800f62e:	e7a0      	b.n	800f572 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 800f630:	2900      	cmp	r1, #0
 800f632:	d0b0      	beq.n	800f596 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f634:	2720      	movs	r7, #32
 800f636:	682e      	ldr	r6, [r5, #0]
 800f638:	2900      	cmp	r1, #0
 800f63a:	d0ac      	beq.n	800f596 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 800f63c:	3901      	subs	r1, #1
 800f63e:	4296      	cmp	r6, r2
 800f640:	b289      	uxth	r1, r1
 800f642:	daa7      	bge.n	800f594 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 800f644:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 800f648:	682b      	ldr	r3, [r5, #0]
 800f64a:	3301      	adds	r3, #1
 800f64c:	602b      	str	r3, [r5, #0]
 800f64e:	e7f2      	b.n	800f636 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 800f650:	b188      	cbz	r0, 800f676 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 800f652:	682b      	ldr	r3, [r5, #0]
 800f654:	3801      	subs	r0, #1
 800f656:	429a      	cmp	r2, r3
 800f658:	b280      	uxth	r0, r0
 800f65a:	dd0c      	ble.n	800f676 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 800f65c:	f8db 3000 	ldr.w	r3, [fp]
 800f660:	1c9c      	adds	r4, r3, #2
 800f662:	f8cb 4000 	str.w	r4, [fp]
 800f666:	881c      	ldrh	r4, [r3, #0]
 800f668:	682b      	ldr	r3, [r5, #0]
 800f66a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 800f66e:	682b      	ldr	r3, [r5, #0]
 800f670:	3301      	adds	r3, #1
 800f672:	602b      	str	r3, [r5, #0]
 800f674:	e7ec      	b.n	800f650 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 800f676:	2620      	movs	r6, #32
 800f678:	b151      	cbz	r1, 800f690 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 800f67a:	6828      	ldr	r0, [r5, #0]
 800f67c:	3901      	subs	r1, #1
 800f67e:	4282      	cmp	r2, r0
 800f680:	b289      	uxth	r1, r1
 800f682:	dd05      	ble.n	800f690 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 800f684:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 800f688:	682b      	ldr	r3, [r5, #0]
 800f68a:	3301      	adds	r3, #1
 800f68c:	602b      	str	r3, [r5, #0]
 800f68e:	e7f3      	b.n	800f678 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 800f690:	b005      	add	sp, #20
 800f692:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f696 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 800f696:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f69a:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 800f69e:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 800f6a2:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 800f6a6:	2400      	movs	r4, #0
 800f6a8:	8014      	strh	r4, [r2, #0]
 800f6aa:	701c      	strb	r4, [r3, #0]
 800f6ac:	f888 4000 	strb.w	r4, [r8]
 800f6b0:	f88c 4000 	strb.w	r4, [ip]
 800f6b4:	f88e 4000 	strb.w	r4, [lr]
 800f6b8:	703c      	strb	r4, [r7, #0]
 800f6ba:	6804      	ldr	r4, [r0, #0]
 800f6bc:	b1a4      	cbz	r4, 800f6e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 800f6be:	8824      	ldrh	r4, [r4, #0]
 800f6c0:	f04f 0901 	mov.w	r9, #1
 800f6c4:	b314      	cbz	r4, 800f70c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f6c6:	2c2b      	cmp	r4, #43	; 0x2b
 800f6c8:	d001      	beq.n	800f6ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 800f6ca:	2c20      	cmp	r4, #32
 800f6cc:	d110      	bne.n	800f6f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 800f6ce:	8014      	strh	r4, [r2, #0]
 800f6d0:	6804      	ldr	r4, [r0, #0]
 800f6d2:	b10c      	cbz	r4, 800f6d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 800f6d4:	3402      	adds	r4, #2
 800f6d6:	6004      	str	r4, [r0, #0]
 800f6d8:	680c      	ldr	r4, [r1, #0]
 800f6da:	b10c      	cbz	r4, 800f6e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 800f6dc:	3401      	adds	r4, #1
 800f6de:	600c      	str	r4, [r1, #0]
 800f6e0:	6804      	ldr	r4, [r0, #0]
 800f6e2:	b17c      	cbz	r4, 800f704 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 800f6e4:	8824      	ldrh	r4, [r4, #0]
 800f6e6:	e7ed      	b.n	800f6c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 800f6e8:	680c      	ldr	r4, [r1, #0]
 800f6ea:	b17c      	cbz	r4, 800f70c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f6ec:	7824      	ldrb	r4, [r4, #0]
 800f6ee:	e7e7      	b.n	800f6c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 800f6f0:	2c2d      	cmp	r4, #45	; 0x2d
 800f6f2:	d102      	bne.n	800f6fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 800f6f4:	f883 9000 	strb.w	r9, [r3]
 800f6f8:	e7ea      	b.n	800f6d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 800f6fa:	2c23      	cmp	r4, #35	; 0x23
 800f6fc:	d107      	bne.n	800f70e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 800f6fe:	f888 9000 	strb.w	r9, [r8]
 800f702:	e7e5      	b.n	800f6d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 800f704:	680c      	ldr	r4, [r1, #0]
 800f706:	b10c      	cbz	r4, 800f70c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 800f708:	7824      	ldrb	r4, [r4, #0]
 800f70a:	e7db      	b.n	800f6c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 800f70c:	2400      	movs	r4, #0
 800f70e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 800f712:	2b09      	cmp	r3, #9
 800f714:	d901      	bls.n	800f71a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 800f716:	2c2a      	cmp	r4, #42	; 0x2a
 800f718:	d122      	bne.n	800f760 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f71a:	2301      	movs	r3, #1
 800f71c:	2c30      	cmp	r4, #48	; 0x30
 800f71e:	f88e 3000 	strb.w	r3, [lr]
 800f722:	d10d      	bne.n	800f740 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 800f724:	f88c 3000 	strb.w	r3, [ip]
 800f728:	6803      	ldr	r3, [r0, #0]
 800f72a:	b10b      	cbz	r3, 800f730 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 800f72c:	3302      	adds	r3, #2
 800f72e:	6003      	str	r3, [r0, #0]
 800f730:	680b      	ldr	r3, [r1, #0]
 800f732:	b10b      	cbz	r3, 800f738 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 800f734:	3301      	adds	r3, #1
 800f736:	600b      	str	r3, [r1, #0]
 800f738:	6803      	ldr	r3, [r0, #0]
 800f73a:	2b00      	cmp	r3, #0
 800f73c:	d02f      	beq.n	800f79e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 800f73e:	881c      	ldrh	r4, [r3, #0]
 800f740:	2c2a      	cmp	r4, #42	; 0x2a
 800f742:	d135      	bne.n	800f7b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800f744:	f04f 33ff 	mov.w	r3, #4294967295
 800f748:	6033      	str	r3, [r6, #0]
 800f74a:	6803      	ldr	r3, [r0, #0]
 800f74c:	b10b      	cbz	r3, 800f752 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 800f74e:	3302      	adds	r3, #2
 800f750:	6003      	str	r3, [r0, #0]
 800f752:	680b      	ldr	r3, [r1, #0]
 800f754:	b10b      	cbz	r3, 800f75a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 800f756:	3301      	adds	r3, #1
 800f758:	600b      	str	r3, [r1, #0]
 800f75a:	6803      	ldr	r3, [r0, #0]
 800f75c:	b31b      	cbz	r3, 800f7a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 800f75e:	881c      	ldrh	r4, [r3, #0]
 800f760:	2c2e      	cmp	r4, #46	; 0x2e
 800f762:	d11a      	bne.n	800f79a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f764:	2301      	movs	r3, #1
 800f766:	703b      	strb	r3, [r7, #0]
 800f768:	6803      	ldr	r3, [r0, #0]
 800f76a:	b10b      	cbz	r3, 800f770 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 800f76c:	3302      	adds	r3, #2
 800f76e:	6003      	str	r3, [r0, #0]
 800f770:	680b      	ldr	r3, [r1, #0]
 800f772:	b10b      	cbz	r3, 800f778 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 800f774:	3301      	adds	r3, #1
 800f776:	600b      	str	r3, [r1, #0]
 800f778:	6803      	ldr	r3, [r0, #0]
 800f77a:	2b00      	cmp	r3, #0
 800f77c:	d036      	beq.n	800f7ec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 800f77e:	881b      	ldrh	r3, [r3, #0]
 800f780:	2b2a      	cmp	r3, #42	; 0x2a
 800f782:	d137      	bne.n	800f7f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 800f784:	f04f 33ff 	mov.w	r3, #4294967295
 800f788:	602b      	str	r3, [r5, #0]
 800f78a:	6803      	ldr	r3, [r0, #0]
 800f78c:	b10b      	cbz	r3, 800f792 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 800f78e:	3302      	adds	r3, #2
 800f790:	6003      	str	r3, [r0, #0]
 800f792:	680b      	ldr	r3, [r1, #0]
 800f794:	b10b      	cbz	r3, 800f79a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f796:	3301      	adds	r3, #1
 800f798:	600b      	str	r3, [r1, #0]
 800f79a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f79e:	680c      	ldr	r4, [r1, #0]
 800f7a0:	b134      	cbz	r4, 800f7b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 800f7a2:	7824      	ldrb	r4, [r4, #0]
 800f7a4:	e7cc      	b.n	800f740 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 800f7a6:	680b      	ldr	r3, [r1, #0]
 800f7a8:	2b00      	cmp	r3, #0
 800f7aa:	d0f6      	beq.n	800f79a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 800f7ac:	781c      	ldrb	r4, [r3, #0]
 800f7ae:	e7d7      	b.n	800f760 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f7b0:	2300      	movs	r3, #0
 800f7b2:	6033      	str	r3, [r6, #0]
 800f7b4:	220a      	movs	r2, #10
 800f7b6:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 800f7ba:	fa1f f38c 	uxth.w	r3, ip
 800f7be:	2b09      	cmp	r3, #9
 800f7c0:	d8ce      	bhi.n	800f760 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 800f7c2:	6833      	ldr	r3, [r6, #0]
 800f7c4:	fb02 c303 	mla	r3, r2, r3, ip
 800f7c8:	6033      	str	r3, [r6, #0]
 800f7ca:	6803      	ldr	r3, [r0, #0]
 800f7cc:	b10b      	cbz	r3, 800f7d2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 800f7ce:	3302      	adds	r3, #2
 800f7d0:	6003      	str	r3, [r0, #0]
 800f7d2:	680b      	ldr	r3, [r1, #0]
 800f7d4:	b10b      	cbz	r3, 800f7da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 800f7d6:	3301      	adds	r3, #1
 800f7d8:	600b      	str	r3, [r1, #0]
 800f7da:	6803      	ldr	r3, [r0, #0]
 800f7dc:	b10b      	cbz	r3, 800f7e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 800f7de:	881c      	ldrh	r4, [r3, #0]
 800f7e0:	e7e9      	b.n	800f7b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f7e2:	680c      	ldr	r4, [r1, #0]
 800f7e4:	2c00      	cmp	r4, #0
 800f7e6:	d0e6      	beq.n	800f7b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f7e8:	7824      	ldrb	r4, [r4, #0]
 800f7ea:	e7e4      	b.n	800f7b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 800f7ec:	680b      	ldr	r3, [r1, #0]
 800f7ee:	b10b      	cbz	r3, 800f7f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 800f7f0:	781b      	ldrb	r3, [r3, #0]
 800f7f2:	e7c5      	b.n	800f780 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 800f7f4:	2200      	movs	r2, #0
 800f7f6:	602a      	str	r2, [r5, #0]
 800f7f8:	240a      	movs	r4, #10
 800f7fa:	3b30      	subs	r3, #48	; 0x30
 800f7fc:	b29e      	uxth	r6, r3
 800f7fe:	2e09      	cmp	r6, #9
 800f800:	682a      	ldr	r2, [r5, #0]
 800f802:	d813      	bhi.n	800f82c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 800f804:	fb04 3302 	mla	r3, r4, r2, r3
 800f808:	602b      	str	r3, [r5, #0]
 800f80a:	6803      	ldr	r3, [r0, #0]
 800f80c:	b10b      	cbz	r3, 800f812 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 800f80e:	3302      	adds	r3, #2
 800f810:	6003      	str	r3, [r0, #0]
 800f812:	680b      	ldr	r3, [r1, #0]
 800f814:	b10b      	cbz	r3, 800f81a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 800f816:	3301      	adds	r3, #1
 800f818:	600b      	str	r3, [r1, #0]
 800f81a:	6803      	ldr	r3, [r0, #0]
 800f81c:	b10b      	cbz	r3, 800f822 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 800f81e:	881b      	ldrh	r3, [r3, #0]
 800f820:	e7eb      	b.n	800f7fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800f822:	680b      	ldr	r3, [r1, #0]
 800f824:	2b00      	cmp	r3, #0
 800f826:	d0e8      	beq.n	800f7fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800f828:	781b      	ldrb	r3, [r3, #0]
 800f82a:	e7e6      	b.n	800f7fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 800f82c:	2a06      	cmp	r2, #6
 800f82e:	bfa8      	it	ge
 800f830:	2206      	movge	r2, #6
 800f832:	602a      	str	r2, [r5, #0]
 800f834:	e7b1      	b.n	800f79a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0800f836 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 800f836:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f83a:	b0a3      	sub	sp, #140	; 0x8c
 800f83c:	2600      	movs	r6, #0
 800f83e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 800f842:	4607      	mov	r7, r0
 800f844:	4688      	mov	r8, r1
 800f846:	e9cd 3208 	strd	r3, r2, [sp, #32]
 800f84a:	4631      	mov	r1, r6
 800f84c:	2242      	movs	r2, #66	; 0x42
 800f84e:	4648      	mov	r0, r9
 800f850:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 800f852:	960d      	str	r6, [sp, #52]	; 0x34
 800f854:	f00c f8ce 	bl	801b9f4 <memset>
 800f858:	b15f      	cbz	r7, 800f872 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 800f85a:	f108 3aff 	add.w	sl, r8, #4294967295
 800f85e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f860:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f862:	b152      	cbz	r2, 800f87a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 800f864:	8812      	ldrh	r2, [r2, #0]
 800f866:	b10a      	cbz	r2, 800f86c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 800f868:	459a      	cmp	sl, r3
 800f86a:	dc2e      	bgt.n	800f8ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 800f86c:	2200      	movs	r2, #0
 800f86e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 800f872:	4638      	mov	r0, r7
 800f874:	b023      	add	sp, #140	; 0x8c
 800f876:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f87a:	9a08      	ldr	r2, [sp, #32]
 800f87c:	2a00      	cmp	r2, #0
 800f87e:	d0f5      	beq.n	800f86c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 800f880:	7812      	ldrb	r2, [r2, #0]
 800f882:	e7f0      	b.n	800f866 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 800f884:	2d00      	cmp	r5, #0
 800f886:	d0ea      	beq.n	800f85e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f888:	782a      	ldrb	r2, [r5, #0]
 800f88a:	b142      	cbz	r2, 800f89e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 800f88c:	2a25      	cmp	r2, #37	; 0x25
 800f88e:	d001      	beq.n	800f894 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 800f890:	459a      	cmp	sl, r3
 800f892:	dc08      	bgt.n	800f8a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 800f894:	f1bb 0f00 	cmp.w	fp, #0
 800f898:	d121      	bne.n	800f8de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 800f89a:	2d00      	cmp	r5, #0
 800f89c:	d0df      	beq.n	800f85e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f89e:	782a      	ldrb	r2, [r5, #0]
 800f8a0:	f04f 0b00 	mov.w	fp, #0
 800f8a4:	e01d      	b.n	800f8e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 800f8a6:	f1bb 0f00 	cmp.w	fp, #0
 800f8aa:	d078      	beq.n	800f99e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 800f8ac:	f8bb 2000 	ldrh.w	r2, [fp]
 800f8b0:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 800f8b4:	f1bb 0f00 	cmp.w	fp, #0
 800f8b8:	d002      	beq.n	800f8c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 800f8ba:	f10b 0202 	add.w	r2, fp, #2
 800f8be:	9209      	str	r2, [sp, #36]	; 0x24
 800f8c0:	b10d      	cbz	r5, 800f8c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 800f8c2:	3501      	adds	r5, #1
 800f8c4:	9508      	str	r5, [sp, #32]
 800f8c6:	3301      	adds	r3, #1
 800f8c8:	930d      	str	r3, [sp, #52]	; 0x34
 800f8ca:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 800f8ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f8d0:	f1bb 0f00 	cmp.w	fp, #0
 800f8d4:	d0d6      	beq.n	800f884 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 800f8d6:	f8bb 2000 	ldrh.w	r2, [fp]
 800f8da:	2a00      	cmp	r2, #0
 800f8dc:	d1d6      	bne.n	800f88c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 800f8de:	f8bb 2000 	ldrh.w	r2, [fp]
 800f8e2:	2a00      	cmp	r2, #0
 800f8e4:	d0bb      	beq.n	800f85e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f8e6:	459a      	cmp	sl, r3
 800f8e8:	ddb9      	ble.n	800f85e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800f8ea:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 800f8ee:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 800f8f2:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 800f8f6:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 800f8fa:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 800f8fe:	960e      	str	r6, [sp, #56]	; 0x38
 800f900:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 800f904:	960f      	str	r6, [sp, #60]	; 0x3c
 800f906:	f1bb 0f00 	cmp.w	fp, #0
 800f90a:	d002      	beq.n	800f912 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 800f90c:	f10b 0302 	add.w	r3, fp, #2
 800f910:	9309      	str	r3, [sp, #36]	; 0x24
 800f912:	b10d      	cbz	r5, 800f918 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 800f914:	1c6b      	adds	r3, r5, #1
 800f916:	9308      	str	r3, [sp, #32]
 800f918:	ab0f      	add	r3, sp, #60	; 0x3c
 800f91a:	9305      	str	r3, [sp, #20]
 800f91c:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 800f920:	9304      	str	r3, [sp, #16]
 800f922:	ab0e      	add	r3, sp, #56	; 0x38
 800f924:	9303      	str	r3, [sp, #12]
 800f926:	ab0c      	add	r3, sp, #48	; 0x30
 800f928:	9302      	str	r3, [sp, #8]
 800f92a:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 800f92e:	9301      	str	r3, [sp, #4]
 800f930:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 800f934:	9300      	str	r3, [sp, #0]
 800f936:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 800f93a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 800f93e:	a908      	add	r1, sp, #32
 800f940:	a809      	add	r0, sp, #36	; 0x24
 800f942:	f7ff fea8 	bl	800f696 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 800f946:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f948:	2b00      	cmp	r3, #0
 800f94a:	bfbe      	ittt	lt
 800f94c:	6823      	ldrlt	r3, [r4, #0]
 800f94e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800f952:	930e      	strlt	r3, [sp, #56]	; 0x38
 800f954:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f956:	bfb8      	it	lt
 800f958:	3404      	addlt	r4, #4
 800f95a:	2b00      	cmp	r3, #0
 800f95c:	bfb8      	it	lt
 800f95e:	6823      	ldrlt	r3, [r4, #0]
 800f960:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 800f964:	bfbe      	ittt	lt
 800f966:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800f96a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 800f96c:	3404      	addlt	r4, #4
 800f96e:	b1d9      	cbz	r1, 800f9a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 800f970:	880b      	ldrh	r3, [r1, #0]
 800f972:	2b69      	cmp	r3, #105	; 0x69
 800f974:	d01f      	beq.n	800f9b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f976:	d82f      	bhi.n	800f9d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 800f978:	2b58      	cmp	r3, #88	; 0x58
 800f97a:	d01c      	beq.n	800f9b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f97c:	d818      	bhi.n	800f9b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 800f97e:	2b25      	cmp	r3, #37	; 0x25
 800f980:	d034      	beq.n	800f9ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 800f982:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 800f986:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f988:	f1bb 0f00 	cmp.w	fp, #0
 800f98c:	f000 80b8 	beq.w	800fb00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 800f990:	f8bb 5000 	ldrh.w	r5, [fp]
 800f994:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 800f998:	3301      	adds	r3, #1
 800f99a:	930d      	str	r3, [sp, #52]	; 0x34
 800f99c:	e029      	b.n	800f9f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 800f99e:	b10d      	cbz	r5, 800f9a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 800f9a0:	782a      	ldrb	r2, [r5, #0]
 800f9a2:	e785      	b.n	800f8b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 800f9a4:	462a      	mov	r2, r5
 800f9a6:	e783      	b.n	800f8b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 800f9a8:	2a00      	cmp	r2, #0
 800f9aa:	d0ea      	beq.n	800f982 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800f9ac:	7813      	ldrb	r3, [r2, #0]
 800f9ae:	e7e0      	b.n	800f972 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 800f9b0:	3b63      	subs	r3, #99	; 0x63
 800f9b2:	2b01      	cmp	r3, #1
 800f9b4:	d8e5      	bhi.n	800f982 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800f9b6:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 800f9ba:	b329      	cbz	r1, 800fa08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 800f9bc:	880b      	ldrh	r3, [r1, #0]
 800f9be:	2b69      	cmp	r3, #105	; 0x69
 800f9c0:	d063      	beq.n	800fa8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 800f9c2:	d825      	bhi.n	800fa10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 800f9c4:	2b63      	cmp	r3, #99	; 0x63
 800f9c6:	d038      	beq.n	800fa3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 800f9c8:	2b64      	cmp	r3, #100	; 0x64
 800f9ca:	d05e      	beq.n	800fa8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 800f9cc:	2b58      	cmp	r3, #88	; 0x58
 800f9ce:	d07b      	beq.n	800fac8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 800f9d0:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 800f9d4:	4625      	mov	r5, r4
 800f9d6:	e036      	b.n	800fa46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800f9d8:	2b73      	cmp	r3, #115	; 0x73
 800f9da:	d0ec      	beq.n	800f9b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f9dc:	d802      	bhi.n	800f9e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 800f9de:	2b6f      	cmp	r3, #111	; 0x6f
 800f9e0:	d1cf      	bne.n	800f982 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 800f9e2:	e7e8      	b.n	800f9b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f9e4:	2b75      	cmp	r3, #117	; 0x75
 800f9e6:	d0e6      	beq.n	800f9b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 800f9e8:	2b78      	cmp	r3, #120	; 0x78
 800f9ea:	e7f9      	b.n	800f9e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 800f9ec:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f9ee:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 800f9f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f9f4:	b10b      	cbz	r3, 800f9fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 800f9f6:	3302      	adds	r3, #2
 800f9f8:	9309      	str	r3, [sp, #36]	; 0x24
 800f9fa:	9b08      	ldr	r3, [sp, #32]
 800f9fc:	2b00      	cmp	r3, #0
 800f9fe:	f43f af2e 	beq.w	800f85e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800fa02:	3301      	adds	r3, #1
 800fa04:	9308      	str	r3, [sp, #32]
 800fa06:	e72a      	b.n	800f85e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 800fa08:	2a00      	cmp	r2, #0
 800fa0a:	d0e1      	beq.n	800f9d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800fa0c:	7813      	ldrb	r3, [r2, #0]
 800fa0e:	e7d6      	b.n	800f9be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 800fa10:	2b73      	cmp	r3, #115	; 0x73
 800fa12:	d036      	beq.n	800fa82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 800fa14:	d807      	bhi.n	800fa26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 800fa16:	2b6f      	cmp	r3, #111	; 0x6f
 800fa18:	d1da      	bne.n	800f9d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800fa1a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800fa1c:	1d25      	adds	r5, r4, #4
 800fa1e:	eba8 0202 	sub.w	r2, r8, r2
 800fa22:	2308      	movs	r3, #8
 800fa24:	e04a      	b.n	800fabc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 800fa26:	2b75      	cmp	r3, #117	; 0x75
 800fa28:	d043      	beq.n	800fab2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 800fa2a:	2b78      	cmp	r3, #120	; 0x78
 800fa2c:	d1d0      	bne.n	800f9d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 800fa2e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800fa30:	1d25      	adds	r5, r4, #4
 800fa32:	eba8 0202 	sub.w	r2, r8, r2
 800fa36:	2310      	movs	r3, #16
 800fa38:	e040      	b.n	800fabc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 800fa3a:	6823      	ldr	r3, [r4, #0]
 800fa3c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 800fa40:	1d25      	adds	r5, r4, #4
 800fa42:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 800fa46:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fa48:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 800fa4c:	2b00      	cmp	r3, #0
 800fa4e:	d052      	beq.n	800faf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 800fa50:	881a      	ldrh	r2, [r3, #0]
 800fa52:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 800fa56:	a80d      	add	r0, sp, #52	; 0x34
 800fa58:	9005      	str	r0, [sp, #20]
 800fa5a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 800fa5e:	9004      	str	r0, [sp, #16]
 800fa60:	980e      	ldr	r0, [sp, #56]	; 0x38
 800fa62:	9003      	str	r0, [sp, #12]
 800fa64:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 800fa68:	9002      	str	r0, [sp, #8]
 800fa6a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800fa6c:	9001      	str	r0, [sp, #4]
 800fa6e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 800fa72:	9000      	str	r0, [sp, #0]
 800fa74:	e9cd 8706 	strd	r8, r7, [sp, #24]
 800fa78:	a810      	add	r0, sp, #64	; 0x40
 800fa7a:	f7ff fd49 	bl	800f510 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 800fa7e:	462c      	mov	r4, r5
 800fa80:	e7b7      	b.n	800f9f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 800fa82:	6823      	ldr	r3, [r4, #0]
 800fa84:	1d25      	adds	r5, r4, #4
 800fa86:	9310      	str	r3, [sp, #64]	; 0x40
 800fa88:	e7dd      	b.n	800fa46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800fa8a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800fa8c:	6820      	ldr	r0, [r4, #0]
 800fa8e:	eba8 0202 	sub.w	r2, r8, r2
 800fa92:	230a      	movs	r3, #10
 800fa94:	b292      	uxth	r2, r2
 800fa96:	4649      	mov	r1, r9
 800fa98:	f7ff fd08 	bl	800f4ac <_ZN8touchgfx7Unicode4itoaElPtti>
 800fa9c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800faa0:	2b2d      	cmp	r3, #45	; 0x2d
 800faa2:	f104 0504 	add.w	r5, r4, #4
 800faa6:	d1ce      	bne.n	800fa46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800faa8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800faac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800faae:	3302      	adds	r3, #2
 800fab0:	e7e9      	b.n	800fa86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 800fab2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800fab4:	1d25      	adds	r5, r4, #4
 800fab6:	eba8 0202 	sub.w	r2, r8, r2
 800faba:	230a      	movs	r3, #10
 800fabc:	b292      	uxth	r2, r2
 800fabe:	4649      	mov	r1, r9
 800fac0:	6820      	ldr	r0, [r4, #0]
 800fac2:	f7ff fcd5 	bl	800f470 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 800fac6:	e7be      	b.n	800fa46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800fac8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800faca:	6820      	ldr	r0, [r4, #0]
 800facc:	eba8 0202 	sub.w	r2, r8, r2
 800fad0:	b292      	uxth	r2, r2
 800fad2:	2310      	movs	r3, #16
 800fad4:	4649      	mov	r1, r9
 800fad6:	f7ff fccb 	bl	800f470 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 800fada:	1d25      	adds	r5, r4, #4
 800fadc:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 800fae0:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 800fae4:	2b00      	cmp	r3, #0
 800fae6:	d0ae      	beq.n	800fa46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 800fae8:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 800faec:	2919      	cmp	r1, #25
 800faee:	d8f7      	bhi.n	800fae0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 800faf0:	3b20      	subs	r3, #32
 800faf2:	8013      	strh	r3, [r2, #0]
 800faf4:	e7f4      	b.n	800fae0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 800faf6:	9a08      	ldr	r2, [sp, #32]
 800faf8:	2a00      	cmp	r2, #0
 800fafa:	d0aa      	beq.n	800fa52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800fafc:	7812      	ldrb	r2, [r2, #0]
 800fafe:	e7a8      	b.n	800fa52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 800fb00:	2d00      	cmp	r5, #0
 800fb02:	f43f af47 	beq.w	800f994 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 800fb06:	782d      	ldrb	r5, [r5, #0]
 800fb08:	e744      	b.n	800f994 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0800fb0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 800fb0a:	b507      	push	{r0, r1, r2, lr}
 800fb0c:	9300      	str	r3, [sp, #0]
 800fb0e:	4613      	mov	r3, r2
 800fb10:	2200      	movs	r2, #0
 800fb12:	f7ff fe90 	bl	800f836 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 800fb16:	b003      	add	sp, #12
 800fb18:	f85d fb04 	ldr.w	pc, [sp], #4

0800fb1c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 800fb1c:	b40c      	push	{r2, r3}
 800fb1e:	b507      	push	{r0, r1, r2, lr}
 800fb20:	ab04      	add	r3, sp, #16
 800fb22:	f853 2b04 	ldr.w	r2, [r3], #4
 800fb26:	9301      	str	r3, [sp, #4]
 800fb28:	f7ff ffef 	bl	800fb0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 800fb2c:	b003      	add	sp, #12
 800fb2e:	f85d eb04 	ldr.w	lr, [sp], #4
 800fb32:	b002      	add	sp, #8
 800fb34:	4770      	bx	lr
	...

0800fb38 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800fb38:	4b01      	ldr	r3, [pc, #4]	; (800fb40 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800fb3a:	6018      	str	r0, [r3, #0]
 800fb3c:	4770      	bx	lr
 800fb3e:	bf00      	nop
 800fb40:	200126d0 	.word	0x200126d0

0800fb44 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 800fb44:	4b06      	ldr	r3, [pc, #24]	; (800fb60 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 800fb46:	881a      	ldrh	r2, [r3, #0]
 800fb48:	4282      	cmp	r2, r0
 800fb4a:	d807      	bhi.n	800fb5c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 800fb4c:	4b05      	ldr	r3, [pc, #20]	; (800fb64 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 800fb4e:	881b      	ldrh	r3, [r3, #0]
 800fb50:	4413      	add	r3, r2
 800fb52:	4298      	cmp	r0, r3
 800fb54:	bfac      	ite	ge
 800fb56:	2000      	movge	r0, #0
 800fb58:	2001      	movlt	r0, #1
 800fb5a:	4770      	bx	lr
 800fb5c:	2000      	movs	r0, #0
 800fb5e:	4770      	bx	lr
 800fb60:	200126f0 	.word	0x200126f0
 800fb64:	200126f4 	.word	0x200126f4

0800fb68 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800fb68:	b508      	push	{r3, lr}
 800fb6a:	4601      	mov	r1, r0
 800fb6c:	f7ff ffea 	bl	800fb44 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 800fb70:	b118      	cbz	r0, 800fb7a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 800fb72:	4b02      	ldr	r3, [pc, #8]	; (800fb7c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 800fb74:	681b      	ldr	r3, [r3, #0]
 800fb76:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800fb7a:	bd08      	pop	{r3, pc}
 800fb7c:	200126d4 	.word	0x200126d4

0800fb80 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800fb80:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fb82:	4c24      	ldr	r4, [pc, #144]	; (800fc14 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 800fb84:	6823      	ldr	r3, [r4, #0]
 800fb86:	2b00      	cmp	r3, #0
 800fb88:	d042      	beq.n	800fc10 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 800fb8a:	4a23      	ldr	r2, [pc, #140]	; (800fc18 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 800fb8c:	4d23      	ldr	r5, [pc, #140]	; (800fc1c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 800fb8e:	8811      	ldrh	r1, [r2, #0]
 800fb90:	f8b5 c000 	ldrh.w	ip, [r5]
 800fb94:	4822      	ldr	r0, [pc, #136]	; (800fc20 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 800fb96:	4461      	add	r1, ip
 800fb98:	1c4a      	adds	r2, r1, #1
 800fb9a:	f022 0201 	bic.w	r2, r2, #1
 800fb9e:	008f      	lsls	r7, r1, #2
 800fba0:	0412      	lsls	r2, r2, #16
 800fba2:	19de      	adds	r6, r3, r7
 800fba4:	0c12      	lsrs	r2, r2, #16
 800fba6:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 800fbaa:	6006      	str	r6, [r0, #0]
 800fbac:	4e1d      	ldr	r6, [pc, #116]	; (800fc24 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 800fbae:	19da      	adds	r2, r3, r7
 800fbb0:	6032      	str	r2, [r6, #0]
 800fbb2:	220e      	movs	r2, #14
 800fbb4:	fb02 f20c 	mul.w	r2, r2, ip
 800fbb8:	3203      	adds	r2, #3
 800fbba:	f022 0203 	bic.w	r2, r2, #3
 800fbbe:	443a      	add	r2, r7
 800fbc0:	4f19      	ldr	r7, [pc, #100]	; (800fc28 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800fbc2:	4413      	add	r3, r2
 800fbc4:	603b      	str	r3, [r7, #0]
 800fbc6:	4f19      	ldr	r7, [pc, #100]	; (800fc2c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800fbc8:	2300      	movs	r3, #0
 800fbca:	803b      	strh	r3, [r7, #0]
 800fbcc:	4f18      	ldr	r7, [pc, #96]	; (800fc30 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800fbce:	683f      	ldr	r7, [r7, #0]
 800fbd0:	1aba      	subs	r2, r7, r2
 800fbd2:	4f18      	ldr	r7, [pc, #96]	; (800fc34 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800fbd4:	603a      	str	r2, [r7, #0]
 800fbd6:	4a18      	ldr	r2, [pc, #96]	; (800fc38 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800fbd8:	469c      	mov	ip, r3
 800fbda:	8013      	strh	r3, [r2, #0]
 800fbdc:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800fbe0:	428b      	cmp	r3, r1
 800fbe2:	d10d      	bne.n	800fc00 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 800fbe4:	882d      	ldrh	r5, [r5, #0]
 800fbe6:	6830      	ldr	r0, [r6, #0]
 800fbe8:	2300      	movs	r3, #0
 800fbea:	240e      	movs	r4, #14
 800fbec:	429d      	cmp	r5, r3
 800fbee:	d90f      	bls.n	800fc10 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 800fbf0:	fb04 0203 	mla	r2, r4, r3, r0
 800fbf4:	3301      	adds	r3, #1
 800fbf6:	7b11      	ldrb	r1, [r2, #12]
 800fbf8:	f36f 1145 	bfc	r1, #5, #1
 800fbfc:	7311      	strb	r1, [r2, #12]
 800fbfe:	e7f5      	b.n	800fbec <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 800fc00:	6822      	ldr	r2, [r4, #0]
 800fc02:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800fc06:	6802      	ldr	r2, [r0, #0]
 800fc08:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 800fc0c:	3301      	adds	r3, #1
 800fc0e:	e7e7      	b.n	800fbe0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 800fc10:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fc12:	bf00      	nop
 800fc14:	200126d4 	.word	0x200126d4
 800fc18:	200126f0 	.word	0x200126f0
 800fc1c:	200126f4 	.word	0x200126f4
 800fc20:	200126e8 	.word	0x200126e8
 800fc24:	200126d8 	.word	0x200126d8
 800fc28:	200126e0 	.word	0x200126e0
 800fc2c:	200126f2 	.word	0x200126f2
 800fc30:	200126dc 	.word	0x200126dc
 800fc34:	200126ec 	.word	0x200126ec
 800fc38:	200126e4 	.word	0x200126e4

0800fc3c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800fc3c:	4b06      	ldr	r3, [pc, #24]	; (800fc58 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 800fc3e:	681b      	ldr	r3, [r3, #0]
 800fc40:	b943      	cbnz	r3, 800fc54 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 800fc42:	b139      	cbz	r1, 800fc54 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 800fc44:	4b05      	ldr	r3, [pc, #20]	; (800fc5c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 800fc46:	801a      	strh	r2, [r3, #0]
 800fc48:	4b05      	ldr	r3, [pc, #20]	; (800fc60 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 800fc4a:	6019      	str	r1, [r3, #0]
 800fc4c:	4b05      	ldr	r3, [pc, #20]	; (800fc64 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 800fc4e:	6018      	str	r0, [r3, #0]
 800fc50:	f7ff bf96 	b.w	800fb80 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800fc54:	4770      	bx	lr
 800fc56:	bf00      	nop
 800fc58:	200126e0 	.word	0x200126e0
 800fc5c:	200126f4 	.word	0x200126f4
 800fc60:	200126dc 	.word	0x200126dc
 800fc64:	200126d4 	.word	0x200126d4

0800fc68 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800fc68:	b470      	push	{r4, r5, r6}
 800fc6a:	4c07      	ldr	r4, [pc, #28]	; (800fc88 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800fc6c:	6826      	ldr	r6, [r4, #0]
 800fc6e:	4605      	mov	r5, r0
 800fc70:	4610      	mov	r0, r2
 800fc72:	9a03      	ldr	r2, [sp, #12]
 800fc74:	b936      	cbnz	r6, 800fc84 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800fc76:	6025      	str	r5, [r4, #0]
 800fc78:	4c04      	ldr	r4, [pc, #16]	; (800fc8c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800fc7a:	8021      	strh	r1, [r4, #0]
 800fc7c:	bc70      	pop	{r4, r5, r6}
 800fc7e:	4619      	mov	r1, r3
 800fc80:	f7ff bfdc 	b.w	800fc3c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800fc84:	bc70      	pop	{r4, r5, r6}
 800fc86:	4770      	bx	lr
 800fc88:	200126f8 	.word	0x200126f8
 800fc8c:	200126f0 	.word	0x200126f0

0800fc90 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800fc90:	4a12      	ldr	r2, [pc, #72]	; (800fcdc <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 800fc92:	8803      	ldrh	r3, [r0, #0]
 800fc94:	8812      	ldrh	r2, [r2, #0]
 800fc96:	4293      	cmp	r3, r2
 800fc98:	d207      	bcs.n	800fcaa <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 800fc9a:	4a11      	ldr	r2, [pc, #68]	; (800fce0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 800fc9c:	6812      	ldr	r2, [r2, #0]
 800fc9e:	2114      	movs	r1, #20
 800fca0:	fb01 2303 	mla	r3, r1, r3, r2
 800fca4:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 800fca8:	4770      	bx	lr
 800fcaa:	490e      	ldr	r1, [pc, #56]	; (800fce4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800fcac:	8809      	ldrh	r1, [r1, #0]
 800fcae:	4411      	add	r1, r2
 800fcb0:	428b      	cmp	r3, r1
 800fcb2:	da04      	bge.n	800fcbe <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 800fcb4:	1a9b      	subs	r3, r3, r2
 800fcb6:	4a0c      	ldr	r2, [pc, #48]	; (800fce8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800fcb8:	210e      	movs	r1, #14
 800fcba:	6812      	ldr	r2, [r2, #0]
 800fcbc:	e7f0      	b.n	800fca0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 800fcbe:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fcc2:	4293      	cmp	r3, r2
 800fcc4:	d108      	bne.n	800fcd8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 800fcc6:	4b09      	ldr	r3, [pc, #36]	; (800fcec <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800fcc8:	781b      	ldrb	r3, [r3, #0]
 800fcca:	b91b      	cbnz	r3, 800fcd4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 800fccc:	4b08      	ldr	r3, [pc, #32]	; (800fcf0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800fcce:	f9b3 0000 	ldrsh.w	r0, [r3]
 800fcd2:	4770      	bx	lr
 800fcd4:	4b07      	ldr	r3, [pc, #28]	; (800fcf4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800fcd6:	e7fa      	b.n	800fcce <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 800fcd8:	2000      	movs	r0, #0
 800fcda:	4770      	bx	lr
 800fcdc:	200126f0 	.word	0x200126f0
 800fce0:	200126f8 	.word	0x200126f8
 800fce4:	200126f4 	.word	0x200126f4
 800fce8:	200126d8 	.word	0x200126d8
 800fcec:	20012668 	.word	0x20012668
 800fcf0:	2001266a 	.word	0x2001266a
 800fcf4:	2001266c 	.word	0x2001266c

0800fcf8 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800fcf8:	4a12      	ldr	r2, [pc, #72]	; (800fd44 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 800fcfa:	8803      	ldrh	r3, [r0, #0]
 800fcfc:	8812      	ldrh	r2, [r2, #0]
 800fcfe:	4293      	cmp	r3, r2
 800fd00:	d207      	bcs.n	800fd12 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 800fd02:	4a11      	ldr	r2, [pc, #68]	; (800fd48 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 800fd04:	6812      	ldr	r2, [r2, #0]
 800fd06:	2114      	movs	r1, #20
 800fd08:	fb01 2303 	mla	r3, r1, r3, r2
 800fd0c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 800fd10:	4770      	bx	lr
 800fd12:	490e      	ldr	r1, [pc, #56]	; (800fd4c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800fd14:	8809      	ldrh	r1, [r1, #0]
 800fd16:	4411      	add	r1, r2
 800fd18:	428b      	cmp	r3, r1
 800fd1a:	da04      	bge.n	800fd26 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 800fd1c:	1a9b      	subs	r3, r3, r2
 800fd1e:	4a0c      	ldr	r2, [pc, #48]	; (800fd50 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 800fd20:	210e      	movs	r1, #14
 800fd22:	6812      	ldr	r2, [r2, #0]
 800fd24:	e7f0      	b.n	800fd08 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 800fd26:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fd2a:	4293      	cmp	r3, r2
 800fd2c:	d108      	bne.n	800fd40 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 800fd2e:	4b09      	ldr	r3, [pc, #36]	; (800fd54 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 800fd30:	781b      	ldrb	r3, [r3, #0]
 800fd32:	b91b      	cbnz	r3, 800fd3c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 800fd34:	4b08      	ldr	r3, [pc, #32]	; (800fd58 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800fd36:	f9b3 0000 	ldrsh.w	r0, [r3]
 800fd3a:	4770      	bx	lr
 800fd3c:	4b07      	ldr	r3, [pc, #28]	; (800fd5c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800fd3e:	e7fa      	b.n	800fd36 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 800fd40:	2000      	movs	r0, #0
 800fd42:	4770      	bx	lr
 800fd44:	200126f0 	.word	0x200126f0
 800fd48:	200126f8 	.word	0x200126f8
 800fd4c:	200126f4 	.word	0x200126f4
 800fd50:	200126d8 	.word	0x200126d8
 800fd54:	20012668 	.word	0x20012668
 800fd58:	2001266c 	.word	0x2001266c
 800fd5c:	2001266a 	.word	0x2001266a

0800fd60 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800fd60:	b510      	push	{r4, lr}
 800fd62:	4a1f      	ldr	r2, [pc, #124]	; (800fde0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 800fd64:	880b      	ldrh	r3, [r1, #0]
 800fd66:	8812      	ldrh	r2, [r2, #0]
 800fd68:	4293      	cmp	r3, r2
 800fd6a:	d213      	bcs.n	800fd94 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 800fd6c:	4a1d      	ldr	r2, [pc, #116]	; (800fde4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 800fd6e:	6812      	ldr	r2, [r2, #0]
 800fd70:	2114      	movs	r1, #20
 800fd72:	fb01 2303 	mla	r3, r1, r3, r2
 800fd76:	8a1a      	ldrh	r2, [r3, #16]
 800fd78:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800fd7c:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800fd80:	8a5b      	ldrh	r3, [r3, #18]
 800fd82:	8004      	strh	r4, [r0, #0]
 800fd84:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800fd88:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800fd8c:	8041      	strh	r1, [r0, #2]
 800fd8e:	8082      	strh	r2, [r0, #4]
 800fd90:	80c3      	strh	r3, [r0, #6]
 800fd92:	e00e      	b.n	800fdb2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 800fd94:	4914      	ldr	r1, [pc, #80]	; (800fde8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 800fd96:	8809      	ldrh	r1, [r1, #0]
 800fd98:	4411      	add	r1, r2
 800fd9a:	428b      	cmp	r3, r1
 800fd9c:	da0a      	bge.n	800fdb4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 800fd9e:	1a9b      	subs	r3, r3, r2
 800fda0:	4a12      	ldr	r2, [pc, #72]	; (800fdec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 800fda2:	6812      	ldr	r2, [r2, #0]
 800fda4:	210e      	movs	r1, #14
 800fda6:	fb01 2303 	mla	r3, r1, r3, r2
 800fdaa:	681a      	ldr	r2, [r3, #0]
 800fdac:	6002      	str	r2, [r0, #0]
 800fdae:	685a      	ldr	r2, [r3, #4]
 800fdb0:	6042      	str	r2, [r0, #4]
 800fdb2:	bd10      	pop	{r4, pc}
 800fdb4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fdb8:	4293      	cmp	r3, r2
 800fdba:	d10b      	bne.n	800fdd4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 800fdbc:	4b0c      	ldr	r3, [pc, #48]	; (800fdf0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800fdbe:	f9b3 1000 	ldrsh.w	r1, [r3]
 800fdc2:	4b0c      	ldr	r3, [pc, #48]	; (800fdf4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800fdc4:	8081      	strh	r1, [r0, #4]
 800fdc6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fdca:	80c2      	strh	r2, [r0, #6]
 800fdcc:	2300      	movs	r3, #0
 800fdce:	8003      	strh	r3, [r0, #0]
 800fdd0:	8043      	strh	r3, [r0, #2]
 800fdd2:	e7ee      	b.n	800fdb2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 800fdd4:	2300      	movs	r3, #0
 800fdd6:	8003      	strh	r3, [r0, #0]
 800fdd8:	8043      	strh	r3, [r0, #2]
 800fdda:	8083      	strh	r3, [r0, #4]
 800fddc:	e7d8      	b.n	800fd90 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 800fdde:	bf00      	nop
 800fde0:	200126f0 	.word	0x200126f0
 800fde4:	200126f8 	.word	0x200126f8
 800fde8:	200126f4 	.word	0x200126f4
 800fdec:	200126d8 	.word	0x200126d8
 800fdf0:	20012664 	.word	0x20012664
 800fdf4:	20012666 	.word	0x20012666

0800fdf8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800fdf8:	4a17      	ldr	r2, [pc, #92]	; (800fe58 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 800fdfa:	8803      	ldrh	r3, [r0, #0]
 800fdfc:	8812      	ldrh	r2, [r2, #0]
 800fdfe:	4293      	cmp	r3, r2
 800fe00:	d213      	bcs.n	800fe2a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 800fe02:	4a16      	ldr	r2, [pc, #88]	; (800fe5c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800fe04:	6812      	ldr	r2, [r2, #0]
 800fe06:	2114      	movs	r1, #20
 800fe08:	fb01 2303 	mla	r3, r1, r3, r2
 800fe0c:	8a1a      	ldrh	r2, [r3, #16]
 800fe0e:	8919      	ldrh	r1, [r3, #8]
 800fe10:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800fe14:	428a      	cmp	r2, r1
 800fe16:	db1d      	blt.n	800fe54 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 800fe18:	8a58      	ldrh	r0, [r3, #18]
 800fe1a:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800fe1e:	895b      	ldrh	r3, [r3, #10]
 800fe20:	4298      	cmp	r0, r3
 800fe22:	bfac      	ite	ge
 800fe24:	2000      	movge	r0, #0
 800fe26:	2001      	movlt	r0, #1
 800fe28:	4770      	bx	lr
 800fe2a:	490d      	ldr	r1, [pc, #52]	; (800fe60 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800fe2c:	8809      	ldrh	r1, [r1, #0]
 800fe2e:	4411      	add	r1, r2
 800fe30:	428b      	cmp	r3, r1
 800fe32:	da0d      	bge.n	800fe50 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 800fe34:	1a9b      	subs	r3, r3, r2
 800fe36:	4a0b      	ldr	r2, [pc, #44]	; (800fe64 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800fe38:	6812      	ldr	r2, [r2, #0]
 800fe3a:	210e      	movs	r1, #14
 800fe3c:	fb01 2303 	mla	r3, r1, r3, r2
 800fe40:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800fe44:	891a      	ldrh	r2, [r3, #8]
 800fe46:	4291      	cmp	r1, r2
 800fe48:	db04      	blt.n	800fe54 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 800fe4a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800fe4e:	e7e6      	b.n	800fe1e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 800fe50:	2000      	movs	r0, #0
 800fe52:	4770      	bx	lr
 800fe54:	2001      	movs	r0, #1
 800fe56:	4770      	bx	lr
 800fe58:	200126f0 	.word	0x200126f0
 800fe5c:	200126f8 	.word	0x200126f8
 800fe60:	200126f4 	.word	0x200126f4
 800fe64:	200126d8 	.word	0x200126d8

0800fe68 <_ZNK8touchgfx6Bitmap7getDataEv>:
 800fe68:	4a12      	ldr	r2, [pc, #72]	; (800feb4 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800fe6a:	8803      	ldrh	r3, [r0, #0]
 800fe6c:	8811      	ldrh	r1, [r2, #0]
 800fe6e:	428b      	cmp	r3, r1
 800fe70:	d20b      	bcs.n	800fe8a <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 800fe72:	4a11      	ldr	r2, [pc, #68]	; (800feb8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800fe74:	6812      	ldr	r2, [r2, #0]
 800fe76:	b112      	cbz	r2, 800fe7e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800fe78:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800fe7c:	b9c0      	cbnz	r0, 800feb0 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 800fe7e:	4a0f      	ldr	r2, [pc, #60]	; (800febc <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800fe80:	6811      	ldr	r1, [r2, #0]
 800fe82:	2214      	movs	r2, #20
 800fe84:	4353      	muls	r3, r2
 800fe86:	58c8      	ldr	r0, [r1, r3]
 800fe88:	4770      	bx	lr
 800fe8a:	4a0d      	ldr	r2, [pc, #52]	; (800fec0 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800fe8c:	8812      	ldrh	r2, [r2, #0]
 800fe8e:	440a      	add	r2, r1
 800fe90:	4293      	cmp	r3, r2
 800fe92:	da04      	bge.n	800fe9e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 800fe94:	4a08      	ldr	r2, [pc, #32]	; (800feb8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800fe96:	6812      	ldr	r2, [r2, #0]
 800fe98:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800fe9c:	4770      	bx	lr
 800fe9e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fea2:	4293      	cmp	r3, r2
 800fea4:	d103      	bne.n	800feae <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800fea6:	4b07      	ldr	r3, [pc, #28]	; (800fec4 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800fea8:	681b      	ldr	r3, [r3, #0]
 800feaa:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800feac:	4770      	bx	lr
 800feae:	2000      	movs	r0, #0
 800feb0:	4770      	bx	lr
 800feb2:	bf00      	nop
 800feb4:	200126f0 	.word	0x200126f0
 800feb8:	200126d4 	.word	0x200126d4
 800febc:	200126f8 	.word	0x200126f8
 800fec0:	200126f4 	.word	0x200126f4
 800fec4:	20012670 	.word	0x20012670

0800fec8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800fec8:	4b24      	ldr	r3, [pc, #144]	; (800ff5c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 800feca:	8802      	ldrh	r2, [r0, #0]
 800fecc:	8818      	ldrh	r0, [r3, #0]
 800fece:	4282      	cmp	r2, r0
 800fed0:	d221      	bcs.n	800ff16 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 800fed2:	4b23      	ldr	r3, [pc, #140]	; (800ff60 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 800fed4:	6819      	ldr	r1, [r3, #0]
 800fed6:	2314      	movs	r3, #20
 800fed8:	fb03 1302 	mla	r3, r3, r2, r1
 800fedc:	6858      	ldr	r0, [r3, #4]
 800fede:	2800      	cmp	r0, #0
 800fee0:	d03a      	beq.n	800ff58 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 800fee2:	4920      	ldr	r1, [pc, #128]	; (800ff64 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800fee4:	6809      	ldr	r1, [r1, #0]
 800fee6:	2900      	cmp	r1, #0
 800fee8:	d036      	beq.n	800ff58 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 800feea:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800feee:	2900      	cmp	r1, #0
 800fef0:	d032      	beq.n	800ff58 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 800fef2:	891a      	ldrh	r2, [r3, #8]
 800fef4:	8958      	ldrh	r0, [r3, #10]
 800fef6:	4350      	muls	r0, r2
 800fef8:	7c5a      	ldrb	r2, [r3, #17]
 800fefa:	7cdb      	ldrb	r3, [r3, #19]
 800fefc:	0952      	lsrs	r2, r2, #5
 800fefe:	f3c3 1342 	ubfx	r3, r3, #5, #3
 800ff02:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800ff06:	2b0b      	cmp	r3, #11
 800ff08:	bf18      	it	ne
 800ff0a:	0040      	lslne	r0, r0, #1
 800ff0c:	3003      	adds	r0, #3
 800ff0e:	f020 0003 	bic.w	r0, r0, #3
 800ff12:	4408      	add	r0, r1
 800ff14:	4770      	bx	lr
 800ff16:	4b14      	ldr	r3, [pc, #80]	; (800ff68 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800ff18:	881b      	ldrh	r3, [r3, #0]
 800ff1a:	4403      	add	r3, r0
 800ff1c:	429a      	cmp	r2, r3
 800ff1e:	da1a      	bge.n	800ff56 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800ff20:	4b12      	ldr	r3, [pc, #72]	; (800ff6c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800ff22:	681b      	ldr	r3, [r3, #0]
 800ff24:	1a10      	subs	r0, r2, r0
 800ff26:	210e      	movs	r1, #14
 800ff28:	fb01 3000 	mla	r0, r1, r0, r3
 800ff2c:	7b03      	ldrb	r3, [r0, #12]
 800ff2e:	f003 031f 	and.w	r3, r3, #31
 800ff32:	2b0b      	cmp	r3, #11
 800ff34:	d10b      	bne.n	800ff4e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 800ff36:	8903      	ldrh	r3, [r0, #8]
 800ff38:	8940      	ldrh	r0, [r0, #10]
 800ff3a:	4358      	muls	r0, r3
 800ff3c:	4b09      	ldr	r3, [pc, #36]	; (800ff64 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800ff3e:	6819      	ldr	r1, [r3, #0]
 800ff40:	3003      	adds	r0, #3
 800ff42:	f020 0303 	bic.w	r3, r0, #3
 800ff46:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 800ff4a:	4418      	add	r0, r3
 800ff4c:	4770      	bx	lr
 800ff4e:	2b0d      	cmp	r3, #13
 800ff50:	d101      	bne.n	800ff56 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800ff52:	300d      	adds	r0, #13
 800ff54:	4770      	bx	lr
 800ff56:	2000      	movs	r0, #0
 800ff58:	4770      	bx	lr
 800ff5a:	bf00      	nop
 800ff5c:	200126f0 	.word	0x200126f0
 800ff60:	200126f8 	.word	0x200126f8
 800ff64:	200126d4 	.word	0x200126d4
 800ff68:	200126f4 	.word	0x200126f4
 800ff6c:	200126d8 	.word	0x200126d8

0800ff70 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800ff70:	b510      	push	{r4, lr}
 800ff72:	4a17      	ldr	r2, [pc, #92]	; (800ffd0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 800ff74:	8803      	ldrh	r3, [r0, #0]
 800ff76:	8812      	ldrh	r2, [r2, #0]
 800ff78:	4293      	cmp	r3, r2
 800ff7a:	d20c      	bcs.n	800ff96 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800ff7c:	4a15      	ldr	r2, [pc, #84]	; (800ffd4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 800ff7e:	6812      	ldr	r2, [r2, #0]
 800ff80:	2114      	movs	r1, #20
 800ff82:	fb01 2303 	mla	r3, r1, r3, r2
 800ff86:	7c58      	ldrb	r0, [r3, #17]
 800ff88:	0942      	lsrs	r2, r0, #5
 800ff8a:	7cd8      	ldrb	r0, [r3, #19]
 800ff8c:	f3c0 1042 	ubfx	r0, r0, #5, #3
 800ff90:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 800ff94:	bd10      	pop	{r4, pc}
 800ff96:	4910      	ldr	r1, [pc, #64]	; (800ffd8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 800ff98:	8809      	ldrh	r1, [r1, #0]
 800ff9a:	4411      	add	r1, r2
 800ff9c:	428b      	cmp	r3, r1
 800ff9e:	da09      	bge.n	800ffb4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800ffa0:	1a9b      	subs	r3, r3, r2
 800ffa2:	4a0e      	ldr	r2, [pc, #56]	; (800ffdc <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 800ffa4:	6812      	ldr	r2, [r2, #0]
 800ffa6:	210e      	movs	r1, #14
 800ffa8:	fb01 2303 	mla	r3, r1, r3, r2
 800ffac:	7b18      	ldrb	r0, [r3, #12]
 800ffae:	f000 001f 	and.w	r0, r0, #31
 800ffb2:	e7ef      	b.n	800ff94 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 800ffb4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800ffb8:	4293      	cmp	r3, r2
 800ffba:	d106      	bne.n	800ffca <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 800ffbc:	f7f9 fdc0 	bl	8009b40 <_ZN8touchgfx3HAL3lcdEv>
 800ffc0:	6803      	ldr	r3, [r0, #0]
 800ffc2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ffc6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ffc8:	4718      	bx	r3
 800ffca:	2000      	movs	r0, #0
 800ffcc:	e7e2      	b.n	800ff94 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 800ffce:	bf00      	nop
 800ffd0:	200126f0 	.word	0x200126f0
 800ffd4:	200126f8 	.word	0x200126f8
 800ffd8:	200126f4 	.word	0x200126f4
 800ffdc:	200126d8 	.word	0x200126d8

0800ffe0 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 800ffe0:	2010      	movs	r0, #16
 800ffe2:	4770      	bx	lr

0800ffe4 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 800ffe4:	2000      	movs	r0, #0
 800ffe6:	4770      	bx	lr

0800ffe8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 800ffe8:	4b02      	ldr	r3, [pc, #8]	; (800fff4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 800ffea:	8818      	ldrh	r0, [r3, #0]
 800ffec:	0040      	lsls	r0, r0, #1
 800ffee:	b280      	uxth	r0, r0
 800fff0:	4770      	bx	lr
 800fff2:	bf00      	nop
 800fff4:	2001266a 	.word	0x2001266a

0800fff8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800fff8:	2bff      	cmp	r3, #255	; 0xff
 800fffa:	d050      	beq.n	801009e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 800fffc:	2a0b      	cmp	r2, #11
 800fffe:	d04a      	beq.n	8010096 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8010000:	d80e      	bhi.n	8010020 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8010002:	2a03      	cmp	r2, #3
 8010004:	d03f      	beq.n	8010086 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8010006:	d804      	bhi.n	8010012 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8010008:	2a01      	cmp	r2, #1
 801000a:	d03e      	beq.n	801008a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801000c:	d93f      	bls.n	801008e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801000e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8010010:	4770      	bx	lr
 8010012:	2a09      	cmp	r2, #9
 8010014:	d03f      	beq.n	8010096 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8010016:	d83c      	bhi.n	8010092 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8010018:	2a08      	cmp	r2, #8
 801001a:	d03a      	beq.n	8010092 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801001c:	2000      	movs	r0, #0
 801001e:	4770      	bx	lr
 8010020:	2a2f      	cmp	r2, #47	; 0x2f
 8010022:	d024      	beq.n	801006e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8010024:	d80d      	bhi.n	8010042 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8010026:	2a2d      	cmp	r2, #45	; 0x2d
 8010028:	d014      	beq.n	8010054 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801002a:	d826      	bhi.n	801007a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801002c:	2a2c      	cmp	r2, #44	; 0x2c
 801002e:	d1f5      	bne.n	801001c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010030:	684b      	ldr	r3, [r1, #4]
 8010032:	781b      	ldrb	r3, [r3, #0]
 8010034:	2b01      	cmp	r3, #1
 8010036:	d018      	beq.n	801006a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8010038:	d323      	bcc.n	8010082 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801003a:	2b02      	cmp	r3, #2
 801003c:	d1ee      	bne.n	801001c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801003e:	6880      	ldr	r0, [r0, #8]
 8010040:	4770      	bx	lr
 8010042:	2a31      	cmp	r2, #49	; 0x31
 8010044:	d004      	beq.n	8010050 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8010046:	d328      	bcc.n	801009a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8010048:	2a32      	cmp	r2, #50	; 0x32
 801004a:	d026      	beq.n	801009a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801004c:	2a33      	cmp	r2, #51	; 0x33
 801004e:	d1e5      	bne.n	801001c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010050:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8010052:	4770      	bx	lr
 8010054:	684b      	ldr	r3, [r1, #4]
 8010056:	781b      	ldrb	r3, [r3, #0]
 8010058:	2b01      	cmp	r3, #1
 801005a:	d004      	beq.n	8010066 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801005c:	d30b      	bcc.n	8010076 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801005e:	2b02      	cmp	r3, #2
 8010060:	d1dc      	bne.n	801001c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010062:	6900      	ldr	r0, [r0, #16]
 8010064:	4770      	bx	lr
 8010066:	6a00      	ldr	r0, [r0, #32]
 8010068:	4770      	bx	lr
 801006a:	6980      	ldr	r0, [r0, #24]
 801006c:	4770      	bx	lr
 801006e:	684b      	ldr	r3, [r1, #4]
 8010070:	781b      	ldrb	r3, [r3, #0]
 8010072:	2b00      	cmp	r3, #0
 8010074:	d1d2      	bne.n	801001c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010076:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8010078:	4770      	bx	lr
 801007a:	684b      	ldr	r3, [r1, #4]
 801007c:	781b      	ldrb	r3, [r3, #0]
 801007e:	2b00      	cmp	r3, #0
 8010080:	d1cc      	bne.n	801001c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010082:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8010084:	4770      	bx	lr
 8010086:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8010088:	4770      	bx	lr
 801008a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801008c:	4770      	bx	lr
 801008e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8010090:	4770      	bx	lr
 8010092:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8010094:	4770      	bx	lr
 8010096:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8010098:	4770      	bx	lr
 801009a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801009c:	4770      	bx	lr
 801009e:	2a0b      	cmp	r2, #11
 80100a0:	d049      	beq.n	8010136 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80100a2:	d80e      	bhi.n	80100c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80100a4:	2a03      	cmp	r2, #3
 80100a6:	d040      	beq.n	801012a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80100a8:	d804      	bhi.n	80100b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80100aa:	2a01      	cmp	r2, #1
 80100ac:	d03f      	beq.n	801012e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80100ae:	d940      	bls.n	8010132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80100b0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80100b2:	4770      	bx	lr
 80100b4:	2a09      	cmp	r2, #9
 80100b6:	d03e      	beq.n	8010136 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80100b8:	d801      	bhi.n	80100be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80100ba:	2a08      	cmp	r2, #8
 80100bc:	d1ae      	bne.n	801001c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80100be:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 80100c0:	4770      	bx	lr
 80100c2:	2a2f      	cmp	r2, #47	; 0x2f
 80100c4:	d024      	beq.n	8010110 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 80100c6:	d80d      	bhi.n	80100e4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 80100c8:	2a2d      	cmp	r2, #45	; 0x2d
 80100ca:	d014      	beq.n	80100f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 80100cc:	d826      	bhi.n	801011c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 80100ce:	2a2c      	cmp	r2, #44	; 0x2c
 80100d0:	d1a4      	bne.n	801001c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80100d2:	684b      	ldr	r3, [r1, #4]
 80100d4:	781b      	ldrb	r3, [r3, #0]
 80100d6:	2b01      	cmp	r3, #1
 80100d8:	d018      	beq.n	801010c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 80100da:	d324      	bcc.n	8010126 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 80100dc:	2b02      	cmp	r3, #2
 80100de:	d19d      	bne.n	801001c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80100e0:	68c0      	ldr	r0, [r0, #12]
 80100e2:	4770      	bx	lr
 80100e4:	2a31      	cmp	r2, #49	; 0x31
 80100e6:	d004      	beq.n	80100f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 80100e8:	d327      	bcc.n	801013a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80100ea:	2a32      	cmp	r2, #50	; 0x32
 80100ec:	d025      	beq.n	801013a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80100ee:	2a33      	cmp	r2, #51	; 0x33
 80100f0:	d194      	bne.n	801001c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80100f2:	6f40      	ldr	r0, [r0, #116]	; 0x74
 80100f4:	4770      	bx	lr
 80100f6:	684b      	ldr	r3, [r1, #4]
 80100f8:	781b      	ldrb	r3, [r3, #0]
 80100fa:	2b01      	cmp	r3, #1
 80100fc:	d004      	beq.n	8010108 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 80100fe:	d30b      	bcc.n	8010118 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8010100:	2b02      	cmp	r3, #2
 8010102:	d18b      	bne.n	801001c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010104:	6940      	ldr	r0, [r0, #20]
 8010106:	4770      	bx	lr
 8010108:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801010a:	4770      	bx	lr
 801010c:	69c0      	ldr	r0, [r0, #28]
 801010e:	4770      	bx	lr
 8010110:	684b      	ldr	r3, [r1, #4]
 8010112:	781b      	ldrb	r3, [r3, #0]
 8010114:	2b00      	cmp	r3, #0
 8010116:	d181      	bne.n	801001c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010118:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801011a:	4770      	bx	lr
 801011c:	684b      	ldr	r3, [r1, #4]
 801011e:	781b      	ldrb	r3, [r3, #0]
 8010120:	2b00      	cmp	r3, #0
 8010122:	f47f af7b 	bne.w	801001c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8010126:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8010128:	4770      	bx	lr
 801012a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801012c:	4770      	bx	lr
 801012e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8010130:	4770      	bx	lr
 8010132:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8010134:	4770      	bx	lr
 8010136:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8010138:	4770      	bx	lr
 801013a:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801013c:	4770      	bx	lr

0801013e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801013e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010142:	b087      	sub	sp, #28
 8010144:	9815      	ldr	r0, [sp, #84]	; 0x54
 8010146:	9205      	str	r2, [sp, #20]
 8010148:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801014c:	9202      	str	r2, [sp, #8]
 801014e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8010152:	9101      	str	r1, [sp, #4]
 8010154:	6841      	ldr	r1, [r0, #4]
 8010156:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801015a:	fb01 2404 	mla	r4, r1, r4, r2
 801015e:	6802      	ldr	r2, [r0, #0]
 8010160:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010164:	f8de 2000 	ldr.w	r2, [lr]
 8010168:	9203      	str	r2, [sp, #12]
 801016a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801016e:	3204      	adds	r2, #4
 8010170:	9204      	str	r2, [sp, #16]
 8010172:	9a02      	ldr	r2, [sp, #8]
 8010174:	43d6      	mvns	r6, r2
 8010176:	b2f6      	uxtb	r6, r6
 8010178:	9a01      	ldr	r2, [sp, #4]
 801017a:	2a00      	cmp	r2, #0
 801017c:	dc03      	bgt.n	8010186 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801017e:	9a05      	ldr	r2, [sp, #20]
 8010180:	2a00      	cmp	r2, #0
 8010182:	f340 8129 	ble.w	80103d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8010186:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010188:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801018c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8010190:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010194:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010196:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801019a:	2b00      	cmp	r3, #0
 801019c:	dd0e      	ble.n	80101bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801019e:	1408      	asrs	r0, r1, #16
 80101a0:	d405      	bmi.n	80101ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80101a2:	4560      	cmp	r0, ip
 80101a4:	da03      	bge.n	80101ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80101a6:	1410      	asrs	r0, r2, #16
 80101a8:	d401      	bmi.n	80101ae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80101aa:	42b8      	cmp	r0, r7
 80101ac:	db07      	blt.n	80101be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80101ae:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80101b0:	4401      	add	r1, r0
 80101b2:	9814      	ldr	r0, [sp, #80]	; 0x50
 80101b4:	3b01      	subs	r3, #1
 80101b6:	4402      	add	r2, r0
 80101b8:	3402      	adds	r4, #2
 80101ba:	e7ee      	b.n	801019a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80101bc:	d071      	beq.n	80102a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80101be:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80101c0:	1e58      	subs	r0, r3, #1
 80101c2:	fb05 1500 	mla	r5, r5, r0, r1
 80101c6:	142d      	asrs	r5, r5, #16
 80101c8:	d45f      	bmi.n	801028a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80101ca:	4565      	cmp	r5, ip
 80101cc:	da5d      	bge.n	801028a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80101ce:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80101d0:	fb05 2000 	mla	r0, r5, r0, r2
 80101d4:	1400      	asrs	r0, r0, #16
 80101d6:	d458      	bmi.n	801028a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80101d8:	42b8      	cmp	r0, r7
 80101da:	da56      	bge.n	801028a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80101dc:	f8bd b008 	ldrh.w	fp, [sp, #8]
 80101e0:	4699      	mov	r9, r3
 80101e2:	46a2      	mov	sl, r4
 80101e4:	f1b9 0f00 	cmp.w	r9, #0
 80101e8:	dd57      	ble.n	801029a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80101ea:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80101ee:	9803      	ldr	r0, [sp, #12]
 80101f0:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80101f4:	140d      	asrs	r5, r1, #16
 80101f6:	fb07 000c 	mla	r0, r7, ip, r0
 80101fa:	f109 39ff 	add.w	r9, r9, #4294967295
 80101fe:	5d40      	ldrb	r0, [r0, r5]
 8010200:	9d04      	ldr	r5, [sp, #16]
 8010202:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8010206:	f8ba 5000 	ldrh.w	r5, [sl]
 801020a:	122f      	asrs	r7, r5, #8
 801020c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8010210:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010214:	fb17 f706 	smulbb	r7, r7, r6
 8010218:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801021c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010220:	00ed      	lsls	r5, r5, #3
 8010222:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8010226:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801022a:	10c7      	asrs	r7, r0, #3
 801022c:	b2ed      	uxtb	r5, r5
 801022e:	00c0      	lsls	r0, r0, #3
 8010230:	fb18 f806 	smulbb	r8, r8, r6
 8010234:	fb15 f506 	smulbb	r5, r5, r6
 8010238:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801023c:	b2c0      	uxtb	r0, r0
 801023e:	fa1f fc8c 	uxth.w	ip, ip
 8010242:	fb07 870b 	mla	r7, r7, fp, r8
 8010246:	fb00 500b 	mla	r0, r0, fp, r5
 801024a:	b280      	uxth	r0, r0
 801024c:	b2bf      	uxth	r7, r7
 801024e:	f10c 0501 	add.w	r5, ip, #1
 8010252:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010256:	f107 0801 	add.w	r8, r7, #1
 801025a:	1c45      	adds	r5, r0, #1
 801025c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8010260:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8010264:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010266:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801026a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801026e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8010272:	ea45 0c0c 	orr.w	ip, r5, ip
 8010276:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801027a:	4401      	add	r1, r0
 801027c:	9814      	ldr	r0, [sp, #80]	; 0x50
 801027e:	ea4c 0c08 	orr.w	ip, ip, r8
 8010282:	f82a cb02 	strh.w	ip, [sl], #2
 8010286:	4402      	add	r2, r0
 8010288:	e7ac      	b.n	80101e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801028a:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801028e:	f04f 0800 	mov.w	r8, #0
 8010292:	eb03 0008 	add.w	r0, r3, r8
 8010296:	2800      	cmp	r0, #0
 8010298:	dc41      	bgt.n	801031e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801029a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801029e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80102a2:	9b01      	ldr	r3, [sp, #4]
 80102a4:	2b00      	cmp	r3, #0
 80102a6:	f340 8097 	ble.w	80103d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80102aa:	ee30 0a04 	vadd.f32	s0, s0, s8
 80102ae:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80102b2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80102b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80102b8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80102bc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80102c0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80102c4:	eef0 6a62 	vmov.f32	s13, s5
 80102c8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80102cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80102d0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80102d4:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80102d8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80102dc:	eef0 6a43 	vmov.f32	s13, s6
 80102e0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80102e4:	ee12 2a90 	vmov	r2, s5
 80102e8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80102ec:	fb92 f3f3 	sdiv	r3, r2, r3
 80102f0:	ee13 2a10 	vmov	r2, s6
 80102f4:	9313      	str	r3, [sp, #76]	; 0x4c
 80102f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80102f8:	fb92 f3f3 	sdiv	r3, r2, r3
 80102fc:	9314      	str	r3, [sp, #80]	; 0x50
 80102fe:	9b01      	ldr	r3, [sp, #4]
 8010300:	9a05      	ldr	r2, [sp, #20]
 8010302:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010306:	3b01      	subs	r3, #1
 8010308:	9301      	str	r3, [sp, #4]
 801030a:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801030e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010310:	eeb0 3a67 	vmov.f32	s6, s15
 8010314:	bf08      	it	eq
 8010316:	4613      	moveq	r3, r2
 8010318:	eef0 2a47 	vmov.f32	s5, s14
 801031c:	e72c      	b.n	8010178 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801031e:	140f      	asrs	r7, r1, #16
 8010320:	d453      	bmi.n	80103ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8010322:	f8de 5008 	ldr.w	r5, [lr, #8]
 8010326:	42bd      	cmp	r5, r7
 8010328:	dd4f      	ble.n	80103ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801032a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801032e:	d44c      	bmi.n	80103ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8010330:	f8de 000c 	ldr.w	r0, [lr, #12]
 8010334:	4560      	cmp	r0, ip
 8010336:	dd48      	ble.n	80103ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8010338:	9803      	ldr	r0, [sp, #12]
 801033a:	b22d      	sxth	r5, r5
 801033c:	fb0c 0505 	mla	r5, ip, r5, r0
 8010340:	5de8      	ldrb	r0, [r5, r7]
 8010342:	9d04      	ldr	r5, [sp, #16]
 8010344:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8010348:	f06f 0501 	mvn.w	r5, #1
 801034c:	fb05 fb08 	mul.w	fp, r5, r8
 8010350:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8010354:	f834 500b 	ldrh.w	r5, [r4, fp]
 8010358:	122f      	asrs	r7, r5, #8
 801035a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801035e:	fb17 f706 	smulbb	r7, r7, r6
 8010362:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8010366:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801036a:	00ed      	lsls	r5, r5, #3
 801036c:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8010370:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8010374:	10c7      	asrs	r7, r0, #3
 8010376:	b2ed      	uxtb	r5, r5
 8010378:	00c0      	lsls	r0, r0, #3
 801037a:	fb19 f906 	smulbb	r9, r9, r6
 801037e:	fb15 f506 	smulbb	r5, r5, r6
 8010382:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010386:	b2c0      	uxtb	r0, r0
 8010388:	fa1f fc8c 	uxth.w	ip, ip
 801038c:	fb07 970a 	mla	r7, r7, sl, r9
 8010390:	fb00 500a 	mla	r0, r0, sl, r5
 8010394:	b2bf      	uxth	r7, r7
 8010396:	b280      	uxth	r0, r0
 8010398:	f10c 0501 	add.w	r5, ip, #1
 801039c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80103a0:	f107 0901 	add.w	r9, r7, #1
 80103a4:	1c45      	adds	r5, r0, #1
 80103a6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80103aa:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80103ae:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80103b2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80103b6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80103ba:	ea45 0c0c 	orr.w	ip, r5, ip
 80103be:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80103c2:	ea4c 0c09 	orr.w	ip, ip, r9
 80103c6:	f824 c00b 	strh.w	ip, [r4, fp]
 80103ca:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80103cc:	4401      	add	r1, r0
 80103ce:	9814      	ldr	r0, [sp, #80]	; 0x50
 80103d0:	f108 38ff 	add.w	r8, r8, #4294967295
 80103d4:	4402      	add	r2, r0
 80103d6:	e75c      	b.n	8010292 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80103d8:	b007      	add	sp, #28
 80103da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080103de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80103de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80103e2:	b085      	sub	sp, #20
 80103e4:	4693      	mov	fp, r2
 80103e6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80103e8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80103ea:	6870      	ldr	r0, [r6, #4]
 80103ec:	9100      	str	r1, [sp, #0]
 80103ee:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80103f2:	fb00 2404 	mla	r4, r0, r4, r2
 80103f6:	6832      	ldr	r2, [r6, #0]
 80103f8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80103fc:	682a      	ldr	r2, [r5, #0]
 80103fe:	9201      	str	r2, [sp, #4]
 8010400:	686a      	ldr	r2, [r5, #4]
 8010402:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8010406:	3204      	adds	r2, #4
 8010408:	9202      	str	r2, [sp, #8]
 801040a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801040e:	9a00      	ldr	r2, [sp, #0]
 8010410:	2a00      	cmp	r2, #0
 8010412:	dc03      	bgt.n	801041c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8010414:	f1bb 0f00 	cmp.w	fp, #0
 8010418:	f340 80a0 	ble.w	801055c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801041c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801041e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8010422:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8010426:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801042a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801042c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010430:	2b00      	cmp	r3, #0
 8010432:	dd0c      	ble.n	801044e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8010434:	1406      	asrs	r6, r0, #16
 8010436:	d405      	bmi.n	8010444 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010438:	454e      	cmp	r6, r9
 801043a:	da03      	bge.n	8010444 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801043c:	1416      	asrs	r6, r2, #16
 801043e:	d401      	bmi.n	8010444 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8010440:	4546      	cmp	r6, r8
 8010442:	db05      	blt.n	8010450 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010444:	4470      	add	r0, lr
 8010446:	4462      	add	r2, ip
 8010448:	3b01      	subs	r3, #1
 801044a:	3402      	adds	r4, #2
 801044c:	e7f0      	b.n	8010430 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801044e:	d00f      	beq.n	8010470 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8010450:	1e5e      	subs	r6, r3, #1
 8010452:	fb0e 0706 	mla	r7, lr, r6, r0
 8010456:	143f      	asrs	r7, r7, #16
 8010458:	d541      	bpl.n	80104de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801045a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801045e:	4698      	mov	r8, r3
 8010460:	9603      	str	r6, [sp, #12]
 8010462:	f1b8 0f00 	cmp.w	r8, #0
 8010466:	dc59      	bgt.n	801051c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8010468:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801046c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010470:	9b00      	ldr	r3, [sp, #0]
 8010472:	2b00      	cmp	r3, #0
 8010474:	dd72      	ble.n	801055c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8010476:	ee30 0a04 	vadd.f32	s0, s0, s8
 801047a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801047e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010482:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010484:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010488:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801048c:	eeb0 6a62 	vmov.f32	s12, s5
 8010490:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010494:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010498:	ee77 2a62 	vsub.f32	s5, s14, s5
 801049c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80104a0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80104a4:	eeb0 6a43 	vmov.f32	s12, s6
 80104a8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80104ac:	ee12 2a90 	vmov	r2, s5
 80104b0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80104b4:	fb92 fef3 	sdiv	lr, r2, r3
 80104b8:	ee13 2a10 	vmov	r2, s6
 80104bc:	fb92 fcf3 	sdiv	ip, r2, r3
 80104c0:	9b00      	ldr	r3, [sp, #0]
 80104c2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80104c6:	3b01      	subs	r3, #1
 80104c8:	9300      	str	r3, [sp, #0]
 80104ca:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80104ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80104d0:	eeb0 3a67 	vmov.f32	s6, s15
 80104d4:	bf08      	it	eq
 80104d6:	465b      	moveq	r3, fp
 80104d8:	eef0 2a47 	vmov.f32	s5, s14
 80104dc:	e797      	b.n	801040e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80104de:	454f      	cmp	r7, r9
 80104e0:	dabb      	bge.n	801045a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80104e2:	fb0c 2606 	mla	r6, ip, r6, r2
 80104e6:	1436      	asrs	r6, r6, #16
 80104e8:	d4b7      	bmi.n	801045a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80104ea:	4546      	cmp	r6, r8
 80104ec:	dab5      	bge.n	801045a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80104ee:	461e      	mov	r6, r3
 80104f0:	46a0      	mov	r8, r4
 80104f2:	2e00      	cmp	r6, #0
 80104f4:	ddb8      	ble.n	8010468 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80104f6:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80104fa:	9901      	ldr	r1, [sp, #4]
 80104fc:	1417      	asrs	r7, r2, #16
 80104fe:	ea4f 4920 	mov.w	r9, r0, asr #16
 8010502:	fb0a 1707 	mla	r7, sl, r7, r1
 8010506:	9902      	ldr	r1, [sp, #8]
 8010508:	f817 7009 	ldrb.w	r7, [r7, r9]
 801050c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8010510:	f828 7b02 	strh.w	r7, [r8], #2
 8010514:	4470      	add	r0, lr
 8010516:	4462      	add	r2, ip
 8010518:	3e01      	subs	r6, #1
 801051a:	e7ea      	b.n	80104f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801051c:	ea5f 4920 	movs.w	r9, r0, asr #16
 8010520:	d417      	bmi.n	8010552 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8010522:	68ae      	ldr	r6, [r5, #8]
 8010524:	454e      	cmp	r6, r9
 8010526:	dd14      	ble.n	8010552 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8010528:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801052c:	d411      	bmi.n	8010552 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801052e:	68ef      	ldr	r7, [r5, #12]
 8010530:	4557      	cmp	r7, sl
 8010532:	dd0e      	ble.n	8010552 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8010534:	9f01      	ldr	r7, [sp, #4]
 8010536:	b236      	sxth	r6, r6
 8010538:	fb0a 7606 	mla	r6, sl, r6, r7
 801053c:	9f02      	ldr	r7, [sp, #8]
 801053e:	f816 6009 	ldrb.w	r6, [r6, r9]
 8010542:	f06f 0101 	mvn.w	r1, #1
 8010546:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801054a:	fb01 f608 	mul.w	r6, r1, r8
 801054e:	9903      	ldr	r1, [sp, #12]
 8010550:	538f      	strh	r7, [r1, r6]
 8010552:	4470      	add	r0, lr
 8010554:	4462      	add	r2, ip
 8010556:	f108 38ff 	add.w	r8, r8, #4294967295
 801055a:	e782      	b.n	8010462 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801055c:	b005      	add	sp, #20
 801055e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010562 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010562:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010566:	b087      	sub	sp, #28
 8010568:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801056a:	9205      	str	r2, [sp, #20]
 801056c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010570:	9203      	str	r2, [sp, #12]
 8010572:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8010576:	9102      	str	r1, [sp, #8]
 8010578:	6861      	ldr	r1, [r4, #4]
 801057a:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801057e:	fb01 2000 	mla	r0, r1, r0, r2
 8010582:	6822      	ldr	r2, [r4, #0]
 8010584:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8010588:	9200      	str	r2, [sp, #0]
 801058a:	f8dc 2000 	ldr.w	r2, [ip]
 801058e:	9204      	str	r2, [sp, #16]
 8010590:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8010594:	3204      	adds	r2, #4
 8010596:	9201      	str	r2, [sp, #4]
 8010598:	9a03      	ldr	r2, [sp, #12]
 801059a:	43d5      	mvns	r5, r2
 801059c:	b2ed      	uxtb	r5, r5
 801059e:	9a02      	ldr	r2, [sp, #8]
 80105a0:	2a00      	cmp	r2, #0
 80105a2:	dc03      	bgt.n	80105ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80105a4:	9a05      	ldr	r2, [sp, #20]
 80105a6:	2a00      	cmp	r2, #0
 80105a8:	f340 812c 	ble.w	8010804 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80105ac:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80105ae:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80105b2:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80105b6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80105ba:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80105bc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80105c0:	2b00      	cmp	r3, #0
 80105c2:	dd10      	ble.n	80105e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80105c4:	140c      	asrs	r4, r1, #16
 80105c6:	d405      	bmi.n	80105d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80105c8:	4574      	cmp	r4, lr
 80105ca:	da03      	bge.n	80105d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80105cc:	1414      	asrs	r4, r2, #16
 80105ce:	d401      	bmi.n	80105d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80105d0:	42bc      	cmp	r4, r7
 80105d2:	db09      	blt.n	80105e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80105d4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80105d6:	9800      	ldr	r0, [sp, #0]
 80105d8:	4421      	add	r1, r4
 80105da:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80105dc:	3002      	adds	r0, #2
 80105de:	4422      	add	r2, r4
 80105e0:	3b01      	subs	r3, #1
 80105e2:	9000      	str	r0, [sp, #0]
 80105e4:	e7ec      	b.n	80105c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80105e6:	d071      	beq.n	80106cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 80105e8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80105ea:	1e5c      	subs	r4, r3, #1
 80105ec:	fb06 1604 	mla	r6, r6, r4, r1
 80105f0:	1436      	asrs	r6, r6, #16
 80105f2:	d45d      	bmi.n	80106b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80105f4:	4576      	cmp	r6, lr
 80105f6:	da5b      	bge.n	80106b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80105f8:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80105fa:	fb06 2404 	mla	r4, r6, r4, r2
 80105fe:	1424      	asrs	r4, r4, #16
 8010600:	d456      	bmi.n	80106b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8010602:	42bc      	cmp	r4, r7
 8010604:	da54      	bge.n	80106b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8010606:	f8dd 9000 	ldr.w	r9, [sp]
 801060a:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801060e:	4698      	mov	r8, r3
 8010610:	f1b8 0f00 	cmp.w	r8, #0
 8010614:	dd54      	ble.n	80106c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8010616:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801061a:	9804      	ldr	r0, [sp, #16]
 801061c:	1414      	asrs	r4, r2, #16
 801061e:	fb07 0404 	mla	r4, r7, r4, r0
 8010622:	140e      	asrs	r6, r1, #16
 8010624:	9801      	ldr	r0, [sp, #4]
 8010626:	f814 e006 	ldrb.w	lr, [r4, r6]
 801062a:	f8b9 4000 	ldrh.w	r4, [r9]
 801062e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8010632:	eb00 0b0e 	add.w	fp, r0, lr
 8010636:	1227      	asrs	r7, r4, #8
 8010638:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801063c:	f89b b001 	ldrb.w	fp, [fp, #1]
 8010640:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8010644:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010646:	fb16 f60a 	smulbb	r6, r6, sl
 801064a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801064e:	fb07 6705 	mla	r7, r7, r5, r6
 8010652:	10e6      	asrs	r6, r4, #3
 8010654:	00e4      	lsls	r4, r4, #3
 8010656:	b2e4      	uxtb	r4, r4
 8010658:	fb1b fb0a 	smulbb	fp, fp, sl
 801065c:	fb14 f405 	smulbb	r4, r4, r5
 8010660:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010664:	b2bf      	uxth	r7, r7
 8010666:	fb06 b605 	mla	r6, r6, r5, fp
 801066a:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801066e:	b2b6      	uxth	r6, r6
 8010670:	fa1f fe8e 	uxth.w	lr, lr
 8010674:	1c7c      	adds	r4, r7, #1
 8010676:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801067a:	f106 0b01 	add.w	fp, r6, #1
 801067e:	f10e 0401 	add.w	r4, lr, #1
 8010682:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8010686:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801068a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801068e:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8010692:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8010696:	4327      	orrs	r7, r4
 8010698:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801069c:	4401      	add	r1, r0
 801069e:	9814      	ldr	r0, [sp, #80]	; 0x50
 80106a0:	ea47 070b 	orr.w	r7, r7, fp
 80106a4:	f829 7b02 	strh.w	r7, [r9], #2
 80106a8:	4402      	add	r2, r0
 80106aa:	f108 38ff 	add.w	r8, r8, #4294967295
 80106ae:	e7af      	b.n	8010610 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80106b0:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80106b4:	f04f 0e00 	mov.w	lr, #0
 80106b8:	eb03 040e 	add.w	r4, r3, lr
 80106bc:	2c00      	cmp	r4, #0
 80106be:	dc43      	bgt.n	8010748 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80106c0:	9a00      	ldr	r2, [sp, #0]
 80106c2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80106c6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80106ca:	9300      	str	r3, [sp, #0]
 80106cc:	9b02      	ldr	r3, [sp, #8]
 80106ce:	2b00      	cmp	r3, #0
 80106d0:	f340 8098 	ble.w	8010804 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80106d4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80106d8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80106dc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80106e0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80106e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80106e6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80106ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80106ee:	eef0 6a62 	vmov.f32	s13, s5
 80106f2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80106f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80106fa:	ee77 2a62 	vsub.f32	s5, s14, s5
 80106fe:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8010702:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010706:	eef0 6a43 	vmov.f32	s13, s6
 801070a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801070e:	ee12 2a90 	vmov	r2, s5
 8010712:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010716:	fb92 f3f3 	sdiv	r3, r2, r3
 801071a:	ee13 2a10 	vmov	r2, s6
 801071e:	9313      	str	r3, [sp, #76]	; 0x4c
 8010720:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010722:	fb92 f3f3 	sdiv	r3, r2, r3
 8010726:	9314      	str	r3, [sp, #80]	; 0x50
 8010728:	9b02      	ldr	r3, [sp, #8]
 801072a:	9a05      	ldr	r2, [sp, #20]
 801072c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010730:	3b01      	subs	r3, #1
 8010732:	9302      	str	r3, [sp, #8]
 8010734:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8010738:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801073a:	eeb0 3a67 	vmov.f32	s6, s15
 801073e:	bf08      	it	eq
 8010740:	4613      	moveq	r3, r2
 8010742:	eef0 2a47 	vmov.f32	s5, s14
 8010746:	e72a      	b.n	801059e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8010748:	140f      	asrs	r7, r1, #16
 801074a:	d454      	bmi.n	80107f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801074c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8010750:	42be      	cmp	r6, r7
 8010752:	dd50      	ble.n	80107f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8010754:	ea5f 4822 	movs.w	r8, r2, asr #16
 8010758:	d44d      	bmi.n	80107f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801075a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801075e:	4544      	cmp	r4, r8
 8010760:	dd49      	ble.n	80107f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8010762:	9c04      	ldr	r4, [sp, #16]
 8010764:	b236      	sxth	r6, r6
 8010766:	fb08 4606 	mla	r6, r8, r6, r4
 801076a:	f06f 0001 	mvn.w	r0, #1
 801076e:	f816 8007 	ldrb.w	r8, [r6, r7]
 8010772:	9c01      	ldr	r4, [sp, #4]
 8010774:	fb00 fa0e 	mul.w	sl, r0, lr
 8010778:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801077c:	9800      	ldr	r0, [sp, #0]
 801077e:	eb04 0b08 	add.w	fp, r4, r8
 8010782:	f830 400a 	ldrh.w	r4, [r0, sl]
 8010786:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801078a:	9801      	ldr	r0, [sp, #4]
 801078c:	f89b b001 	ldrb.w	fp, [fp, #1]
 8010790:	f810 8008 	ldrb.w	r8, [r0, r8]
 8010794:	9800      	ldr	r0, [sp, #0]
 8010796:	1227      	asrs	r7, r4, #8
 8010798:	fb16 f609 	smulbb	r6, r6, r9
 801079c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80107a0:	fb07 6705 	mla	r7, r7, r5, r6
 80107a4:	10e6      	asrs	r6, r4, #3
 80107a6:	00e4      	lsls	r4, r4, #3
 80107a8:	b2e4      	uxtb	r4, r4
 80107aa:	fb1b fb09 	smulbb	fp, fp, r9
 80107ae:	fb14 f405 	smulbb	r4, r4, r5
 80107b2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80107b6:	b2bf      	uxth	r7, r7
 80107b8:	fb06 b605 	mla	r6, r6, r5, fp
 80107bc:	fb08 4809 	mla	r8, r8, r9, r4
 80107c0:	b2b6      	uxth	r6, r6
 80107c2:	fa1f f888 	uxth.w	r8, r8
 80107c6:	1c7c      	adds	r4, r7, #1
 80107c8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80107cc:	f106 0b01 	add.w	fp, r6, #1
 80107d0:	f108 0401 	add.w	r4, r8, #1
 80107d4:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 80107d8:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80107dc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80107e0:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80107e4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80107e8:	4327      	orrs	r7, r4
 80107ea:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80107ee:	ea47 070b 	orr.w	r7, r7, fp
 80107f2:	f820 700a 	strh.w	r7, [r0, sl]
 80107f6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80107f8:	4401      	add	r1, r0
 80107fa:	9814      	ldr	r0, [sp, #80]	; 0x50
 80107fc:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010800:	4402      	add	r2, r0
 8010802:	e759      	b.n	80106b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8010804:	b007      	add	sp, #28
 8010806:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801080c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801080c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010810:	b085      	sub	sp, #20
 8010812:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010816:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010818:	9203      	str	r2, [sp, #12]
 801081a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801081e:	6870      	ldr	r0, [r6, #4]
 8010820:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8010822:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8010826:	686f      	ldr	r7, [r5, #4]
 8010828:	9101      	str	r1, [sp, #4]
 801082a:	fb00 2404 	mla	r4, r0, r4, r2
 801082e:	6832      	ldr	r2, [r6, #0]
 8010830:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010834:	682a      	ldr	r2, [r5, #0]
 8010836:	9202      	str	r2, [sp, #8]
 8010838:	3704      	adds	r7, #4
 801083a:	9a01      	ldr	r2, [sp, #4]
 801083c:	2a00      	cmp	r2, #0
 801083e:	dc03      	bgt.n	8010848 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8010840:	9a03      	ldr	r2, [sp, #12]
 8010842:	2a00      	cmp	r2, #0
 8010844:	f340 80cc 	ble.w	80109e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8010848:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801084a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801084e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8010852:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010856:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010858:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801085c:	2b00      	cmp	r3, #0
 801085e:	dd0d      	ble.n	801087c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8010860:	1406      	asrs	r6, r0, #16
 8010862:	d405      	bmi.n	8010870 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8010864:	454e      	cmp	r6, r9
 8010866:	da03      	bge.n	8010870 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8010868:	1416      	asrs	r6, r2, #16
 801086a:	d401      	bmi.n	8010870 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801086c:	4546      	cmp	r6, r8
 801086e:	db06      	blt.n	801087e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8010870:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8010872:	4460      	add	r0, ip
 8010874:	4432      	add	r2, r6
 8010876:	3b01      	subs	r3, #1
 8010878:	3402      	adds	r4, #2
 801087a:	e7ef      	b.n	801085c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801087c:	d00f      	beq.n	801089e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801087e:	1e5e      	subs	r6, r3, #1
 8010880:	fb0c 0e06 	mla	lr, ip, r6, r0
 8010884:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8010888:	d543      	bpl.n	8010912 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801088a:	4698      	mov	r8, r3
 801088c:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8010890:	f1b8 0f00 	cmp.w	r8, #0
 8010894:	dc71      	bgt.n	801097a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8010896:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801089a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801089e:	9b01      	ldr	r3, [sp, #4]
 80108a0:	2b00      	cmp	r3, #0
 80108a2:	f340 809d 	ble.w	80109e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80108a6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80108aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80108ae:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80108b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80108b4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80108b8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80108bc:	eeb0 6a62 	vmov.f32	s12, s5
 80108c0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80108c4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80108c8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80108cc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80108d0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80108d4:	eeb0 6a43 	vmov.f32	s12, s6
 80108d8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80108dc:	ee12 2a90 	vmov	r2, s5
 80108e0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80108e4:	fb92 fcf3 	sdiv	ip, r2, r3
 80108e8:	ee13 2a10 	vmov	r2, s6
 80108ec:	fb92 f3f3 	sdiv	r3, r2, r3
 80108f0:	9312      	str	r3, [sp, #72]	; 0x48
 80108f2:	9b01      	ldr	r3, [sp, #4]
 80108f4:	9a03      	ldr	r2, [sp, #12]
 80108f6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80108fa:	3b01      	subs	r3, #1
 80108fc:	9301      	str	r3, [sp, #4]
 80108fe:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8010902:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010904:	eeb0 3a67 	vmov.f32	s6, s15
 8010908:	bf08      	it	eq
 801090a:	4613      	moveq	r3, r2
 801090c:	eef0 2a47 	vmov.f32	s5, s14
 8010910:	e793      	b.n	801083a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8010912:	45ce      	cmp	lr, r9
 8010914:	dab9      	bge.n	801088a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010916:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010918:	fb01 2606 	mla	r6, r1, r6, r2
 801091c:	1436      	asrs	r6, r6, #16
 801091e:	d4b4      	bmi.n	801088a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010920:	4546      	cmp	r6, r8
 8010922:	dab2      	bge.n	801088a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010924:	4698      	mov	r8, r3
 8010926:	46a2      	mov	sl, r4
 8010928:	f1b8 0f00 	cmp.w	r8, #0
 801092c:	ddb3      	ble.n	8010896 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801092e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8010932:	9902      	ldr	r1, [sp, #8]
 8010934:	1416      	asrs	r6, r2, #16
 8010936:	fb09 1606 	mla	r6, r9, r6, r1
 801093a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801093e:	492a      	ldr	r1, [pc, #168]	; (80109e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8010940:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8010944:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8010948:	eb07 0b0e 	add.w	fp, r7, lr
 801094c:	4460      	add	r0, ip
 801094e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8010952:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8010956:	00f6      	lsls	r6, r6, #3
 8010958:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801095c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8010960:	ea49 0606 	orr.w	r6, r9, r6
 8010964:	f817 900e 	ldrb.w	r9, [r7, lr]
 8010968:	9912      	ldr	r1, [sp, #72]	; 0x48
 801096a:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801096e:	f82a 6b02 	strh.w	r6, [sl], #2
 8010972:	440a      	add	r2, r1
 8010974:	f108 38ff 	add.w	r8, r8, #4294967295
 8010978:	e7d6      	b.n	8010928 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801097a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801097e:	d429      	bmi.n	80109d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010980:	68ae      	ldr	r6, [r5, #8]
 8010982:	454e      	cmp	r6, r9
 8010984:	dd26      	ble.n	80109d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010986:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801098a:	d423      	bmi.n	80109d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801098c:	68e9      	ldr	r1, [r5, #12]
 801098e:	4559      	cmp	r1, fp
 8010990:	dd20      	ble.n	80109d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8010992:	9902      	ldr	r1, [sp, #8]
 8010994:	fa0f fe86 	sxth.w	lr, r6
 8010998:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801099c:	f06f 0101 	mvn.w	r1, #1
 80109a0:	f81e e009 	ldrb.w	lr, [lr, r9]
 80109a4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80109a8:	eb07 060e 	add.w	r6, r7, lr
 80109ac:	fb01 f908 	mul.w	r9, r1, r8
 80109b0:	f896 b002 	ldrb.w	fp, [r6, #2]
 80109b4:	7876      	ldrb	r6, [r6, #1]
 80109b6:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 80109ba:	00f6      	lsls	r6, r6, #3
 80109bc:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80109c0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80109c4:	ea4b 0606 	orr.w	r6, fp, r6
 80109c8:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80109cc:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 80109d0:	f82a 6009 	strh.w	r6, [sl, r9]
 80109d4:	9912      	ldr	r1, [sp, #72]	; 0x48
 80109d6:	4460      	add	r0, ip
 80109d8:	440a      	add	r2, r1
 80109da:	f108 38ff 	add.w	r8, r8, #4294967295
 80109de:	e757      	b.n	8010890 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80109e0:	b005      	add	sp, #20
 80109e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80109e6:	bf00      	nop
 80109e8:	fffff800 	.word	0xfffff800

080109ec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80109ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80109f0:	b087      	sub	sp, #28
 80109f2:	468b      	mov	fp, r1
 80109f4:	9815      	ldr	r0, [sp, #84]	; 0x54
 80109f6:	9204      	str	r2, [sp, #16]
 80109f8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80109fc:	9205      	str	r2, [sp, #20]
 80109fe:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8010a02:	6841      	ldr	r1, [r0, #4]
 8010a04:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8010a08:	fb01 2404 	mla	r4, r1, r4, r2
 8010a0c:	6802      	ldr	r2, [r0, #0]
 8010a0e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010a12:	f8dc 2000 	ldr.w	r2, [ip]
 8010a16:	9201      	str	r2, [sp, #4]
 8010a18:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8010a1c:	3204      	adds	r2, #4
 8010a1e:	9202      	str	r2, [sp, #8]
 8010a20:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010a24:	f1bb 0f00 	cmp.w	fp, #0
 8010a28:	dc03      	bgt.n	8010a32 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8010a2a:	9a04      	ldr	r2, [sp, #16]
 8010a2c:	2a00      	cmp	r2, #0
 8010a2e:	f340 8138 	ble.w	8010ca2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8010a32:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010a34:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8010a38:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8010a3c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010a40:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010a42:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010a46:	2b00      	cmp	r3, #0
 8010a48:	dd0e      	ble.n	8010a68 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8010a4a:	1402      	asrs	r2, r0, #16
 8010a4c:	d405      	bmi.n	8010a5a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8010a4e:	42ba      	cmp	r2, r7
 8010a50:	da03      	bge.n	8010a5a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8010a52:	140a      	asrs	r2, r1, #16
 8010a54:	d401      	bmi.n	8010a5a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8010a56:	42b2      	cmp	r2, r6
 8010a58:	db07      	blt.n	8010a6a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8010a5a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010a5c:	4410      	add	r0, r2
 8010a5e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010a60:	3b01      	subs	r3, #1
 8010a62:	4411      	add	r1, r2
 8010a64:	3402      	adds	r4, #2
 8010a66:	e7ee      	b.n	8010a46 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8010a68:	d019      	beq.n	8010a9e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8010a6a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010a6c:	1e5a      	subs	r2, r3, #1
 8010a6e:	fb05 0502 	mla	r5, r5, r2, r0
 8010a72:	142d      	asrs	r5, r5, #16
 8010a74:	d409      	bmi.n	8010a8a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010a76:	42bd      	cmp	r5, r7
 8010a78:	da07      	bge.n	8010a8a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010a7a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010a7c:	fb05 1202 	mla	r2, r5, r2, r1
 8010a80:	1412      	asrs	r2, r2, #16
 8010a82:	d402      	bmi.n	8010a8a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8010a84:	42b2      	cmp	r2, r6
 8010a86:	f2c0 80ac 	blt.w	8010be2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8010a8a:	f04f 0e00 	mov.w	lr, #0
 8010a8e:	eb03 020e 	add.w	r2, r3, lr
 8010a92:	2a00      	cmp	r2, #0
 8010a94:	dc3e      	bgt.n	8010b14 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8010a96:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010a9a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010a9e:	f1bb 0f00 	cmp.w	fp, #0
 8010aa2:	f340 80fe 	ble.w	8010ca2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8010aa6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010aaa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010aae:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010ab2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010ab4:	f1bb 0b01 	subs.w	fp, fp, #1
 8010ab8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010abc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010ac0:	eeb0 6a62 	vmov.f32	s12, s5
 8010ac4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010ac8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010acc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010ad0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010ad4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010ad8:	eeb0 6a43 	vmov.f32	s12, s6
 8010adc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010ae0:	ee12 2a90 	vmov	r2, s5
 8010ae4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010ae8:	fb92 f3f3 	sdiv	r3, r2, r3
 8010aec:	ee13 2a10 	vmov	r2, s6
 8010af0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010af4:	9313      	str	r3, [sp, #76]	; 0x4c
 8010af6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010af8:	fb92 f3f3 	sdiv	r3, r2, r3
 8010afc:	9a04      	ldr	r2, [sp, #16]
 8010afe:	9314      	str	r3, [sp, #80]	; 0x50
 8010b00:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010b04:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010b06:	eeb0 3a67 	vmov.f32	s6, s15
 8010b0a:	bf08      	it	eq
 8010b0c:	4613      	moveq	r3, r2
 8010b0e:	eef0 2a47 	vmov.f32	s5, s14
 8010b12:	e787      	b.n	8010a24 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8010b14:	1406      	asrs	r6, r0, #16
 8010b16:	d45d      	bmi.n	8010bd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010b18:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8010b1c:	42b5      	cmp	r5, r6
 8010b1e:	dd59      	ble.n	8010bd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010b20:	140f      	asrs	r7, r1, #16
 8010b22:	d457      	bmi.n	8010bd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010b24:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8010b28:	42ba      	cmp	r2, r7
 8010b2a:	dd53      	ble.n	8010bd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010b2c:	9a01      	ldr	r2, [sp, #4]
 8010b2e:	b22d      	sxth	r5, r5
 8010b30:	fb07 2505 	mla	r5, r7, r5, r2
 8010b34:	5daa      	ldrb	r2, [r5, r6]
 8010b36:	9d02      	ldr	r5, [sp, #8]
 8010b38:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010b3c:	0e2e      	lsrs	r6, r5, #24
 8010b3e:	d049      	beq.n	8010bd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8010b40:	f06f 0201 	mvn.w	r2, #1
 8010b44:	fb02 f20e 	mul.w	r2, r2, lr
 8010b48:	9203      	str	r2, [sp, #12]
 8010b4a:	f834 8002 	ldrh.w	r8, [r4, r2]
 8010b4e:	9a05      	ldr	r2, [sp, #20]
 8010b50:	4356      	muls	r6, r2
 8010b52:	1c72      	adds	r2, r6, #1
 8010b54:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010b58:	1212      	asrs	r2, r2, #8
 8010b5a:	fa1f f982 	uxth.w	r9, r2
 8010b5e:	ea4f 2728 	mov.w	r7, r8, asr #8
 8010b62:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010b66:	43d2      	mvns	r2, r2
 8010b68:	b2d2      	uxtb	r2, r2
 8010b6a:	fb16 f609 	smulbb	r6, r6, r9
 8010b6e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010b72:	fb07 6702 	mla	r7, r7, r2, r6
 8010b76:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010b7a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8010b7e:	b2ed      	uxtb	r5, r5
 8010b80:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010b84:	fa5f f888 	uxtb.w	r8, r8
 8010b88:	fb15 f509 	smulbb	r5, r5, r9
 8010b8c:	fb08 5502 	mla	r5, r8, r2, r5
 8010b90:	b2bf      	uxth	r7, r7
 8010b92:	fb1a fa09 	smulbb	sl, sl, r9
 8010b96:	b2ad      	uxth	r5, r5
 8010b98:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010b9c:	fb06 a602 	mla	r6, r6, r2, sl
 8010ba0:	1c7a      	adds	r2, r7, #1
 8010ba2:	f105 0a01 	add.w	sl, r5, #1
 8010ba6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010baa:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010bae:	b2b6      	uxth	r6, r6
 8010bb0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010bb4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010bb8:	ea4a 0707 	orr.w	r7, sl, r7
 8010bbc:	f106 0a01 	add.w	sl, r6, #1
 8010bc0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010bc4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010bc8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010bcc:	9a03      	ldr	r2, [sp, #12]
 8010bce:	ea47 070a 	orr.w	r7, r7, sl
 8010bd2:	52a7      	strh	r7, [r4, r2]
 8010bd4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010bd6:	4410      	add	r0, r2
 8010bd8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010bda:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010bde:	4411      	add	r1, r2
 8010be0:	e755      	b.n	8010a8e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8010be2:	f04f 0800 	mov.w	r8, #0
 8010be6:	eba3 0208 	sub.w	r2, r3, r8
 8010bea:	2a00      	cmp	r2, #0
 8010bec:	f77f af53 	ble.w	8010a96 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8010bf0:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8010bf4:	9f01      	ldr	r7, [sp, #4]
 8010bf6:	140a      	asrs	r2, r1, #16
 8010bf8:	1405      	asrs	r5, r0, #16
 8010bfa:	fb06 7202 	mla	r2, r6, r2, r7
 8010bfe:	5d52      	ldrb	r2, [r2, r5]
 8010c00:	9d02      	ldr	r5, [sp, #8]
 8010c02:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010c06:	0e2e      	lsrs	r6, r5, #24
 8010c08:	d044      	beq.n	8010c94 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8010c0a:	9a05      	ldr	r2, [sp, #20]
 8010c0c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8010c10:	4356      	muls	r6, r2
 8010c12:	1c72      	adds	r2, r6, #1
 8010c14:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010c18:	1212      	asrs	r2, r2, #8
 8010c1a:	fa1f f982 	uxth.w	r9, r2
 8010c1e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8010c22:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010c26:	43d2      	mvns	r2, r2
 8010c28:	b2d2      	uxtb	r2, r2
 8010c2a:	fb16 f609 	smulbb	r6, r6, r9
 8010c2e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010c32:	fb07 6702 	mla	r7, r7, r2, r6
 8010c36:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010c3a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8010c3e:	b2ed      	uxtb	r5, r5
 8010c40:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010c44:	fa5f fe8e 	uxtb.w	lr, lr
 8010c48:	fb15 f509 	smulbb	r5, r5, r9
 8010c4c:	fb0e 5502 	mla	r5, lr, r2, r5
 8010c50:	b2bf      	uxth	r7, r7
 8010c52:	fb1a fa09 	smulbb	sl, sl, r9
 8010c56:	b2ad      	uxth	r5, r5
 8010c58:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010c5c:	fb06 a602 	mla	r6, r6, r2, sl
 8010c60:	1c7a      	adds	r2, r7, #1
 8010c62:	f105 0a01 	add.w	sl, r5, #1
 8010c66:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010c6a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010c6e:	b2b6      	uxth	r6, r6
 8010c70:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010c74:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010c78:	ea4a 0707 	orr.w	r7, sl, r7
 8010c7c:	f106 0a01 	add.w	sl, r6, #1
 8010c80:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010c84:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010c88:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010c8c:	ea47 070a 	orr.w	r7, r7, sl
 8010c90:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8010c94:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010c96:	4410      	add	r0, r2
 8010c98:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010c9a:	f108 0801 	add.w	r8, r8, #1
 8010c9e:	4411      	add	r1, r2
 8010ca0:	e7a1      	b.n	8010be6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8010ca2:	b007      	add	sp, #28
 8010ca4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010ca8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010ca8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010cac:	b085      	sub	sp, #20
 8010cae:	468b      	mov	fp, r1
 8010cb0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010cb2:	9203      	str	r2, [sp, #12]
 8010cb4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8010cb8:	6841      	ldr	r1, [r0, #4]
 8010cba:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8010cbe:	fb01 2404 	mla	r4, r1, r4, r2
 8010cc2:	6802      	ldr	r2, [r0, #0]
 8010cc4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010cc8:	f8de 2000 	ldr.w	r2, [lr]
 8010ccc:	9200      	str	r2, [sp, #0]
 8010cce:	f8de 2004 	ldr.w	r2, [lr, #4]
 8010cd2:	3204      	adds	r2, #4
 8010cd4:	9201      	str	r2, [sp, #4]
 8010cd6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010cda:	f1bb 0f00 	cmp.w	fp, #0
 8010cde:	dc03      	bgt.n	8010ce8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8010ce0:	9a03      	ldr	r2, [sp, #12]
 8010ce2:	2a00      	cmp	r2, #0
 8010ce4:	f340 8153 	ble.w	8010f8e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8010ce8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010cea:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8010cee:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8010cf2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010cf6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010cf8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010cfc:	2b00      	cmp	r3, #0
 8010cfe:	dd0e      	ble.n	8010d1e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8010d00:	1408      	asrs	r0, r1, #16
 8010d02:	d405      	bmi.n	8010d10 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010d04:	42b8      	cmp	r0, r7
 8010d06:	da03      	bge.n	8010d10 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010d08:	1410      	asrs	r0, r2, #16
 8010d0a:	d401      	bmi.n	8010d10 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8010d0c:	42b0      	cmp	r0, r6
 8010d0e:	db07      	blt.n	8010d20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8010d10:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010d12:	4401      	add	r1, r0
 8010d14:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010d16:	3b01      	subs	r3, #1
 8010d18:	4402      	add	r2, r0
 8010d1a:	3402      	adds	r4, #2
 8010d1c:	e7ee      	b.n	8010cfc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8010d1e:	d017      	beq.n	8010d50 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8010d20:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8010d22:	1e58      	subs	r0, r3, #1
 8010d24:	fb05 1500 	mla	r5, r5, r0, r1
 8010d28:	142d      	asrs	r5, r5, #16
 8010d2a:	d409      	bmi.n	8010d40 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010d2c:	42bd      	cmp	r5, r7
 8010d2e:	da07      	bge.n	8010d40 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010d30:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8010d32:	fb05 2000 	mla	r0, r5, r0, r2
 8010d36:	1400      	asrs	r0, r0, #16
 8010d38:	d402      	bmi.n	8010d40 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8010d3a:	42b0      	cmp	r0, r6
 8010d3c:	f2c0 80bc 	blt.w	8010eb8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8010d40:	2600      	movs	r6, #0
 8010d42:	1998      	adds	r0, r3, r6
 8010d44:	2800      	cmp	r0, #0
 8010d46:	dc3e      	bgt.n	8010dc6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8010d48:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010d4c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010d50:	f1bb 0f00 	cmp.w	fp, #0
 8010d54:	f340 811b 	ble.w	8010f8e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8010d58:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010d5c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010d60:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010d64:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010d66:	f1bb 0b01 	subs.w	fp, fp, #1
 8010d6a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010d6e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010d72:	eeb0 6a62 	vmov.f32	s12, s5
 8010d76:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010d7a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010d7e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010d82:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010d86:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010d8a:	eeb0 6a43 	vmov.f32	s12, s6
 8010d8e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010d92:	ee12 2a90 	vmov	r2, s5
 8010d96:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010d9a:	fb92 f3f3 	sdiv	r3, r2, r3
 8010d9e:	ee13 2a10 	vmov	r2, s6
 8010da2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010da6:	9311      	str	r3, [sp, #68]	; 0x44
 8010da8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010daa:	fb92 f3f3 	sdiv	r3, r2, r3
 8010dae:	9a03      	ldr	r2, [sp, #12]
 8010db0:	9312      	str	r3, [sp, #72]	; 0x48
 8010db2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8010db6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010db8:	eeb0 3a67 	vmov.f32	s6, s15
 8010dbc:	bf08      	it	eq
 8010dbe:	4613      	moveq	r3, r2
 8010dc0:	eef0 2a47 	vmov.f32	s5, s14
 8010dc4:	e789      	b.n	8010cda <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8010dc6:	140f      	asrs	r7, r1, #16
 8010dc8:	d426      	bmi.n	8010e18 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010dca:	f8de 5008 	ldr.w	r5, [lr, #8]
 8010dce:	42bd      	cmp	r5, r7
 8010dd0:	dd22      	ble.n	8010e18 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010dd2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8010dd6:	d41f      	bmi.n	8010e18 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010dd8:	f8de 000c 	ldr.w	r0, [lr, #12]
 8010ddc:	4560      	cmp	r0, ip
 8010dde:	dd1b      	ble.n	8010e18 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010de0:	9800      	ldr	r0, [sp, #0]
 8010de2:	b22d      	sxth	r5, r5
 8010de4:	fb0c 0505 	mla	r5, ip, r5, r0
 8010de8:	5de8      	ldrb	r0, [r5, r7]
 8010dea:	9d01      	ldr	r5, [sp, #4]
 8010dec:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8010df0:	0e07      	lsrs	r7, r0, #24
 8010df2:	2fff      	cmp	r7, #255	; 0xff
 8010df4:	d116      	bne.n	8010e24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8010df6:	f06f 0501 	mvn.w	r5, #1
 8010dfa:	fb05 f706 	mul.w	r7, r5, r6
 8010dfe:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8010e02:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8010e06:	0945      	lsrs	r5, r0, #5
 8010e08:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010e0c:	ea4c 0505 	orr.w	r5, ip, r5
 8010e10:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8010e14:	4305      	orrs	r5, r0
 8010e16:	53e5      	strh	r5, [r4, r7]
 8010e18:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010e1a:	4401      	add	r1, r0
 8010e1c:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010e1e:	3e01      	subs	r6, #1
 8010e20:	4402      	add	r2, r0
 8010e22:	e78e      	b.n	8010d42 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8010e24:	b2fd      	uxtb	r5, r7
 8010e26:	2f00      	cmp	r7, #0
 8010e28:	d0f6      	beq.n	8010e18 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010e2a:	f06f 0701 	mvn.w	r7, #1
 8010e2e:	4377      	muls	r7, r6
 8010e30:	fa1f f985 	uxth.w	r9, r5
 8010e34:	f834 8007 	ldrh.w	r8, [r4, r7]
 8010e38:	9702      	str	r7, [sp, #8]
 8010e3a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8010e3e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8010e42:	43ed      	mvns	r5, r5
 8010e44:	b2ed      	uxtb	r5, r5
 8010e46:	fb17 f709 	smulbb	r7, r7, r9
 8010e4a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010e4e:	fb0c 7c05 	mla	ip, ip, r5, r7
 8010e52:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8010e56:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8010e5a:	b2c0      	uxtb	r0, r0
 8010e5c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010e60:	fa5f f888 	uxtb.w	r8, r8
 8010e64:	fb10 f009 	smulbb	r0, r0, r9
 8010e68:	fb08 0005 	mla	r0, r8, r5, r0
 8010e6c:	b280      	uxth	r0, r0
 8010e6e:	fa1f fc8c 	uxth.w	ip, ip
 8010e72:	fb1a fa09 	smulbb	sl, sl, r9
 8010e76:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010e7a:	fb07 a705 	mla	r7, r7, r5, sl
 8010e7e:	f100 0a01 	add.w	sl, r0, #1
 8010e82:	f10c 0501 	add.w	r5, ip, #1
 8010e86:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8010e8a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010e8e:	b2bf      	uxth	r7, r7
 8010e90:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010e94:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010e98:	ea4a 0c0c 	orr.w	ip, sl, ip
 8010e9c:	f107 0a01 	add.w	sl, r7, #1
 8010ea0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8010ea4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010ea8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010eac:	9802      	ldr	r0, [sp, #8]
 8010eae:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010eb2:	f824 c000 	strh.w	ip, [r4, r0]
 8010eb6:	e7af      	b.n	8010e18 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8010eb8:	f04f 0800 	mov.w	r8, #0
 8010ebc:	eba3 0008 	sub.w	r0, r3, r8
 8010ec0:	2800      	cmp	r0, #0
 8010ec2:	f77f af41 	ble.w	8010d48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8010ec6:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8010eca:	9f00      	ldr	r7, [sp, #0]
 8010ecc:	1410      	asrs	r0, r2, #16
 8010ece:	140d      	asrs	r5, r1, #16
 8010ed0:	fb06 7000 	mla	r0, r6, r0, r7
 8010ed4:	5d40      	ldrb	r0, [r0, r5]
 8010ed6:	9d01      	ldr	r5, [sp, #4]
 8010ed8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8010edc:	0e2e      	lsrs	r6, r5, #24
 8010ede:	2eff      	cmp	r6, #255	; 0xff
 8010ee0:	d112      	bne.n	8010f08 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8010ee2:	482c      	ldr	r0, [pc, #176]	; (8010f94 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8010ee4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8010ee8:	0968      	lsrs	r0, r5, #5
 8010eea:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8010eee:	4330      	orrs	r0, r6
 8010ef0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8010ef4:	4328      	orrs	r0, r5
 8010ef6:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8010efa:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010efc:	4401      	add	r1, r0
 8010efe:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010f00:	f108 0801 	add.w	r8, r8, #1
 8010f04:	4402      	add	r2, r0
 8010f06:	e7d9      	b.n	8010ebc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8010f08:	b2f0      	uxtb	r0, r6
 8010f0a:	2e00      	cmp	r6, #0
 8010f0c:	d0f5      	beq.n	8010efa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8010f0e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8010f12:	fa1f f980 	uxth.w	r9, r0
 8010f16:	ea4f 272c 	mov.w	r7, ip, asr #8
 8010f1a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010f1e:	43c0      	mvns	r0, r0
 8010f20:	b2c0      	uxtb	r0, r0
 8010f22:	fb16 f609 	smulbb	r6, r6, r9
 8010f26:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010f2a:	fb07 6700 	mla	r7, r7, r0, r6
 8010f2e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010f32:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8010f36:	b2ed      	uxtb	r5, r5
 8010f38:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010f3c:	fa5f fc8c 	uxtb.w	ip, ip
 8010f40:	fb15 f509 	smulbb	r5, r5, r9
 8010f44:	fb0c 5500 	mla	r5, ip, r0, r5
 8010f48:	b2bf      	uxth	r7, r7
 8010f4a:	fb1a fa09 	smulbb	sl, sl, r9
 8010f4e:	b2ad      	uxth	r5, r5
 8010f50:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010f54:	fb06 a600 	mla	r6, r6, r0, sl
 8010f58:	1c78      	adds	r0, r7, #1
 8010f5a:	f105 0a01 	add.w	sl, r5, #1
 8010f5e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8010f62:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010f66:	b2b6      	uxth	r6, r6
 8010f68:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010f6c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010f70:	ea4a 0707 	orr.w	r7, sl, r7
 8010f74:	f106 0a01 	add.w	sl, r6, #1
 8010f78:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010f7c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010f80:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010f84:	ea47 070a 	orr.w	r7, r7, sl
 8010f88:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8010f8c:	e7b5      	b.n	8010efa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8010f8e:	b005      	add	sp, #20
 8010f90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010f94:	fffff800 	.word	0xfffff800

08010f98 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8010f98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010f9c:	b087      	sub	sp, #28
 8010f9e:	468b      	mov	fp, r1
 8010fa0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8010fa2:	9204      	str	r2, [sp, #16]
 8010fa4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010fa8:	9205      	str	r2, [sp, #20]
 8010faa:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8010fae:	6861      	ldr	r1, [r4, #4]
 8010fb0:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8010fb4:	fb01 2000 	mla	r0, r1, r0, r2
 8010fb8:	6822      	ldr	r2, [r4, #0]
 8010fba:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8010fbe:	f8de 2000 	ldr.w	r2, [lr]
 8010fc2:	9201      	str	r2, [sp, #4]
 8010fc4:	f8de 2004 	ldr.w	r2, [lr, #4]
 8010fc8:	9202      	str	r2, [sp, #8]
 8010fca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010fce:	f1bb 0f00 	cmp.w	fp, #0
 8010fd2:	dc03      	bgt.n	8010fdc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8010fd4:	9a04      	ldr	r2, [sp, #16]
 8010fd6:	2a00      	cmp	r2, #0
 8010fd8:	f340 8142 	ble.w	8011260 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8010fdc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010fde:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8010fe2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8010fe6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010fea:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010fec:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010ff0:	2b00      	cmp	r3, #0
 8010ff2:	dd0e      	ble.n	8011012 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8010ff4:	140c      	asrs	r4, r1, #16
 8010ff6:	d405      	bmi.n	8011004 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010ff8:	42bc      	cmp	r4, r7
 8010ffa:	da03      	bge.n	8011004 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8010ffc:	1414      	asrs	r4, r2, #16
 8010ffe:	d401      	bmi.n	8011004 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011000:	42b4      	cmp	r4, r6
 8011002:	db07      	blt.n	8011014 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8011004:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011006:	4421      	add	r1, r4
 8011008:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801100a:	3b01      	subs	r3, #1
 801100c:	4422      	add	r2, r4
 801100e:	3002      	adds	r0, #2
 8011010:	e7ee      	b.n	8010ff0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8011012:	d019      	beq.n	8011048 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8011014:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011016:	1e5c      	subs	r4, r3, #1
 8011018:	fb05 1504 	mla	r5, r5, r4, r1
 801101c:	142d      	asrs	r5, r5, #16
 801101e:	d409      	bmi.n	8011034 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011020:	42bd      	cmp	r5, r7
 8011022:	da07      	bge.n	8011034 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8011024:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011026:	fb05 2404 	mla	r4, r5, r4, r2
 801102a:	1424      	asrs	r4, r4, #16
 801102c:	d402      	bmi.n	8011034 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801102e:	42b4      	cmp	r4, r6
 8011030:	f2c0 80b1 	blt.w	8011196 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8011034:	f04f 0800 	mov.w	r8, #0
 8011038:	eb03 0408 	add.w	r4, r3, r8
 801103c:	2c00      	cmp	r4, #0
 801103e:	dc3e      	bgt.n	80110be <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8011040:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011044:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011048:	f1bb 0f00 	cmp.w	fp, #0
 801104c:	f340 8108 	ble.w	8011260 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8011050:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011054:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011058:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801105c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801105e:	f1bb 0b01 	subs.w	fp, fp, #1
 8011062:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011066:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801106a:	eeb0 6a62 	vmov.f32	s12, s5
 801106e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011072:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011076:	ee77 2a62 	vsub.f32	s5, s14, s5
 801107a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801107e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011082:	eeb0 6a43 	vmov.f32	s12, s6
 8011086:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801108a:	ee12 2a90 	vmov	r2, s5
 801108e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011092:	fb92 f3f3 	sdiv	r3, r2, r3
 8011096:	ee13 2a10 	vmov	r2, s6
 801109a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801109e:	9313      	str	r3, [sp, #76]	; 0x4c
 80110a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80110a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80110a6:	9a04      	ldr	r2, [sp, #16]
 80110a8:	9314      	str	r3, [sp, #80]	; 0x50
 80110aa:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80110ae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80110b0:	eeb0 3a67 	vmov.f32	s6, s15
 80110b4:	bf08      	it	eq
 80110b6:	4613      	moveq	r3, r2
 80110b8:	eef0 2a47 	vmov.f32	s5, s14
 80110bc:	e787      	b.n	8010fce <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80110be:	140e      	asrs	r6, r1, #16
 80110c0:	d462      	bmi.n	8011188 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80110c2:	f8de 5008 	ldr.w	r5, [lr, #8]
 80110c6:	42b5      	cmp	r5, r6
 80110c8:	dd5e      	ble.n	8011188 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80110ca:	1417      	asrs	r7, r2, #16
 80110cc:	d45c      	bmi.n	8011188 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80110ce:	f8de 400c 	ldr.w	r4, [lr, #12]
 80110d2:	42bc      	cmp	r4, r7
 80110d4:	dd58      	ble.n	8011188 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80110d6:	b22d      	sxth	r5, r5
 80110d8:	fb07 6505 	mla	r5, r7, r5, r6
 80110dc:	9c02      	ldr	r4, [sp, #8]
 80110de:	5d66      	ldrb	r6, [r4, r5]
 80110e0:	2e00      	cmp	r6, #0
 80110e2:	d051      	beq.n	8011188 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80110e4:	9c01      	ldr	r4, [sp, #4]
 80110e6:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 80110ea:	f06f 0401 	mvn.w	r4, #1
 80110ee:	fb04 f408 	mul.w	r4, r4, r8
 80110f2:	9403      	str	r4, [sp, #12]
 80110f4:	5b05      	ldrh	r5, [r0, r4]
 80110f6:	9c05      	ldr	r4, [sp, #20]
 80110f8:	4366      	muls	r6, r4
 80110fa:	1c74      	adds	r4, r6, #1
 80110fc:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8011100:	1224      	asrs	r4, r4, #8
 8011102:	b2a7      	uxth	r7, r4
 8011104:	122e      	asrs	r6, r5, #8
 8011106:	43e4      	mvns	r4, r4
 8011108:	b2e4      	uxtb	r4, r4
 801110a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801110e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011112:	fb16 f604 	smulbb	r6, r6, r4
 8011116:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801111a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801111e:	00ed      	lsls	r5, r5, #3
 8011120:	fb0c 6c07 	mla	ip, ip, r7, r6
 8011124:	b2ed      	uxtb	r5, r5
 8011126:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801112a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801112e:	fb15 f504 	smulbb	r5, r5, r4
 8011132:	fa5f f989 	uxtb.w	r9, r9
 8011136:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801113a:	fb09 5507 	mla	r5, r9, r7, r5
 801113e:	fb1a fa04 	smulbb	sl, sl, r4
 8011142:	fa1f fc8c 	uxth.w	ip, ip
 8011146:	b2ad      	uxth	r5, r5
 8011148:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801114c:	fb06 a607 	mla	r6, r6, r7, sl
 8011150:	f10c 0401 	add.w	r4, ip, #1
 8011154:	f105 0a01 	add.w	sl, r5, #1
 8011158:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801115c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011160:	b2b6      	uxth	r6, r6
 8011162:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011166:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801116a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801116e:	f106 0a01 	add.w	sl, r6, #1
 8011172:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011176:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801117a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801117e:	9c03      	ldr	r4, [sp, #12]
 8011180:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011184:	f820 c004 	strh.w	ip, [r0, r4]
 8011188:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801118a:	4421      	add	r1, r4
 801118c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801118e:	f108 38ff 	add.w	r8, r8, #4294967295
 8011192:	4422      	add	r2, r4
 8011194:	e750      	b.n	8011038 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8011196:	f04f 0900 	mov.w	r9, #0
 801119a:	eba3 0409 	sub.w	r4, r3, r9
 801119e:	2c00      	cmp	r4, #0
 80111a0:	f77f af4e 	ble.w	8011040 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80111a4:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80111a8:	140d      	asrs	r5, r1, #16
 80111aa:	1414      	asrs	r4, r2, #16
 80111ac:	fb06 5404 	mla	r4, r6, r4, r5
 80111b0:	9d02      	ldr	r5, [sp, #8]
 80111b2:	5d2e      	ldrb	r6, [r5, r4]
 80111b4:	2e00      	cmp	r6, #0
 80111b6:	d04c      	beq.n	8011252 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80111b8:	9d01      	ldr	r5, [sp, #4]
 80111ba:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 80111be:	9c05      	ldr	r4, [sp, #20]
 80111c0:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80111c4:	4366      	muls	r6, r4
 80111c6:	1c74      	adds	r4, r6, #1
 80111c8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80111cc:	1224      	asrs	r4, r4, #8
 80111ce:	b2a7      	uxth	r7, r4
 80111d0:	122e      	asrs	r6, r5, #8
 80111d2:	43e4      	mvns	r4, r4
 80111d4:	b2e4      	uxtb	r4, r4
 80111d6:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80111da:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80111de:	fb16 f604 	smulbb	r6, r6, r4
 80111e2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80111e6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80111ea:	00ed      	lsls	r5, r5, #3
 80111ec:	fb0c 6c07 	mla	ip, ip, r7, r6
 80111f0:	b2ed      	uxtb	r5, r5
 80111f2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80111f6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80111fa:	fb15 f504 	smulbb	r5, r5, r4
 80111fe:	fa5f f888 	uxtb.w	r8, r8
 8011202:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8011206:	fb08 5507 	mla	r5, r8, r7, r5
 801120a:	fb1a fa04 	smulbb	sl, sl, r4
 801120e:	fa1f fc8c 	uxth.w	ip, ip
 8011212:	b2ad      	uxth	r5, r5
 8011214:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011218:	fb06 a607 	mla	r6, r6, r7, sl
 801121c:	f10c 0401 	add.w	r4, ip, #1
 8011220:	f105 0a01 	add.w	sl, r5, #1
 8011224:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8011228:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801122c:	b2b6      	uxth	r6, r6
 801122e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011232:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011236:	ea4a 0c0c 	orr.w	ip, sl, ip
 801123a:	f106 0a01 	add.w	sl, r6, #1
 801123e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011242:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011246:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801124a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801124e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8011252:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011254:	4421      	add	r1, r4
 8011256:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011258:	f109 0901 	add.w	r9, r9, #1
 801125c:	4422      	add	r2, r4
 801125e:	e79c      	b.n	801119a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8011260:	b007      	add	sp, #28
 8011262:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011266 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011266:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801126a:	b085      	sub	sp, #20
 801126c:	468b      	mov	fp, r1
 801126e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011270:	9203      	str	r2, [sp, #12]
 8011272:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8011276:	6861      	ldr	r1, [r4, #4]
 8011278:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801127c:	fb01 2000 	mla	r0, r1, r0, r2
 8011280:	6822      	ldr	r2, [r4, #0]
 8011282:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8011286:	f8d8 2000 	ldr.w	r2, [r8]
 801128a:	9200      	str	r2, [sp, #0]
 801128c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8011290:	9201      	str	r2, [sp, #4]
 8011292:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011296:	f1bb 0f00 	cmp.w	fp, #0
 801129a:	dc03      	bgt.n	80112a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801129c:	9a03      	ldr	r2, [sp, #12]
 801129e:	2a00      	cmp	r2, #0
 80112a0:	f340 8146 	ble.w	8011530 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80112a4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80112a6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80112aa:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80112ae:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80112b2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80112b4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80112b8:	2b00      	cmp	r3, #0
 80112ba:	dd0e      	ble.n	80112da <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80112bc:	140c      	asrs	r4, r1, #16
 80112be:	d405      	bmi.n	80112cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80112c0:	42bc      	cmp	r4, r7
 80112c2:	da03      	bge.n	80112cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80112c4:	1414      	asrs	r4, r2, #16
 80112c6:	d401      	bmi.n	80112cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80112c8:	42b4      	cmp	r4, r6
 80112ca:	db07      	blt.n	80112dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80112cc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80112ce:	4421      	add	r1, r4
 80112d0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80112d2:	3b01      	subs	r3, #1
 80112d4:	4422      	add	r2, r4
 80112d6:	3002      	adds	r0, #2
 80112d8:	e7ee      	b.n	80112b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80112da:	d017      	beq.n	801130c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80112dc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80112de:	1e5c      	subs	r4, r3, #1
 80112e0:	fb05 1504 	mla	r5, r5, r4, r1
 80112e4:	142d      	asrs	r5, r5, #16
 80112e6:	d409      	bmi.n	80112fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80112e8:	42bd      	cmp	r5, r7
 80112ea:	da07      	bge.n	80112fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80112ec:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80112ee:	fb05 2404 	mla	r4, r5, r4, r2
 80112f2:	1424      	asrs	r4, r4, #16
 80112f4:	d402      	bmi.n	80112fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80112f6:	42b4      	cmp	r4, r6
 80112f8:	f2c0 80b3 	blt.w	8011462 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80112fc:	2600      	movs	r6, #0
 80112fe:	199c      	adds	r4, r3, r6
 8011300:	2c00      	cmp	r4, #0
 8011302:	dc3e      	bgt.n	8011382 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8011304:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011308:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801130c:	f1bb 0f00 	cmp.w	fp, #0
 8011310:	f340 810e 	ble.w	8011530 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8011314:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011318:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801131c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011320:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011322:	f1bb 0b01 	subs.w	fp, fp, #1
 8011326:	ee31 1a05 	vadd.f32	s2, s2, s10
 801132a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801132e:	eeb0 6a62 	vmov.f32	s12, s5
 8011332:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011336:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801133a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801133e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011342:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011346:	eeb0 6a43 	vmov.f32	s12, s6
 801134a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801134e:	ee12 2a90 	vmov	r2, s5
 8011352:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011356:	fb92 f3f3 	sdiv	r3, r2, r3
 801135a:	ee13 2a10 	vmov	r2, s6
 801135e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011362:	9311      	str	r3, [sp, #68]	; 0x44
 8011364:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011366:	fb92 f3f3 	sdiv	r3, r2, r3
 801136a:	9a03      	ldr	r2, [sp, #12]
 801136c:	9312      	str	r3, [sp, #72]	; 0x48
 801136e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011372:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011374:	eeb0 3a67 	vmov.f32	s6, s15
 8011378:	bf08      	it	eq
 801137a:	4613      	moveq	r3, r2
 801137c:	eef0 2a47 	vmov.f32	s5, s14
 8011380:	e789      	b.n	8011296 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8011382:	140f      	asrs	r7, r1, #16
 8011384:	d418      	bmi.n	80113b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011386:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801138a:	42bd      	cmp	r5, r7
 801138c:	dd14      	ble.n	80113b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801138e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011392:	d411      	bmi.n	80113b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011394:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8011398:	4564      	cmp	r4, ip
 801139a:	dd0d      	ble.n	80113b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801139c:	b22d      	sxth	r5, r5
 801139e:	fb0c 7505 	mla	r5, ip, r5, r7
 80113a2:	9c01      	ldr	r4, [sp, #4]
 80113a4:	5d64      	ldrb	r4, [r4, r5]
 80113a6:	2cff      	cmp	r4, #255	; 0xff
 80113a8:	d10c      	bne.n	80113c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80113aa:	9c00      	ldr	r4, [sp, #0]
 80113ac:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80113b0:	f06f 0401 	mvn.w	r4, #1
 80113b4:	4374      	muls	r4, r6
 80113b6:	5305      	strh	r5, [r0, r4]
 80113b8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80113ba:	4421      	add	r1, r4
 80113bc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80113be:	3e01      	subs	r6, #1
 80113c0:	4422      	add	r2, r4
 80113c2:	e79c      	b.n	80112fe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80113c4:	2c00      	cmp	r4, #0
 80113c6:	d0f7      	beq.n	80113b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80113c8:	9f00      	ldr	r7, [sp, #0]
 80113ca:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 80113ce:	f06f 0501 	mvn.w	r5, #1
 80113d2:	4375      	muls	r5, r6
 80113d4:	9502      	str	r5, [sp, #8]
 80113d6:	5b45      	ldrh	r5, [r0, r5]
 80113d8:	fa1f fc84 	uxth.w	ip, r4
 80113dc:	122f      	asrs	r7, r5, #8
 80113de:	43e4      	mvns	r4, r4
 80113e0:	b2e4      	uxtb	r4, r4
 80113e2:	ea4f 2e29 	mov.w	lr, r9, asr #8
 80113e6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80113ea:	fb17 f704 	smulbb	r7, r7, r4
 80113ee:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80113f2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80113f6:	00ed      	lsls	r5, r5, #3
 80113f8:	fb0e 7e0c 	mla	lr, lr, ip, r7
 80113fc:	b2ed      	uxtb	r5, r5
 80113fe:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8011402:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8011406:	fb15 f504 	smulbb	r5, r5, r4
 801140a:	fa5f f989 	uxtb.w	r9, r9
 801140e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8011412:	fb09 550c 	mla	r5, r9, ip, r5
 8011416:	fb1a fa04 	smulbb	sl, sl, r4
 801141a:	fa1f fe8e 	uxth.w	lr, lr
 801141e:	b2ad      	uxth	r5, r5
 8011420:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011424:	fb07 a70c 	mla	r7, r7, ip, sl
 8011428:	f10e 0401 	add.w	r4, lr, #1
 801142c:	f105 0a01 	add.w	sl, r5, #1
 8011430:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8011434:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011438:	b2bf      	uxth	r7, r7
 801143a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801143e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8011442:	ea4a 0e0e 	orr.w	lr, sl, lr
 8011446:	f107 0a01 	add.w	sl, r7, #1
 801144a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801144e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011452:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011456:	9c02      	ldr	r4, [sp, #8]
 8011458:	ea4e 0e0a 	orr.w	lr, lr, sl
 801145c:	f820 e004 	strh.w	lr, [r0, r4]
 8011460:	e7aa      	b.n	80113b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8011462:	f04f 0900 	mov.w	r9, #0
 8011466:	eba3 0409 	sub.w	r4, r3, r9
 801146a:	2c00      	cmp	r4, #0
 801146c:	f77f af4a 	ble.w	8011304 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011470:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8011474:	1414      	asrs	r4, r2, #16
 8011476:	140d      	asrs	r5, r1, #16
 8011478:	fb06 5504 	mla	r5, r6, r4, r5
 801147c:	9c01      	ldr	r4, [sp, #4]
 801147e:	5d64      	ldrb	r4, [r4, r5]
 8011480:	2cff      	cmp	r4, #255	; 0xff
 8011482:	d10b      	bne.n	801149c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8011484:	9c00      	ldr	r4, [sp, #0]
 8011486:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801148a:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801148e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8011490:	4421      	add	r1, r4
 8011492:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8011494:	f109 0901 	add.w	r9, r9, #1
 8011498:	4422      	add	r2, r4
 801149a:	e7e4      	b.n	8011466 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801149c:	2c00      	cmp	r4, #0
 801149e:	d0f6      	beq.n	801148e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80114a0:	9e00      	ldr	r6, [sp, #0]
 80114a2:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80114a6:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80114aa:	b2a7      	uxth	r7, r4
 80114ac:	122e      	asrs	r6, r5, #8
 80114ae:	43e4      	mvns	r4, r4
 80114b0:	b2e4      	uxtb	r4, r4
 80114b2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80114b6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80114ba:	fb16 f604 	smulbb	r6, r6, r4
 80114be:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80114c2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80114c6:	00ed      	lsls	r5, r5, #3
 80114c8:	fb0c 6c07 	mla	ip, ip, r7, r6
 80114cc:	b2ed      	uxtb	r5, r5
 80114ce:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80114d2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80114d6:	fb15 f504 	smulbb	r5, r5, r4
 80114da:	fa5f fe8e 	uxtb.w	lr, lr
 80114de:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80114e2:	fb0e 5507 	mla	r5, lr, r7, r5
 80114e6:	fb1a fa04 	smulbb	sl, sl, r4
 80114ea:	fa1f fc8c 	uxth.w	ip, ip
 80114ee:	b2ad      	uxth	r5, r5
 80114f0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80114f4:	fb06 a607 	mla	r6, r6, r7, sl
 80114f8:	f10c 0401 	add.w	r4, ip, #1
 80114fc:	f105 0a01 	add.w	sl, r5, #1
 8011500:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8011504:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011508:	b2b6      	uxth	r6, r6
 801150a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801150e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011512:	ea4a 0c0c 	orr.w	ip, sl, ip
 8011516:	f106 0a01 	add.w	sl, r6, #1
 801151a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801151e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011522:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011526:	ea4c 0c0a 	orr.w	ip, ip, sl
 801152a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801152e:	e7ae      	b.n	801148e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8011530:	b005      	add	sp, #20
 8011532:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011536 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011536:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801153a:	b085      	sub	sp, #20
 801153c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801153e:	9203      	str	r2, [sp, #12]
 8011540:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8011544:	9201      	str	r2, [sp, #4]
 8011546:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801154a:	9100      	str	r1, [sp, #0]
 801154c:	6841      	ldr	r1, [r0, #4]
 801154e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8011552:	fb01 2404 	mla	r4, r1, r4, r2
 8011556:	6802      	ldr	r2, [r0, #0]
 8011558:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801155c:	f8de 2000 	ldr.w	r2, [lr]
 8011560:	9202      	str	r2, [sp, #8]
 8011562:	9a01      	ldr	r2, [sp, #4]
 8011564:	43d6      	mvns	r6, r2
 8011566:	b2f6      	uxtb	r6, r6
 8011568:	9a00      	ldr	r2, [sp, #0]
 801156a:	2a00      	cmp	r2, #0
 801156c:	dc03      	bgt.n	8011576 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801156e:	9a03      	ldr	r2, [sp, #12]
 8011570:	2a00      	cmp	r2, #0
 8011572:	f340 8124 	ble.w	80117be <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8011576:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011578:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801157c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8011580:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011584:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011586:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801158a:	2b00      	cmp	r3, #0
 801158c:	dd0e      	ble.n	80115ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801158e:	1408      	asrs	r0, r1, #16
 8011590:	d405      	bmi.n	801159e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011592:	4560      	cmp	r0, ip
 8011594:	da03      	bge.n	801159e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8011596:	1410      	asrs	r0, r2, #16
 8011598:	d401      	bmi.n	801159e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801159a:	42b8      	cmp	r0, r7
 801159c:	db07      	blt.n	80115ae <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801159e:	9811      	ldr	r0, [sp, #68]	; 0x44
 80115a0:	4401      	add	r1, r0
 80115a2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80115a4:	3b01      	subs	r3, #1
 80115a6:	4402      	add	r2, r0
 80115a8:	3402      	adds	r4, #2
 80115aa:	e7ee      	b.n	801158a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80115ac:	d06e      	beq.n	801168c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80115ae:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80115b0:	1e58      	subs	r0, r3, #1
 80115b2:	fb05 1500 	mla	r5, r5, r0, r1
 80115b6:	142d      	asrs	r5, r5, #16
 80115b8:	d45c      	bmi.n	8011674 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80115ba:	4565      	cmp	r5, ip
 80115bc:	da5a      	bge.n	8011674 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80115be:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80115c0:	fb05 2000 	mla	r0, r5, r0, r2
 80115c4:	1400      	asrs	r0, r0, #16
 80115c6:	d455      	bmi.n	8011674 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80115c8:	42b8      	cmp	r0, r7
 80115ca:	da53      	bge.n	8011674 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80115cc:	f8bd b004 	ldrh.w	fp, [sp, #4]
 80115d0:	4699      	mov	r9, r3
 80115d2:	46a2      	mov	sl, r4
 80115d4:	f1b9 0f00 	cmp.w	r9, #0
 80115d8:	dd54      	ble.n	8011684 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80115da:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80115de:	140d      	asrs	r5, r1, #16
 80115e0:	1410      	asrs	r0, r2, #16
 80115e2:	fb07 5000 	mla	r0, r7, r0, r5
 80115e6:	9d02      	ldr	r5, [sp, #8]
 80115e8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80115ec:	f8ba 5000 	ldrh.w	r5, [sl]
 80115f0:	122f      	asrs	r7, r5, #8
 80115f2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80115f6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80115fa:	fb17 f706 	smulbb	r7, r7, r6
 80115fe:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8011602:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011606:	00ed      	lsls	r5, r5, #3
 8011608:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801160c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8011610:	10c7      	asrs	r7, r0, #3
 8011612:	b2ed      	uxtb	r5, r5
 8011614:	00c0      	lsls	r0, r0, #3
 8011616:	fb18 f806 	smulbb	r8, r8, r6
 801161a:	fb15 f506 	smulbb	r5, r5, r6
 801161e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011622:	b2c0      	uxtb	r0, r0
 8011624:	fa1f fc8c 	uxth.w	ip, ip
 8011628:	fb07 870b 	mla	r7, r7, fp, r8
 801162c:	fb00 500b 	mla	r0, r0, fp, r5
 8011630:	b280      	uxth	r0, r0
 8011632:	b2bf      	uxth	r7, r7
 8011634:	f10c 0501 	add.w	r5, ip, #1
 8011638:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801163c:	f107 0801 	add.w	r8, r7, #1
 8011640:	1c45      	adds	r5, r0, #1
 8011642:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8011646:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801164a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801164c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011650:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8011654:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8011658:	ea45 0c0c 	orr.w	ip, r5, ip
 801165c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8011660:	4401      	add	r1, r0
 8011662:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011664:	ea4c 0c08 	orr.w	ip, ip, r8
 8011668:	f82a cb02 	strh.w	ip, [sl], #2
 801166c:	4402      	add	r2, r0
 801166e:	f109 39ff 	add.w	r9, r9, #4294967295
 8011672:	e7af      	b.n	80115d4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011674:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8011678:	f04f 0800 	mov.w	r8, #0
 801167c:	eb03 0008 	add.w	r0, r3, r8
 8011680:	2800      	cmp	r0, #0
 8011682:	dc41      	bgt.n	8011708 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8011684:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011688:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801168c:	9b00      	ldr	r3, [sp, #0]
 801168e:	2b00      	cmp	r3, #0
 8011690:	f340 8095 	ble.w	80117be <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8011694:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011698:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801169c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80116a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80116a2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80116a6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80116aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80116ae:	eef0 6a62 	vmov.f32	s13, s5
 80116b2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80116b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80116ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 80116be:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 80116c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80116c6:	eef0 6a43 	vmov.f32	s13, s6
 80116ca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80116ce:	ee12 2a90 	vmov	r2, s5
 80116d2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80116d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80116da:	ee13 2a10 	vmov	r2, s6
 80116de:	9311      	str	r3, [sp, #68]	; 0x44
 80116e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80116e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80116e6:	9312      	str	r3, [sp, #72]	; 0x48
 80116e8:	9b00      	ldr	r3, [sp, #0]
 80116ea:	9a03      	ldr	r2, [sp, #12]
 80116ec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80116f0:	3b01      	subs	r3, #1
 80116f2:	9300      	str	r3, [sp, #0]
 80116f4:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 80116f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80116fa:	eeb0 3a67 	vmov.f32	s6, s15
 80116fe:	bf08      	it	eq
 8011700:	4613      	moveq	r3, r2
 8011702:	eef0 2a47 	vmov.f32	s5, s14
 8011706:	e72f      	b.n	8011568 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8011708:	140f      	asrs	r7, r1, #16
 801170a:	d451      	bmi.n	80117b0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801170c:	f8de 5008 	ldr.w	r5, [lr, #8]
 8011710:	42bd      	cmp	r5, r7
 8011712:	dd4d      	ble.n	80117b0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8011714:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011718:	d44a      	bmi.n	80117b0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801171a:	f8de 000c 	ldr.w	r0, [lr, #12]
 801171e:	4560      	cmp	r0, ip
 8011720:	dd46      	ble.n	80117b0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8011722:	b22d      	sxth	r5, r5
 8011724:	fb0c 7505 	mla	r5, ip, r5, r7
 8011728:	9802      	ldr	r0, [sp, #8]
 801172a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801172e:	f06f 0501 	mvn.w	r5, #1
 8011732:	fb05 fb08 	mul.w	fp, r5, r8
 8011736:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801173a:	f834 500b 	ldrh.w	r5, [r4, fp]
 801173e:	122f      	asrs	r7, r5, #8
 8011740:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011744:	fb17 f706 	smulbb	r7, r7, r6
 8011748:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801174c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011750:	00ed      	lsls	r5, r5, #3
 8011752:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8011756:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801175a:	10c7      	asrs	r7, r0, #3
 801175c:	b2ed      	uxtb	r5, r5
 801175e:	00c0      	lsls	r0, r0, #3
 8011760:	fb19 f906 	smulbb	r9, r9, r6
 8011764:	fb15 f506 	smulbb	r5, r5, r6
 8011768:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801176c:	b2c0      	uxtb	r0, r0
 801176e:	fa1f fc8c 	uxth.w	ip, ip
 8011772:	fb07 970a 	mla	r7, r7, sl, r9
 8011776:	fb00 500a 	mla	r0, r0, sl, r5
 801177a:	b2bf      	uxth	r7, r7
 801177c:	b280      	uxth	r0, r0
 801177e:	f10c 0501 	add.w	r5, ip, #1
 8011782:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011786:	f107 0901 	add.w	r9, r7, #1
 801178a:	1c45      	adds	r5, r0, #1
 801178c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8011790:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8011794:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011798:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801179c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80117a0:	ea45 0c0c 	orr.w	ip, r5, ip
 80117a4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80117a8:	ea4c 0c09 	orr.w	ip, ip, r9
 80117ac:	f824 c00b 	strh.w	ip, [r4, fp]
 80117b0:	9811      	ldr	r0, [sp, #68]	; 0x44
 80117b2:	4401      	add	r1, r0
 80117b4:	9812      	ldr	r0, [sp, #72]	; 0x48
 80117b6:	f108 38ff 	add.w	r8, r8, #4294967295
 80117ba:	4402      	add	r2, r0
 80117bc:	e75e      	b.n	801167c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 80117be:	b005      	add	sp, #20
 80117c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080117c4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80117c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80117c8:	b085      	sub	sp, #20
 80117ca:	4693      	mov	fp, r2
 80117cc:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80117ce:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80117d0:	6870      	ldr	r0, [r6, #4]
 80117d2:	9101      	str	r1, [sp, #4]
 80117d4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80117d8:	fb00 2404 	mla	r4, r0, r4, r2
 80117dc:	6832      	ldr	r2, [r6, #0]
 80117de:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 80117e2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80117e6:	682a      	ldr	r2, [r5, #0]
 80117e8:	9202      	str	r2, [sp, #8]
 80117ea:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80117ee:	9a01      	ldr	r2, [sp, #4]
 80117f0:	2a00      	cmp	r2, #0
 80117f2:	dc03      	bgt.n	80117fc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80117f4:	f1bb 0f00 	cmp.w	fp, #0
 80117f8:	f340 809a 	ble.w	8011930 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80117fc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80117fe:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8011802:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8011806:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801180a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801180c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011810:	2b00      	cmp	r3, #0
 8011812:	dd0c      	ble.n	801182e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8011814:	1406      	asrs	r6, r0, #16
 8011816:	d405      	bmi.n	8011824 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011818:	454e      	cmp	r6, r9
 801181a:	da03      	bge.n	8011824 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801181c:	1416      	asrs	r6, r2, #16
 801181e:	d401      	bmi.n	8011824 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011820:	4546      	cmp	r6, r8
 8011822:	db05      	blt.n	8011830 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8011824:	4470      	add	r0, lr
 8011826:	4462      	add	r2, ip
 8011828:	3b01      	subs	r3, #1
 801182a:	3402      	adds	r4, #2
 801182c:	e7f0      	b.n	8011810 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801182e:	d00f      	beq.n	8011850 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8011830:	1e5e      	subs	r6, r3, #1
 8011832:	fb0e 0706 	mla	r7, lr, r6, r0
 8011836:	143f      	asrs	r7, r7, #16
 8011838:	d541      	bpl.n	80118be <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801183a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801183e:	4698      	mov	r8, r3
 8011840:	9603      	str	r6, [sp, #12]
 8011842:	f1b8 0f00 	cmp.w	r8, #0
 8011846:	dc56      	bgt.n	80118f6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8011848:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801184c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011850:	9b01      	ldr	r3, [sp, #4]
 8011852:	2b00      	cmp	r3, #0
 8011854:	dd6c      	ble.n	8011930 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8011856:	ee30 0a04 	vadd.f32	s0, s0, s8
 801185a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801185e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011862:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011864:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011868:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801186c:	eeb0 6a62 	vmov.f32	s12, s5
 8011870:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011874:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011878:	ee77 2a62 	vsub.f32	s5, s14, s5
 801187c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011880:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011884:	eeb0 6a43 	vmov.f32	s12, s6
 8011888:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801188c:	ee12 2a90 	vmov	r2, s5
 8011890:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011894:	fb92 fef3 	sdiv	lr, r2, r3
 8011898:	ee13 2a10 	vmov	r2, s6
 801189c:	fb92 fcf3 	sdiv	ip, r2, r3
 80118a0:	9b01      	ldr	r3, [sp, #4]
 80118a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80118a6:	3b01      	subs	r3, #1
 80118a8:	9301      	str	r3, [sp, #4]
 80118aa:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80118ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80118b0:	eeb0 3a67 	vmov.f32	s6, s15
 80118b4:	bf08      	it	eq
 80118b6:	465b      	moveq	r3, fp
 80118b8:	eef0 2a47 	vmov.f32	s5, s14
 80118bc:	e797      	b.n	80117ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80118be:	454f      	cmp	r7, r9
 80118c0:	dabb      	bge.n	801183a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80118c2:	fb0c 2606 	mla	r6, ip, r6, r2
 80118c6:	1436      	asrs	r6, r6, #16
 80118c8:	d4b7      	bmi.n	801183a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80118ca:	4546      	cmp	r6, r8
 80118cc:	dab5      	bge.n	801183a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80118ce:	461e      	mov	r6, r3
 80118d0:	46a0      	mov	r8, r4
 80118d2:	2e00      	cmp	r6, #0
 80118d4:	ddb8      	ble.n	8011848 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80118d6:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80118da:	9902      	ldr	r1, [sp, #8]
 80118dc:	1417      	asrs	r7, r2, #16
 80118de:	ea4f 4920 	mov.w	r9, r0, asr #16
 80118e2:	fb0a 9707 	mla	r7, sl, r7, r9
 80118e6:	4470      	add	r0, lr
 80118e8:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80118ec:	f828 7b02 	strh.w	r7, [r8], #2
 80118f0:	4462      	add	r2, ip
 80118f2:	3e01      	subs	r6, #1
 80118f4:	e7ed      	b.n	80118d2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80118f6:	ea5f 4920 	movs.w	r9, r0, asr #16
 80118fa:	d414      	bmi.n	8011926 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80118fc:	68ae      	ldr	r6, [r5, #8]
 80118fe:	454e      	cmp	r6, r9
 8011900:	dd11      	ble.n	8011926 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8011902:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8011906:	d40e      	bmi.n	8011926 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8011908:	68ef      	ldr	r7, [r5, #12]
 801190a:	4557      	cmp	r7, sl
 801190c:	dd0b      	ble.n	8011926 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801190e:	b236      	sxth	r6, r6
 8011910:	fb0a 9606 	mla	r6, sl, r6, r9
 8011914:	9f02      	ldr	r7, [sp, #8]
 8011916:	f06f 0101 	mvn.w	r1, #1
 801191a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801191e:	fb01 f608 	mul.w	r6, r1, r8
 8011922:	9903      	ldr	r1, [sp, #12]
 8011924:	538f      	strh	r7, [r1, r6]
 8011926:	4470      	add	r0, lr
 8011928:	4462      	add	r2, ip
 801192a:	f108 38ff 	add.w	r8, r8, #4294967295
 801192e:	e788      	b.n	8011842 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011930:	b005      	add	sp, #20
 8011932:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011936 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011936:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801193a:	b087      	sub	sp, #28
 801193c:	468b      	mov	fp, r1
 801193e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011940:	9203      	str	r2, [sp, #12]
 8011942:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011946:	9204      	str	r2, [sp, #16]
 8011948:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801194c:	6841      	ldr	r1, [r0, #4]
 801194e:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8011952:	fb01 2505 	mla	r5, r1, r5, r2
 8011956:	6802      	ldr	r2, [r0, #0]
 8011958:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801195c:	f8d9 2000 	ldr.w	r2, [r9]
 8011960:	9201      	str	r2, [sp, #4]
 8011962:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011966:	f1bb 0f00 	cmp.w	fp, #0
 801196a:	dc03      	bgt.n	8011974 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801196c:	9a03      	ldr	r2, [sp, #12]
 801196e:	2a00      	cmp	r2, #0
 8011970:	f340 8159 	ble.w	8011c26 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8011974:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011976:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801197a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801197e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011982:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011984:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011988:	2b00      	cmp	r3, #0
 801198a:	dd0e      	ble.n	80119aa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801198c:	1402      	asrs	r2, r0, #16
 801198e:	d405      	bmi.n	801199c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011990:	42ba      	cmp	r2, r7
 8011992:	da03      	bge.n	801199c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011994:	140a      	asrs	r2, r1, #16
 8011996:	d401      	bmi.n	801199c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011998:	42b2      	cmp	r2, r6
 801199a:	db07      	blt.n	80119ac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801199c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801199e:	4410      	add	r0, r2
 80119a0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80119a2:	3b01      	subs	r3, #1
 80119a4:	4411      	add	r1, r2
 80119a6:	3502      	adds	r5, #2
 80119a8:	e7ee      	b.n	8011988 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80119aa:	d017      	beq.n	80119dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80119ac:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80119ae:	1e5a      	subs	r2, r3, #1
 80119b0:	fb04 0402 	mla	r4, r4, r2, r0
 80119b4:	1424      	asrs	r4, r4, #16
 80119b6:	d409      	bmi.n	80119cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80119b8:	42bc      	cmp	r4, r7
 80119ba:	da07      	bge.n	80119cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80119bc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80119be:	fb04 1202 	mla	r2, r4, r2, r1
 80119c2:	1412      	asrs	r2, r2, #16
 80119c4:	d402      	bmi.n	80119cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80119c6:	42b2      	cmp	r2, r6
 80119c8:	f2c0 80bf 	blt.w	8011b4a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80119cc:	2700      	movs	r7, #0
 80119ce:	19da      	adds	r2, r3, r7
 80119d0:	2a00      	cmp	r2, #0
 80119d2:	dc3e      	bgt.n	8011a52 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80119d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80119d8:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80119dc:	f1bb 0f00 	cmp.w	fp, #0
 80119e0:	f340 8121 	ble.w	8011c26 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80119e4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80119e8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80119ec:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80119f0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80119f2:	f1bb 0b01 	subs.w	fp, fp, #1
 80119f6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80119fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80119fe:	eeb0 6a62 	vmov.f32	s12, s5
 8011a02:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011a06:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011a0a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011a0e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011a12:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011a16:	eeb0 6a43 	vmov.f32	s12, s6
 8011a1a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011a1e:	ee12 2a90 	vmov	r2, s5
 8011a22:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011a26:	fb92 f3f3 	sdiv	r3, r2, r3
 8011a2a:	ee13 2a10 	vmov	r2, s6
 8011a2e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011a32:	9313      	str	r3, [sp, #76]	; 0x4c
 8011a34:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011a36:	fb92 f3f3 	sdiv	r3, r2, r3
 8011a3a:	9a03      	ldr	r2, [sp, #12]
 8011a3c:	9314      	str	r3, [sp, #80]	; 0x50
 8011a3e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011a42:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011a44:	eeb0 3a67 	vmov.f32	s6, s15
 8011a48:	bf08      	it	eq
 8011a4a:	4613      	moveq	r3, r2
 8011a4c:	eef0 2a47 	vmov.f32	s5, s14
 8011a50:	e789      	b.n	8011966 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8011a52:	1406      	asrs	r6, r0, #16
 8011a54:	d42d      	bmi.n	8011ab2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011a56:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8011a5a:	42b4      	cmp	r4, r6
 8011a5c:	dd29      	ble.n	8011ab2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011a5e:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8011a62:	d426      	bmi.n	8011ab2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011a64:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8011a68:	4562      	cmp	r2, ip
 8011a6a:	dd22      	ble.n	8011ab2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011a6c:	b224      	sxth	r4, r4
 8011a6e:	9a01      	ldr	r2, [sp, #4]
 8011a70:	fb0c 6404 	mla	r4, ip, r4, r6
 8011a74:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8011a78:	0e22      	lsrs	r2, r4, #24
 8011a7a:	d01a      	beq.n	8011ab2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011a7c:	9e04      	ldr	r6, [sp, #16]
 8011a7e:	4372      	muls	r2, r6
 8011a80:	1c56      	adds	r6, r2, #1
 8011a82:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8011a86:	1212      	asrs	r2, r2, #8
 8011a88:	0a26      	lsrs	r6, r4, #8
 8011a8a:	2aff      	cmp	r2, #255	; 0xff
 8011a8c:	9605      	str	r6, [sp, #20]
 8011a8e:	d116      	bne.n	8011abe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8011a90:	f06f 0201 	mvn.w	r2, #1
 8011a94:	fb02 fc07 	mul.w	ip, r2, r7
 8011a98:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8011a9c:	0962      	lsrs	r2, r4, #5
 8011a9e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011aa2:	f026 0607 	bic.w	r6, r6, #7
 8011aa6:	4316      	orrs	r6, r2
 8011aa8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011aac:	4326      	orrs	r6, r4
 8011aae:	f825 600c 	strh.w	r6, [r5, ip]
 8011ab2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011ab4:	4410      	add	r0, r2
 8011ab6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011ab8:	3f01      	subs	r7, #1
 8011aba:	4411      	add	r1, r2
 8011abc:	e787      	b.n	80119ce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011abe:	f06f 0601 	mvn.w	r6, #1
 8011ac2:	437e      	muls	r6, r7
 8011ac4:	fa1f fa82 	uxth.w	sl, r2
 8011ac8:	f835 8006 	ldrh.w	r8, [r5, r6]
 8011acc:	9602      	str	r6, [sp, #8]
 8011ace:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8011ad2:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8011ad6:	43d2      	mvns	r2, r2
 8011ad8:	b2d2      	uxtb	r2, r2
 8011ada:	fb1c fc0a 	smulbb	ip, ip, sl
 8011ade:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8011ae2:	fb0e ce02 	mla	lr, lr, r2, ip
 8011ae6:	b2e4      	uxtb	r4, r4
 8011ae8:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8011aec:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011af0:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8011af4:	fa5f f888 	uxtb.w	r8, r8
 8011af8:	fb14 f40a 	smulbb	r4, r4, sl
 8011afc:	fb08 4402 	mla	r4, r8, r2, r4
 8011b00:	fa1f fe8e 	uxth.w	lr, lr
 8011b04:	fb16 f60a 	smulbb	r6, r6, sl
 8011b08:	b2a4      	uxth	r4, r4
 8011b0a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8011b0e:	fb0c 6c02 	mla	ip, ip, r2, r6
 8011b12:	f10e 0201 	add.w	r2, lr, #1
 8011b16:	1c66      	adds	r6, r4, #1
 8011b18:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8011b1c:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8011b20:	fa1f fc8c 	uxth.w	ip, ip
 8011b24:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011b28:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8011b2c:	ea46 0e0e 	orr.w	lr, r6, lr
 8011b30:	f10c 0601 	add.w	r6, ip, #1
 8011b34:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8011b38:	0976      	lsrs	r6, r6, #5
 8011b3a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011b3e:	9a02      	ldr	r2, [sp, #8]
 8011b40:	ea4e 0e06 	orr.w	lr, lr, r6
 8011b44:	f825 e002 	strh.w	lr, [r5, r2]
 8011b48:	e7b3      	b.n	8011ab2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8011b4a:	f04f 0800 	mov.w	r8, #0
 8011b4e:	eba3 0208 	sub.w	r2, r3, r8
 8011b52:	2a00      	cmp	r2, #0
 8011b54:	f77f af3e 	ble.w	80119d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011b58:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8011b5c:	1404      	asrs	r4, r0, #16
 8011b5e:	140a      	asrs	r2, r1, #16
 8011b60:	fb06 4202 	mla	r2, r6, r2, r4
 8011b64:	9c01      	ldr	r4, [sp, #4]
 8011b66:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8011b6a:	0e22      	lsrs	r2, r4, #24
 8011b6c:	d016      	beq.n	8011b9c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8011b6e:	9e04      	ldr	r6, [sp, #16]
 8011b70:	4372      	muls	r2, r6
 8011b72:	1c56      	adds	r6, r2, #1
 8011b74:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8011b78:	1212      	asrs	r2, r2, #8
 8011b7a:	2aff      	cmp	r2, #255	; 0xff
 8011b7c:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8011b80:	d113      	bne.n	8011baa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8011b82:	0962      	lsrs	r2, r4, #5
 8011b84:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8011b88:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8011b8c:	f026 0607 	bic.w	r6, r6, #7
 8011b90:	4316      	orrs	r6, r2
 8011b92:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011b96:	4326      	orrs	r6, r4
 8011b98:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8011b9c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011b9e:	4410      	add	r0, r2
 8011ba0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011ba2:	f108 0801 	add.w	r8, r8, #1
 8011ba6:	4411      	add	r1, r2
 8011ba8:	e7d1      	b.n	8011b4e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8011baa:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8011bae:	fa1f fa82 	uxth.w	sl, r2
 8011bb2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011bb6:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8011bba:	43d2      	mvns	r2, r2
 8011bbc:	b2d2      	uxtb	r2, r2
 8011bbe:	fb17 f70a 	smulbb	r7, r7, sl
 8011bc2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011bc6:	fb0c 7c02 	mla	ip, ip, r2, r7
 8011bca:	b2e4      	uxtb	r4, r4
 8011bcc:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8011bd0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011bd4:	fa5f fe8e 	uxtb.w	lr, lr
 8011bd8:	fb14 f40a 	smulbb	r4, r4, sl
 8011bdc:	fb0e 4402 	mla	r4, lr, r2, r4
 8011be0:	b2f6      	uxtb	r6, r6
 8011be2:	fa1f fc8c 	uxth.w	ip, ip
 8011be6:	fb16 f60a 	smulbb	r6, r6, sl
 8011bea:	b2a4      	uxth	r4, r4
 8011bec:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011bf0:	fb07 6702 	mla	r7, r7, r2, r6
 8011bf4:	f10c 0201 	add.w	r2, ip, #1
 8011bf8:	1c66      	adds	r6, r4, #1
 8011bfa:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8011bfe:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8011c02:	b2bf      	uxth	r7, r7
 8011c04:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011c08:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011c0c:	ea46 0c0c 	orr.w	ip, r6, ip
 8011c10:	1c7e      	adds	r6, r7, #1
 8011c12:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8011c16:	0976      	lsrs	r6, r6, #5
 8011c18:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011c1c:	ea4c 0c06 	orr.w	ip, ip, r6
 8011c20:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8011c24:	e7ba      	b.n	8011b9c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8011c26:	b007      	add	sp, #28
 8011c28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011c2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011c2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011c30:	b085      	sub	sp, #20
 8011c32:	468b      	mov	fp, r1
 8011c34:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011c36:	9203      	str	r2, [sp, #12]
 8011c38:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011c3c:	6841      	ldr	r1, [r0, #4]
 8011c3e:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8011c42:	fb01 2404 	mla	r4, r1, r4, r2
 8011c46:	6802      	ldr	r2, [r0, #0]
 8011c48:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011c4c:	f8d8 2000 	ldr.w	r2, [r8]
 8011c50:	9201      	str	r2, [sp, #4]
 8011c52:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011c56:	f1bb 0f00 	cmp.w	fp, #0
 8011c5a:	dc03      	bgt.n	8011c64 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8011c5c:	9a03      	ldr	r2, [sp, #12]
 8011c5e:	2a00      	cmp	r2, #0
 8011c60:	f340 814f 	ble.w	8011f02 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8011c64:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011c66:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8011c6a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8011c6e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011c72:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011c74:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011c78:	2b00      	cmp	r3, #0
 8011c7a:	dd0e      	ble.n	8011c9a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8011c7c:	1408      	asrs	r0, r1, #16
 8011c7e:	d405      	bmi.n	8011c8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011c80:	42b8      	cmp	r0, r7
 8011c82:	da03      	bge.n	8011c8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011c84:	1410      	asrs	r0, r2, #16
 8011c86:	d401      	bmi.n	8011c8c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8011c88:	42b0      	cmp	r0, r6
 8011c8a:	db07      	blt.n	8011c9c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011c8c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011c8e:	4401      	add	r1, r0
 8011c90:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011c92:	3b01      	subs	r3, #1
 8011c94:	4402      	add	r2, r0
 8011c96:	3402      	adds	r4, #2
 8011c98:	e7ee      	b.n	8011c78 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8011c9a:	d017      	beq.n	8011ccc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8011c9c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8011c9e:	1e58      	subs	r0, r3, #1
 8011ca0:	fb05 1500 	mla	r5, r5, r0, r1
 8011ca4:	142d      	asrs	r5, r5, #16
 8011ca6:	d409      	bmi.n	8011cbc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011ca8:	42bd      	cmp	r5, r7
 8011caa:	da07      	bge.n	8011cbc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011cac:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8011cae:	fb05 2000 	mla	r0, r5, r0, r2
 8011cb2:	1400      	asrs	r0, r0, #16
 8011cb4:	d402      	bmi.n	8011cbc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8011cb6:	42b0      	cmp	r0, r6
 8011cb8:	f2c0 80ba 	blt.w	8011e30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8011cbc:	2600      	movs	r6, #0
 8011cbe:	1998      	adds	r0, r3, r6
 8011cc0:	2800      	cmp	r0, #0
 8011cc2:	dc3e      	bgt.n	8011d42 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8011cc4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011cc8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011ccc:	f1bb 0f00 	cmp.w	fp, #0
 8011cd0:	f340 8117 	ble.w	8011f02 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8011cd4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011cd8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011cdc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011ce0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011ce2:	f1bb 0b01 	subs.w	fp, fp, #1
 8011ce6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011cea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011cee:	eeb0 6a62 	vmov.f32	s12, s5
 8011cf2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011cf6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011cfa:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011cfe:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011d02:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011d06:	eeb0 6a43 	vmov.f32	s12, s6
 8011d0a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011d0e:	ee12 2a90 	vmov	r2, s5
 8011d12:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011d16:	fb92 f3f3 	sdiv	r3, r2, r3
 8011d1a:	ee13 2a10 	vmov	r2, s6
 8011d1e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011d22:	9311      	str	r3, [sp, #68]	; 0x44
 8011d24:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011d26:	fb92 f3f3 	sdiv	r3, r2, r3
 8011d2a:	9a03      	ldr	r2, [sp, #12]
 8011d2c:	9312      	str	r3, [sp, #72]	; 0x48
 8011d2e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011d32:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011d34:	eeb0 3a67 	vmov.f32	s6, s15
 8011d38:	bf08      	it	eq
 8011d3a:	4613      	moveq	r3, r2
 8011d3c:	eef0 2a47 	vmov.f32	s5, s14
 8011d40:	e789      	b.n	8011c56 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8011d42:	140f      	asrs	r7, r1, #16
 8011d44:	d424      	bmi.n	8011d90 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011d46:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8011d4a:	42bd      	cmp	r5, r7
 8011d4c:	dd20      	ble.n	8011d90 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011d4e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8011d52:	d41d      	bmi.n	8011d90 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011d54:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8011d58:	4560      	cmp	r0, ip
 8011d5a:	dd19      	ble.n	8011d90 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011d5c:	b22d      	sxth	r5, r5
 8011d5e:	fb0c 7505 	mla	r5, ip, r5, r7
 8011d62:	9801      	ldr	r0, [sp, #4]
 8011d64:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8011d68:	0e07      	lsrs	r7, r0, #24
 8011d6a:	2fff      	cmp	r7, #255	; 0xff
 8011d6c:	d116      	bne.n	8011d9c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8011d6e:	f06f 0501 	mvn.w	r5, #1
 8011d72:	fb05 f706 	mul.w	r7, r5, r6
 8011d76:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8011d7a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8011d7e:	0945      	lsrs	r5, r0, #5
 8011d80:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011d84:	ea4c 0505 	orr.w	r5, ip, r5
 8011d88:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8011d8c:	4305      	orrs	r5, r0
 8011d8e:	53e5      	strh	r5, [r4, r7]
 8011d90:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011d92:	4401      	add	r1, r0
 8011d94:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011d96:	3e01      	subs	r6, #1
 8011d98:	4402      	add	r2, r0
 8011d9a:	e790      	b.n	8011cbe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8011d9c:	b2fd      	uxtb	r5, r7
 8011d9e:	2f00      	cmp	r7, #0
 8011da0:	d0f6      	beq.n	8011d90 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011da2:	f06f 0701 	mvn.w	r7, #1
 8011da6:	4377      	muls	r7, r6
 8011da8:	fa1f f985 	uxth.w	r9, r5
 8011dac:	f834 e007 	ldrh.w	lr, [r4, r7]
 8011db0:	9702      	str	r7, [sp, #8]
 8011db2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011db6:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8011dba:	43ed      	mvns	r5, r5
 8011dbc:	b2ed      	uxtb	r5, r5
 8011dbe:	fb17 f709 	smulbb	r7, r7, r9
 8011dc2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011dc6:	fb0c 7c05 	mla	ip, ip, r5, r7
 8011dca:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8011dce:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8011dd2:	b2c0      	uxtb	r0, r0
 8011dd4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011dd8:	fa5f fe8e 	uxtb.w	lr, lr
 8011ddc:	fb10 f009 	smulbb	r0, r0, r9
 8011de0:	fb0e 0005 	mla	r0, lr, r5, r0
 8011de4:	b280      	uxth	r0, r0
 8011de6:	fa1f fc8c 	uxth.w	ip, ip
 8011dea:	fb1a fa09 	smulbb	sl, sl, r9
 8011dee:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011df2:	fb07 a705 	mla	r7, r7, r5, sl
 8011df6:	f100 0a01 	add.w	sl, r0, #1
 8011dfa:	f10c 0501 	add.w	r5, ip, #1
 8011dfe:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8011e02:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011e06:	b2bf      	uxth	r7, r7
 8011e08:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011e0c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011e10:	ea4a 0c0c 	orr.w	ip, sl, ip
 8011e14:	f107 0a01 	add.w	sl, r7, #1
 8011e18:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8011e1c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011e20:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011e24:	9802      	ldr	r0, [sp, #8]
 8011e26:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011e2a:	f824 c000 	strh.w	ip, [r4, r0]
 8011e2e:	e7af      	b.n	8011d90 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8011e30:	f04f 0e00 	mov.w	lr, #0
 8011e34:	eba3 000e 	sub.w	r0, r3, lr
 8011e38:	2800      	cmp	r0, #0
 8011e3a:	f77f af43 	ble.w	8011cc4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8011e3e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8011e42:	140d      	asrs	r5, r1, #16
 8011e44:	1410      	asrs	r0, r2, #16
 8011e46:	fb06 5000 	mla	r0, r6, r0, r5
 8011e4a:	9d01      	ldr	r5, [sp, #4]
 8011e4c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8011e50:	0e2e      	lsrs	r6, r5, #24
 8011e52:	2eff      	cmp	r6, #255	; 0xff
 8011e54:	d112      	bne.n	8011e7c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8011e56:	482c      	ldr	r0, [pc, #176]	; (8011f08 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8011e58:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8011e5c:	0968      	lsrs	r0, r5, #5
 8011e5e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8011e62:	4330      	orrs	r0, r6
 8011e64:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8011e68:	4328      	orrs	r0, r5
 8011e6a:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8011e6e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011e70:	4401      	add	r1, r0
 8011e72:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011e74:	f10e 0e01 	add.w	lr, lr, #1
 8011e78:	4402      	add	r2, r0
 8011e7a:	e7db      	b.n	8011e34 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8011e7c:	b2f0      	uxtb	r0, r6
 8011e7e:	2e00      	cmp	r6, #0
 8011e80:	d0f5      	beq.n	8011e6e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8011e82:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8011e86:	fa1f f980 	uxth.w	r9, r0
 8011e8a:	ea4f 272c 	mov.w	r7, ip, asr #8
 8011e8e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011e92:	43c0      	mvns	r0, r0
 8011e94:	b2c0      	uxtb	r0, r0
 8011e96:	fb16 f609 	smulbb	r6, r6, r9
 8011e9a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011e9e:	fb07 6700 	mla	r7, r7, r0, r6
 8011ea2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011ea6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8011eaa:	b2ed      	uxtb	r5, r5
 8011eac:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011eb0:	fa5f fc8c 	uxtb.w	ip, ip
 8011eb4:	fb15 f509 	smulbb	r5, r5, r9
 8011eb8:	fb0c 5500 	mla	r5, ip, r0, r5
 8011ebc:	b2bf      	uxth	r7, r7
 8011ebe:	fb1a fa09 	smulbb	sl, sl, r9
 8011ec2:	b2ad      	uxth	r5, r5
 8011ec4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011ec8:	fb06 a600 	mla	r6, r6, r0, sl
 8011ecc:	1c78      	adds	r0, r7, #1
 8011ece:	f105 0a01 	add.w	sl, r5, #1
 8011ed2:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8011ed6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011eda:	b2b6      	uxth	r6, r6
 8011edc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011ee0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011ee4:	ea4a 0707 	orr.w	r7, sl, r7
 8011ee8:	f106 0a01 	add.w	sl, r6, #1
 8011eec:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011ef0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011ef4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011ef8:	ea47 070a 	orr.w	r7, r7, sl
 8011efc:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8011f00:	e7b5      	b.n	8011e6e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8011f02:	b005      	add	sp, #20
 8011f04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011f08:	fffff800 	.word	0xfffff800

08011f0c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011f0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011f10:	b087      	sub	sp, #28
 8011f12:	468b      	mov	fp, r1
 8011f14:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011f16:	9203      	str	r2, [sp, #12]
 8011f18:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011f1c:	9204      	str	r2, [sp, #16]
 8011f1e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8011f22:	6841      	ldr	r1, [r0, #4]
 8011f24:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8011f28:	fb01 2404 	mla	r4, r1, r4, r2
 8011f2c:	6802      	ldr	r2, [r0, #0]
 8011f2e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011f32:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8011f36:	3201      	adds	r2, #1
 8011f38:	f022 0201 	bic.w	r2, r2, #1
 8011f3c:	9200      	str	r2, [sp, #0]
 8011f3e:	f8d9 2000 	ldr.w	r2, [r9]
 8011f42:	9201      	str	r2, [sp, #4]
 8011f44:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011f48:	f1bb 0f00 	cmp.w	fp, #0
 8011f4c:	dc03      	bgt.n	8011f56 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8011f4e:	9a03      	ldr	r2, [sp, #12]
 8011f50:	2a00      	cmp	r2, #0
 8011f52:	f340 8169 	ble.w	8012228 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8011f56:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011f58:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8011f5c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8011f60:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011f64:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011f66:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011f6a:	2b00      	cmp	r3, #0
 8011f6c:	dd0e      	ble.n	8011f8c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8011f6e:	1402      	asrs	r2, r0, #16
 8011f70:	d405      	bmi.n	8011f7e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011f72:	42ba      	cmp	r2, r7
 8011f74:	da03      	bge.n	8011f7e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011f76:	140a      	asrs	r2, r1, #16
 8011f78:	d401      	bmi.n	8011f7e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011f7a:	42b2      	cmp	r2, r6
 8011f7c:	db07      	blt.n	8011f8e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8011f7e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011f80:	4410      	add	r0, r2
 8011f82:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011f84:	3b01      	subs	r3, #1
 8011f86:	4411      	add	r1, r2
 8011f88:	3402      	adds	r4, #2
 8011f8a:	e7ee      	b.n	8011f6a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8011f8c:	d017      	beq.n	8011fbe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8011f8e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011f90:	1e5a      	subs	r2, r3, #1
 8011f92:	fb05 0502 	mla	r5, r5, r2, r0
 8011f96:	142d      	asrs	r5, r5, #16
 8011f98:	d409      	bmi.n	8011fae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011f9a:	42bd      	cmp	r5, r7
 8011f9c:	da07      	bge.n	8011fae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011f9e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011fa0:	fb05 1202 	mla	r2, r5, r2, r1
 8011fa4:	1412      	asrs	r2, r2, #16
 8011fa6:	d402      	bmi.n	8011fae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011fa8:	42b2      	cmp	r2, r6
 8011faa:	f2c0 80c7 	blt.w	801213c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8011fae:	2700      	movs	r7, #0
 8011fb0:	19da      	adds	r2, r3, r7
 8011fb2:	2a00      	cmp	r2, #0
 8011fb4:	dc3e      	bgt.n	8012034 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8011fb6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011fba:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011fbe:	f1bb 0f00 	cmp.w	fp, #0
 8011fc2:	f340 8131 	ble.w	8012228 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8011fc6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011fca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011fce:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011fd2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011fd4:	f1bb 0b01 	subs.w	fp, fp, #1
 8011fd8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011fdc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011fe0:	eeb0 6a62 	vmov.f32	s12, s5
 8011fe4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011fe8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011fec:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011ff0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011ff4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011ff8:	eeb0 6a43 	vmov.f32	s12, s6
 8011ffc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012000:	ee12 2a90 	vmov	r2, s5
 8012004:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012008:	fb92 f3f3 	sdiv	r3, r2, r3
 801200c:	ee13 2a10 	vmov	r2, s6
 8012010:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012014:	9313      	str	r3, [sp, #76]	; 0x4c
 8012016:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012018:	fb92 f3f3 	sdiv	r3, r2, r3
 801201c:	9a03      	ldr	r2, [sp, #12]
 801201e:	9314      	str	r3, [sp, #80]	; 0x50
 8012020:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8012024:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012026:	eeb0 3a67 	vmov.f32	s6, s15
 801202a:	bf08      	it	eq
 801202c:	4613      	moveq	r3, r2
 801202e:	eef0 2a47 	vmov.f32	s5, s14
 8012032:	e789      	b.n	8011f48 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8012034:	1405      	asrs	r5, r0, #16
 8012036:	d435      	bmi.n	80120a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8012038:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801203c:	42aa      	cmp	r2, r5
 801203e:	dd31      	ble.n	80120a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8012040:	140e      	asrs	r6, r1, #16
 8012042:	d42f      	bmi.n	80120a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8012044:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8012048:	42b2      	cmp	r2, r6
 801204a:	dd2b      	ble.n	80120a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801204c:	9a00      	ldr	r2, [sp, #0]
 801204e:	fb06 5502 	mla	r5, r6, r2, r5
 8012052:	086a      	lsrs	r2, r5, #1
 8012054:	9e01      	ldr	r6, [sp, #4]
 8012056:	5cb2      	ldrb	r2, [r6, r2]
 8012058:	07ee      	lsls	r6, r5, #31
 801205a:	bf54      	ite	pl
 801205c:	f002 020f 	andpl.w	r2, r2, #15
 8012060:	1112      	asrmi	r2, r2, #4
 8012062:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8012066:	b2d2      	uxtb	r2, r2
 8012068:	b1e2      	cbz	r2, 80120a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801206a:	9d04      	ldr	r5, [sp, #16]
 801206c:	436a      	muls	r2, r5
 801206e:	1c55      	adds	r5, r2, #1
 8012070:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8012074:	4d6e      	ldr	r5, [pc, #440]	; (8012230 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8012076:	682d      	ldr	r5, [r5, #0]
 8012078:	1212      	asrs	r2, r2, #8
 801207a:	0a2e      	lsrs	r6, r5, #8
 801207c:	2aff      	cmp	r2, #255	; 0xff
 801207e:	9605      	str	r6, [sp, #20]
 8012080:	d116      	bne.n	80120b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8012082:	f06f 0201 	mvn.w	r2, #1
 8012086:	fb02 fc07 	mul.w	ip, r2, r7
 801208a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801208e:	096a      	lsrs	r2, r5, #5
 8012090:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8012094:	f026 0607 	bic.w	r6, r6, #7
 8012098:	4316      	orrs	r6, r2
 801209a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801209e:	432e      	orrs	r6, r5
 80120a0:	f824 600c 	strh.w	r6, [r4, ip]
 80120a4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80120a6:	4410      	add	r0, r2
 80120a8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80120aa:	3f01      	subs	r7, #1
 80120ac:	4411      	add	r1, r2
 80120ae:	e77f      	b.n	8011fb0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80120b0:	f06f 0601 	mvn.w	r6, #1
 80120b4:	437e      	muls	r6, r7
 80120b6:	fa1f fa82 	uxth.w	sl, r2
 80120ba:	f834 8006 	ldrh.w	r8, [r4, r6]
 80120be:	9602      	str	r6, [sp, #8]
 80120c0:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80120c4:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 80120c8:	43d2      	mvns	r2, r2
 80120ca:	b2d2      	uxtb	r2, r2
 80120cc:	fb1c fc0a 	smulbb	ip, ip, sl
 80120d0:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80120d4:	fb0e ce02 	mla	lr, lr, r2, ip
 80120d8:	b2ed      	uxtb	r5, r5
 80120da:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80120de:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80120e2:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80120e6:	fa5f f888 	uxtb.w	r8, r8
 80120ea:	fb15 f50a 	smulbb	r5, r5, sl
 80120ee:	fb08 5502 	mla	r5, r8, r2, r5
 80120f2:	fa1f fe8e 	uxth.w	lr, lr
 80120f6:	fb16 f60a 	smulbb	r6, r6, sl
 80120fa:	b2ad      	uxth	r5, r5
 80120fc:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8012100:	fb0c 6c02 	mla	ip, ip, r2, r6
 8012104:	f10e 0201 	add.w	r2, lr, #1
 8012108:	1c6e      	adds	r6, r5, #1
 801210a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801210e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8012112:	fa1f fc8c 	uxth.w	ip, ip
 8012116:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801211a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801211e:	ea46 0e0e 	orr.w	lr, r6, lr
 8012122:	f10c 0601 	add.w	r6, ip, #1
 8012126:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801212a:	0976      	lsrs	r6, r6, #5
 801212c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012130:	9a02      	ldr	r2, [sp, #8]
 8012132:	ea4e 0e06 	orr.w	lr, lr, r6
 8012136:	f824 e002 	strh.w	lr, [r4, r2]
 801213a:	e7b3      	b.n	80120a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801213c:	f04f 0800 	mov.w	r8, #0
 8012140:	eba3 0208 	sub.w	r2, r3, r8
 8012144:	2a00      	cmp	r2, #0
 8012146:	f77f af36 	ble.w	8011fb6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801214a:	9e00      	ldr	r6, [sp, #0]
 801214c:	1402      	asrs	r2, r0, #16
 801214e:	140d      	asrs	r5, r1, #16
 8012150:	fb06 2505 	mla	r5, r6, r5, r2
 8012154:	086a      	lsrs	r2, r5, #1
 8012156:	9e01      	ldr	r6, [sp, #4]
 8012158:	5cb2      	ldrb	r2, [r6, r2]
 801215a:	07ed      	lsls	r5, r5, #31
 801215c:	bf54      	ite	pl
 801215e:	f002 020f 	andpl.w	r2, r2, #15
 8012162:	1112      	asrmi	r2, r2, #4
 8012164:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8012168:	b2d2      	uxtb	r2, r2
 801216a:	b1c2      	cbz	r2, 801219e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801216c:	9d04      	ldr	r5, [sp, #16]
 801216e:	436a      	muls	r2, r5
 8012170:	1c55      	adds	r5, r2, #1
 8012172:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8012176:	4d2e      	ldr	r5, [pc, #184]	; (8012230 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8012178:	1212      	asrs	r2, r2, #8
 801217a:	682e      	ldr	r6, [r5, #0]
 801217c:	2aff      	cmp	r2, #255	; 0xff
 801217e:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8012182:	d113      	bne.n	80121ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8012184:	0972      	lsrs	r2, r6, #5
 8012186:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801218a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801218e:	f025 0507 	bic.w	r5, r5, #7
 8012192:	4315      	orrs	r5, r2
 8012194:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8012198:	4335      	orrs	r5, r6
 801219a:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801219e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80121a0:	4410      	add	r0, r2
 80121a2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80121a4:	f108 0801 	add.w	r8, r8, #1
 80121a8:	4411      	add	r1, r2
 80121aa:	e7c9      	b.n	8012140 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80121ac:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80121b0:	fa1f fa82 	uxth.w	sl, r2
 80121b4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80121b8:	f3c6 4707 	ubfx	r7, r6, #16, #8
 80121bc:	43d2      	mvns	r2, r2
 80121be:	b2d2      	uxtb	r2, r2
 80121c0:	fb17 f70a 	smulbb	r7, r7, sl
 80121c4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80121c8:	fb0c 7c02 	mla	ip, ip, r2, r7
 80121cc:	b2f6      	uxtb	r6, r6
 80121ce:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80121d2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80121d6:	fa5f fe8e 	uxtb.w	lr, lr
 80121da:	fb16 f60a 	smulbb	r6, r6, sl
 80121de:	fb0e 6602 	mla	r6, lr, r2, r6
 80121e2:	b2ed      	uxtb	r5, r5
 80121e4:	fa1f fc8c 	uxth.w	ip, ip
 80121e8:	fb15 f50a 	smulbb	r5, r5, sl
 80121ec:	b2b6      	uxth	r6, r6
 80121ee:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80121f2:	fb07 5702 	mla	r7, r7, r2, r5
 80121f6:	f10c 0201 	add.w	r2, ip, #1
 80121fa:	1c75      	adds	r5, r6, #1
 80121fc:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8012200:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8012204:	b2bf      	uxth	r7, r7
 8012206:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801220a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801220e:	ea45 0c0c 	orr.w	ip, r5, ip
 8012212:	1c7d      	adds	r5, r7, #1
 8012214:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8012218:	096d      	lsrs	r5, r5, #5
 801221a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801221e:	ea4c 0c05 	orr.w	ip, ip, r5
 8012222:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8012226:	e7ba      	b.n	801219e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8012228:	b007      	add	sp, #28
 801222a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801222e:	bf00      	nop
 8012230:	20012678 	.word	0x20012678

08012234 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012234:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012238:	b087      	sub	sp, #28
 801223a:	f8df 830c 	ldr.w	r8, [pc, #780]	; 8012548 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801223e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8012240:	9205      	str	r2, [sp, #20]
 8012242:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8012246:	9101      	str	r1, [sp, #4]
 8012248:	6841      	ldr	r1, [r0, #4]
 801224a:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801224e:	fb01 2404 	mla	r4, r1, r4, r2
 8012252:	6802      	ldr	r2, [r0, #0]
 8012254:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012258:	f8db 2008 	ldr.w	r2, [fp, #8]
 801225c:	3201      	adds	r2, #1
 801225e:	f022 0201 	bic.w	r2, r2, #1
 8012262:	9202      	str	r2, [sp, #8]
 8012264:	f8db 2000 	ldr.w	r2, [fp]
 8012268:	9203      	str	r2, [sp, #12]
 801226a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801226e:	9a01      	ldr	r2, [sp, #4]
 8012270:	2a00      	cmp	r2, #0
 8012272:	dc03      	bgt.n	801227c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8012274:	9a05      	ldr	r2, [sp, #20]
 8012276:	2a00      	cmp	r2, #0
 8012278:	f340 8162 	ble.w	8012540 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801227c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801227e:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8012282:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8012286:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801228a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801228c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8012290:	2b00      	cmp	r3, #0
 8012292:	dd0e      	ble.n	80122b2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012294:	1402      	asrs	r2, r0, #16
 8012296:	d405      	bmi.n	80122a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012298:	42ba      	cmp	r2, r7
 801229a:	da03      	bge.n	80122a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801229c:	140a      	asrs	r2, r1, #16
 801229e:	d401      	bmi.n	80122a4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80122a0:	42b2      	cmp	r2, r6
 80122a2:	db07      	blt.n	80122b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80122a4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80122a6:	4410      	add	r0, r2
 80122a8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80122aa:	3b01      	subs	r3, #1
 80122ac:	4411      	add	r1, r2
 80122ae:	3402      	adds	r4, #2
 80122b0:	e7ee      	b.n	8012290 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80122b2:	d017      	beq.n	80122e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80122b4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80122b6:	1e5a      	subs	r2, r3, #1
 80122b8:	fb05 0502 	mla	r5, r5, r2, r0
 80122bc:	142d      	asrs	r5, r5, #16
 80122be:	d409      	bmi.n	80122d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80122c0:	42bd      	cmp	r5, r7
 80122c2:	da07      	bge.n	80122d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80122c4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80122c6:	fb05 1202 	mla	r2, r5, r2, r1
 80122ca:	1412      	asrs	r2, r2, #16
 80122cc:	d402      	bmi.n	80122d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80122ce:	42b2      	cmp	r2, r6
 80122d0:	f2c0 80c3 	blt.w	801245a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 80122d4:	2500      	movs	r5, #0
 80122d6:	195a      	adds	r2, r3, r5
 80122d8:	2a00      	cmp	r2, #0
 80122da:	dc3f      	bgt.n	801235c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80122dc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80122e0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80122e4:	9b01      	ldr	r3, [sp, #4]
 80122e6:	2b00      	cmp	r3, #0
 80122e8:	f340 812a 	ble.w	8012540 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80122ec:	ee30 0a04 	vadd.f32	s0, s0, s8
 80122f0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80122f4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80122f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80122fa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80122fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012302:	eeb0 6a62 	vmov.f32	s12, s5
 8012306:	ee61 7a27 	vmul.f32	s15, s2, s15
 801230a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801230e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012312:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8012316:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801231a:	eeb0 6a43 	vmov.f32	s12, s6
 801231e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012322:	ee12 2a90 	vmov	r2, s5
 8012326:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801232a:	fb92 f3f3 	sdiv	r3, r2, r3
 801232e:	ee13 2a10 	vmov	r2, s6
 8012332:	9313      	str	r3, [sp, #76]	; 0x4c
 8012334:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012336:	fb92 f3f3 	sdiv	r3, r2, r3
 801233a:	9314      	str	r3, [sp, #80]	; 0x50
 801233c:	9b01      	ldr	r3, [sp, #4]
 801233e:	9a05      	ldr	r2, [sp, #20]
 8012340:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012344:	3b01      	subs	r3, #1
 8012346:	9301      	str	r3, [sp, #4]
 8012348:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801234c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801234e:	eeb0 3a67 	vmov.f32	s6, s15
 8012352:	bf08      	it	eq
 8012354:	4613      	moveq	r3, r2
 8012356:	eef0 2a47 	vmov.f32	s5, s14
 801235a:	e788      	b.n	801226e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801235c:	1406      	asrs	r6, r0, #16
 801235e:	d42c      	bmi.n	80123ba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012360:	f8db 2008 	ldr.w	r2, [fp, #8]
 8012364:	42b2      	cmp	r2, r6
 8012366:	dd28      	ble.n	80123ba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012368:	140f      	asrs	r7, r1, #16
 801236a:	d426      	bmi.n	80123ba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801236c:	f8db 200c 	ldr.w	r2, [fp, #12]
 8012370:	42ba      	cmp	r2, r7
 8012372:	dd22      	ble.n	80123ba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8012374:	9a02      	ldr	r2, [sp, #8]
 8012376:	fb07 6602 	mla	r6, r7, r2, r6
 801237a:	0872      	lsrs	r2, r6, #1
 801237c:	9f03      	ldr	r7, [sp, #12]
 801237e:	5cba      	ldrb	r2, [r7, r2]
 8012380:	07f6      	lsls	r6, r6, #31
 8012382:	bf54      	ite	pl
 8012384:	f002 020f 	andpl.w	r2, r2, #15
 8012388:	1112      	asrmi	r2, r2, #4
 801238a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801238e:	b2d2      	uxtb	r2, r2
 8012390:	2aff      	cmp	r2, #255	; 0xff
 8012392:	d118      	bne.n	80123c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8012394:	f8d8 2000 	ldr.w	r2, [r8]
 8012398:	f06f 0601 	mvn.w	r6, #1
 801239c:	fb06 f705 	mul.w	r7, r6, r5
 80123a0:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 80123a4:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 80123a8:	0956      	lsrs	r6, r2, #5
 80123aa:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80123ae:	ea4c 0606 	orr.w	r6, ip, r6
 80123b2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80123b6:	4316      	orrs	r6, r2
 80123b8:	53e6      	strh	r6, [r4, r7]
 80123ba:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80123bc:	4410      	add	r0, r2
 80123be:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80123c0:	3d01      	subs	r5, #1
 80123c2:	4411      	add	r1, r2
 80123c4:	e787      	b.n	80122d6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80123c6:	2a00      	cmp	r2, #0
 80123c8:	d0f7      	beq.n	80123ba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80123ca:	f06f 0601 	mvn.w	r6, #1
 80123ce:	436e      	muls	r6, r5
 80123d0:	f8d8 c000 	ldr.w	ip, [r8]
 80123d4:	f834 e006 	ldrh.w	lr, [r4, r6]
 80123d8:	9604      	str	r6, [sp, #16]
 80123da:	fa1f f982 	uxth.w	r9, r2
 80123de:	ea4f 272e 	mov.w	r7, lr, asr #8
 80123e2:	f3cc 4607 	ubfx	r6, ip, #16, #8
 80123e6:	43d2      	mvns	r2, r2
 80123e8:	b2d2      	uxtb	r2, r2
 80123ea:	fb16 f609 	smulbb	r6, r6, r9
 80123ee:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80123f2:	fb07 6702 	mla	r7, r7, r2, r6
 80123f6:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 80123fa:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80123fe:	fa5f fc8c 	uxtb.w	ip, ip
 8012402:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012406:	fa5f fe8e 	uxtb.w	lr, lr
 801240a:	fb1c fc09 	smulbb	ip, ip, r9
 801240e:	fb0e cc02 	mla	ip, lr, r2, ip
 8012412:	b2bf      	uxth	r7, r7
 8012414:	fb1a fa09 	smulbb	sl, sl, r9
 8012418:	fa1f fc8c 	uxth.w	ip, ip
 801241c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012420:	fb06 a602 	mla	r6, r6, r2, sl
 8012424:	1c7a      	adds	r2, r7, #1
 8012426:	f10c 0a01 	add.w	sl, ip, #1
 801242a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801242e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8012432:	b2b6      	uxth	r6, r6
 8012434:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012438:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801243c:	ea4a 0707 	orr.w	r7, sl, r7
 8012440:	f106 0a01 	add.w	sl, r6, #1
 8012444:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012448:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801244c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012450:	9a04      	ldr	r2, [sp, #16]
 8012452:	ea47 070a 	orr.w	r7, r7, sl
 8012456:	52a7      	strh	r7, [r4, r2]
 8012458:	e7af      	b.n	80123ba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801245a:	f04f 0e00 	mov.w	lr, #0
 801245e:	eba3 020e 	sub.w	r2, r3, lr
 8012462:	2a00      	cmp	r2, #0
 8012464:	f77f af3a 	ble.w	80122dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8012468:	9e02      	ldr	r6, [sp, #8]
 801246a:	1402      	asrs	r2, r0, #16
 801246c:	140d      	asrs	r5, r1, #16
 801246e:	fb06 2505 	mla	r5, r6, r5, r2
 8012472:	086a      	lsrs	r2, r5, #1
 8012474:	9e03      	ldr	r6, [sp, #12]
 8012476:	5cb2      	ldrb	r2, [r6, r2]
 8012478:	07ed      	lsls	r5, r5, #31
 801247a:	bf54      	ite	pl
 801247c:	f002 020f 	andpl.w	r2, r2, #15
 8012480:	1112      	asrmi	r2, r2, #4
 8012482:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8012486:	b2d2      	uxtb	r2, r2
 8012488:	2aff      	cmp	r2, #255	; 0xff
 801248a:	d115      	bne.n	80124b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801248c:	f8d8 5000 	ldr.w	r5, [r8]
 8012490:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8012494:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8012498:	096a      	lsrs	r2, r5, #5
 801249a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801249e:	4332      	orrs	r2, r6
 80124a0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80124a4:	432a      	orrs	r2, r5
 80124a6:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 80124aa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80124ac:	4410      	add	r0, r2
 80124ae:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80124b0:	f10e 0e01 	add.w	lr, lr, #1
 80124b4:	4411      	add	r1, r2
 80124b6:	e7d2      	b.n	801245e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80124b8:	2a00      	cmp	r2, #0
 80124ba:	d0f6      	beq.n	80124aa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80124bc:	f8d8 7000 	ldr.w	r7, [r8]
 80124c0:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80124c4:	fa1f f982 	uxth.w	r9, r2
 80124c8:	ea4f 262c 	mov.w	r6, ip, asr #8
 80124cc:	f3c7 4507 	ubfx	r5, r7, #16, #8
 80124d0:	43d2      	mvns	r2, r2
 80124d2:	b2d2      	uxtb	r2, r2
 80124d4:	fb15 f509 	smulbb	r5, r5, r9
 80124d8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80124dc:	fb06 5602 	mla	r6, r6, r2, r5
 80124e0:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 80124e4:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80124e8:	b2ff      	uxtb	r7, r7
 80124ea:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80124ee:	fa5f fc8c 	uxtb.w	ip, ip
 80124f2:	fb17 f709 	smulbb	r7, r7, r9
 80124f6:	fb0c 7702 	mla	r7, ip, r2, r7
 80124fa:	b2b6      	uxth	r6, r6
 80124fc:	fb1a fa09 	smulbb	sl, sl, r9
 8012500:	b2bf      	uxth	r7, r7
 8012502:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012506:	fb05 a502 	mla	r5, r5, r2, sl
 801250a:	1c72      	adds	r2, r6, #1
 801250c:	f107 0a01 	add.w	sl, r7, #1
 8012510:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8012514:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8012518:	b2ad      	uxth	r5, r5
 801251a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801251e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8012522:	ea4a 0606 	orr.w	r6, sl, r6
 8012526:	f105 0a01 	add.w	sl, r5, #1
 801252a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801252e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012532:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012536:	ea46 060a 	orr.w	r6, r6, sl
 801253a:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801253e:	e7b4      	b.n	80124aa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8012540:	b007      	add	sp, #28
 8012542:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012546:	bf00      	nop
 8012548:	20012678 	.word	0x20012678

0801254c <_ZN8touchgfx8LCD16bppD1Ev>:
 801254c:	4770      	bx	lr

0801254e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801254e:	4770      	bx	lr

08012550 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8012550:	4770      	bx	lr

08012552 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8012552:	4770      	bx	lr

08012554 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8012554:	4770      	bx	lr

08012556 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8012556:	4770      	bx	lr

08012558 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8012558:	4770      	bx	lr

0801255a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801255a:	4770      	bx	lr

0801255c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801255c:	4770      	bx	lr

0801255e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801255e:	4770      	bx	lr

08012560 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8012560:	4770      	bx	lr

08012562 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8012562:	4770      	bx	lr

08012564 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8012564:	4770      	bx	lr

08012566 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8012566:	4770      	bx	lr

08012568 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8012568:	4770      	bx	lr

0801256a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801256a:	4770      	bx	lr

0801256c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801256c:	4770      	bx	lr

0801256e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801256e:	4770      	bx	lr

08012570 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8012570:	4770      	bx	lr

08012572 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8012572:	4770      	bx	lr

08012574 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012574:	4770      	bx	lr

08012576 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8012576:	4770      	bx	lr

08012578 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8012578:	4770      	bx	lr

0801257a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801257a:	4770      	bx	lr

0801257c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801257c:	4770      	bx	lr

0801257e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801257e:	4770      	bx	lr

08012580 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8012580:	4770      	bx	lr

08012582 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8012582:	4770      	bx	lr

08012584 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8012584:	4770      	bx	lr

08012586 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8012586:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801258a:	b088      	sub	sp, #32
 801258c:	ac08      	add	r4, sp, #32
 801258e:	4606      	mov	r6, r0
 8012590:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8012594:	4620      	mov	r0, r4
 8012596:	4688      	mov	r8, r1
 8012598:	4691      	mov	r9, r2
 801259a:	f7fd fc65 	bl	800fe68 <_ZNK8touchgfx6Bitmap7getDataEv>
 801259e:	6833      	ldr	r3, [r6, #0]
 80125a0:	4605      	mov	r5, r0
 80125a2:	4620      	mov	r0, r4
 80125a4:	699f      	ldr	r7, [r3, #24]
 80125a6:	f7fd fb73 	bl	800fc90 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80125aa:	4682      	mov	sl, r0
 80125ac:	4620      	mov	r0, r4
 80125ae:	f7fd fba3 	bl	800fcf8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80125b2:	9500      	str	r5, [sp, #0]
 80125b4:	e9cd a001 	strd	sl, r0, [sp, #4]
 80125b8:	464b      	mov	r3, r9
 80125ba:	a806      	add	r0, sp, #24
 80125bc:	4642      	mov	r2, r8
 80125be:	4631      	mov	r1, r6
 80125c0:	47b8      	blx	r7
 80125c2:	4628      	mov	r0, r5
 80125c4:	b008      	add	sp, #32
 80125c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

080125cc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 80125cc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80125d0:	2300      	movs	r3, #0
 80125d2:	9300      	str	r3, [sp, #0]
 80125d4:	4b3d      	ldr	r3, [pc, #244]	; (80126cc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 80125d6:	781b      	ldrb	r3, [r3, #0]
 80125d8:	2b00      	cmp	r3, #0
 80125da:	d137      	bne.n	801264c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 80125dc:	4a3c      	ldr	r2, [pc, #240]	; (80126d0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80125de:	f9b2 2000 	ldrsh.w	r2, [r2]
 80125e2:	f8ad 2004 	strh.w	r2, [sp, #4]
 80125e6:	2b00      	cmp	r3, #0
 80125e8:	d132      	bne.n	8012650 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 80125ea:	4b3a      	ldr	r3, [pc, #232]	; (80126d4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80125ec:	f9b3 3000 	ldrsh.w	r3, [r3]
 80125f0:	6808      	ldr	r0, [r1, #0]
 80125f2:	6849      	ldr	r1, [r1, #4]
 80125f4:	f8ad 3006 	strh.w	r3, [sp, #6]
 80125f8:	ac02      	add	r4, sp, #8
 80125fa:	ab02      	add	r3, sp, #8
 80125fc:	c303      	stmia	r3!, {r0, r1}
 80125fe:	4669      	mov	r1, sp
 8012600:	4620      	mov	r0, r4
 8012602:	f7fa f9bd 	bl	800c980 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012606:	4668      	mov	r0, sp
 8012608:	f7fa f992 	bl	800c930 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801260c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8012610:	f8bd 2000 	ldrh.w	r2, [sp]
 8012614:	4d30      	ldr	r5, [pc, #192]	; (80126d8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8012616:	4413      	add	r3, r2
 8012618:	f8ad 3008 	strh.w	r3, [sp, #8]
 801261c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8012620:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012624:	6828      	ldr	r0, [r5, #0]
 8012626:	4413      	add	r3, r2
 8012628:	f8ad 300a 	strh.w	r3, [sp, #10]
 801262c:	6803      	ldr	r3, [r0, #0]
 801262e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012630:	4798      	blx	r3
 8012632:	f010 0f01 	tst.w	r0, #1
 8012636:	462f      	mov	r7, r5
 8012638:	d00c      	beq.n	8012654 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801263a:	6828      	ldr	r0, [r5, #0]
 801263c:	6803      	ldr	r3, [r0, #0]
 801263e:	e894 0006 	ldmia.w	r4, {r1, r2}
 8012642:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8012644:	4798      	blx	r3
 8012646:	b004      	add	sp, #16
 8012648:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801264c:	4a21      	ldr	r2, [pc, #132]	; (80126d4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801264e:	e7c6      	b.n	80125de <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8012650:	4b1f      	ldr	r3, [pc, #124]	; (80126d0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8012652:	e7cb      	b.n	80125ec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8012654:	6838      	ldr	r0, [r7, #0]
 8012656:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801265a:	6803      	ldr	r3, [r0, #0]
 801265c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8012660:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012662:	4798      	blx	r3
 8012664:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8012668:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801266c:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8012670:	fb16 3602 	smlabb	r6, r6, r2, r3
 8012674:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8012678:	6838      	ldr	r0, [r7, #0]
 801267a:	6803      	ldr	r3, [r0, #0]
 801267c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801267e:	4798      	blx	r3
 8012680:	4a13      	ldr	r2, [pc, #76]	; (80126d0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8012682:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8012686:	8813      	ldrh	r3, [r2, #0]
 8012688:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801268c:	fb03 1404 	mla	r4, r3, r4, r1
 8012690:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8012694:	435d      	muls	r5, r3
 8012696:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801269a:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801269e:	4691      	mov	r9, r2
 80126a0:	6838      	ldr	r0, [r7, #0]
 80126a2:	42ac      	cmp	r4, r5
 80126a4:	6803      	ldr	r3, [r0, #0]
 80126a6:	d20e      	bcs.n	80126c6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 80126a8:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 80126ac:	4632      	mov	r2, r6
 80126ae:	4643      	mov	r3, r8
 80126b0:	4621      	mov	r1, r4
 80126b2:	47d0      	blx	sl
 80126b4:	f8b9 3000 	ldrh.w	r3, [r9]
 80126b8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80126bc:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80126c0:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80126c4:	e7ec      	b.n	80126a0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 80126c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80126c8:	4798      	blx	r3
 80126ca:	e7bc      	b.n	8012646 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 80126cc:	20012668 	.word	0x20012668
 80126d0:	2001266a 	.word	0x2001266a
 80126d4:	2001266c 	.word	0x2001266c
 80126d8:	20012670 	.word	0x20012670

080126dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 80126dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80126e0:	b08b      	sub	sp, #44	; 0x2c
 80126e2:	460f      	mov	r7, r1
 80126e4:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 80126e8:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 80126ec:	4616      	mov	r6, r2
 80126ee:	f1bb 0f00 	cmp.w	fp, #0
 80126f2:	d049      	beq.n	8012788 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 80126f4:	6810      	ldr	r0, [r2, #0]
 80126f6:	6851      	ldr	r1, [r2, #4]
 80126f8:	ad06      	add	r5, sp, #24
 80126fa:	c503      	stmia	r5!, {r0, r1}
 80126fc:	6818      	ldr	r0, [r3, #0]
 80126fe:	6859      	ldr	r1, [r3, #4]
 8012700:	ad08      	add	r5, sp, #32
 8012702:	c503      	stmia	r5!, {r0, r1}
 8012704:	a806      	add	r0, sp, #24
 8012706:	f7fa f913 	bl	800c930 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801270a:	4631      	mov	r1, r6
 801270c:	a808      	add	r0, sp, #32
 801270e:	f7fa f937 	bl	800c980 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012712:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8012716:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801271a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801271e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8012722:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8012726:	fb16 2103 	smlabb	r1, r6, r3, r2
 801272a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801272e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8012732:	4f5f      	ldr	r7, [pc, #380]	; (80128b0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8012734:	440a      	add	r2, r1
 8012736:	f8ad 2020 	strh.w	r2, [sp, #32]
 801273a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801273e:	6838      	ldr	r0, [r7, #0]
 8012740:	4413      	add	r3, r2
 8012742:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8012746:	6803      	ldr	r3, [r0, #0]
 8012748:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801274a:	4798      	blx	r3
 801274c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8012750:	46b9      	mov	r9, r7
 8012752:	d01c      	beq.n	801278e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 8012754:	f010 0f04 	tst.w	r0, #4
 8012758:	d01d      	beq.n	8012796 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801275a:	f8d9 0000 	ldr.w	r0, [r9]
 801275e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8012762:	6801      	ldr	r1, [r0, #0]
 8012764:	f8cd b00c 	str.w	fp, [sp, #12]
 8012768:	2700      	movs	r7, #0
 801276a:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801276e:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8012772:	9402      	str	r4, [sp, #8]
 8012774:	b2ad      	uxth	r5, r5
 8012776:	fa1f f488 	uxth.w	r4, r8
 801277a:	9501      	str	r5, [sp, #4]
 801277c:	9400      	str	r4, [sp, #0]
 801277e:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8012780:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8012784:	4631      	mov	r1, r6
 8012786:	47a0      	blx	r4
 8012788:	b00b      	add	sp, #44	; 0x2c
 801278a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801278e:	b914      	cbnz	r4, 8012796 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8012790:	f010 0f01 	tst.w	r0, #1
 8012794:	e7e0      	b.n	8012758 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 8012796:	f8d9 0000 	ldr.w	r0, [r9]
 801279a:	6803      	ldr	r3, [r0, #0]
 801279c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801279e:	4798      	blx	r3
 80127a0:	4b44      	ldr	r3, [pc, #272]	; (80128b4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 80127a2:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 80127a6:	881a      	ldrh	r2, [r3, #0]
 80127a8:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80127ac:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80127b0:	fb02 1404 	mla	r4, r2, r4, r1
 80127b4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80127b8:	469a      	mov	sl, r3
 80127ba:	fb05 f502 	mul.w	r5, r5, r2
 80127be:	ea4f 0748 	mov.w	r7, r8, lsl #1
 80127c2:	d059      	beq.n	8012878 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 80127c4:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 80127c8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80127cc:	fa1f f28b 	uxth.w	r2, fp
 80127d0:	fa1f f989 	uxth.w	r9, r9
 80127d4:	469e      	mov	lr, r3
 80127d6:	42ac      	cmp	r4, r5
 80127d8:	d264      	bcs.n	80128a4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80127da:	eb04 0a07 	add.w	sl, r4, r7
 80127de:	4554      	cmp	r4, sl
 80127e0:	d23d      	bcs.n	801285e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 80127e2:	8821      	ldrh	r1, [r4, #0]
 80127e4:	f836 3b02 	ldrh.w	r3, [r6], #2
 80127e8:	1208      	asrs	r0, r1, #8
 80127ea:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80127ee:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80127f2:	fb10 f009 	smulbb	r0, r0, r9
 80127f6:	ea4f 0be1 	mov.w	fp, r1, asr #3
 80127fa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80127fe:	00c9      	lsls	r1, r1, #3
 8012800:	fb0c 0c02 	mla	ip, ip, r2, r0
 8012804:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8012808:	10d8      	asrs	r0, r3, #3
 801280a:	b2c9      	uxtb	r1, r1
 801280c:	00db      	lsls	r3, r3, #3
 801280e:	fa1f fc8c 	uxth.w	ip, ip
 8012812:	fb1b fb09 	smulbb	fp, fp, r9
 8012816:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801281a:	b2db      	uxtb	r3, r3
 801281c:	fb11 f109 	smulbb	r1, r1, r9
 8012820:	fb00 b002 	mla	r0, r0, r2, fp
 8012824:	fb03 1302 	mla	r3, r3, r2, r1
 8012828:	f10c 0b01 	add.w	fp, ip, #1
 801282c:	b29b      	uxth	r3, r3
 801282e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8012832:	b280      	uxth	r0, r0
 8012834:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8012838:	f103 0c01 	add.w	ip, r3, #1
 801283c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8012840:	1c43      	adds	r3, r0, #1
 8012842:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8012846:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801284a:	0940      	lsrs	r0, r0, #5
 801284c:	ea4c 0c0b 	orr.w	ip, ip, fp
 8012850:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8012854:	ea4c 0c00 	orr.w	ip, ip, r0
 8012858:	f824 cb02 	strh.w	ip, [r4], #2
 801285c:	e7bf      	b.n	80127de <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801285e:	f8be 3000 	ldrh.w	r3, [lr]
 8012862:	eba3 0308 	sub.w	r3, r3, r8
 8012866:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801286a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801286e:	eba3 0308 	sub.w	r3, r3, r8
 8012872:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8012876:	e7ae      	b.n	80127d6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8012878:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801287c:	f8d9 0000 	ldr.w	r0, [r9]
 8012880:	42ac      	cmp	r4, r5
 8012882:	6803      	ldr	r3, [r0, #0]
 8012884:	d20e      	bcs.n	80128a4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8012886:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801288a:	4632      	mov	r2, r6
 801288c:	463b      	mov	r3, r7
 801288e:	4621      	mov	r1, r4
 8012890:	47c0      	blx	r8
 8012892:	f8ba 3000 	ldrh.w	r3, [sl]
 8012896:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801289a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801289e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80128a2:	e7eb      	b.n	801287c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 80128a4:	4b02      	ldr	r3, [pc, #8]	; (80128b0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80128a6:	6818      	ldr	r0, [r3, #0]
 80128a8:	6803      	ldr	r3, [r0, #0]
 80128aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80128ac:	4798      	blx	r3
 80128ae:	e76b      	b.n	8012788 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 80128b0:	20012670 	.word	0x20012670
 80128b4:	2001266a 	.word	0x2001266a

080128b8 <_ZN8touchgfx8LCD16bppD0Ev>:
 80128b8:	b510      	push	{r4, lr}
 80128ba:	2178      	movs	r1, #120	; 0x78
 80128bc:	4604      	mov	r4, r0
 80128be:	f008 ffdf 	bl	801b880 <_ZdlPvj>
 80128c2:	4620      	mov	r0, r4
 80128c4:	bd10      	pop	{r4, pc}

080128c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80128c6:	b510      	push	{r4, lr}
 80128c8:	2104      	movs	r1, #4
 80128ca:	4604      	mov	r4, r0
 80128cc:	f008 ffd8 	bl	801b880 <_ZdlPvj>
 80128d0:	4620      	mov	r0, r4
 80128d2:	bd10      	pop	{r4, pc}

080128d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80128d4:	b510      	push	{r4, lr}
 80128d6:	2104      	movs	r1, #4
 80128d8:	4604      	mov	r4, r0
 80128da:	f008 ffd1 	bl	801b880 <_ZdlPvj>
 80128de:	4620      	mov	r0, r4
 80128e0:	bd10      	pop	{r4, pc}

080128e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80128e2:	b510      	push	{r4, lr}
 80128e4:	2104      	movs	r1, #4
 80128e6:	4604      	mov	r4, r0
 80128e8:	f008 ffca 	bl	801b880 <_ZdlPvj>
 80128ec:	4620      	mov	r0, r4
 80128ee:	bd10      	pop	{r4, pc}

080128f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80128f0:	b510      	push	{r4, lr}
 80128f2:	2104      	movs	r1, #4
 80128f4:	4604      	mov	r4, r0
 80128f6:	f008 ffc3 	bl	801b880 <_ZdlPvj>
 80128fa:	4620      	mov	r0, r4
 80128fc:	bd10      	pop	{r4, pc}

080128fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80128fe:	b510      	push	{r4, lr}
 8012900:	2104      	movs	r1, #4
 8012902:	4604      	mov	r4, r0
 8012904:	f008 ffbc 	bl	801b880 <_ZdlPvj>
 8012908:	4620      	mov	r0, r4
 801290a:	bd10      	pop	{r4, pc}

0801290c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801290c:	b510      	push	{r4, lr}
 801290e:	2104      	movs	r1, #4
 8012910:	4604      	mov	r4, r0
 8012912:	f008 ffb5 	bl	801b880 <_ZdlPvj>
 8012916:	4620      	mov	r0, r4
 8012918:	bd10      	pop	{r4, pc}

0801291a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801291a:	b510      	push	{r4, lr}
 801291c:	2104      	movs	r1, #4
 801291e:	4604      	mov	r4, r0
 8012920:	f008 ffae 	bl	801b880 <_ZdlPvj>
 8012924:	4620      	mov	r0, r4
 8012926:	bd10      	pop	{r4, pc}

08012928 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8012928:	b510      	push	{r4, lr}
 801292a:	2104      	movs	r1, #4
 801292c:	4604      	mov	r4, r0
 801292e:	f008 ffa7 	bl	801b880 <_ZdlPvj>
 8012932:	4620      	mov	r0, r4
 8012934:	bd10      	pop	{r4, pc}

08012936 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012936:	b510      	push	{r4, lr}
 8012938:	2104      	movs	r1, #4
 801293a:	4604      	mov	r4, r0
 801293c:	f008 ffa0 	bl	801b880 <_ZdlPvj>
 8012940:	4620      	mov	r0, r4
 8012942:	bd10      	pop	{r4, pc}

08012944 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012944:	b510      	push	{r4, lr}
 8012946:	2104      	movs	r1, #4
 8012948:	4604      	mov	r4, r0
 801294a:	f008 ff99 	bl	801b880 <_ZdlPvj>
 801294e:	4620      	mov	r0, r4
 8012950:	bd10      	pop	{r4, pc}

08012952 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012952:	b510      	push	{r4, lr}
 8012954:	2104      	movs	r1, #4
 8012956:	4604      	mov	r4, r0
 8012958:	f008 ff92 	bl	801b880 <_ZdlPvj>
 801295c:	4620      	mov	r0, r4
 801295e:	bd10      	pop	{r4, pc}

08012960 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012960:	b510      	push	{r4, lr}
 8012962:	2104      	movs	r1, #4
 8012964:	4604      	mov	r4, r0
 8012966:	f008 ff8b 	bl	801b880 <_ZdlPvj>
 801296a:	4620      	mov	r0, r4
 801296c:	bd10      	pop	{r4, pc}

0801296e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801296e:	b510      	push	{r4, lr}
 8012970:	2104      	movs	r1, #4
 8012972:	4604      	mov	r4, r0
 8012974:	f008 ff84 	bl	801b880 <_ZdlPvj>
 8012978:	4620      	mov	r0, r4
 801297a:	bd10      	pop	{r4, pc}

0801297c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801297c:	b510      	push	{r4, lr}
 801297e:	2104      	movs	r1, #4
 8012980:	4604      	mov	r4, r0
 8012982:	f008 ff7d 	bl	801b880 <_ZdlPvj>
 8012986:	4620      	mov	r0, r4
 8012988:	bd10      	pop	{r4, pc}

0801298a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801298a:	b510      	push	{r4, lr}
 801298c:	2104      	movs	r1, #4
 801298e:	4604      	mov	r4, r0
 8012990:	f008 ff76 	bl	801b880 <_ZdlPvj>
 8012994:	4620      	mov	r0, r4
 8012996:	bd10      	pop	{r4, pc}

08012998 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8012998:	b510      	push	{r4, lr}
 801299a:	2104      	movs	r1, #4
 801299c:	4604      	mov	r4, r0
 801299e:	f008 ff6f 	bl	801b880 <_ZdlPvj>
 80129a2:	4620      	mov	r0, r4
 80129a4:	bd10      	pop	{r4, pc}

080129a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80129a6:	b510      	push	{r4, lr}
 80129a8:	2104      	movs	r1, #4
 80129aa:	4604      	mov	r4, r0
 80129ac:	f008 ff68 	bl	801b880 <_ZdlPvj>
 80129b0:	4620      	mov	r0, r4
 80129b2:	bd10      	pop	{r4, pc}

080129b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80129b4:	b510      	push	{r4, lr}
 80129b6:	2104      	movs	r1, #4
 80129b8:	4604      	mov	r4, r0
 80129ba:	f008 ff61 	bl	801b880 <_ZdlPvj>
 80129be:	4620      	mov	r0, r4
 80129c0:	bd10      	pop	{r4, pc}

080129c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80129c2:	b510      	push	{r4, lr}
 80129c4:	2104      	movs	r1, #4
 80129c6:	4604      	mov	r4, r0
 80129c8:	f008 ff5a 	bl	801b880 <_ZdlPvj>
 80129cc:	4620      	mov	r0, r4
 80129ce:	bd10      	pop	{r4, pc}

080129d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 80129d0:	b510      	push	{r4, lr}
 80129d2:	2104      	movs	r1, #4
 80129d4:	4604      	mov	r4, r0
 80129d6:	f008 ff53 	bl	801b880 <_ZdlPvj>
 80129da:	4620      	mov	r0, r4
 80129dc:	bd10      	pop	{r4, pc}

080129de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80129de:	b510      	push	{r4, lr}
 80129e0:	2104      	movs	r1, #4
 80129e2:	4604      	mov	r4, r0
 80129e4:	f008 ff4c 	bl	801b880 <_ZdlPvj>
 80129e8:	4620      	mov	r0, r4
 80129ea:	bd10      	pop	{r4, pc}

080129ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80129ec:	b510      	push	{r4, lr}
 80129ee:	2104      	movs	r1, #4
 80129f0:	4604      	mov	r4, r0
 80129f2:	f008 ff45 	bl	801b880 <_ZdlPvj>
 80129f6:	4620      	mov	r0, r4
 80129f8:	bd10      	pop	{r4, pc}

080129fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80129fa:	b510      	push	{r4, lr}
 80129fc:	2104      	movs	r1, #4
 80129fe:	4604      	mov	r4, r0
 8012a00:	f008 ff3e 	bl	801b880 <_ZdlPvj>
 8012a04:	4620      	mov	r0, r4
 8012a06:	bd10      	pop	{r4, pc}

08012a08 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012a08:	b510      	push	{r4, lr}
 8012a0a:	2104      	movs	r1, #4
 8012a0c:	4604      	mov	r4, r0
 8012a0e:	f008 ff37 	bl	801b880 <_ZdlPvj>
 8012a12:	4620      	mov	r0, r4
 8012a14:	bd10      	pop	{r4, pc}

08012a16 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8012a16:	b510      	push	{r4, lr}
 8012a18:	2104      	movs	r1, #4
 8012a1a:	4604      	mov	r4, r0
 8012a1c:	f008 ff30 	bl	801b880 <_ZdlPvj>
 8012a20:	4620      	mov	r0, r4
 8012a22:	bd10      	pop	{r4, pc}

08012a24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8012a24:	b510      	push	{r4, lr}
 8012a26:	2104      	movs	r1, #4
 8012a28:	4604      	mov	r4, r0
 8012a2a:	f008 ff29 	bl	801b880 <_ZdlPvj>
 8012a2e:	4620      	mov	r0, r4
 8012a30:	bd10      	pop	{r4, pc}

08012a32 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8012a32:	b510      	push	{r4, lr}
 8012a34:	2104      	movs	r1, #4
 8012a36:	4604      	mov	r4, r0
 8012a38:	f008 ff22 	bl	801b880 <_ZdlPvj>
 8012a3c:	4620      	mov	r0, r4
 8012a3e:	bd10      	pop	{r4, pc}

08012a40 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8012a40:	b510      	push	{r4, lr}
 8012a42:	2104      	movs	r1, #4
 8012a44:	4604      	mov	r4, r0
 8012a46:	f008 ff1b 	bl	801b880 <_ZdlPvj>
 8012a4a:	4620      	mov	r0, r4
 8012a4c:	bd10      	pop	{r4, pc}
	...

08012a50 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8012a50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012a54:	b091      	sub	sp, #68	; 0x44
 8012a56:	469b      	mov	fp, r3
 8012a58:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 8012a5c:	4616      	mov	r6, r2
 8012a5e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 8012a62:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012a66:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 8012a6a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8012a6e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8012a72:	4604      	mov	r4, r0
 8012a74:	460d      	mov	r5, r1
 8012a76:	4640      	mov	r0, r8
 8012a78:	4659      	mov	r1, fp
 8012a7a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8012a7e:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 8012a82:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 8012a86:	f7f6 fd8b 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 8012a8a:	4631      	mov	r1, r6
 8012a8c:	4640      	mov	r0, r8
 8012a8e:	f7f6 fd87 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 8012a92:	4b74      	ldr	r3, [pc, #464]	; (8012c64 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8012a94:	8818      	ldrh	r0, [r3, #0]
 8012a96:	4b74      	ldr	r3, [pc, #464]	; (8012c68 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8012a98:	8819      	ldrh	r1, [r3, #0]
 8012a9a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8012a9e:	2b00      	cmp	r3, #0
 8012aa0:	b202      	sxth	r2, r0
 8012aa2:	b20e      	sxth	r6, r1
 8012aa4:	da07      	bge.n	8012ab6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8012aa6:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8012aaa:	4463      	add	r3, ip
 8012aac:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8012ab0:	2300      	movs	r3, #0
 8012ab2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8012ab6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8012aba:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8012abe:	1ad2      	subs	r2, r2, r3
 8012ac0:	4594      	cmp	ip, r2
 8012ac2:	bfc4      	itt	gt
 8012ac4:	1ac2      	subgt	r2, r0, r3
 8012ac6:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 8012aca:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8012ace:	2a00      	cmp	r2, #0
 8012ad0:	da07      	bge.n	8012ae2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8012ad2:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 8012ad6:	4462      	add	r2, ip
 8012ad8:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8012adc:	2200      	movs	r2, #0
 8012ade:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8012ae2:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 8012ae6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8012aea:	eba6 060a 	sub.w	r6, r6, sl
 8012aee:	42b2      	cmp	r2, r6
 8012af0:	bfc4      	itt	gt
 8012af2:	eba1 020a 	subgt.w	r2, r1, sl
 8012af6:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 8012afa:	4a5c      	ldr	r2, [pc, #368]	; (8012c6c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8012afc:	7812      	ldrb	r2, [r2, #0]
 8012afe:	b9a2      	cbnz	r2, 8012b2a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8012b00:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8012b04:	4286      	cmp	r6, r0
 8012b06:	4640      	mov	r0, r8
 8012b08:	9303      	str	r3, [sp, #12]
 8012b0a:	bf14      	ite	ne
 8012b0c:	2600      	movne	r6, #0
 8012b0e:	2601      	moveq	r6, #1
 8012b10:	f7f6 fd89 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012b14:	9b03      	ldr	r3, [sp, #12]
 8012b16:	b160      	cbz	r0, 8012b32 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8012b18:	2300      	movs	r3, #0
 8012b1a:	8023      	strh	r3, [r4, #0]
 8012b1c:	8063      	strh	r3, [r4, #2]
 8012b1e:	80a3      	strh	r3, [r4, #4]
 8012b20:	4620      	mov	r0, r4
 8012b22:	80e3      	strh	r3, [r4, #6]
 8012b24:	b011      	add	sp, #68	; 0x44
 8012b26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b2a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8012b2e:	428e      	cmp	r6, r1
 8012b30:	e7e9      	b.n	8012b06 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8012b32:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8012b36:	9205      	str	r2, [sp, #20]
 8012b38:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8012b3c:	9206      	str	r2, [sp, #24]
 8012b3e:	f8bb 2000 	ldrh.w	r2, [fp]
 8012b42:	900e      	str	r0, [sp, #56]	; 0x38
 8012b44:	1a9b      	subs	r3, r3, r2
 8012b46:	b21b      	sxth	r3, r3
 8012b48:	9303      	str	r3, [sp, #12]
 8012b4a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8012b4e:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 8012b52:	ebaa 0a03 	sub.w	sl, sl, r3
 8012b56:	fa0f f38a 	sxth.w	r3, sl
 8012b5a:	9304      	str	r3, [sp, #16]
 8012b5c:	9b03      	ldr	r3, [sp, #12]
 8012b5e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8012b62:	9b04      	ldr	r3, [sp, #16]
 8012b64:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8012b68:	9b05      	ldr	r3, [sp, #20]
 8012b6a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8012b6e:	a90e      	add	r1, sp, #56	; 0x38
 8012b70:	9b06      	ldr	r3, [sp, #24]
 8012b72:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8012b76:	a80c      	add	r0, sp, #48	; 0x30
 8012b78:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 8012b7c:	f7f9 ff00 	bl	800c980 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012b80:	4640      	mov	r0, r8
 8012b82:	f7f9 fed5 	bl	800c930 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012b86:	a80e      	add	r0, sp, #56	; 0x38
 8012b88:	f7f9 fed2 	bl	800c930 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012b8c:	4b38      	ldr	r3, [pc, #224]	; (8012c70 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 8012b8e:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 8012b92:	881b      	ldrh	r3, [r3, #0]
 8012b94:	9307      	str	r3, [sp, #28]
 8012b96:	682b      	ldr	r3, [r5, #0]
 8012b98:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 8012c74 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8012b9c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012b9e:	4628      	mov	r0, r5
 8012ba0:	4798      	blx	r3
 8012ba2:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 8012ba6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8012baa:	4681      	mov	r9, r0
 8012bac:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8012bb0:	f8db 0000 	ldr.w	r0, [fp]
 8012bb4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8012bb6:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8012bba:	6803      	ldr	r3, [r0, #0]
 8012bbc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012bbe:	4798      	blx	r3
 8012bc0:	4607      	mov	r7, r0
 8012bc2:	f8db 0000 	ldr.w	r0, [fp]
 8012bc6:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8012bca:	6803      	ldr	r3, [r0, #0]
 8012bcc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8012bd0:	9109      	str	r1, [sp, #36]	; 0x24
 8012bd2:	9208      	str	r2, [sp, #32]
 8012bd4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012bd6:	4798      	blx	r3
 8012bd8:	f010 0f01 	tst.w	r0, #1
 8012bdc:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8012be0:	d012      	beq.n	8012c08 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8012be2:	f8db 0000 	ldr.w	r0, [fp]
 8012be6:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 8012bea:	6803      	ldr	r3, [r0, #0]
 8012bec:	9200      	str	r2, [sp, #0]
 8012bee:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8012bf0:	e898 0006 	ldmia.w	r8, {r1, r2}
 8012bf4:	462b      	mov	r3, r5
 8012bf6:	47b0      	blx	r6
 8012bf8:	9b03      	ldr	r3, [sp, #12]
 8012bfa:	8023      	strh	r3, [r4, #0]
 8012bfc:	9b04      	ldr	r3, [sp, #16]
 8012bfe:	8063      	strh	r3, [r4, #2]
 8012c00:	9b05      	ldr	r3, [sp, #20]
 8012c02:	80a3      	strh	r3, [r4, #4]
 8012c04:	9b06      	ldr	r3, [sp, #24]
 8012c06:	e78b      	b.n	8012b20 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8012c08:	fb09 f202 	mul.w	r2, r9, r2
 8012c0c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8012c10:	440f      	add	r7, r1
 8012c12:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8012c16:	b166      	cbz	r6, 8012c32 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8012c18:	9a07      	ldr	r2, [sp, #28]
 8012c1a:	4592      	cmp	sl, r2
 8012c1c:	d109      	bne.n	8012c32 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8012c1e:	f8db 0000 	ldr.w	r0, [fp]
 8012c22:	6802      	ldr	r2, [r0, #0]
 8012c24:	fb09 f303 	mul.w	r3, r9, r3
 8012c28:	6b56      	ldr	r6, [r2, #52]	; 0x34
 8012c2a:	4629      	mov	r1, r5
 8012c2c:	463a      	mov	r2, r7
 8012c2e:	47b0      	blx	r6
 8012c30:	e7e2      	b.n	8012bf8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8012c32:	fb0a f303 	mul.w	r3, sl, r3
 8012c36:	f8df b03c 	ldr.w	fp, [pc, #60]	; 8012c74 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8012c3a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8012c3e:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8012c42:	4545      	cmp	r5, r8
 8012c44:	d2d8      	bcs.n	8012bf8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8012c46:	f8db 0000 	ldr.w	r0, [fp]
 8012c4a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8012c4e:	6802      	ldr	r2, [r0, #0]
 8012c50:	4629      	mov	r1, r5
 8012c52:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8012c56:	005b      	lsls	r3, r3, #1
 8012c58:	463a      	mov	r2, r7
 8012c5a:	47d0      	blx	sl
 8012c5c:	444f      	add	r7, r9
 8012c5e:	4435      	add	r5, r6
 8012c60:	e7ef      	b.n	8012c42 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8012c62:	bf00      	nop
 8012c64:	20012664 	.word	0x20012664
 8012c68:	20012666 	.word	0x20012666
 8012c6c:	20012668 	.word	0x20012668
 8012c70:	2001266a 	.word	0x2001266a
 8012c74:	20012670 	.word	0x20012670

08012c78 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8012c78:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012c7a:	4606      	mov	r6, r0
 8012c7c:	b087      	sub	sp, #28
 8012c7e:	460c      	mov	r4, r1
 8012c80:	4617      	mov	r7, r2
 8012c82:	461d      	mov	r5, r3
 8012c84:	b333      	cbz	r3, 8012cd4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8012c86:	4608      	mov	r0, r1
 8012c88:	f7f6 fccd 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012c8c:	bb10      	cbnz	r0, 8012cd4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8012c8e:	6820      	ldr	r0, [r4, #0]
 8012c90:	6861      	ldr	r1, [r4, #4]
 8012c92:	4c1c      	ldr	r4, [pc, #112]	; (8012d04 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8012c94:	ab04      	add	r3, sp, #16
 8012c96:	c303      	stmia	r3!, {r0, r1}
 8012c98:	a804      	add	r0, sp, #16
 8012c9a:	f7f9 fe49 	bl	800c930 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012c9e:	6820      	ldr	r0, [r4, #0]
 8012ca0:	6803      	ldr	r3, [r0, #0]
 8012ca2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012ca4:	4798      	blx	r3
 8012ca6:	2dff      	cmp	r5, #255	; 0xff
 8012ca8:	d016      	beq.n	8012cd8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8012caa:	f010 0f08 	tst.w	r0, #8
 8012cae:	6820      	ldr	r0, [r4, #0]
 8012cb0:	d015      	beq.n	8012cde <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8012cb2:	2400      	movs	r4, #0
 8012cb4:	6801      	ldr	r1, [r0, #0]
 8012cb6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012cba:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8012cbe:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8012cc2:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8012cc6:	9401      	str	r4, [sp, #4]
 8012cc8:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8012ccc:	9400      	str	r4, [sp, #0]
 8012cce:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8012cd0:	4639      	mov	r1, r7
 8012cd2:	47a0      	blx	r4
 8012cd4:	b007      	add	sp, #28
 8012cd6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012cd8:	f010 0f02 	tst.w	r0, #2
 8012cdc:	e7e7      	b.n	8012cae <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8012cde:	6803      	ldr	r3, [r0, #0]
 8012ce0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012ce2:	4798      	blx	r3
 8012ce4:	4b08      	ldr	r3, [pc, #32]	; (8012d08 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8012ce6:	881a      	ldrh	r2, [r3, #0]
 8012ce8:	6833      	ldr	r3, [r6, #0]
 8012cea:	e9cd 7500 	strd	r7, r5, [sp]
 8012cee:	4601      	mov	r1, r0
 8012cf0:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8012cf2:	4630      	mov	r0, r6
 8012cf4:	ab04      	add	r3, sp, #16
 8012cf6:	47a8      	blx	r5
 8012cf8:	6820      	ldr	r0, [r4, #0]
 8012cfa:	6803      	ldr	r3, [r0, #0]
 8012cfc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012cfe:	4798      	blx	r3
 8012d00:	e7e8      	b.n	8012cd4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8012d02:	bf00      	nop
 8012d04:	20012670 	.word	0x20012670
 8012d08:	2001266a 	.word	0x2001266a

08012d0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8012d0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012d10:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8012d14:	9e08      	ldr	r6, [sp, #32]
 8012d16:	4688      	mov	r8, r1
 8012d18:	4614      	mov	r4, r2
 8012d1a:	461d      	mov	r5, r3
 8012d1c:	2f00      	cmp	r7, #0
 8012d1e:	f000 80a9 	beq.w	8012e74 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8012d22:	4618      	mov	r0, r3
 8012d24:	f7f6 fc7f 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012d28:	2800      	cmp	r0, #0
 8012d2a:	f040 80a3 	bne.w	8012e74 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8012d2e:	f9b5 1000 	ldrsh.w	r1, [r5]
 8012d32:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8012d36:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8012d3a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8012d3e:	fb04 1303 	mla	r3, r4, r3, r1
 8012d42:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8012d46:	4365      	muls	r5, r4
 8012d48:	2fff      	cmp	r7, #255	; 0xff
 8012d4a:	eba4 0200 	sub.w	r2, r4, r0
 8012d4e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8012d52:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8012d56:	d04a      	beq.n	8012dee <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8012d58:	b2bc      	uxth	r4, r7
 8012d5a:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8012d5e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8012d62:	fa5f f788 	uxtb.w	r7, r8
 8012d66:	b2f3      	uxtb	r3, r6
 8012d68:	0040      	lsls	r0, r0, #1
 8012d6a:	fb0e fe04 	mul.w	lr, lr, r4
 8012d6e:	4367      	muls	r7, r4
 8012d70:	4363      	muls	r3, r4
 8012d72:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8012d76:	fa1f fc8c 	uxth.w	ip, ip
 8012d7a:	42a9      	cmp	r1, r5
 8012d7c:	d27a      	bcs.n	8012e74 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8012d7e:	eb01 0900 	add.w	r9, r1, r0
 8012d82:	4549      	cmp	r1, r9
 8012d84:	d231      	bcs.n	8012dea <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8012d86:	880a      	ldrh	r2, [r1, #0]
 8012d88:	1214      	asrs	r4, r2, #8
 8012d8a:	10d6      	asrs	r6, r2, #3
 8012d8c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8012d90:	00d2      	lsls	r2, r2, #3
 8012d92:	b2d2      	uxtb	r2, r2
 8012d94:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8012d98:	fb14 f40c 	smulbb	r4, r4, ip
 8012d9c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8012da0:	4474      	add	r4, lr
 8012da2:	fb12 f20c 	smulbb	r2, r2, ip
 8012da6:	b2a4      	uxth	r4, r4
 8012da8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012dac:	441a      	add	r2, r3
 8012dae:	b292      	uxth	r2, r2
 8012db0:	f104 0a01 	add.w	sl, r4, #1
 8012db4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8012db8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8012dbc:	fb16 f60c 	smulbb	r6, r6, ip
 8012dc0:	f102 0a01 	add.w	sl, r2, #1
 8012dc4:	443e      	add	r6, r7
 8012dc6:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8012dca:	b2b6      	uxth	r6, r6
 8012dcc:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8012dd0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012dd4:	4322      	orrs	r2, r4
 8012dd6:	1c74      	adds	r4, r6, #1
 8012dd8:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8012ddc:	0976      	lsrs	r6, r6, #5
 8012dde:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012de2:	4332      	orrs	r2, r6
 8012de4:	f821 2b02 	strh.w	r2, [r1], #2
 8012de8:	e7cb      	b.n	8012d82 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8012dea:	4441      	add	r1, r8
 8012dec:	e7c5      	b.n	8012d7a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8012dee:	4f22      	ldr	r7, [pc, #136]	; (8012e78 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8012df0:	0973      	lsrs	r3, r6, #5
 8012df2:	ea08 0707 	and.w	r7, r8, r7
 8012df6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012dfa:	433b      	orrs	r3, r7
 8012dfc:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8012e00:	4333      	orrs	r3, r6
 8012e02:	07e7      	lsls	r7, r4, #31
 8012e04:	b29b      	uxth	r3, r3
 8012e06:	d50b      	bpl.n	8012e20 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8012e08:	0040      	lsls	r0, r0, #1
 8012e0a:	0052      	lsls	r2, r2, #1
 8012e0c:	42a9      	cmp	r1, r5
 8012e0e:	d231      	bcs.n	8012e74 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8012e10:	180c      	adds	r4, r1, r0
 8012e12:	42a1      	cmp	r1, r4
 8012e14:	d202      	bcs.n	8012e1c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8012e16:	f821 3b02 	strh.w	r3, [r1], #2
 8012e1a:	e7fa      	b.n	8012e12 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8012e1c:	4411      	add	r1, r2
 8012e1e:	e7f5      	b.n	8012e0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8012e20:	078e      	lsls	r6, r1, #30
 8012e22:	d008      	beq.n	8012e36 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8012e24:	0066      	lsls	r6, r4, #1
 8012e26:	460a      	mov	r2, r1
 8012e28:	42aa      	cmp	r2, r5
 8012e2a:	d202      	bcs.n	8012e32 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8012e2c:	8013      	strh	r3, [r2, #0]
 8012e2e:	4432      	add	r2, r6
 8012e30:	e7fa      	b.n	8012e28 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8012e32:	3102      	adds	r1, #2
 8012e34:	3801      	subs	r0, #1
 8012e36:	07c2      	lsls	r2, r0, #31
 8012e38:	d50b      	bpl.n	8012e52 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8012e3a:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8012e3e:	3a01      	subs	r2, #1
 8012e40:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8012e44:	0066      	lsls	r6, r4, #1
 8012e46:	42aa      	cmp	r2, r5
 8012e48:	d202      	bcs.n	8012e50 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8012e4a:	8013      	strh	r3, [r2, #0]
 8012e4c:	4432      	add	r2, r6
 8012e4e:	e7fa      	b.n	8012e46 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8012e50:	3801      	subs	r0, #1
 8012e52:	b178      	cbz	r0, 8012e74 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8012e54:	1040      	asrs	r0, r0, #1
 8012e56:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8012e5a:	0080      	lsls	r0, r0, #2
 8012e5c:	0064      	lsls	r4, r4, #1
 8012e5e:	42a9      	cmp	r1, r5
 8012e60:	d208      	bcs.n	8012e74 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8012e62:	180e      	adds	r6, r1, r0
 8012e64:	460a      	mov	r2, r1
 8012e66:	42b2      	cmp	r2, r6
 8012e68:	d202      	bcs.n	8012e70 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 8012e6a:	f842 3b04 	str.w	r3, [r2], #4
 8012e6e:	e7fa      	b.n	8012e66 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8012e70:	4421      	add	r1, r4
 8012e72:	e7f4      	b.n	8012e5e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8012e74:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012e78:	00fff800 	.word	0x00fff800

08012e7c <_ZN8touchgfx8LCD16bppC1Ev>:
 8012e7c:	2200      	movs	r2, #0
 8012e7e:	4910      	ldr	r1, [pc, #64]	; (8012ec0 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8012e80:	6042      	str	r2, [r0, #4]
 8012e82:	6001      	str	r1, [r0, #0]
 8012e84:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8012e88:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8012e8c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8012e90:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8012e94:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8012e98:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8012e9c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8012ea0:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8012ea4:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8012ea8:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8012eac:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8012eb0:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8012eb4:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8012eb8:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8012ebc:	4770      	bx	lr
 8012ebe:	bf00      	nop
 8012ec0:	0801e348 	.word	0x0801e348

08012ec4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8012ec4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012ec8:	460d      	mov	r5, r1
 8012eca:	b08d      	sub	sp, #52	; 0x34
 8012ecc:	4604      	mov	r4, r0
 8012ece:	6808      	ldr	r0, [r1, #0]
 8012ed0:	6849      	ldr	r1, [r1, #4]
 8012ed2:	4699      	mov	r9, r3
 8012ed4:	ab08      	add	r3, sp, #32
 8012ed6:	c303      	stmia	r3!, {r0, r1}
 8012ed8:	6810      	ldr	r0, [r2, #0]
 8012eda:	6851      	ldr	r1, [r2, #4]
 8012edc:	ab0a      	add	r3, sp, #40	; 0x28
 8012ede:	c303      	stmia	r3!, {r0, r1}
 8012ee0:	a808      	add	r0, sp, #32
 8012ee2:	f7f9 fd25 	bl	800c930 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012ee6:	4629      	mov	r1, r5
 8012ee8:	a80a      	add	r0, sp, #40	; 0x28
 8012eea:	f7f9 fd49 	bl	800c980 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012eee:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8012ef2:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8012ef6:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8012efa:	4d63      	ldr	r5, [pc, #396]	; (8013088 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8012efc:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8012f00:	6828      	ldr	r0, [r5, #0]
 8012f02:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8012f06:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012f0a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8012f0e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8012f12:	440a      	add	r2, r1
 8012f14:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8012f18:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8012f1c:	4413      	add	r3, r2
 8012f1e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8012f22:	6803      	ldr	r3, [r0, #0]
 8012f24:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012f26:	4798      	blx	r3
 8012f28:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8012f2c:	d119      	bne.n	8012f62 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8012f2e:	f010 0f20 	tst.w	r0, #32
 8012f32:	6828      	ldr	r0, [r5, #0]
 8012f34:	d018      	beq.n	8012f68 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8012f36:	2500      	movs	r5, #0
 8012f38:	6801      	ldr	r1, [r0, #0]
 8012f3a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8012f3e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8012f42:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8012f46:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8012f4a:	9502      	str	r5, [sp, #8]
 8012f4c:	b2b6      	uxth	r6, r6
 8012f4e:	fa1f f588 	uxth.w	r5, r8
 8012f52:	9601      	str	r6, [sp, #4]
 8012f54:	9500      	str	r5, [sp, #0]
 8012f56:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8012f58:	4621      	mov	r1, r4
 8012f5a:	47a8      	blx	r5
 8012f5c:	b00d      	add	sp, #52	; 0x34
 8012f5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012f62:	f010 0f40 	tst.w	r0, #64	; 0x40
 8012f66:	e7e4      	b.n	8012f32 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8012f68:	6803      	ldr	r3, [r0, #0]
 8012f6a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012f6c:	4798      	blx	r3
 8012f6e:	4947      	ldr	r1, [pc, #284]	; (801308c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8012f70:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8012f74:	880b      	ldrh	r3, [r1, #0]
 8012f76:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8012f7a:	fb03 5202 	mla	r2, r3, r2, r5
 8012f7e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012f82:	4373      	muls	r3, r6
 8012f84:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8012f88:	9307      	str	r3, [sp, #28]
 8012f8a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8012f8e:	9306      	str	r3, [sp, #24]
 8012f90:	468a      	mov	sl, r1
 8012f92:	9b07      	ldr	r3, [sp, #28]
 8012f94:	4298      	cmp	r0, r3
 8012f96:	d270      	bcs.n	801307a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8012f98:	9b06      	ldr	r3, [sp, #24]
 8012f9a:	4621      	mov	r1, r4
 8012f9c:	eb00 0b03 	add.w	fp, r0, r3
 8012fa0:	4558      	cmp	r0, fp
 8012fa2:	d25d      	bcs.n	8013060 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8012fa4:	f851 4b04 	ldr.w	r4, [r1], #4
 8012fa8:	0e23      	lsrs	r3, r4, #24
 8012faa:	d014      	beq.n	8012fd6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8012fac:	2bff      	cmp	r3, #255	; 0xff
 8012fae:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8012fb2:	d112      	bne.n	8012fda <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8012fb4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8012fb8:	d10f      	bne.n	8012fda <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8012fba:	0963      	lsrs	r3, r4, #5
 8012fbc:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8012fc0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012fc4:	f02c 0c07 	bic.w	ip, ip, #7
 8012fc8:	ea43 0c0c 	orr.w	ip, r3, ip
 8012fcc:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8012fd0:	ea4c 0404 	orr.w	r4, ip, r4
 8012fd4:	8004      	strh	r4, [r0, #0]
 8012fd6:	3002      	adds	r0, #2
 8012fd8:	e7e2      	b.n	8012fa0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8012fda:	fb09 f303 	mul.w	r3, r9, r3
 8012fde:	8807      	ldrh	r7, [r0, #0]
 8012fe0:	1c5a      	adds	r2, r3, #1
 8012fe2:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8012fe6:	1212      	asrs	r2, r2, #8
 8012fe8:	123e      	asrs	r6, r7, #8
 8012fea:	b293      	uxth	r3, r2
 8012fec:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8012ff0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012ff4:	43d2      	mvns	r2, r2
 8012ff6:	b2d2      	uxtb	r2, r2
 8012ff8:	10fd      	asrs	r5, r7, #3
 8012ffa:	fb1e fe03 	smulbb	lr, lr, r3
 8012ffe:	00ff      	lsls	r7, r7, #3
 8013000:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8013004:	fb06 e602 	mla	r6, r6, r2, lr
 8013008:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801300c:	b2ff      	uxtb	r7, r7
 801300e:	fa5f fc8c 	uxtb.w	ip, ip
 8013012:	b2e4      	uxtb	r4, r4
 8013014:	b2b6      	uxth	r6, r6
 8013016:	fb1c fc03 	smulbb	ip, ip, r3
 801301a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801301e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8013022:	fb14 f403 	smulbb	r4, r4, r3
 8013026:	fb05 c502 	mla	r5, r5, r2, ip
 801302a:	f106 0e01 	add.w	lr, r6, #1
 801302e:	fb07 4702 	mla	r7, r7, r2, r4
 8013032:	b2ad      	uxth	r5, r5
 8013034:	b2bf      	uxth	r7, r7
 8013036:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801303a:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801303e:	f105 0c01 	add.w	ip, r5, #1
 8013042:	1c7e      	adds	r6, r7, #1
 8013044:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8013048:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801304c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8013050:	096d      	lsrs	r5, r5, #5
 8013052:	ea46 060e 	orr.w	r6, r6, lr
 8013056:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801305a:	432e      	orrs	r6, r5
 801305c:	8006      	strh	r6, [r0, #0]
 801305e:	e7ba      	b.n	8012fd6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8013060:	f8ba 3000 	ldrh.w	r3, [sl]
 8013064:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8013068:	eba3 0308 	sub.w	r3, r3, r8
 801306c:	eba4 0408 	sub.w	r4, r4, r8
 8013070:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013074:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8013078:	e78b      	b.n	8012f92 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801307a:	4b03      	ldr	r3, [pc, #12]	; (8013088 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801307c:	6818      	ldr	r0, [r3, #0]
 801307e:	6803      	ldr	r3, [r0, #0]
 8013080:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013082:	4798      	blx	r3
 8013084:	e76a      	b.n	8012f5c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8013086:	bf00      	nop
 8013088:	20012670 	.word	0x20012670
 801308c:	2001266a 	.word	0x2001266a

08013090 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8013090:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013094:	460c      	mov	r4, r1
 8013096:	b085      	sub	sp, #20
 8013098:	6810      	ldr	r0, [r2, #0]
 801309a:	6851      	ldr	r1, [r2, #4]
 801309c:	466d      	mov	r5, sp
 801309e:	c503      	stmia	r5!, {r0, r1}
 80130a0:	6818      	ldr	r0, [r3, #0]
 80130a2:	6859      	ldr	r1, [r3, #4]
 80130a4:	4616      	mov	r6, r2
 80130a6:	c503      	stmia	r5!, {r0, r1}
 80130a8:	4668      	mov	r0, sp
 80130aa:	f7f9 fc41 	bl	800c930 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80130ae:	4631      	mov	r1, r6
 80130b0:	a802      	add	r0, sp, #8
 80130b2:	f7f9 fc65 	bl	800c980 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80130b6:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 80130ba:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 80130be:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80130c2:	4d28      	ldr	r5, [pc, #160]	; (8013164 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 80130c4:	4e28      	ldr	r6, [pc, #160]	; (8013168 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 80130c6:	6828      	ldr	r0, [r5, #0]
 80130c8:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80130cc:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 80130d0:	fb11 2103 	smlabb	r1, r1, r3, r2
 80130d4:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80130d8:	f8bd 1000 	ldrh.w	r1, [sp]
 80130dc:	440a      	add	r2, r1
 80130de:	f8ad 2008 	strh.w	r2, [sp, #8]
 80130e2:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80130e6:	4413      	add	r3, r2
 80130e8:	f8ad 300a 	strh.w	r3, [sp, #10]
 80130ec:	6803      	ldr	r3, [r0, #0]
 80130ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80130f0:	4798      	blx	r3
 80130f2:	8833      	ldrh	r3, [r6, #0]
 80130f4:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 80130f8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80130fc:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801316c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8013100:	fb03 1202 	mla	r2, r3, r2, r1
 8013104:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013108:	fb08 f303 	mul.w	r3, r8, r3
 801310c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013110:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8013114:	4298      	cmp	r0, r3
 8013116:	d21d      	bcs.n	8013154 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8013118:	eb00 080c 	add.w	r8, r0, ip
 801311c:	4540      	cmp	r0, r8
 801311e:	d20f      	bcs.n	8013140 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8013120:	f854 1b04 	ldr.w	r1, [r4], #4
 8013124:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8013128:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801312c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8013130:	ea42 0209 	orr.w	r2, r2, r9
 8013134:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8013138:	430a      	orrs	r2, r1
 801313a:	f820 2b02 	strh.w	r2, [r0], #2
 801313e:	e7ed      	b.n	801311c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8013140:	8832      	ldrh	r2, [r6, #0]
 8013142:	1bd2      	subs	r2, r2, r7
 8013144:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013148:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801314c:	1bd2      	subs	r2, r2, r7
 801314e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8013152:	e7df      	b.n	8013114 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8013154:	6828      	ldr	r0, [r5, #0]
 8013156:	6803      	ldr	r3, [r0, #0]
 8013158:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801315a:	4798      	blx	r3
 801315c:	b005      	add	sp, #20
 801315e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013162:	bf00      	nop
 8013164:	20012670 	.word	0x20012670
 8013168:	2001266a 	.word	0x2001266a
 801316c:	fffff800 	.word	0xfffff800

08013170 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8013170:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013174:	460e      	mov	r6, r1
 8013176:	b08e      	sub	sp, #56	; 0x38
 8013178:	4604      	mov	r4, r0
 801317a:	6808      	ldr	r0, [r1, #0]
 801317c:	6849      	ldr	r1, [r1, #4]
 801317e:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8013358 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8013182:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801335c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8013186:	461d      	mov	r5, r3
 8013188:	ab0a      	add	r3, sp, #40	; 0x28
 801318a:	c303      	stmia	r3!, {r0, r1}
 801318c:	6810      	ldr	r0, [r2, #0]
 801318e:	6851      	ldr	r1, [r2, #4]
 8013190:	ab0c      	add	r3, sp, #48	; 0x30
 8013192:	c303      	stmia	r3!, {r0, r1}
 8013194:	a80a      	add	r0, sp, #40	; 0x28
 8013196:	f7f9 fbcb 	bl	800c930 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801319a:	4631      	mov	r1, r6
 801319c:	a80c      	add	r0, sp, #48	; 0x30
 801319e:	f7f9 fbef 	bl	800c980 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80131a2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80131a6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80131aa:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80131ae:	f8d8 0000 	ldr.w	r0, [r8]
 80131b2:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 80131b6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 80131ba:	fb11 2103 	smlabb	r1, r1, r3, r2
 80131be:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80131c2:	440c      	add	r4, r1
 80131c4:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 80131c8:	440a      	add	r2, r1
 80131ca:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80131ce:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 80131d2:	4413      	add	r3, r2
 80131d4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80131d8:	6803      	ldr	r3, [r0, #0]
 80131da:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80131dc:	4798      	blx	r3
 80131de:	2dff      	cmp	r5, #255	; 0xff
 80131e0:	d124      	bne.n	801322c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 80131e2:	f010 0f01 	tst.w	r0, #1
 80131e6:	f8d8 0000 	ldr.w	r0, [r8]
 80131ea:	d022      	beq.n	8013232 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 80131ec:	2100      	movs	r1, #0
 80131ee:	f8d0 c000 	ldr.w	ip, [r0]
 80131f2:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80131f6:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80131fa:	e9cd 1107 	strd	r1, r1, [sp, #28]
 80131fe:	f04f 0e01 	mov.w	lr, #1
 8013202:	f8cd e018 	str.w	lr, [sp, #24]
 8013206:	f8b9 e000 	ldrh.w	lr, [r9]
 801320a:	9503      	str	r5, [sp, #12]
 801320c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8013210:	b2b6      	uxth	r6, r6
 8013212:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8013216:	9102      	str	r1, [sp, #8]
 8013218:	b2bf      	uxth	r7, r7
 801321a:	9601      	str	r6, [sp, #4]
 801321c:	9700      	str	r7, [sp, #0]
 801321e:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8013222:	4621      	mov	r1, r4
 8013224:	47a8      	blx	r5
 8013226:	b00e      	add	sp, #56	; 0x38
 8013228:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801322c:	f010 0f04 	tst.w	r0, #4
 8013230:	e7d9      	b.n	80131e6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8013232:	6803      	ldr	r3, [r0, #0]
 8013234:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013236:	4798      	blx	r3
 8013238:	f8b9 3000 	ldrh.w	r3, [r9]
 801323c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8013240:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8013244:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8013248:	fb03 1202 	mla	r2, r3, r2, r1
 801324c:	ebac 0c07 	sub.w	ip, ip, r7
 8013250:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013254:	435e      	muls	r6, r3
 8013256:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801325a:	2dff      	cmp	r5, #255	; 0xff
 801325c:	eba3 0707 	sub.w	r7, r3, r7
 8013260:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8013264:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8013268:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801326c:	d049      	beq.n	8013302 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801326e:	43eb      	mvns	r3, r5
 8013270:	fa1f f985 	uxth.w	r9, r5
 8013274:	b2db      	uxtb	r3, r3
 8013276:	42b0      	cmp	r0, r6
 8013278:	d266      	bcs.n	8013348 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801327a:	eb00 0a0e 	add.w	sl, r0, lr
 801327e:	4550      	cmp	r0, sl
 8013280:	4621      	mov	r1, r4
 8013282:	f104 0403 	add.w	r4, r4, #3
 8013286:	d25b      	bcs.n	8013340 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8013288:	8802      	ldrh	r2, [r0, #0]
 801328a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801328e:	ea4f 2822 	mov.w	r8, r2, asr #8
 8013292:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8013296:	fb11 f109 	smulbb	r1, r1, r9
 801329a:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801329e:	10d5      	asrs	r5, r2, #3
 80132a0:	fb08 1803 	mla	r8, r8, r3, r1
 80132a4:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 80132a8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80132ac:	fb11 f109 	smulbb	r1, r1, r9
 80132b0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80132b4:	fb05 1503 	mla	r5, r5, r3, r1
 80132b8:	00d2      	lsls	r2, r2, #3
 80132ba:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80132be:	b2d2      	uxtb	r2, r2
 80132c0:	fb11 f109 	smulbb	r1, r1, r9
 80132c4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80132c8:	fa1f f888 	uxth.w	r8, r8
 80132cc:	fb02 1203 	mla	r2, r2, r3, r1
 80132d0:	b292      	uxth	r2, r2
 80132d2:	f108 0101 	add.w	r1, r8, #1
 80132d6:	b2ad      	uxth	r5, r5
 80132d8:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 80132dc:	1c51      	adds	r1, r2, #1
 80132de:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80132e2:	1c69      	adds	r1, r5, #1
 80132e4:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80132e8:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 80132ec:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80132f0:	096d      	lsrs	r5, r5, #5
 80132f2:	ea42 0208 	orr.w	r2, r2, r8
 80132f6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80132fa:	432a      	orrs	r2, r5
 80132fc:	f820 2b02 	strh.w	r2, [r0], #2
 8013300:	e7bd      	b.n	801327e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8013302:	4a14      	ldr	r2, [pc, #80]	; (8013354 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8013304:	42b0      	cmp	r0, r6
 8013306:	d21f      	bcs.n	8013348 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8013308:	eb00 050e 	add.w	r5, r0, lr
 801330c:	42a8      	cmp	r0, r5
 801330e:	4621      	mov	r1, r4
 8013310:	f104 0403 	add.w	r4, r4, #3
 8013314:	d210      	bcs.n	8013338 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8013316:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801331a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801331e:	00db      	lsls	r3, r3, #3
 8013320:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8013324:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013328:	430b      	orrs	r3, r1
 801332a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801332e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8013332:	f820 3b02 	strh.w	r3, [r0], #2
 8013336:	e7e9      	b.n	801330c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8013338:	4438      	add	r0, r7
 801333a:	eb01 040c 	add.w	r4, r1, ip
 801333e:	e7e1      	b.n	8013304 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8013340:	4438      	add	r0, r7
 8013342:	eb01 040c 	add.w	r4, r1, ip
 8013346:	e796      	b.n	8013276 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8013348:	4b03      	ldr	r3, [pc, #12]	; (8013358 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801334a:	6818      	ldr	r0, [r3, #0]
 801334c:	6803      	ldr	r3, [r0, #0]
 801334e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013350:	4798      	blx	r3
 8013352:	e768      	b.n	8013226 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8013354:	fffff800 	.word	0xfffff800
 8013358:	20012670 	.word	0x20012670
 801335c:	2001266a 	.word	0x2001266a

08013360 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8013360:	b4f0      	push	{r4, r5, r6, r7}
 8013362:	4616      	mov	r6, r2
 8013364:	2e01      	cmp	r6, #1
 8013366:	461c      	mov	r4, r3
 8013368:	460d      	mov	r5, r1
 801336a:	9a04      	ldr	r2, [sp, #16]
 801336c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8013370:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8013374:	d012      	beq.n	801339c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8013376:	d303      	bcc.n	8013380 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8013378:	2e02      	cmp	r6, #2
 801337a:	d00a      	beq.n	8013392 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801337c:	bcf0      	pop	{r4, r5, r6, r7}
 801337e:	4770      	bx	lr
 8013380:	6805      	ldr	r5, [r0, #0]
 8013382:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8013386:	68ed      	ldr	r5, [r5, #12]
 8013388:	4613      	mov	r3, r2
 801338a:	46ac      	mov	ip, r5
 801338c:	4622      	mov	r2, r4
 801338e:	bcf0      	pop	{r4, r5, r6, r7}
 8013390:	4760      	bx	ip
 8013392:	4621      	mov	r1, r4
 8013394:	4628      	mov	r0, r5
 8013396:	bcf0      	pop	{r4, r5, r6, r7}
 8013398:	f7ff bd94 	b.w	8012ec4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801339c:	4621      	mov	r1, r4
 801339e:	4628      	mov	r0, r5
 80133a0:	bcf0      	pop	{r4, r5, r6, r7}
 80133a2:	f7ff bee5 	b.w	8013170 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

080133a8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 80133a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80133ac:	4681      	mov	r9, r0
 80133ae:	b093      	sub	sp, #76	; 0x4c
 80133b0:	6810      	ldr	r0, [r2, #0]
 80133b2:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 80133b6:	4f6d      	ldr	r7, [pc, #436]	; (801356c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 80133b8:	4688      	mov	r8, r1
 80133ba:	6851      	ldr	r1, [r2, #4]
 80133bc:	ac0e      	add	r4, sp, #56	; 0x38
 80133be:	c403      	stmia	r4!, {r0, r1}
 80133c0:	6818      	ldr	r0, [r3, #0]
 80133c2:	6859      	ldr	r1, [r3, #4]
 80133c4:	ac10      	add	r4, sp, #64	; 0x40
 80133c6:	4616      	mov	r6, r2
 80133c8:	c403      	stmia	r4!, {r0, r1}
 80133ca:	a80e      	add	r0, sp, #56	; 0x38
 80133cc:	f7f9 fab0 	bl	800c930 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80133d0:	4631      	mov	r1, r6
 80133d2:	a810      	add	r0, sp, #64	; 0x40
 80133d4:	f7f9 fad4 	bl	800c980 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80133d8:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80133dc:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 80133e0:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80133e4:	4e62      	ldr	r6, [pc, #392]	; (8013570 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80133e6:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 80133ea:	6830      	ldr	r0, [r6, #0]
 80133ec:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 80133f0:	fb11 2103 	smlabb	r1, r1, r3, r2
 80133f4:	4489      	add	r9, r1
 80133f6:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 80133fa:	440a      	add	r2, r1
 80133fc:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8013400:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8013404:	4413      	add	r3, r2
 8013406:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801340a:	6803      	ldr	r3, [r0, #0]
 801340c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801340e:	4798      	blx	r3
 8013410:	f010 0f80 	tst.w	r0, #128	; 0x80
 8013414:	6830      	ldr	r0, [r6, #0]
 8013416:	d01d      	beq.n	8013454 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8013418:	2200      	movs	r2, #0
 801341a:	6801      	ldr	r1, [r0, #0]
 801341c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8013420:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8013424:	220b      	movs	r2, #11
 8013426:	9207      	str	r2, [sp, #28]
 8013428:	883a      	ldrh	r2, [r7, #0]
 801342a:	9206      	str	r2, [sp, #24]
 801342c:	2201      	movs	r2, #1
 801342e:	e9cd a204 	strd	sl, r2, [sp, #16]
 8013432:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8013436:	9203      	str	r2, [sp, #12]
 8013438:	b2a4      	uxth	r4, r4
 801343a:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801343e:	9200      	str	r2, [sp, #0]
 8013440:	b2ad      	uxth	r5, r5
 8013442:	9502      	str	r5, [sp, #8]
 8013444:	9401      	str	r4, [sp, #4]
 8013446:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8013448:	4642      	mov	r2, r8
 801344a:	4649      	mov	r1, r9
 801344c:	47a0      	blx	r4
 801344e:	b013      	add	sp, #76	; 0x4c
 8013450:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013454:	6803      	ldr	r3, [r0, #0]
 8013456:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013458:	4798      	blx	r3
 801345a:	883b      	ldrh	r3, [r7, #0]
 801345c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8013460:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8013464:	fb03 1202 	mla	r2, r3, r2, r1
 8013468:	435d      	muls	r5, r3
 801346a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801346e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8013472:	920c      	str	r2, [sp, #48]	; 0x30
 8013474:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8013478:	1b12      	subs	r2, r2, r4
 801347a:	920d      	str	r2, [sp, #52]	; 0x34
 801347c:	0062      	lsls	r2, r4, #1
 801347e:	1b1c      	subs	r4, r3, r4
 8013480:	0063      	lsls	r3, r4, #1
 8013482:	920a      	str	r2, [sp, #40]	; 0x28
 8013484:	930b      	str	r3, [sp, #44]	; 0x2c
 8013486:	f04f 0e04 	mov.w	lr, #4
 801348a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801348c:	4298      	cmp	r0, r3
 801348e:	d266      	bcs.n	801355e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8013490:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013492:	eb00 0b03 	add.w	fp, r0, r3
 8013496:	4558      	cmp	r0, fp
 8013498:	d25c      	bcs.n	8013554 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801349a:	f819 3b01 	ldrb.w	r3, [r9], #1
 801349e:	fb1e e303 	smlabb	r3, lr, r3, lr
 80134a2:	f858 2003 	ldr.w	r2, [r8, r3]
 80134a6:	0e11      	lsrs	r1, r2, #24
 80134a8:	d012      	beq.n	80134d0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80134aa:	29ff      	cmp	r1, #255	; 0xff
 80134ac:	ea4f 2712 	mov.w	r7, r2, lsr #8
 80134b0:	d110      	bne.n	80134d4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 80134b2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80134b6:	d10d      	bne.n	80134d4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 80134b8:	0953      	lsrs	r3, r2, #5
 80134ba:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 80134be:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80134c2:	f027 0707 	bic.w	r7, r7, #7
 80134c6:	431f      	orrs	r7, r3
 80134c8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80134cc:	433a      	orrs	r2, r7
 80134ce:	8002      	strh	r2, [r0, #0]
 80134d0:	3002      	adds	r0, #2
 80134d2:	e7e0      	b.n	8013496 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 80134d4:	fb0a f101 	mul.w	r1, sl, r1
 80134d8:	8806      	ldrh	r6, [r0, #0]
 80134da:	1c4b      	adds	r3, r1, #1
 80134dc:	eb03 2321 	add.w	r3, r3, r1, asr #8
 80134e0:	1235      	asrs	r5, r6, #8
 80134e2:	10f4      	asrs	r4, r6, #3
 80134e4:	121b      	asrs	r3, r3, #8
 80134e6:	00f6      	lsls	r6, r6, #3
 80134e8:	b299      	uxth	r1, r3
 80134ea:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 80134ee:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80134f2:	b2f6      	uxtb	r6, r6
 80134f4:	43db      	mvns	r3, r3
 80134f6:	b2d2      	uxtb	r2, r2
 80134f8:	b2db      	uxtb	r3, r3
 80134fa:	fb1c fc01 	smulbb	ip, ip, r1
 80134fe:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8013502:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8013506:	fb12 f201 	smulbb	r2, r2, r1
 801350a:	fb05 c503 	mla	r5, r5, r3, ip
 801350e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8013512:	b2ff      	uxtb	r7, r7
 8013514:	fb06 2203 	mla	r2, r6, r3, r2
 8013518:	b2ad      	uxth	r5, r5
 801351a:	fb17 f701 	smulbb	r7, r7, r1
 801351e:	b292      	uxth	r2, r2
 8013520:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8013524:	fb04 7403 	mla	r4, r4, r3, r7
 8013528:	f105 0c01 	add.w	ip, r5, #1
 801352c:	1c57      	adds	r7, r2, #1
 801352e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8013532:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8013536:	b2a4      	uxth	r4, r4
 8013538:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801353c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8013540:	433d      	orrs	r5, r7
 8013542:	1c67      	adds	r7, r4, #1
 8013544:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8013548:	0964      	lsrs	r4, r4, #5
 801354a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801354e:	4325      	orrs	r5, r4
 8013550:	8005      	strh	r5, [r0, #0]
 8013552:	e7bd      	b.n	80134d0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8013554:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013556:	4418      	add	r0, r3
 8013558:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801355a:	4499      	add	r9, r3
 801355c:	e795      	b.n	801348a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801355e:	4b04      	ldr	r3, [pc, #16]	; (8013570 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8013560:	6818      	ldr	r0, [r3, #0]
 8013562:	6803      	ldr	r3, [r0, #0]
 8013564:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013566:	4798      	blx	r3
 8013568:	e771      	b.n	801344e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801356a:	bf00      	nop
 801356c:	2001266a 	.word	0x2001266a
 8013570:	20012670 	.word	0x20012670

08013574 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8013574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013578:	b087      	sub	sp, #28
 801357a:	4680      	mov	r8, r0
 801357c:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8013580:	460d      	mov	r5, r1
 8013582:	4614      	mov	r4, r2
 8013584:	2e00      	cmp	r6, #0
 8013586:	f000 80b9 	beq.w	80136fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801358a:	6810      	ldr	r0, [r2, #0]
 801358c:	6851      	ldr	r1, [r2, #4]
 801358e:	af02      	add	r7, sp, #8
 8013590:	c703      	stmia	r7!, {r0, r1}
 8013592:	6818      	ldr	r0, [r3, #0]
 8013594:	6859      	ldr	r1, [r3, #4]
 8013596:	af04      	add	r7, sp, #16
 8013598:	c703      	stmia	r7!, {r0, r1}
 801359a:	a802      	add	r0, sp, #8
 801359c:	f7f9 f9c8 	bl	800c930 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80135a0:	4621      	mov	r1, r4
 80135a2:	a804      	add	r0, sp, #16
 80135a4:	f7f9 f9ec 	bl	800c980 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80135a8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80135ac:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80135b0:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 80135b4:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 80135b8:	fb14 2103 	smlabb	r1, r4, r3, r2
 80135bc:	eb08 0401 	add.w	r4, r8, r1
 80135c0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80135c4:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80135c8:	440a      	add	r2, r1
 80135ca:	f8ad 2010 	strh.w	r2, [sp, #16]
 80135ce:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80135d2:	4413      	add	r3, r2
 80135d4:	f8ad 3012 	strh.w	r3, [sp, #18]
 80135d8:	4b4a      	ldr	r3, [pc, #296]	; (8013704 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 80135da:	6818      	ldr	r0, [r3, #0]
 80135dc:	6803      	ldr	r3, [r0, #0]
 80135de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80135e0:	4798      	blx	r3
 80135e2:	4b49      	ldr	r3, [pc, #292]	; (8013708 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 80135e4:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 80135e8:	881a      	ldrh	r2, [r3, #0]
 80135ea:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 80135ee:	2eff      	cmp	r6, #255	; 0xff
 80135f0:	fb02 c101 	mla	r1, r2, r1, ip
 80135f4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80135f8:	fb02 f207 	mul.w	r2, r2, r7
 80135fc:	f105 0104 	add.w	r1, r5, #4
 8013600:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8013604:	461d      	mov	r5, r3
 8013606:	d05a      	beq.n	80136be <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8013608:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801360c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8013610:	b2b6      	uxth	r6, r6
 8013612:	fa1f fe8e 	uxth.w	lr, lr
 8013616:	9301      	str	r3, [sp, #4]
 8013618:	4282      	cmp	r2, r0
 801361a:	d96a      	bls.n	80136f2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801361c:	eb00 0b0a 	add.w	fp, r0, sl
 8013620:	4583      	cmp	fp, r0
 8013622:	d940      	bls.n	80136a6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8013624:	f814 3b01 	ldrb.w	r3, [r4], #1
 8013628:	8805      	ldrh	r5, [r0, #0]
 801362a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801362e:	122f      	asrs	r7, r5, #8
 8013630:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8013634:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013638:	fb17 f70e 	smulbb	r7, r7, lr
 801363c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8013640:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013644:	00ed      	lsls	r5, r5, #3
 8013646:	fb0c 7c06 	mla	ip, ip, r6, r7
 801364a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801364e:	10df      	asrs	r7, r3, #3
 8013650:	b2ed      	uxtb	r5, r5
 8013652:	00db      	lsls	r3, r3, #3
 8013654:	fa1f fc8c 	uxth.w	ip, ip
 8013658:	fb19 f90e 	smulbb	r9, r9, lr
 801365c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8013660:	b2db      	uxtb	r3, r3
 8013662:	fb15 f50e 	smulbb	r5, r5, lr
 8013666:	fb07 9706 	mla	r7, r7, r6, r9
 801366a:	fb03 5306 	mla	r3, r3, r6, r5
 801366e:	f10c 0901 	add.w	r9, ip, #1
 8013672:	b29b      	uxth	r3, r3
 8013674:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8013678:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801367c:	f103 0c01 	add.w	ip, r3, #1
 8013680:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8013684:	b2bf      	uxth	r7, r7
 8013686:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801368a:	ea4c 0c09 	orr.w	ip, ip, r9
 801368e:	f107 0901 	add.w	r9, r7, #1
 8013692:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8013696:	097f      	lsrs	r7, r7, #5
 8013698:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801369c:	ea4c 0c07 	orr.w	ip, ip, r7
 80136a0:	f820 cb02 	strh.w	ip, [r0], #2
 80136a4:	e7bc      	b.n	8013620 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 80136a6:	9b01      	ldr	r3, [sp, #4]
 80136a8:	881b      	ldrh	r3, [r3, #0]
 80136aa:	eba3 0308 	sub.w	r3, r3, r8
 80136ae:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80136b2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80136b6:	eba3 0308 	sub.w	r3, r3, r8
 80136ba:	441c      	add	r4, r3
 80136bc:	e7ac      	b.n	8013618 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 80136be:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80136c2:	4282      	cmp	r2, r0
 80136c4:	d915      	bls.n	80136f2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 80136c6:	eb00 060a 	add.w	r6, r0, sl
 80136ca:	4286      	cmp	r6, r0
 80136cc:	d906      	bls.n	80136dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 80136ce:	f814 3b01 	ldrb.w	r3, [r4], #1
 80136d2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80136d6:	f820 3b02 	strh.w	r3, [r0], #2
 80136da:	e7f6      	b.n	80136ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 80136dc:	882b      	ldrh	r3, [r5, #0]
 80136de:	eba3 0308 	sub.w	r3, r3, r8
 80136e2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80136e6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80136ea:	eba3 0308 	sub.w	r3, r3, r8
 80136ee:	441c      	add	r4, r3
 80136f0:	e7e7      	b.n	80136c2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 80136f2:	4b04      	ldr	r3, [pc, #16]	; (8013704 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 80136f4:	6818      	ldr	r0, [r3, #0]
 80136f6:	6803      	ldr	r3, [r0, #0]
 80136f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80136fa:	4798      	blx	r3
 80136fc:	b007      	add	sp, #28
 80136fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013702:	bf00      	nop
 8013704:	20012670 	.word	0x20012670
 8013708:	2001266a 	.word	0x2001266a

0801370c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801370c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013710:	b091      	sub	sp, #68	; 0x44
 8013712:	4680      	mov	r8, r0
 8013714:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8013718:	460f      	mov	r7, r1
 801371a:	4614      	mov	r4, r2
 801371c:	2d00      	cmp	r5, #0
 801371e:	d051      	beq.n	80137c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8013720:	6810      	ldr	r0, [r2, #0]
 8013722:	6851      	ldr	r1, [r2, #4]
 8013724:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8013928 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8013728:	ae0c      	add	r6, sp, #48	; 0x30
 801372a:	c603      	stmia	r6!, {r0, r1}
 801372c:	6818      	ldr	r0, [r3, #0]
 801372e:	6859      	ldr	r1, [r3, #4]
 8013730:	ae0e      	add	r6, sp, #56	; 0x38
 8013732:	c603      	stmia	r6!, {r0, r1}
 8013734:	a80c      	add	r0, sp, #48	; 0x30
 8013736:	f7f9 f8fb 	bl	800c930 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801373a:	4621      	mov	r1, r4
 801373c:	a80e      	add	r0, sp, #56	; 0x38
 801373e:	f7f9 f91f 	bl	800c980 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013742:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8013746:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801374a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801374e:	f8d9 0000 	ldr.w	r0, [r9]
 8013752:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8013756:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801375a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801375e:	eb08 0401 	add.w	r4, r8, r1
 8013762:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8013766:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801392c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801376a:	440a      	add	r2, r1
 801376c:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8013770:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8013774:	4413      	add	r3, r2
 8013776:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801377a:	6803      	ldr	r3, [r0, #0]
 801377c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801377e:	4798      	blx	r3
 8013780:	f010 0f80 	tst.w	r0, #128	; 0x80
 8013784:	f8d9 0000 	ldr.w	r0, [r9]
 8013788:	d01f      	beq.n	80137ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801378a:	2200      	movs	r2, #0
 801378c:	6801      	ldr	r1, [r0, #0]
 801378e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8013792:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8013796:	220b      	movs	r2, #11
 8013798:	9207      	str	r2, [sp, #28]
 801379a:	f8b8 2000 	ldrh.w	r2, [r8]
 801379e:	9206      	str	r2, [sp, #24]
 80137a0:	2201      	movs	r2, #1
 80137a2:	e9cd 5204 	strd	r5, r2, [sp, #16]
 80137a6:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 80137aa:	9203      	str	r2, [sp, #12]
 80137ac:	fa1f f28a 	uxth.w	r2, sl
 80137b0:	9202      	str	r2, [sp, #8]
 80137b2:	b2b6      	uxth	r6, r6
 80137b4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80137b8:	9200      	str	r2, [sp, #0]
 80137ba:	9601      	str	r6, [sp, #4]
 80137bc:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 80137be:	463a      	mov	r2, r7
 80137c0:	4621      	mov	r1, r4
 80137c2:	47a8      	blx	r5
 80137c4:	b011      	add	sp, #68	; 0x44
 80137c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80137ca:	6803      	ldr	r3, [r0, #0]
 80137cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80137ce:	4798      	blx	r3
 80137d0:	f8b8 2000 	ldrh.w	r2, [r8]
 80137d4:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80137d8:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 80137dc:	2dff      	cmp	r5, #255	; 0xff
 80137de:	fb02 1303 	mla	r3, r2, r3, r1
 80137e2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80137e6:	ea4f 0946 	mov.w	r9, r6, lsl #1
 80137ea:	fb0a fa02 	mul.w	sl, sl, r2
 80137ee:	d062      	beq.n	80138b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 80137f0:	ea6f 0c05 	mvn.w	ip, r5
 80137f4:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 80137f8:	930a      	str	r3, [sp, #40]	; 0x28
 80137fa:	b2ad      	uxth	r5, r5
 80137fc:	fa5f fc8c 	uxtb.w	ip, ip
 8013800:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8013804:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013806:	4298      	cmp	r0, r3
 8013808:	f080 8085 	bcs.w	8013916 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801380c:	eb00 0b09 	add.w	fp, r0, r9
 8013810:	4558      	cmp	r0, fp
 8013812:	d246      	bcs.n	80138a2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8013814:	f814 eb01 	ldrb.w	lr, [r4], #1
 8013818:	2303      	movs	r3, #3
 801381a:	2204      	movs	r2, #4
 801381c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8013820:	eb07 0a0e 	add.w	sl, r7, lr
 8013824:	8803      	ldrh	r3, [r0, #0]
 8013826:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801382a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801382e:	1219      	asrs	r1, r3, #8
 8013830:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8013834:	fb18 f805 	smulbb	r8, r8, r5
 8013838:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801383c:	10da      	asrs	r2, r3, #3
 801383e:	fb01 810c 	mla	r1, r1, ip, r8
 8013842:	00db      	lsls	r3, r3, #3
 8013844:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8013848:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801384c:	b2db      	uxtb	r3, r3
 801384e:	fb18 f805 	smulbb	r8, r8, r5
 8013852:	fb1e fe05 	smulbb	lr, lr, r5
 8013856:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801385a:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801385e:	b289      	uxth	r1, r1
 8013860:	fb02 820c 	mla	r2, r2, ip, r8
 8013864:	fb03 e30c 	mla	r3, r3, ip, lr
 8013868:	b292      	uxth	r2, r2
 801386a:	b29b      	uxth	r3, r3
 801386c:	f101 0801 	add.w	r8, r1, #1
 8013870:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8013874:	f103 0e01 	add.w	lr, r3, #1
 8013878:	f102 0801 	add.w	r8, r2, #1
 801387c:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8013880:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8013884:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8013888:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801388c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8013890:	ea4e 0101 	orr.w	r1, lr, r1
 8013894:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8013898:	ea41 0108 	orr.w	r1, r1, r8
 801389c:	f820 1b02 	strh.w	r1, [r0], #2
 80138a0:	e7b6      	b.n	8013810 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 80138a2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80138a4:	881b      	ldrh	r3, [r3, #0]
 80138a6:	1b9b      	subs	r3, r3, r6
 80138a8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80138ac:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80138b0:	1b9b      	subs	r3, r3, r6
 80138b2:	441c      	add	r4, r3
 80138b4:	e7a6      	b.n	8013804 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 80138b6:	491b      	ldr	r1, [pc, #108]	; (8013924 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 80138b8:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 80138bc:	2203      	movs	r2, #3
 80138be:	2504      	movs	r5, #4
 80138c0:	4550      	cmp	r0, sl
 80138c2:	d228      	bcs.n	8013916 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80138c4:	eb00 0c09 	add.w	ip, r0, r9
 80138c8:	4560      	cmp	r0, ip
 80138ca:	4623      	mov	r3, r4
 80138cc:	d219      	bcs.n	8013902 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 80138ce:	f893 e000 	ldrb.w	lr, [r3]
 80138d2:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 80138d6:	eb07 0b0e 	add.w	fp, r7, lr
 80138da:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80138de:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80138e2:	f89b b001 	ldrb.w	fp, [fp, #1]
 80138e6:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80138ea:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80138ee:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80138f2:	ea43 030b 	orr.w	r3, r3, fp
 80138f6:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 80138fa:	3401      	adds	r4, #1
 80138fc:	f820 3b02 	strh.w	r3, [r0], #2
 8013900:	e7e2      	b.n	80138c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8013902:	f8b8 3000 	ldrh.w	r3, [r8]
 8013906:	1b9b      	subs	r3, r3, r6
 8013908:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801390c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8013910:	1b9b      	subs	r3, r3, r6
 8013912:	441c      	add	r4, r3
 8013914:	e7d4      	b.n	80138c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8013916:	4b04      	ldr	r3, [pc, #16]	; (8013928 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8013918:	6818      	ldr	r0, [r3, #0]
 801391a:	6803      	ldr	r3, [r0, #0]
 801391c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801391e:	4798      	blx	r3
 8013920:	e750      	b.n	80137c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8013922:	bf00      	nop
 8013924:	fffff800 	.word	0xfffff800
 8013928:	20012670 	.word	0x20012670
 801392c:	2001266a 	.word	0x2001266a

08013930 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8013930:	b430      	push	{r4, r5}
 8013932:	780d      	ldrb	r5, [r1, #0]
 8013934:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8013938:	2d01      	cmp	r5, #1
 801393a:	d00a      	beq.n	8013952 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 801393c:	d305      	bcc.n	801394a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 801393e:	2d02      	cmp	r5, #2
 8013940:	d10b      	bne.n	801395a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8013942:	9402      	str	r4, [sp, #8]
 8013944:	bc30      	pop	{r4, r5}
 8013946:	f7ff be15 	b.w	8013574 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801394a:	9402      	str	r4, [sp, #8]
 801394c:	bc30      	pop	{r4, r5}
 801394e:	f7ff bd2b 	b.w	80133a8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8013952:	9402      	str	r4, [sp, #8]
 8013954:	bc30      	pop	{r4, r5}
 8013956:	f7ff bed9 	b.w	801370c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801395a:	bc30      	pop	{r4, r5}
 801395c:	4770      	bx	lr
	...

08013960 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8013960:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013964:	4604      	mov	r4, r0
 8013966:	b087      	sub	sp, #28
 8013968:	6810      	ldr	r0, [r2, #0]
 801396a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801396e:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8013ba8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8013972:	460e      	mov	r6, r1
 8013974:	6851      	ldr	r1, [r2, #4]
 8013976:	ad02      	add	r5, sp, #8
 8013978:	c503      	stmia	r5!, {r0, r1}
 801397a:	6818      	ldr	r0, [r3, #0]
 801397c:	6859      	ldr	r1, [r3, #4]
 801397e:	ad04      	add	r5, sp, #16
 8013980:	4617      	mov	r7, r2
 8013982:	c503      	stmia	r5!, {r0, r1}
 8013984:	a802      	add	r0, sp, #8
 8013986:	f7f8 ffd3 	bl	800c930 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801398a:	4639      	mov	r1, r7
 801398c:	a804      	add	r0, sp, #16
 801398e:	f7f8 fff7 	bl	800c980 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013992:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8013996:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801399a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801399e:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80139a2:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 80139a6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80139aa:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80139ae:	440e      	add	r6, r1
 80139b0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80139b4:	440a      	add	r2, r1
 80139b6:	f8ad 2010 	strh.w	r2, [sp, #16]
 80139ba:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80139be:	4413      	add	r3, r2
 80139c0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80139c4:	4b77      	ldr	r3, [pc, #476]	; (8013ba4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80139c6:	6818      	ldr	r0, [r3, #0]
 80139c8:	6803      	ldr	r3, [r0, #0]
 80139ca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80139cc:	4798      	blx	r3
 80139ce:	f8b9 b000 	ldrh.w	fp, [r9]
 80139d2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80139d6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80139da:	fb0b 2303 	mla	r3, fp, r3, r2
 80139de:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80139e2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80139e6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80139ea:	fb05 f50b 	mul.w	r5, r5, fp
 80139ee:	9300      	str	r3, [sp, #0]
 80139f0:	d069      	beq.n	8013ac6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 80139f2:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 80139f6:	4558      	cmp	r0, fp
 80139f8:	f080 80cc 	bcs.w	8013b94 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80139fc:	9b00      	ldr	r3, [sp, #0]
 80139fe:	18c3      	adds	r3, r0, r3
 8013a00:	9301      	str	r3, [sp, #4]
 8013a02:	4631      	mov	r1, r6
 8013a04:	9b01      	ldr	r3, [sp, #4]
 8013a06:	4298      	cmp	r0, r3
 8013a08:	d24f      	bcs.n	8013aaa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8013a0a:	f811 2b01 	ldrb.w	r2, [r1], #1
 8013a0e:	2a00      	cmp	r2, #0
 8013a10:	d048      	beq.n	8013aa4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8013a12:	fb0a f202 	mul.w	r2, sl, r2
 8013a16:	1c53      	adds	r3, r2, #1
 8013a18:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8013a1c:	121b      	asrs	r3, r3, #8
 8013a1e:	d041      	beq.n	8013aa4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8013a20:	8802      	ldrh	r2, [r0, #0]
 8013a22:	f8b4 c000 	ldrh.w	ip, [r4]
 8013a26:	b29e      	uxth	r6, r3
 8013a28:	1215      	asrs	r5, r2, #8
 8013a2a:	43db      	mvns	r3, r3
 8013a2c:	b2db      	uxtb	r3, r3
 8013a2e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8013a32:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8013a36:	fb15 f503 	smulbb	r5, r5, r3
 8013a3a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8013a3e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8013a42:	00d2      	lsls	r2, r2, #3
 8013a44:	fb07 5706 	mla	r7, r7, r6, r5
 8013a48:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8013a4c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8013a50:	b2d2      	uxtb	r2, r2
 8013a52:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013a56:	b2bf      	uxth	r7, r7
 8013a58:	fb1e fe03 	smulbb	lr, lr, r3
 8013a5c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8013a60:	fa5f fc8c 	uxtb.w	ip, ip
 8013a64:	fb12 f203 	smulbb	r2, r2, r3
 8013a68:	fb05 e506 	mla	r5, r5, r6, lr
 8013a6c:	fb0c 2c06 	mla	ip, ip, r6, r2
 8013a70:	f107 0e01 	add.w	lr, r7, #1
 8013a74:	fa1f fc8c 	uxth.w	ip, ip
 8013a78:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8013a7c:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8013a80:	f10c 0701 	add.w	r7, ip, #1
 8013a84:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8013a88:	b2ad      	uxth	r5, r5
 8013a8a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8013a8e:	ea47 070e 	orr.w	r7, r7, lr
 8013a92:	f105 0e01 	add.w	lr, r5, #1
 8013a96:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8013a9a:	096d      	lsrs	r5, r5, #5
 8013a9c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8013aa0:	432f      	orrs	r7, r5
 8013aa2:	8007      	strh	r7, [r0, #0]
 8013aa4:	3002      	adds	r0, #2
 8013aa6:	3402      	adds	r4, #2
 8013aa8:	e7ac      	b.n	8013a04 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8013aaa:	f8b9 3000 	ldrh.w	r3, [r9]
 8013aae:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8013ab2:	eba3 0308 	sub.w	r3, r3, r8
 8013ab6:	eba6 0608 	sub.w	r6, r6, r8
 8013aba:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8013abe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013ac2:	440e      	add	r6, r1
 8013ac4:	e797      	b.n	80139f6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8013ac6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8013aca:	42a8      	cmp	r0, r5
 8013acc:	d262      	bcs.n	8013b94 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8013ace:	9b00      	ldr	r3, [sp, #0]
 8013ad0:	4631      	mov	r1, r6
 8013ad2:	eb00 0b03 	add.w	fp, r0, r3
 8013ad6:	4558      	cmp	r0, fp
 8013ad8:	d24e      	bcs.n	8013b78 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8013ada:	f811 3b01 	ldrb.w	r3, [r1], #1
 8013ade:	b12b      	cbz	r3, 8013aec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8013ae0:	2bff      	cmp	r3, #255	; 0xff
 8013ae2:	f8b4 e000 	ldrh.w	lr, [r4]
 8013ae6:	d104      	bne.n	8013af2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8013ae8:	f8a0 e000 	strh.w	lr, [r0]
 8013aec:	3002      	adds	r0, #2
 8013aee:	3402      	adds	r4, #2
 8013af0:	e7f1      	b.n	8013ad6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8013af2:	8802      	ldrh	r2, [r0, #0]
 8013af4:	b29f      	uxth	r7, r3
 8013af6:	1216      	asrs	r6, r2, #8
 8013af8:	43db      	mvns	r3, r3
 8013afa:	b2db      	uxtb	r3, r3
 8013afc:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8013b00:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8013b04:	fb16 f603 	smulbb	r6, r6, r3
 8013b08:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8013b0c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013b10:	00d2      	lsls	r2, r2, #3
 8013b12:	fb0c 6c07 	mla	ip, ip, r7, r6
 8013b16:	b2d2      	uxtb	r2, r2
 8013b18:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013b1c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8013b20:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013b24:	fb1a fa03 	smulbb	sl, sl, r3
 8013b28:	fa1f fc8c 	uxth.w	ip, ip
 8013b2c:	fb12 f303 	smulbb	r3, r2, r3
 8013b30:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013b34:	fa5f fe8e 	uxtb.w	lr, lr
 8013b38:	fb06 a607 	mla	r6, r6, r7, sl
 8013b3c:	f10c 0201 	add.w	r2, ip, #1
 8013b40:	fb0e 3307 	mla	r3, lr, r7, r3
 8013b44:	b2b6      	uxth	r6, r6
 8013b46:	b29b      	uxth	r3, r3
 8013b48:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8013b4c:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8013b50:	f106 0a01 	add.w	sl, r6, #1
 8013b54:	f103 0c01 	add.w	ip, r3, #1
 8013b58:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8013b5c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8013b60:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8013b64:	0976      	lsrs	r6, r6, #5
 8013b66:	ea4c 0c02 	orr.w	ip, ip, r2
 8013b6a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013b6e:	ea4c 0c06 	orr.w	ip, ip, r6
 8013b72:	f8a0 c000 	strh.w	ip, [r0]
 8013b76:	e7b9      	b.n	8013aec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8013b78:	f8b9 3000 	ldrh.w	r3, [r9]
 8013b7c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8013b80:	eba3 0308 	sub.w	r3, r3, r8
 8013b84:	eba6 0608 	sub.w	r6, r6, r8
 8013b88:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8013b8c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013b90:	440e      	add	r6, r1
 8013b92:	e79a      	b.n	8013aca <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8013b94:	4b03      	ldr	r3, [pc, #12]	; (8013ba4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8013b96:	6818      	ldr	r0, [r3, #0]
 8013b98:	6803      	ldr	r3, [r0, #0]
 8013b9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013b9c:	4798      	blx	r3
 8013b9e:	b007      	add	sp, #28
 8013ba0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013ba4:	20012670 	.word	0x20012670
 8013ba8:	2001266a 	.word	0x2001266a

08013bac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8013bac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013bb0:	b089      	sub	sp, #36	; 0x24
 8013bb2:	4682      	mov	sl, r0
 8013bb4:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8013bb8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8013bba:	460f      	mov	r7, r1
 8013bbc:	4691      	mov	r9, r2
 8013bbe:	4698      	mov	r8, r3
 8013bc0:	2e00      	cmp	r6, #0
 8013bc2:	d036      	beq.n	8013c32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8013bc4:	4608      	mov	r0, r1
 8013bc6:	f7fc f863 	bl	800fc90 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013bca:	4605      	mov	r5, r0
 8013bcc:	4638      	mov	r0, r7
 8013bce:	f7fc f893 	bl	800fcf8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013bd2:	f8ad 000e 	strh.w	r0, [sp, #14]
 8013bd6:	4638      	mov	r0, r7
 8013bd8:	f8ad 9008 	strh.w	r9, [sp, #8]
 8013bdc:	f8ad 500c 	strh.w	r5, [sp, #12]
 8013be0:	f8ad 800a 	strh.w	r8, [sp, #10]
 8013be4:	f7fc f940 	bl	800fe68 <_ZNK8touchgfx6Bitmap7getDataEv>
 8013be8:	4605      	mov	r5, r0
 8013bea:	4638      	mov	r0, r7
 8013bec:	f7fc f96c 	bl	800fec8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8013bf0:	4681      	mov	r9, r0
 8013bf2:	4638      	mov	r0, r7
 8013bf4:	f7fc f9bc 	bl	800ff70 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013bf8:	280b      	cmp	r0, #11
 8013bfa:	d81a      	bhi.n	8013c32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8013bfc:	e8df f000 	tbb	[pc, r0]
 8013c00:	1906aebd 	.word	0x1906aebd
 8013c04:	19191919 	.word	0x19191919
 8013c08:	b5191919 	.word	0xb5191919
 8013c0c:	4bb0      	ldr	r3, [pc, #704]	; (8013ed0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 8013c0e:	6818      	ldr	r0, [r3, #0]
 8013c10:	6803      	ldr	r3, [r0, #0]
 8013c12:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013c14:	4798      	blx	r3
 8013c16:	2eff      	cmp	r6, #255	; 0xff
 8013c18:	d121      	bne.n	8013c5e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 8013c1a:	0683      	lsls	r3, r0, #26
 8013c1c:	d41f      	bmi.n	8013c5e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 8013c1e:	4638      	mov	r0, r7
 8013c20:	f7fc f8ea 	bl	800fdf8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8013c24:	b940      	cbnz	r0, 8013c38 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8013c26:	4623      	mov	r3, r4
 8013c28:	aa02      	add	r2, sp, #8
 8013c2a:	4629      	mov	r1, r5
 8013c2c:	4650      	mov	r0, sl
 8013c2e:	f7ff fa2f 	bl	8013090 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8013c32:	b009      	add	sp, #36	; 0x24
 8013c34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013c38:	f10d 0818 	add.w	r8, sp, #24
 8013c3c:	4639      	mov	r1, r7
 8013c3e:	4640      	mov	r0, r8
 8013c40:	f7fc f88e 	bl	800fd60 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013c44:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013c48:	af04      	add	r7, sp, #16
 8013c4a:	e887 0003 	stmia.w	r7, {r0, r1}
 8013c4e:	4638      	mov	r0, r7
 8013c50:	4621      	mov	r1, r4
 8013c52:	f7f5 fca5 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 8013c56:	4638      	mov	r0, r7
 8013c58:	f7f5 fce5 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013c5c:	b130      	cbz	r0, 8013c6c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8013c5e:	4633      	mov	r3, r6
 8013c60:	4622      	mov	r2, r4
 8013c62:	a902      	add	r1, sp, #8
 8013c64:	4628      	mov	r0, r5
 8013c66:	f7ff f92d 	bl	8012ec4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013c6a:	e7e2      	b.n	8013c32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8013c6c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013c70:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013c74:	4293      	cmp	r3, r2
 8013c76:	dd12      	ble.n	8013c9e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf2>
 8013c78:	1a9b      	subs	r3, r3, r2
 8013c7a:	f9b4 0000 	ldrsh.w	r0, [r4]
 8013c7e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8013c82:	f8ad 0018 	strh.w	r0, [sp, #24]
 8013c86:	f8ad 201a 	strh.w	r2, [sp, #26]
 8013c8a:	f8ad 101c 	strh.w	r1, [sp, #28]
 8013c8e:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013c92:	4642      	mov	r2, r8
 8013c94:	4633      	mov	r3, r6
 8013c96:	a902      	add	r1, sp, #8
 8013c98:	4628      	mov	r0, r5
 8013c9a:	f7ff f913 	bl	8012ec4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013c9e:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8013ca2:	f9b4 2000 	ldrsh.w	r2, [r4]
 8013ca6:	4293      	cmp	r3, r2
 8013ca8:	dd12      	ble.n	8013cd0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x124>
 8013caa:	1a9b      	subs	r3, r3, r2
 8013cac:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8013cb0:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8013cb4:	f8ad 2018 	strh.w	r2, [sp, #24]
 8013cb8:	f8ad 001a 	strh.w	r0, [sp, #26]
 8013cbc:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013cc0:	f8ad 101e 	strh.w	r1, [sp, #30]
 8013cc4:	23ff      	movs	r3, #255	; 0xff
 8013cc6:	4642      	mov	r2, r8
 8013cc8:	a902      	add	r1, sp, #8
 8013cca:	4628      	mov	r0, r5
 8013ccc:	f7ff f8fa 	bl	8012ec4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013cd0:	463b      	mov	r3, r7
 8013cd2:	aa02      	add	r2, sp, #8
 8013cd4:	4629      	mov	r1, r5
 8013cd6:	4650      	mov	r0, sl
 8013cd8:	f7ff f9da 	bl	8013090 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8013cdc:	88a2      	ldrh	r2, [r4, #4]
 8013cde:	8823      	ldrh	r3, [r4, #0]
 8013ce0:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8013ce4:	4413      	add	r3, r2
 8013ce6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013cea:	440a      	add	r2, r1
 8013cec:	b29b      	uxth	r3, r3
 8013cee:	b292      	uxth	r2, r2
 8013cf0:	b211      	sxth	r1, r2
 8013cf2:	b218      	sxth	r0, r3
 8013cf4:	4288      	cmp	r0, r1
 8013cf6:	dd12      	ble.n	8013d1e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x172>
 8013cf8:	1a9b      	subs	r3, r3, r2
 8013cfa:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8013cfe:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8013d02:	f8ad 1018 	strh.w	r1, [sp, #24]
 8013d06:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013d0a:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013d0e:	23ff      	movs	r3, #255	; 0xff
 8013d10:	4642      	mov	r2, r8
 8013d12:	a902      	add	r1, sp, #8
 8013d14:	4628      	mov	r0, r5
 8013d16:	f8ad 601a 	strh.w	r6, [sp, #26]
 8013d1a:	f7ff f8d3 	bl	8012ec4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013d1e:	88e2      	ldrh	r2, [r4, #6]
 8013d20:	8863      	ldrh	r3, [r4, #2]
 8013d22:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8013d26:	4413      	add	r3, r2
 8013d28:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013d2c:	440a      	add	r2, r1
 8013d2e:	b29b      	uxth	r3, r3
 8013d30:	b292      	uxth	r2, r2
 8013d32:	b211      	sxth	r1, r2
 8013d34:	b218      	sxth	r0, r3
 8013d36:	4288      	cmp	r0, r1
 8013d38:	f77f af7b 	ble.w	8013c32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8013d3c:	1a9b      	subs	r3, r3, r2
 8013d3e:	f9b4 6000 	ldrsh.w	r6, [r4]
 8013d42:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8013d46:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013d4a:	f8ad 6018 	strh.w	r6, [sp, #24]
 8013d4e:	f8ad 101a 	strh.w	r1, [sp, #26]
 8013d52:	f8ad 001c 	strh.w	r0, [sp, #28]
 8013d56:	23ff      	movs	r3, #255	; 0xff
 8013d58:	4642      	mov	r2, r8
 8013d5a:	e782      	b.n	8013c62 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb6>
 8013d5c:	4633      	mov	r3, r6
 8013d5e:	4622      	mov	r2, r4
 8013d60:	a902      	add	r1, sp, #8
 8013d62:	4628      	mov	r0, r5
 8013d64:	f7ff fa04 	bl	8013170 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8013d68:	e763      	b.n	8013c32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8013d6a:	9600      	str	r6, [sp, #0]
 8013d6c:	4623      	mov	r3, r4
 8013d6e:	aa02      	add	r2, sp, #8
 8013d70:	4649      	mov	r1, r9
 8013d72:	4628      	mov	r0, r5
 8013d74:	f7ff fddc 	bl	8013930 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8013d78:	e75b      	b.n	8013c32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8013d7a:	4638      	mov	r0, r7
 8013d7c:	f7fc f83c 	bl	800fdf8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8013d80:	b950      	cbnz	r0, 8013d98 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ec>
 8013d82:	e9cd 6000 	strd	r6, r0, [sp]
 8013d86:	f8da 3000 	ldr.w	r3, [sl]
 8013d8a:	aa02      	add	r2, sp, #8
 8013d8c:	68de      	ldr	r6, [r3, #12]
 8013d8e:	4629      	mov	r1, r5
 8013d90:	4623      	mov	r3, r4
 8013d92:	4650      	mov	r0, sl
 8013d94:	47b0      	blx	r6
 8013d96:	e74c      	b.n	8013c32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8013d98:	f10d 0818 	add.w	r8, sp, #24
 8013d9c:	4639      	mov	r1, r7
 8013d9e:	4640      	mov	r0, r8
 8013da0:	f7fb ffde 	bl	800fd60 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013da4:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013da8:	af04      	add	r7, sp, #16
 8013daa:	e887 0003 	stmia.w	r7, {r0, r1}
 8013dae:	4638      	mov	r0, r7
 8013db0:	4621      	mov	r1, r4
 8013db2:	f7f5 fbf5 	bl	80095a0 <_ZN8touchgfx4RectaNERKS0_>
 8013db6:	4638      	mov	r0, r7
 8013db8:	f7f5 fc35 	bl	8009626 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013dbc:	b138      	cbz	r0, 8013dce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x222>
 8013dbe:	9600      	str	r6, [sp, #0]
 8013dc0:	4623      	mov	r3, r4
 8013dc2:	aa02      	add	r2, sp, #8
 8013dc4:	4649      	mov	r1, r9
 8013dc6:	4628      	mov	r0, r5
 8013dc8:	f7ff fdca 	bl	8013960 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013dcc:	e731      	b.n	8013c32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8013dce:	e9cd 6000 	strd	r6, r0, [sp]
 8013dd2:	f8da 3000 	ldr.w	r3, [sl]
 8013dd6:	aa02      	add	r2, sp, #8
 8013dd8:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8013ddc:	4629      	mov	r1, r5
 8013dde:	463b      	mov	r3, r7
 8013de0:	4650      	mov	r0, sl
 8013de2:	47d8      	blx	fp
 8013de4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013de8:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013dec:	4293      	cmp	r3, r2
 8013dee:	dd13      	ble.n	8013e18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26c>
 8013df0:	f9b4 0000 	ldrsh.w	r0, [r4]
 8013df4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8013df8:	f8ad 0018 	strh.w	r0, [sp, #24]
 8013dfc:	1a9b      	subs	r3, r3, r2
 8013dfe:	f8ad 201a 	strh.w	r2, [sp, #26]
 8013e02:	f8ad 101c 	strh.w	r1, [sp, #28]
 8013e06:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013e0a:	9600      	str	r6, [sp, #0]
 8013e0c:	4643      	mov	r3, r8
 8013e0e:	aa02      	add	r2, sp, #8
 8013e10:	4649      	mov	r1, r9
 8013e12:	4628      	mov	r0, r5
 8013e14:	f7ff fda4 	bl	8013960 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013e18:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8013e1c:	f9b4 2000 	ldrsh.w	r2, [r4]
 8013e20:	4293      	cmp	r3, r2
 8013e22:	dd13      	ble.n	8013e4c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a0>
 8013e24:	1a9b      	subs	r3, r3, r2
 8013e26:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8013e2a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8013e2e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8013e32:	f8ad 001a 	strh.w	r0, [sp, #26]
 8013e36:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013e3a:	f8ad 101e 	strh.w	r1, [sp, #30]
 8013e3e:	9600      	str	r6, [sp, #0]
 8013e40:	4643      	mov	r3, r8
 8013e42:	aa02      	add	r2, sp, #8
 8013e44:	4649      	mov	r1, r9
 8013e46:	4628      	mov	r0, r5
 8013e48:	f7ff fd8a 	bl	8013960 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013e4c:	88a2      	ldrh	r2, [r4, #4]
 8013e4e:	8823      	ldrh	r3, [r4, #0]
 8013e50:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8013e54:	4413      	add	r3, r2
 8013e56:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013e5a:	440a      	add	r2, r1
 8013e5c:	b29b      	uxth	r3, r3
 8013e5e:	b292      	uxth	r2, r2
 8013e60:	b211      	sxth	r1, r2
 8013e62:	b218      	sxth	r0, r3
 8013e64:	4288      	cmp	r0, r1
 8013e66:	dd13      	ble.n	8013e90 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e4>
 8013e68:	1a9b      	subs	r3, r3, r2
 8013e6a:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8013e6e:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8013e72:	f8ad 1018 	strh.w	r1, [sp, #24]
 8013e76:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013e7a:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013e7e:	9600      	str	r6, [sp, #0]
 8013e80:	4643      	mov	r3, r8
 8013e82:	aa02      	add	r2, sp, #8
 8013e84:	4649      	mov	r1, r9
 8013e86:	4628      	mov	r0, r5
 8013e88:	f8ad 701a 	strh.w	r7, [sp, #26]
 8013e8c:	f7ff fd68 	bl	8013960 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013e90:	88e2      	ldrh	r2, [r4, #6]
 8013e92:	8863      	ldrh	r3, [r4, #2]
 8013e94:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8013e98:	4413      	add	r3, r2
 8013e9a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8013e9e:	440a      	add	r2, r1
 8013ea0:	b29b      	uxth	r3, r3
 8013ea2:	b292      	uxth	r2, r2
 8013ea4:	b211      	sxth	r1, r2
 8013ea6:	b218      	sxth	r0, r3
 8013ea8:	4288      	cmp	r0, r1
 8013eaa:	f77f aec2 	ble.w	8013c32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8013eae:	f9b4 7000 	ldrsh.w	r7, [r4]
 8013eb2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8013eb6:	f8ad 7018 	strh.w	r7, [sp, #24]
 8013eba:	1a9b      	subs	r3, r3, r2
 8013ebc:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013ec0:	f8ad 101a 	strh.w	r1, [sp, #26]
 8013ec4:	f8ad 001c 	strh.w	r0, [sp, #28]
 8013ec8:	9600      	str	r6, [sp, #0]
 8013eca:	4643      	mov	r3, r8
 8013ecc:	e779      	b.n	8013dc2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x216>
 8013ece:	bf00      	nop
 8013ed0:	20012670 	.word	0x20012670

08013ed4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8013ed4:	b180      	cbz	r0, 8013ef8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8013ed6:	2903      	cmp	r1, #3
 8013ed8:	d81c      	bhi.n	8013f14 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8013eda:	e8df f001 	tbb	[pc, r1]
 8013ede:	1d02      	.short	0x1d02
 8013ee0:	1f08      	.short	0x1f08
 8013ee2:	4b10      	ldr	r3, [pc, #64]	; (8013f24 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8013ee4:	8818      	ldrh	r0, [r3, #0]
 8013ee6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013eea:	4240      	negs	r0, r0
 8013eec:	4770      	bx	lr
 8013eee:	4b0d      	ldr	r3, [pc, #52]	; (8013f24 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8013ef0:	8818      	ldrh	r0, [r3, #0]
 8013ef2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013ef6:	4770      	bx	lr
 8013ef8:	2903      	cmp	r1, #3
 8013efa:	d80b      	bhi.n	8013f14 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8013efc:	a301      	add	r3, pc, #4	; (adr r3, 8013f04 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8013efe:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8013f02:	bf00      	nop
 8013f04:	08013f19 	.word	0x08013f19
 8013f08:	08013eef 	.word	0x08013eef
 8013f0c:	08013f1d 	.word	0x08013f1d
 8013f10:	08013ee3 	.word	0x08013ee3
 8013f14:	2000      	movs	r0, #0
 8013f16:	4770      	bx	lr
 8013f18:	2001      	movs	r0, #1
 8013f1a:	4770      	bx	lr
 8013f1c:	f04f 30ff 	mov.w	r0, #4294967295
 8013f20:	4770      	bx	lr
 8013f22:	bf00      	nop
 8013f24:	2001266a 	.word	0x2001266a

08013f28 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8013f28:	b180      	cbz	r0, 8013f4c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8013f2a:	2903      	cmp	r1, #3
 8013f2c:	d81c      	bhi.n	8013f68 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8013f2e:	e8df f001 	tbb	[pc, r1]
 8013f32:	021d      	.short	0x021d
 8013f34:	071f      	.short	0x071f
 8013f36:	4b10      	ldr	r3, [pc, #64]	; (8013f78 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8013f38:	8818      	ldrh	r0, [r3, #0]
 8013f3a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013f3e:	4770      	bx	lr
 8013f40:	4b0d      	ldr	r3, [pc, #52]	; (8013f78 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8013f42:	8818      	ldrh	r0, [r3, #0]
 8013f44:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013f48:	4240      	negs	r0, r0
 8013f4a:	4770      	bx	lr
 8013f4c:	2903      	cmp	r1, #3
 8013f4e:	d80b      	bhi.n	8013f68 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8013f50:	a301      	add	r3, pc, #4	; (adr r3, 8013f58 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8013f52:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8013f56:	bf00      	nop
 8013f58:	08013f37 	.word	0x08013f37
 8013f5c:	08013f71 	.word	0x08013f71
 8013f60:	08013f41 	.word	0x08013f41
 8013f64:	08013f6d 	.word	0x08013f6d
 8013f68:	2000      	movs	r0, #0
 8013f6a:	4770      	bx	lr
 8013f6c:	2001      	movs	r0, #1
 8013f6e:	4770      	bx	lr
 8013f70:	f04f 30ff 	mov.w	r0, #4294967295
 8013f74:	4770      	bx	lr
 8013f76:	bf00      	nop
 8013f78:	2001266a 	.word	0x2001266a

08013f7c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8013f7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f80:	b099      	sub	sp, #100	; 0x64
 8013f82:	910b      	str	r1, [sp, #44]	; 0x2c
 8013f84:	a914      	add	r1, sp, #80	; 0x50
 8013f86:	e881 000c 	stmia.w	r1, {r2, r3}
 8013f8a:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8013f8e:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8013f92:	f891 900d 	ldrb.w	r9, [r1, #13]
 8013f96:	9309      	str	r3, [sp, #36]	; 0x24
 8013f98:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8013f9c:	9310      	str	r3, [sp, #64]	; 0x40
 8013f9e:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8013fa2:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8013fa6:	930c      	str	r3, [sp, #48]	; 0x30
 8013fa8:	f407 7380 	and.w	r3, r7, #256	; 0x100
 8013fac:	798f      	ldrb	r7, [r1, #6]
 8013fae:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 8013fb2:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 8013fb6:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 8013fba:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8013fbe:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8013fc2:	431f      	orrs	r7, r3
 8013fc4:	f000 8195 	beq.w	80142f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8013fc8:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8013fcc:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8013fd0:	f891 9007 	ldrb.w	r9, [r1, #7]
 8013fd4:	ea59 0903 	orrs.w	r9, r9, r3
 8013fd8:	f000 818b 	beq.w	80142f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8013fdc:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8013fe0:	b29b      	uxth	r3, r3
 8013fe2:	2d00      	cmp	r5, #0
 8013fe4:	f000 812e 	beq.w	8014244 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8013fe8:	1aed      	subs	r5, r5, r3
 8013fea:	b2ad      	uxth	r5, r5
 8013fec:	042b      	lsls	r3, r5, #16
 8013fee:	d502      	bpl.n	8013ff6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8013ff0:	1b64      	subs	r4, r4, r5
 8013ff2:	b224      	sxth	r4, r4
 8013ff4:	2500      	movs	r5, #0
 8013ff6:	f9b2 1000 	ldrsh.w	r1, [r2]
 8013ffa:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8013ffe:	428c      	cmp	r4, r1
 8014000:	b28b      	uxth	r3, r1
 8014002:	bfbf      	itttt	lt
 8014004:	18ed      	addlt	r5, r5, r3
 8014006:	1b2c      	sublt	r4, r5, r4
 8014008:	b2a5      	uxthlt	r5, r4
 801400a:	460c      	movlt	r4, r1
 801400c:	8891      	ldrh	r1, [r2, #4]
 801400e:	440b      	add	r3, r1
 8014010:	b21b      	sxth	r3, r3
 8014012:	930f      	str	r3, [sp, #60]	; 0x3c
 8014014:	88d3      	ldrh	r3, [r2, #6]
 8014016:	8852      	ldrh	r2, [r2, #2]
 8014018:	4413      	add	r3, r2
 801401a:	b21b      	sxth	r3, r3
 801401c:	930d      	str	r3, [sp, #52]	; 0x34
 801401e:	4bbe      	ldr	r3, [pc, #760]	; (8014318 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8014020:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014022:	f893 b000 	ldrb.w	fp, [r3]
 8014026:	f10b 3cff 	add.w	ip, fp, #4294967295
 801402a:	f1dc 0300 	rsbs	r3, ip, #0
 801402e:	eb43 030c 	adc.w	r3, r3, ip
 8014032:	930e      	str	r3, [sp, #56]	; 0x38
 8014034:	4621      	mov	r1, r4
 8014036:	4653      	mov	r3, sl
 8014038:	a814      	add	r0, sp, #80	; 0x50
 801403a:	f7f8 faf3 	bl	800c624 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801403e:	4621      	mov	r1, r4
 8014040:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8014044:	4653      	mov	r3, sl
 8014046:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014048:	a814      	add	r0, sp, #80	; 0x50
 801404a:	f7f8 fb08 	bl	800c65e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801404e:	a918      	add	r1, sp, #96	; 0x60
 8014050:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8014054:	a817      	add	r0, sp, #92	; 0x5c
 8014056:	f7f8 fc29 	bl	800c8ac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801405a:	f1ba 0f00 	cmp.w	sl, #0
 801405e:	f040 80f4 	bne.w	801424a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8014062:	f1bb 0f01 	cmp.w	fp, #1
 8014066:	f040 80f8 	bne.w	801425a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801406a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801406c:	2b00      	cmp	r3, #0
 801406e:	f040 8145 	bne.w	80142fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8014072:	b2ba      	uxth	r2, r7
 8014074:	b905      	cbnz	r5, 8014078 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8014076:	b16e      	cbz	r6, 8014094 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8014078:	fb06 5302 	mla	r3, r6, r2, r5
 801407c:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801407e:	fb08 f303 	mul.w	r3, r8, r3
 8014082:	4631      	mov	r1, r6
 8014084:	f003 0607 	and.w	r6, r3, #7
 8014088:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801408c:	9328      	str	r3, [sp, #160]	; 0xa0
 801408e:	eba9 0301 	sub.w	r3, r9, r1
 8014092:	930a      	str	r3, [sp, #40]	; 0x28
 8014094:	4651      	mov	r1, sl
 8014096:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014098:	f7ff ff1c 	bl	8013ed4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801409c:	4681      	mov	r9, r0
 801409e:	980e      	ldr	r0, [sp, #56]	; 0x38
 80140a0:	f7ff ff42 	bl	8013f28 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 80140a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80140a6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80140a8:	eba3 0a01 	sub.w	sl, r3, r1
 80140ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80140ae:	459a      	cmp	sl, r3
 80140b0:	bfa8      	it	ge
 80140b2:	469a      	movge	sl, r3
 80140b4:	f1ba 0f00 	cmp.w	sl, #0
 80140b8:	4683      	mov	fp, r0
 80140ba:	f340 811a 	ble.w	80142f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80140be:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80140c0:	1b64      	subs	r4, r4, r5
 80140c2:	1b1c      	subs	r4, r3, r4
 80140c4:	42bc      	cmp	r4, r7
 80140c6:	bfd4      	ite	le
 80140c8:	ebc5 0504 	rsble	r5, r5, r4
 80140cc:	ebc5 0507 	rsbgt	r5, r5, r7
 80140d0:	2d00      	cmp	r5, #0
 80140d2:	f340 810e 	ble.w	80142f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80140d6:	1b52      	subs	r2, r2, r5
 80140d8:	fb08 f302 	mul.w	r3, r8, r2
 80140dc:	930f      	str	r3, [sp, #60]	; 0x3c
 80140de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80140e0:	2b00      	cmp	r3, #0
 80140e2:	f040 8116 	bne.w	8014312 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 80140e6:	4b8d      	ldr	r3, [pc, #564]	; (801431c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 80140e8:	6818      	ldr	r0, [r3, #0]
 80140ea:	6803      	ldr	r3, [r0, #0]
 80140ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80140ee:	4798      	blx	r3
 80140f0:	2301      	movs	r3, #1
 80140f2:	fa03 f308 	lsl.w	r3, r3, r8
 80140f6:	4a8a      	ldr	r2, [pc, #552]	; (8014320 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 80140f8:	3b01      	subs	r3, #1
 80140fa:	b2db      	uxtb	r3, r3
 80140fc:	8811      	ldrh	r1, [r2, #0]
 80140fe:	930e      	str	r3, [sp, #56]	; 0x38
 8014100:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8014104:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8014108:	fb01 2303 	mla	r3, r1, r3, r2
 801410c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8014110:	930a      	str	r3, [sp, #40]	; 0x28
 8014112:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014114:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8014118:	9313      	str	r3, [sp, #76]	; 0x4c
 801411a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801411c:	0a19      	lsrs	r1, r3, #8
 801411e:	b2cb      	uxtb	r3, r1
 8014120:	9312      	str	r3, [sp, #72]	; 0x48
 8014122:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014124:	b2db      	uxtb	r3, r3
 8014126:	9311      	str	r3, [sp, #68]	; 0x44
 8014128:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801412a:	095a      	lsrs	r2, r3, #5
 801412c:	4b7d      	ldr	r3, [pc, #500]	; (8014324 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801412e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014132:	400b      	ands	r3, r1
 8014134:	4313      	orrs	r3, r2
 8014136:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8014138:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801413c:	4313      	orrs	r3, r2
 801413e:	b29b      	uxth	r3, r3
 8014140:	9310      	str	r3, [sp, #64]	; 0x40
 8014142:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014144:	781a      	ldrb	r2, [r3, #0]
 8014146:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801414a:	4132      	asrs	r2, r6
 801414c:	fb05 b919 	mls	r9, r5, r9, fp
 8014150:	fb03 fb05 	mul.w	fp, r3, r5
 8014154:	b2d2      	uxtb	r2, r2
 8014156:	930d      	str	r3, [sp, #52]	; 0x34
 8014158:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801415c:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8014160:	f0c0 80f5 	bcc.w	801434e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8014164:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8014168:	46ae      	mov	lr, r5
 801416a:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801416e:	f0c0 80dd 	bcc.w	801432c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8014172:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014174:	4013      	ands	r3, r2
 8014176:	d055      	beq.n	8014224 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8014178:	20ff      	movs	r0, #255	; 0xff
 801417a:	990e      	ldr	r1, [sp, #56]	; 0x38
 801417c:	fb90 f1f1 	sdiv	r1, r0, r1
 8014180:	434b      	muls	r3, r1
 8014182:	2bfe      	cmp	r3, #254	; 0xfe
 8014184:	dd03      	ble.n	801418e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8014186:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014188:	4281      	cmp	r1, r0
 801418a:	f000 80cd 	beq.w	8014328 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801418e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014190:	f8bc 4000 	ldrh.w	r4, [ip]
 8014194:	fb11 f303 	smulbb	r3, r1, r3
 8014198:	b29b      	uxth	r3, r3
 801419a:	1c59      	adds	r1, r3, #1
 801419c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80141a0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80141a4:	b29f      	uxth	r7, r3
 80141a6:	43db      	mvns	r3, r3
 80141a8:	b2db      	uxtb	r3, r3
 80141aa:	9309      	str	r3, [sp, #36]	; 0x24
 80141ac:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80141ae:	1220      	asrs	r0, r4, #8
 80141b0:	fb13 f907 	smulbb	r9, r3, r7
 80141b4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80141b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80141ba:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 80141be:	fb00 9003 	mla	r0, r0, r3, r9
 80141c2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80141c4:	10e1      	asrs	r1, r4, #3
 80141c6:	fb13 f907 	smulbb	r9, r3, r7
 80141ca:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80141ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80141d0:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 80141d4:	fb01 9103 	mla	r1, r1, r3, r9
 80141d8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80141da:	00e4      	lsls	r4, r4, #3
 80141dc:	fb13 f707 	smulbb	r7, r3, r7
 80141e0:	b2e4      	uxtb	r4, r4
 80141e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80141e4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80141e8:	fb04 7403 	mla	r4, r4, r3, r7
 80141ec:	b280      	uxth	r0, r0
 80141ee:	b2a4      	uxth	r4, r4
 80141f0:	1c43      	adds	r3, r0, #1
 80141f2:	f104 0901 	add.w	r9, r4, #1
 80141f6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80141fa:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 80141fe:	b289      	uxth	r1, r1
 8014200:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8014204:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8014208:	ea49 0000 	orr.w	r0, r9, r0
 801420c:	f101 0901 	add.w	r9, r1, #1
 8014210:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8014214:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014218:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801421c:	ea40 0009 	orr.w	r0, r0, r9
 8014220:	f8ac 0000 	strh.w	r0, [ip]
 8014224:	4446      	add	r6, r8
 8014226:	b2b6      	uxth	r6, r6
 8014228:	2e07      	cmp	r6, #7
 801422a:	bf81      	itttt	hi
 801422c:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801422e:	785a      	ldrbhi	r2, [r3, #1]
 8014230:	3301      	addhi	r3, #1
 8014232:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8014234:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014236:	bf9a      	itte	ls
 8014238:	fa42 f208 	asrls.w	r2, r2, r8
 801423c:	b2d2      	uxtbls	r2, r2
 801423e:	2600      	movhi	r6, #0
 8014240:	449c      	add	ip, r3
 8014242:	e792      	b.n	801416a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8014244:	441c      	add	r4, r3
 8014246:	b224      	sxth	r4, r4
 8014248:	e6d5      	b.n	8013ff6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801424a:	f1ba 0f01 	cmp.w	sl, #1
 801424e:	f47f af0c 	bne.w	801406a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8014252:	f1bb 0f01 	cmp.w	fp, #1
 8014256:	f47f af08 	bne.w	801406a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801425a:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801431c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801425e:	f8db 0000 	ldr.w	r0, [fp]
 8014262:	6803      	ldr	r3, [r0, #0]
 8014264:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014266:	4798      	blx	r3
 8014268:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801426c:	465a      	mov	r2, fp
 801426e:	d006      	beq.n	801427e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8014270:	f1b8 0f04 	cmp.w	r8, #4
 8014274:	d140      	bne.n	80142f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8014276:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014278:	3300      	adds	r3, #0
 801427a:	bf18      	it	ne
 801427c:	2301      	movne	r3, #1
 801427e:	0580      	lsls	r0, r0, #22
 8014280:	d56e      	bpl.n	8014360 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8014282:	f1b8 0f08 	cmp.w	r8, #8
 8014286:	d16b      	bne.n	8014360 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8014288:	2b00      	cmp	r3, #0
 801428a:	bf0c      	ite	eq
 801428c:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8014290:	f44f 7180 	movne.w	r1, #256	; 0x100
 8014294:	2d00      	cmp	r5, #0
 8014296:	f47f aee8 	bne.w	801406a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801429a:	2e00      	cmp	r6, #0
 801429c:	f47f aee5 	bne.w	801406a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80142a0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80142a2:	19e3      	adds	r3, r4, r7
 80142a4:	4283      	cmp	r3, r0
 80142a6:	f73f aee0 	bgt.w	801406a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80142aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80142ac:	980d      	ldr	r0, [sp, #52]	; 0x34
 80142ae:	444b      	add	r3, r9
 80142b0:	4283      	cmp	r3, r0
 80142b2:	f73f aeda 	bgt.w	801406a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80142b6:	6810      	ldr	r0, [r2, #0]
 80142b8:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 80142bc:	6804      	ldr	r4, [r0, #0]
 80142be:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 80142c2:	b2bf      	uxth	r7, r7
 80142c4:	f1b8 0f08 	cmp.w	r8, #8
 80142c8:	f04f 0500 	mov.w	r5, #0
 80142cc:	bf18      	it	ne
 80142ce:	3701      	addne	r7, #1
 80142d0:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80142d4:	990c      	ldr	r1, [sp, #48]	; 0x30
 80142d6:	9104      	str	r1, [sp, #16]
 80142d8:	bf18      	it	ne
 80142da:	f027 0701 	bicne.w	r7, r7, #1
 80142de:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80142e0:	bf18      	it	ne
 80142e2:	b2bf      	uxthne	r7, r7
 80142e4:	e9cd 7102 	strd	r7, r1, [sp, #8]
 80142e8:	e9cd 7900 	strd	r7, r9, [sp]
 80142ec:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80142ee:	6d64      	ldr	r4, [r4, #84]	; 0x54
 80142f0:	47a0      	blx	r4
 80142f2:	b019      	add	sp, #100	; 0x64
 80142f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80142f8:	2300      	movs	r3, #0
 80142fa:	e7c0      	b.n	801427e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 80142fc:	2208      	movs	r2, #8
 80142fe:	fb92 f3f8 	sdiv	r3, r2, r8
 8014302:	1e5a      	subs	r2, r3, #1
 8014304:	443a      	add	r2, r7
 8014306:	fb92 f2f3 	sdiv	r2, r2, r3
 801430a:	fb12 f203 	smulbb	r2, r2, r3
 801430e:	b292      	uxth	r2, r2
 8014310:	e6b0      	b.n	8014074 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8014312:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8014314:	e6ec      	b.n	80140f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8014316:	bf00      	nop
 8014318:	20012668 	.word	0x20012668
 801431c:	20012670 	.word	0x20012670
 8014320:	2001266a 	.word	0x2001266a
 8014324:	00fff800 	.word	0x00fff800
 8014328:	9810      	ldr	r0, [sp, #64]	; 0x40
 801432a:	e779      	b.n	8014220 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801432c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801432e:	b153      	cbz	r3, 8014346 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8014330:	441e      	add	r6, r3
 8014332:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014334:	b2b6      	uxth	r6, r6
 8014336:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801433a:	f006 0607 	and.w	r6, r6, #7
 801433e:	781a      	ldrb	r2, [r3, #0]
 8014340:	9328      	str	r3, [sp, #160]	; 0xa0
 8014342:	4132      	asrs	r2, r6
 8014344:	b2d2      	uxtb	r2, r2
 8014346:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014348:	445b      	add	r3, fp
 801434a:	930a      	str	r3, [sp, #40]	; 0x28
 801434c:	e706      	b.n	801415c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801434e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014350:	2b00      	cmp	r3, #0
 8014352:	d1ce      	bne.n	80142f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8014354:	4b05      	ldr	r3, [pc, #20]	; (801436c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8014356:	6818      	ldr	r0, [r3, #0]
 8014358:	6803      	ldr	r3, [r0, #0]
 801435a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801435c:	4798      	blx	r3
 801435e:	e7c8      	b.n	80142f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8014360:	2b00      	cmp	r3, #0
 8014362:	f43f ae82 	beq.w	801406a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8014366:	f44f 7180 	mov.w	r1, #256	; 0x100
 801436a:	e793      	b.n	8014294 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801436c:	20012670 	.word	0x20012670

08014370 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8014370:	b538      	push	{r3, r4, r5, lr}
 8014372:	4c15      	ldr	r4, [pc, #84]	; (80143c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8014374:	7823      	ldrb	r3, [r4, #0]
 8014376:	f3bf 8f5b 	dmb	ish
 801437a:	07da      	lsls	r2, r3, #31
 801437c:	4605      	mov	r5, r0
 801437e:	d40b      	bmi.n	8014398 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8014380:	4620      	mov	r0, r4
 8014382:	f007 fa7f 	bl	801b884 <__cxa_guard_acquire>
 8014386:	b138      	cbz	r0, 8014398 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8014388:	4620      	mov	r0, r4
 801438a:	f007 fa87 	bl	801b89c <__cxa_guard_release>
 801438e:	4a0f      	ldr	r2, [pc, #60]	; (80143cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8014390:	490f      	ldr	r1, [pc, #60]	; (80143d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8014392:	4810      	ldr	r0, [pc, #64]	; (80143d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8014394:	f007 fa6f 	bl	801b876 <__aeabi_atexit>
 8014398:	4c0f      	ldr	r4, [pc, #60]	; (80143d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801439a:	7823      	ldrb	r3, [r4, #0]
 801439c:	f3bf 8f5b 	dmb	ish
 80143a0:	07db      	lsls	r3, r3, #31
 80143a2:	d40b      	bmi.n	80143bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80143a4:	4620      	mov	r0, r4
 80143a6:	f007 fa6d 	bl	801b884 <__cxa_guard_acquire>
 80143aa:	b138      	cbz	r0, 80143bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80143ac:	4620      	mov	r0, r4
 80143ae:	f007 fa75 	bl	801b89c <__cxa_guard_release>
 80143b2:	4a06      	ldr	r2, [pc, #24]	; (80143cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80143b4:	4909      	ldr	r1, [pc, #36]	; (80143dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 80143b6:	480a      	ldr	r0, [pc, #40]	; (80143e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80143b8:	f007 fa5d 	bl	801b876 <__aeabi_atexit>
 80143bc:	4b05      	ldr	r3, [pc, #20]	; (80143d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80143be:	612b      	str	r3, [r5, #16]
 80143c0:	4b07      	ldr	r3, [pc, #28]	; (80143e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80143c2:	616b      	str	r3, [r5, #20]
 80143c4:	bd38      	pop	{r3, r4, r5, pc}
 80143c6:	bf00      	nop
 80143c8:	2001273c 	.word	0x2001273c
 80143cc:	20000000 	.word	0x20000000
 80143d0:	08012581 	.word	0x08012581
 80143d4:	200000c8 	.word	0x200000c8
 80143d8:	20012740 	.word	0x20012740
 80143dc:	0801257f 	.word	0x0801257f
 80143e0:	200000cc 	.word	0x200000cc

080143e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 80143e4:	b538      	push	{r3, r4, r5, lr}
 80143e6:	4c15      	ldr	r4, [pc, #84]	; (801443c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 80143e8:	7823      	ldrb	r3, [r4, #0]
 80143ea:	f3bf 8f5b 	dmb	ish
 80143ee:	07da      	lsls	r2, r3, #31
 80143f0:	4605      	mov	r5, r0
 80143f2:	d40b      	bmi.n	801440c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80143f4:	4620      	mov	r0, r4
 80143f6:	f007 fa45 	bl	801b884 <__cxa_guard_acquire>
 80143fa:	b138      	cbz	r0, 801440c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80143fc:	4620      	mov	r0, r4
 80143fe:	f007 fa4d 	bl	801b89c <__cxa_guard_release>
 8014402:	4a0f      	ldr	r2, [pc, #60]	; (8014440 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8014404:	490f      	ldr	r1, [pc, #60]	; (8014444 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8014406:	4810      	ldr	r0, [pc, #64]	; (8014448 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8014408:	f007 fa35 	bl	801b876 <__aeabi_atexit>
 801440c:	4c0f      	ldr	r4, [pc, #60]	; (801444c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801440e:	7823      	ldrb	r3, [r4, #0]
 8014410:	f3bf 8f5b 	dmb	ish
 8014414:	07db      	lsls	r3, r3, #31
 8014416:	d40b      	bmi.n	8014430 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8014418:	4620      	mov	r0, r4
 801441a:	f007 fa33 	bl	801b884 <__cxa_guard_acquire>
 801441e:	b138      	cbz	r0, 8014430 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8014420:	4620      	mov	r0, r4
 8014422:	f007 fa3b 	bl	801b89c <__cxa_guard_release>
 8014426:	4a06      	ldr	r2, [pc, #24]	; (8014440 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8014428:	4909      	ldr	r1, [pc, #36]	; (8014450 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801442a:	480a      	ldr	r0, [pc, #40]	; (8014454 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801442c:	f007 fa23 	bl	801b876 <__aeabi_atexit>
 8014430:	4b05      	ldr	r3, [pc, #20]	; (8014448 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8014432:	60ab      	str	r3, [r5, #8]
 8014434:	4b07      	ldr	r3, [pc, #28]	; (8014454 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8014436:	60eb      	str	r3, [r5, #12]
 8014438:	bd38      	pop	{r3, r4, r5, pc}
 801443a:	bf00      	nop
 801443c:	20012714 	.word	0x20012714
 8014440:	20000000 	.word	0x20000000
 8014444:	08012585 	.word	0x08012585
 8014448:	200000a0 	.word	0x200000a0
 801444c:	20012718 	.word	0x20012718
 8014450:	08012583 	.word	0x08012583
 8014454:	200000a4 	.word	0x200000a4

08014458 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8014458:	b510      	push	{r4, lr}
 801445a:	4604      	mov	r4, r0
 801445c:	f7ff ff88 	bl	8014370 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8014460:	4620      	mov	r0, r4
 8014462:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014466:	f7ff bfbd 	b.w	80143e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801446c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801446c:	b538      	push	{r3, r4, r5, lr}
 801446e:	4c15      	ldr	r4, [pc, #84]	; (80144c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8014470:	7823      	ldrb	r3, [r4, #0]
 8014472:	f3bf 8f5b 	dmb	ish
 8014476:	07da      	lsls	r2, r3, #31
 8014478:	4605      	mov	r5, r0
 801447a:	d40b      	bmi.n	8014494 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801447c:	4620      	mov	r0, r4
 801447e:	f007 fa01 	bl	801b884 <__cxa_guard_acquire>
 8014482:	b138      	cbz	r0, 8014494 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8014484:	4620      	mov	r0, r4
 8014486:	f007 fa09 	bl	801b89c <__cxa_guard_release>
 801448a:	4a0f      	ldr	r2, [pc, #60]	; (80144c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801448c:	490f      	ldr	r1, [pc, #60]	; (80144cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801448e:	4810      	ldr	r0, [pc, #64]	; (80144d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8014490:	f007 f9f1 	bl	801b876 <__aeabi_atexit>
 8014494:	4c0f      	ldr	r4, [pc, #60]	; (80144d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8014496:	7823      	ldrb	r3, [r4, #0]
 8014498:	f3bf 8f5b 	dmb	ish
 801449c:	07db      	lsls	r3, r3, #31
 801449e:	d40b      	bmi.n	80144b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80144a0:	4620      	mov	r0, r4
 80144a2:	f007 f9ef 	bl	801b884 <__cxa_guard_acquire>
 80144a6:	b138      	cbz	r0, 80144b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80144a8:	4620      	mov	r0, r4
 80144aa:	f007 f9f7 	bl	801b89c <__cxa_guard_release>
 80144ae:	4a06      	ldr	r2, [pc, #24]	; (80144c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80144b0:	4909      	ldr	r1, [pc, #36]	; (80144d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 80144b2:	480a      	ldr	r0, [pc, #40]	; (80144dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80144b4:	f007 f9df 	bl	801b876 <__aeabi_atexit>
 80144b8:	4b05      	ldr	r3, [pc, #20]	; (80144d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80144ba:	622b      	str	r3, [r5, #32]
 80144bc:	4b07      	ldr	r3, [pc, #28]	; (80144dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80144be:	626b      	str	r3, [r5, #36]	; 0x24
 80144c0:	bd38      	pop	{r3, r4, r5, pc}
 80144c2:	bf00      	nop
 80144c4:	20012744 	.word	0x20012744
 80144c8:	20000000 	.word	0x20000000
 80144cc:	08012579 	.word	0x08012579
 80144d0:	200000d0 	.word	0x200000d0
 80144d4:	20012748 	.word	0x20012748
 80144d8:	08012577 	.word	0x08012577
 80144dc:	200000d4 	.word	0x200000d4

080144e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 80144e0:	b538      	push	{r3, r4, r5, lr}
 80144e2:	4c15      	ldr	r4, [pc, #84]	; (8014538 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 80144e4:	7823      	ldrb	r3, [r4, #0]
 80144e6:	f3bf 8f5b 	dmb	ish
 80144ea:	07da      	lsls	r2, r3, #31
 80144ec:	4605      	mov	r5, r0
 80144ee:	d40b      	bmi.n	8014508 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80144f0:	4620      	mov	r0, r4
 80144f2:	f007 f9c7 	bl	801b884 <__cxa_guard_acquire>
 80144f6:	b138      	cbz	r0, 8014508 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80144f8:	4620      	mov	r0, r4
 80144fa:	f007 f9cf 	bl	801b89c <__cxa_guard_release>
 80144fe:	4a0f      	ldr	r2, [pc, #60]	; (801453c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8014500:	490f      	ldr	r1, [pc, #60]	; (8014540 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8014502:	4810      	ldr	r0, [pc, #64]	; (8014544 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8014504:	f007 f9b7 	bl	801b876 <__aeabi_atexit>
 8014508:	4c0f      	ldr	r4, [pc, #60]	; (8014548 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801450a:	7823      	ldrb	r3, [r4, #0]
 801450c:	f3bf 8f5b 	dmb	ish
 8014510:	07db      	lsls	r3, r3, #31
 8014512:	d40b      	bmi.n	801452c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8014514:	4620      	mov	r0, r4
 8014516:	f007 f9b5 	bl	801b884 <__cxa_guard_acquire>
 801451a:	b138      	cbz	r0, 801452c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801451c:	4620      	mov	r0, r4
 801451e:	f007 f9bd 	bl	801b89c <__cxa_guard_release>
 8014522:	4a06      	ldr	r2, [pc, #24]	; (801453c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8014524:	4909      	ldr	r1, [pc, #36]	; (801454c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8014526:	480a      	ldr	r0, [pc, #40]	; (8014550 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8014528:	f007 f9a5 	bl	801b876 <__aeabi_atexit>
 801452c:	4b05      	ldr	r3, [pc, #20]	; (8014544 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801452e:	61ab      	str	r3, [r5, #24]
 8014530:	4b07      	ldr	r3, [pc, #28]	; (8014550 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8014532:	61eb      	str	r3, [r5, #28]
 8014534:	bd38      	pop	{r3, r4, r5, pc}
 8014536:	bf00      	nop
 8014538:	2001271c 	.word	0x2001271c
 801453c:	20000000 	.word	0x20000000
 8014540:	0801257d 	.word	0x0801257d
 8014544:	200000a8 	.word	0x200000a8
 8014548:	20012720 	.word	0x20012720
 801454c:	0801257b 	.word	0x0801257b
 8014550:	200000ac 	.word	0x200000ac

08014554 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8014554:	b510      	push	{r4, lr}
 8014556:	4604      	mov	r4, r0
 8014558:	f7ff ff88 	bl	801446c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801455c:	4620      	mov	r0, r4
 801455e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014562:	f7ff bfbd 	b.w	80144e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08014568 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8014568:	b538      	push	{r3, r4, r5, lr}
 801456a:	4c15      	ldr	r4, [pc, #84]	; (80145c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801456c:	7823      	ldrb	r3, [r4, #0]
 801456e:	f3bf 8f5b 	dmb	ish
 8014572:	07da      	lsls	r2, r3, #31
 8014574:	4605      	mov	r5, r0
 8014576:	d40b      	bmi.n	8014590 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8014578:	4620      	mov	r0, r4
 801457a:	f007 f983 	bl	801b884 <__cxa_guard_acquire>
 801457e:	b138      	cbz	r0, 8014590 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8014580:	4620      	mov	r0, r4
 8014582:	f007 f98b 	bl	801b89c <__cxa_guard_release>
 8014586:	4a0f      	ldr	r2, [pc, #60]	; (80145c4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8014588:	490f      	ldr	r1, [pc, #60]	; (80145c8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801458a:	4810      	ldr	r0, [pc, #64]	; (80145cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801458c:	f007 f973 	bl	801b876 <__aeabi_atexit>
 8014590:	4c0f      	ldr	r4, [pc, #60]	; (80145d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8014592:	7823      	ldrb	r3, [r4, #0]
 8014594:	f3bf 8f5b 	dmb	ish
 8014598:	07db      	lsls	r3, r3, #31
 801459a:	d40b      	bmi.n	80145b4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801459c:	4620      	mov	r0, r4
 801459e:	f007 f971 	bl	801b884 <__cxa_guard_acquire>
 80145a2:	b138      	cbz	r0, 80145b4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80145a4:	4620      	mov	r0, r4
 80145a6:	f007 f979 	bl	801b89c <__cxa_guard_release>
 80145aa:	4a06      	ldr	r2, [pc, #24]	; (80145c4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80145ac:	4909      	ldr	r1, [pc, #36]	; (80145d4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 80145ae:	480a      	ldr	r0, [pc, #40]	; (80145d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80145b0:	f007 f961 	bl	801b876 <__aeabi_atexit>
 80145b4:	4b05      	ldr	r3, [pc, #20]	; (80145cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80145b6:	632b      	str	r3, [r5, #48]	; 0x30
 80145b8:	4b07      	ldr	r3, [pc, #28]	; (80145d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80145ba:	636b      	str	r3, [r5, #52]	; 0x34
 80145bc:	bd38      	pop	{r3, r4, r5, pc}
 80145be:	bf00      	nop
 80145c0:	20012754 	.word	0x20012754
 80145c4:	20000000 	.word	0x20000000
 80145c8:	08012571 	.word	0x08012571
 80145cc:	200000e0 	.word	0x200000e0
 80145d0:	20012758 	.word	0x20012758
 80145d4:	0801256f 	.word	0x0801256f
 80145d8:	200000e4 	.word	0x200000e4

080145dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 80145dc:	b538      	push	{r3, r4, r5, lr}
 80145de:	4c15      	ldr	r4, [pc, #84]	; (8014634 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 80145e0:	7823      	ldrb	r3, [r4, #0]
 80145e2:	f3bf 8f5b 	dmb	ish
 80145e6:	07da      	lsls	r2, r3, #31
 80145e8:	4605      	mov	r5, r0
 80145ea:	d40b      	bmi.n	8014604 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80145ec:	4620      	mov	r0, r4
 80145ee:	f007 f949 	bl	801b884 <__cxa_guard_acquire>
 80145f2:	b138      	cbz	r0, 8014604 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80145f4:	4620      	mov	r0, r4
 80145f6:	f007 f951 	bl	801b89c <__cxa_guard_release>
 80145fa:	4a0f      	ldr	r2, [pc, #60]	; (8014638 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80145fc:	490f      	ldr	r1, [pc, #60]	; (801463c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 80145fe:	4810      	ldr	r0, [pc, #64]	; (8014640 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8014600:	f007 f939 	bl	801b876 <__aeabi_atexit>
 8014604:	4c0f      	ldr	r4, [pc, #60]	; (8014644 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8014606:	7823      	ldrb	r3, [r4, #0]
 8014608:	f3bf 8f5b 	dmb	ish
 801460c:	07db      	lsls	r3, r3, #31
 801460e:	d40b      	bmi.n	8014628 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8014610:	4620      	mov	r0, r4
 8014612:	f007 f937 	bl	801b884 <__cxa_guard_acquire>
 8014616:	b138      	cbz	r0, 8014628 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8014618:	4620      	mov	r0, r4
 801461a:	f007 f93f 	bl	801b89c <__cxa_guard_release>
 801461e:	4a06      	ldr	r2, [pc, #24]	; (8014638 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8014620:	4909      	ldr	r1, [pc, #36]	; (8014648 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8014622:	480a      	ldr	r0, [pc, #40]	; (801464c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8014624:	f007 f927 	bl	801b876 <__aeabi_atexit>
 8014628:	4b05      	ldr	r3, [pc, #20]	; (8014640 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801462a:	62ab      	str	r3, [r5, #40]	; 0x28
 801462c:	4b07      	ldr	r3, [pc, #28]	; (801464c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801462e:	62eb      	str	r3, [r5, #44]	; 0x2c
 8014630:	bd38      	pop	{r3, r4, r5, pc}
 8014632:	bf00      	nop
 8014634:	20012724 	.word	0x20012724
 8014638:	20000000 	.word	0x20000000
 801463c:	08012575 	.word	0x08012575
 8014640:	200000b0 	.word	0x200000b0
 8014644:	20012728 	.word	0x20012728
 8014648:	08012573 	.word	0x08012573
 801464c:	200000b4 	.word	0x200000b4

08014650 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8014650:	b510      	push	{r4, lr}
 8014652:	4604      	mov	r4, r0
 8014654:	f7ff ff88 	bl	8014568 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8014658:	4620      	mov	r0, r4
 801465a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801465e:	f7ff bfbd 	b.w	80145dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08014664 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8014664:	b538      	push	{r3, r4, r5, lr}
 8014666:	4c15      	ldr	r4, [pc, #84]	; (80146bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8014668:	7823      	ldrb	r3, [r4, #0]
 801466a:	f3bf 8f5b 	dmb	ish
 801466e:	07da      	lsls	r2, r3, #31
 8014670:	4605      	mov	r5, r0
 8014672:	d40b      	bmi.n	801468c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8014674:	4620      	mov	r0, r4
 8014676:	f007 f905 	bl	801b884 <__cxa_guard_acquire>
 801467a:	b138      	cbz	r0, 801468c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801467c:	4620      	mov	r0, r4
 801467e:	f007 f90d 	bl	801b89c <__cxa_guard_release>
 8014682:	4a0f      	ldr	r2, [pc, #60]	; (80146c0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8014684:	490f      	ldr	r1, [pc, #60]	; (80146c4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8014686:	4810      	ldr	r0, [pc, #64]	; (80146c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8014688:	f007 f8f5 	bl	801b876 <__aeabi_atexit>
 801468c:	4c0f      	ldr	r4, [pc, #60]	; (80146cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801468e:	7823      	ldrb	r3, [r4, #0]
 8014690:	f3bf 8f5b 	dmb	ish
 8014694:	07db      	lsls	r3, r3, #31
 8014696:	d40b      	bmi.n	80146b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8014698:	4620      	mov	r0, r4
 801469a:	f007 f8f3 	bl	801b884 <__cxa_guard_acquire>
 801469e:	b138      	cbz	r0, 80146b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80146a0:	4620      	mov	r0, r4
 80146a2:	f007 f8fb 	bl	801b89c <__cxa_guard_release>
 80146a6:	4a06      	ldr	r2, [pc, #24]	; (80146c0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80146a8:	4909      	ldr	r1, [pc, #36]	; (80146d0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 80146aa:	480a      	ldr	r0, [pc, #40]	; (80146d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80146ac:	f007 f8e3 	bl	801b876 <__aeabi_atexit>
 80146b0:	4b05      	ldr	r3, [pc, #20]	; (80146c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80146b2:	652b      	str	r3, [r5, #80]	; 0x50
 80146b4:	4b07      	ldr	r3, [pc, #28]	; (80146d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80146b6:	656b      	str	r3, [r5, #84]	; 0x54
 80146b8:	bd38      	pop	{r3, r4, r5, pc}
 80146ba:	bf00      	nop
 80146bc:	2001275c 	.word	0x2001275c
 80146c0:	20000000 	.word	0x20000000
 80146c4:	08012561 	.word	0x08012561
 80146c8:	200000e8 	.word	0x200000e8
 80146cc:	20012760 	.word	0x20012760
 80146d0:	0801255f 	.word	0x0801255f
 80146d4:	200000ec 	.word	0x200000ec

080146d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80146d8:	b538      	push	{r3, r4, r5, lr}
 80146da:	4c15      	ldr	r4, [pc, #84]	; (8014730 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80146dc:	7823      	ldrb	r3, [r4, #0]
 80146de:	f3bf 8f5b 	dmb	ish
 80146e2:	07da      	lsls	r2, r3, #31
 80146e4:	4605      	mov	r5, r0
 80146e6:	d40b      	bmi.n	8014700 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80146e8:	4620      	mov	r0, r4
 80146ea:	f007 f8cb 	bl	801b884 <__cxa_guard_acquire>
 80146ee:	b138      	cbz	r0, 8014700 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80146f0:	4620      	mov	r0, r4
 80146f2:	f007 f8d3 	bl	801b89c <__cxa_guard_release>
 80146f6:	4a0f      	ldr	r2, [pc, #60]	; (8014734 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80146f8:	490f      	ldr	r1, [pc, #60]	; (8014738 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80146fa:	4810      	ldr	r0, [pc, #64]	; (801473c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80146fc:	f007 f8bb 	bl	801b876 <__aeabi_atexit>
 8014700:	4c0f      	ldr	r4, [pc, #60]	; (8014740 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8014702:	7823      	ldrb	r3, [r4, #0]
 8014704:	f3bf 8f5b 	dmb	ish
 8014708:	07db      	lsls	r3, r3, #31
 801470a:	d40b      	bmi.n	8014724 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801470c:	4620      	mov	r0, r4
 801470e:	f007 f8b9 	bl	801b884 <__cxa_guard_acquire>
 8014712:	b138      	cbz	r0, 8014724 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8014714:	4620      	mov	r0, r4
 8014716:	f007 f8c1 	bl	801b89c <__cxa_guard_release>
 801471a:	4a06      	ldr	r2, [pc, #24]	; (8014734 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801471c:	4909      	ldr	r1, [pc, #36]	; (8014744 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801471e:	480a      	ldr	r0, [pc, #40]	; (8014748 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8014720:	f007 f8a9 	bl	801b876 <__aeabi_atexit>
 8014724:	4b05      	ldr	r3, [pc, #20]	; (801473c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8014726:	64ab      	str	r3, [r5, #72]	; 0x48
 8014728:	4b07      	ldr	r3, [pc, #28]	; (8014748 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801472a:	64eb      	str	r3, [r5, #76]	; 0x4c
 801472c:	bd38      	pop	{r3, r4, r5, pc}
 801472e:	bf00      	nop
 8014730:	20012764 	.word	0x20012764
 8014734:	20000000 	.word	0x20000000
 8014738:	08012565 	.word	0x08012565
 801473c:	200000f0 	.word	0x200000f0
 8014740:	20012768 	.word	0x20012768
 8014744:	08012563 	.word	0x08012563
 8014748:	200000f4 	.word	0x200000f4

0801474c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801474c:	b538      	push	{r3, r4, r5, lr}
 801474e:	4c15      	ldr	r4, [pc, #84]	; (80147a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8014750:	7823      	ldrb	r3, [r4, #0]
 8014752:	f3bf 8f5b 	dmb	ish
 8014756:	07da      	lsls	r2, r3, #31
 8014758:	4605      	mov	r5, r0
 801475a:	d40b      	bmi.n	8014774 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801475c:	4620      	mov	r0, r4
 801475e:	f007 f891 	bl	801b884 <__cxa_guard_acquire>
 8014762:	b138      	cbz	r0, 8014774 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8014764:	4620      	mov	r0, r4
 8014766:	f007 f899 	bl	801b89c <__cxa_guard_release>
 801476a:	4a0f      	ldr	r2, [pc, #60]	; (80147a8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801476c:	490f      	ldr	r1, [pc, #60]	; (80147ac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801476e:	4810      	ldr	r0, [pc, #64]	; (80147b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8014770:	f007 f881 	bl	801b876 <__aeabi_atexit>
 8014774:	4c0f      	ldr	r4, [pc, #60]	; (80147b4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8014776:	7823      	ldrb	r3, [r4, #0]
 8014778:	f3bf 8f5b 	dmb	ish
 801477c:	07db      	lsls	r3, r3, #31
 801477e:	d40b      	bmi.n	8014798 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8014780:	4620      	mov	r0, r4
 8014782:	f007 f87f 	bl	801b884 <__cxa_guard_acquire>
 8014786:	b138      	cbz	r0, 8014798 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8014788:	4620      	mov	r0, r4
 801478a:	f007 f887 	bl	801b89c <__cxa_guard_release>
 801478e:	4a06      	ldr	r2, [pc, #24]	; (80147a8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8014790:	4909      	ldr	r1, [pc, #36]	; (80147b8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8014792:	480a      	ldr	r0, [pc, #40]	; (80147bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8014794:	f007 f86f 	bl	801b876 <__aeabi_atexit>
 8014798:	4b05      	ldr	r3, [pc, #20]	; (80147b0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801479a:	642b      	str	r3, [r5, #64]	; 0x40
 801479c:	4b07      	ldr	r3, [pc, #28]	; (80147bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801479e:	646b      	str	r3, [r5, #68]	; 0x44
 80147a0:	bd38      	pop	{r3, r4, r5, pc}
 80147a2:	bf00      	nop
 80147a4:	2001272c 	.word	0x2001272c
 80147a8:	20000000 	.word	0x20000000
 80147ac:	08012569 	.word	0x08012569
 80147b0:	200000b8 	.word	0x200000b8
 80147b4:	20012730 	.word	0x20012730
 80147b8:	08012567 	.word	0x08012567
 80147bc:	200000bc 	.word	0x200000bc

080147c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 80147c0:	b538      	push	{r3, r4, r5, lr}
 80147c2:	4c15      	ldr	r4, [pc, #84]	; (8014818 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 80147c4:	7823      	ldrb	r3, [r4, #0]
 80147c6:	f3bf 8f5b 	dmb	ish
 80147ca:	07da      	lsls	r2, r3, #31
 80147cc:	4605      	mov	r5, r0
 80147ce:	d40b      	bmi.n	80147e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80147d0:	4620      	mov	r0, r4
 80147d2:	f007 f857 	bl	801b884 <__cxa_guard_acquire>
 80147d6:	b138      	cbz	r0, 80147e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80147d8:	4620      	mov	r0, r4
 80147da:	f007 f85f 	bl	801b89c <__cxa_guard_release>
 80147de:	4a0f      	ldr	r2, [pc, #60]	; (801481c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80147e0:	490f      	ldr	r1, [pc, #60]	; (8014820 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80147e2:	4810      	ldr	r0, [pc, #64]	; (8014824 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80147e4:	f007 f847 	bl	801b876 <__aeabi_atexit>
 80147e8:	4c0f      	ldr	r4, [pc, #60]	; (8014828 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80147ea:	7823      	ldrb	r3, [r4, #0]
 80147ec:	f3bf 8f5b 	dmb	ish
 80147f0:	07db      	lsls	r3, r3, #31
 80147f2:	d40b      	bmi.n	801480c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80147f4:	4620      	mov	r0, r4
 80147f6:	f007 f845 	bl	801b884 <__cxa_guard_acquire>
 80147fa:	b138      	cbz	r0, 801480c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80147fc:	4620      	mov	r0, r4
 80147fe:	f007 f84d 	bl	801b89c <__cxa_guard_release>
 8014802:	4a06      	ldr	r2, [pc, #24]	; (801481c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8014804:	4909      	ldr	r1, [pc, #36]	; (801482c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8014806:	480a      	ldr	r0, [pc, #40]	; (8014830 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8014808:	f007 f835 	bl	801b876 <__aeabi_atexit>
 801480c:	4b05      	ldr	r3, [pc, #20]	; (8014824 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801480e:	63ab      	str	r3, [r5, #56]	; 0x38
 8014810:	4b07      	ldr	r3, [pc, #28]	; (8014830 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8014812:	63eb      	str	r3, [r5, #60]	; 0x3c
 8014814:	bd38      	pop	{r3, r4, r5, pc}
 8014816:	bf00      	nop
 8014818:	2001274c 	.word	0x2001274c
 801481c:	20000000 	.word	0x20000000
 8014820:	0801256d 	.word	0x0801256d
 8014824:	200000d8 	.word	0x200000d8
 8014828:	20012750 	.word	0x20012750
 801482c:	0801256b 	.word	0x0801256b
 8014830:	200000dc 	.word	0x200000dc

08014834 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8014834:	b510      	push	{r4, lr}
 8014836:	4604      	mov	r4, r0
 8014838:	f7ff ff14 	bl	8014664 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801483c:	4620      	mov	r0, r4
 801483e:	f7ff ff85 	bl	801474c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8014842:	4620      	mov	r0, r4
 8014844:	f7ff ff48 	bl	80146d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8014848:	4620      	mov	r0, r4
 801484a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801484e:	f7ff bfb7 	b.w	80147c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08014854 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8014854:	b538      	push	{r3, r4, r5, lr}
 8014856:	4c15      	ldr	r4, [pc, #84]	; (80148ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8014858:	7823      	ldrb	r3, [r4, #0]
 801485a:	f3bf 8f5b 	dmb	ish
 801485e:	07da      	lsls	r2, r3, #31
 8014860:	4605      	mov	r5, r0
 8014862:	d40b      	bmi.n	801487c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8014864:	4620      	mov	r0, r4
 8014866:	f007 f80d 	bl	801b884 <__cxa_guard_acquire>
 801486a:	b138      	cbz	r0, 801487c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801486c:	4620      	mov	r0, r4
 801486e:	f007 f815 	bl	801b89c <__cxa_guard_release>
 8014872:	4a0f      	ldr	r2, [pc, #60]	; (80148b0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8014874:	490f      	ldr	r1, [pc, #60]	; (80148b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8014876:	4810      	ldr	r0, [pc, #64]	; (80148b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8014878:	f006 fffd 	bl	801b876 <__aeabi_atexit>
 801487c:	4c0f      	ldr	r4, [pc, #60]	; (80148bc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801487e:	7823      	ldrb	r3, [r4, #0]
 8014880:	f3bf 8f5b 	dmb	ish
 8014884:	07db      	lsls	r3, r3, #31
 8014886:	d40b      	bmi.n	80148a0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8014888:	4620      	mov	r0, r4
 801488a:	f006 fffb 	bl	801b884 <__cxa_guard_acquire>
 801488e:	b138      	cbz	r0, 80148a0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8014890:	4620      	mov	r0, r4
 8014892:	f007 f803 	bl	801b89c <__cxa_guard_release>
 8014896:	4a06      	ldr	r2, [pc, #24]	; (80148b0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8014898:	4909      	ldr	r1, [pc, #36]	; (80148c0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801489a:	480a      	ldr	r0, [pc, #40]	; (80148c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801489c:	f006 ffeb 	bl	801b876 <__aeabi_atexit>
 80148a0:	4b05      	ldr	r3, [pc, #20]	; (80148b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80148a2:	662b      	str	r3, [r5, #96]	; 0x60
 80148a4:	4b07      	ldr	r3, [pc, #28]	; (80148c4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80148a6:	666b      	str	r3, [r5, #100]	; 0x64
 80148a8:	bd38      	pop	{r3, r4, r5, pc}
 80148aa:	bf00      	nop
 80148ac:	20012734 	.word	0x20012734
 80148b0:	20000000 	.word	0x20000000
 80148b4:	08012559 	.word	0x08012559
 80148b8:	200000c0 	.word	0x200000c0
 80148bc:	20012738 	.word	0x20012738
 80148c0:	08012557 	.word	0x08012557
 80148c4:	200000c4 	.word	0x200000c4

080148c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80148c8:	b538      	push	{r3, r4, r5, lr}
 80148ca:	4c15      	ldr	r4, [pc, #84]	; (8014920 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80148cc:	7823      	ldrb	r3, [r4, #0]
 80148ce:	f3bf 8f5b 	dmb	ish
 80148d2:	07da      	lsls	r2, r3, #31
 80148d4:	4605      	mov	r5, r0
 80148d6:	d40b      	bmi.n	80148f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80148d8:	4620      	mov	r0, r4
 80148da:	f006 ffd3 	bl	801b884 <__cxa_guard_acquire>
 80148de:	b138      	cbz	r0, 80148f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80148e0:	4620      	mov	r0, r4
 80148e2:	f006 ffdb 	bl	801b89c <__cxa_guard_release>
 80148e6:	4a0f      	ldr	r2, [pc, #60]	; (8014924 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80148e8:	490f      	ldr	r1, [pc, #60]	; (8014928 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80148ea:	4810      	ldr	r0, [pc, #64]	; (801492c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80148ec:	f006 ffc3 	bl	801b876 <__aeabi_atexit>
 80148f0:	4c0f      	ldr	r4, [pc, #60]	; (8014930 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80148f2:	7823      	ldrb	r3, [r4, #0]
 80148f4:	f3bf 8f5b 	dmb	ish
 80148f8:	07db      	lsls	r3, r3, #31
 80148fa:	d40b      	bmi.n	8014914 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80148fc:	4620      	mov	r0, r4
 80148fe:	f006 ffc1 	bl	801b884 <__cxa_guard_acquire>
 8014902:	b138      	cbz	r0, 8014914 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8014904:	4620      	mov	r0, r4
 8014906:	f006 ffc9 	bl	801b89c <__cxa_guard_release>
 801490a:	4a06      	ldr	r2, [pc, #24]	; (8014924 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801490c:	4909      	ldr	r1, [pc, #36]	; (8014934 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801490e:	480a      	ldr	r0, [pc, #40]	; (8014938 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8014910:	f006 ffb1 	bl	801b876 <__aeabi_atexit>
 8014914:	4b05      	ldr	r3, [pc, #20]	; (801492c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8014916:	65ab      	str	r3, [r5, #88]	; 0x58
 8014918:	4b07      	ldr	r3, [pc, #28]	; (8014938 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801491a:	65eb      	str	r3, [r5, #92]	; 0x5c
 801491c:	bd38      	pop	{r3, r4, r5, pc}
 801491e:	bf00      	nop
 8014920:	2001270c 	.word	0x2001270c
 8014924:	20000000 	.word	0x20000000
 8014928:	0801255d 	.word	0x0801255d
 801492c:	20000098 	.word	0x20000098
 8014930:	20012710 	.word	0x20012710
 8014934:	0801255b 	.word	0x0801255b
 8014938:	2000009c 	.word	0x2000009c

0801493c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801493c:	b510      	push	{r4, lr}
 801493e:	4604      	mov	r4, r0
 8014940:	f7ff ff88 	bl	8014854 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8014944:	4620      	mov	r0, r4
 8014946:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801494a:	f7ff bfbd 	b.w	80148c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08014950 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8014950:	b538      	push	{r3, r4, r5, lr}
 8014952:	4c15      	ldr	r4, [pc, #84]	; (80149a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8014954:	7823      	ldrb	r3, [r4, #0]
 8014956:	f3bf 8f5b 	dmb	ish
 801495a:	07da      	lsls	r2, r3, #31
 801495c:	4605      	mov	r5, r0
 801495e:	d40b      	bmi.n	8014978 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8014960:	4620      	mov	r0, r4
 8014962:	f006 ff8f 	bl	801b884 <__cxa_guard_acquire>
 8014966:	b138      	cbz	r0, 8014978 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8014968:	4620      	mov	r0, r4
 801496a:	f006 ff97 	bl	801b89c <__cxa_guard_release>
 801496e:	4a0f      	ldr	r2, [pc, #60]	; (80149ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8014970:	490f      	ldr	r1, [pc, #60]	; (80149b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8014972:	4810      	ldr	r0, [pc, #64]	; (80149b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8014974:	f006 ff7f 	bl	801b876 <__aeabi_atexit>
 8014978:	4c0f      	ldr	r4, [pc, #60]	; (80149b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801497a:	7823      	ldrb	r3, [r4, #0]
 801497c:	f3bf 8f5b 	dmb	ish
 8014980:	07db      	lsls	r3, r3, #31
 8014982:	d40b      	bmi.n	801499c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8014984:	4620      	mov	r0, r4
 8014986:	f006 ff7d 	bl	801b884 <__cxa_guard_acquire>
 801498a:	b138      	cbz	r0, 801499c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801498c:	4620      	mov	r0, r4
 801498e:	f006 ff85 	bl	801b89c <__cxa_guard_release>
 8014992:	4a06      	ldr	r2, [pc, #24]	; (80149ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8014994:	4909      	ldr	r1, [pc, #36]	; (80149bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8014996:	480a      	ldr	r0, [pc, #40]	; (80149c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8014998:	f006 ff6d 	bl	801b876 <__aeabi_atexit>
 801499c:	4b05      	ldr	r3, [pc, #20]	; (80149b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801499e:	672b      	str	r3, [r5, #112]	; 0x70
 80149a0:	4b07      	ldr	r3, [pc, #28]	; (80149c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80149a2:	676b      	str	r3, [r5, #116]	; 0x74
 80149a4:	bd38      	pop	{r3, r4, r5, pc}
 80149a6:	bf00      	nop
 80149a8:	20012704 	.word	0x20012704
 80149ac:	20000000 	.word	0x20000000
 80149b0:	08012551 	.word	0x08012551
 80149b4:	20000090 	.word	0x20000090
 80149b8:	20012708 	.word	0x20012708
 80149bc:	0801254f 	.word	0x0801254f
 80149c0:	20000094 	.word	0x20000094

080149c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80149c4:	b538      	push	{r3, r4, r5, lr}
 80149c6:	4c15      	ldr	r4, [pc, #84]	; (8014a1c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80149c8:	7823      	ldrb	r3, [r4, #0]
 80149ca:	f3bf 8f5b 	dmb	ish
 80149ce:	07da      	lsls	r2, r3, #31
 80149d0:	4605      	mov	r5, r0
 80149d2:	d40b      	bmi.n	80149ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80149d4:	4620      	mov	r0, r4
 80149d6:	f006 ff55 	bl	801b884 <__cxa_guard_acquire>
 80149da:	b138      	cbz	r0, 80149ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80149dc:	4620      	mov	r0, r4
 80149de:	f006 ff5d 	bl	801b89c <__cxa_guard_release>
 80149e2:	4a0f      	ldr	r2, [pc, #60]	; (8014a20 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80149e4:	490f      	ldr	r1, [pc, #60]	; (8014a24 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80149e6:	4810      	ldr	r0, [pc, #64]	; (8014a28 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80149e8:	f006 ff45 	bl	801b876 <__aeabi_atexit>
 80149ec:	4c0f      	ldr	r4, [pc, #60]	; (8014a2c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80149ee:	7823      	ldrb	r3, [r4, #0]
 80149f0:	f3bf 8f5b 	dmb	ish
 80149f4:	07db      	lsls	r3, r3, #31
 80149f6:	d40b      	bmi.n	8014a10 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80149f8:	4620      	mov	r0, r4
 80149fa:	f006 ff43 	bl	801b884 <__cxa_guard_acquire>
 80149fe:	b138      	cbz	r0, 8014a10 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8014a00:	4620      	mov	r0, r4
 8014a02:	f006 ff4b 	bl	801b89c <__cxa_guard_release>
 8014a06:	4a06      	ldr	r2, [pc, #24]	; (8014a20 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8014a08:	4909      	ldr	r1, [pc, #36]	; (8014a30 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8014a0a:	480a      	ldr	r0, [pc, #40]	; (8014a34 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8014a0c:	f006 ff33 	bl	801b876 <__aeabi_atexit>
 8014a10:	4b05      	ldr	r3, [pc, #20]	; (8014a28 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8014a12:	66ab      	str	r3, [r5, #104]	; 0x68
 8014a14:	4b07      	ldr	r3, [pc, #28]	; (8014a34 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8014a16:	66eb      	str	r3, [r5, #108]	; 0x6c
 8014a18:	bd38      	pop	{r3, r4, r5, pc}
 8014a1a:	bf00      	nop
 8014a1c:	200126fc 	.word	0x200126fc
 8014a20:	20000000 	.word	0x20000000
 8014a24:	08012555 	.word	0x08012555
 8014a28:	20000088 	.word	0x20000088
 8014a2c:	20012700 	.word	0x20012700
 8014a30:	08012553 	.word	0x08012553
 8014a34:	2000008c 	.word	0x2000008c

08014a38 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8014a38:	b510      	push	{r4, lr}
 8014a3a:	4604      	mov	r4, r0
 8014a3c:	f7ff ff88 	bl	8014950 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8014a40:	4620      	mov	r0, r4
 8014a42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014a46:	f7ff bfbd 	b.w	80149c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08014a4a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8014a4a:	b510      	push	{r4, lr}
 8014a4c:	4604      	mov	r4, r0
 8014a4e:	f7ff fff3 	bl	8014a38 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8014a52:	4620      	mov	r0, r4
 8014a54:	f7ff ff72 	bl	801493c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8014a58:	4620      	mov	r0, r4
 8014a5a:	f7ff fdf9 	bl	8014650 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8014a5e:	4620      	mov	r0, r4
 8014a60:	f7ff fcfa 	bl	8014458 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8014a64:	4620      	mov	r0, r4
 8014a66:	f7ff fd75 	bl	8014554 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8014a6a:	4620      	mov	r0, r4
 8014a6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014a70:	f7ff bee0 	b.w	8014834 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08014a74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8014a74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014a78:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 8014a7c:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 8014a80:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 8014a84:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8014a88:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 8014a8c:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8014a90:	8808      	ldrh	r0, [r1, #0]
 8014a92:	fb05 4c0e 	mla	ip, r5, lr, r4
 8014a96:	2d00      	cmp	r5, #0
 8014a98:	eb02 0a0c 	add.w	sl, r2, ip
 8014a9c:	f2c0 80b0 	blt.w	8014c00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8014aa0:	45ab      	cmp	fp, r5
 8014aa2:	f340 80ad 	ble.w	8014c00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8014aa6:	2c00      	cmp	r4, #0
 8014aa8:	f2c0 80a8 	blt.w	8014bfc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8014aac:	45a6      	cmp	lr, r4
 8014aae:	f340 80a5 	ble.w	8014bfc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8014ab2:	f812 200c 	ldrb.w	r2, [r2, ip]
 8014ab6:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8014aba:	1c62      	adds	r2, r4, #1
 8014abc:	f100 80a3 	bmi.w	8014c06 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8014ac0:	4596      	cmp	lr, r2
 8014ac2:	f340 80a0 	ble.w	8014c06 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8014ac6:	f1b9 0f00 	cmp.w	r9, #0
 8014aca:	f000 809c 	beq.w	8014c06 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8014ace:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8014ad2:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8014ad6:	3501      	adds	r5, #1
 8014ad8:	f100 8099 	bmi.w	8014c0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8014adc:	45ab      	cmp	fp, r5
 8014ade:	f340 8096 	ble.w	8014c0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8014ae2:	2f00      	cmp	r7, #0
 8014ae4:	f000 8093 	beq.w	8014c0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8014ae8:	2c00      	cmp	r4, #0
 8014aea:	f2c0 808e 	blt.w	8014c0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8014aee:	45a6      	cmp	lr, r4
 8014af0:	f340 808b 	ble.w	8014c0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8014af4:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8014af8:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8014afc:	3401      	adds	r4, #1
 8014afe:	f100 8089 	bmi.w	8014c14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8014b02:	45a6      	cmp	lr, r4
 8014b04:	f340 8086 	ble.w	8014c14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8014b08:	f1b9 0f00 	cmp.w	r9, #0
 8014b0c:	f000 8082 	beq.w	8014c14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8014b10:	44d6      	add	lr, sl
 8014b12:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8014b16:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8014b1a:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8014b1e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8014b22:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8014b26:	fb19 fe07 	smulbb	lr, r9, r7
 8014b2a:	ea44 0808 	orr.w	r8, r4, r8
 8014b2e:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8014b32:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8014b36:	f1c7 0210 	rsb	r2, r7, #16
 8014b3a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8014b3e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8014b42:	ea44 0c0c 	orr.w	ip, r4, ip
 8014b46:	eba2 0209 	sub.w	r2, r2, r9
 8014b4a:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8014b4e:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8014b52:	fb04 f40c 	mul.w	r4, r4, ip
 8014b56:	fb02 4808 	mla	r8, r2, r8, r4
 8014b5a:	041a      	lsls	r2, r3, #16
 8014b5c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8014b60:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014b64:	4313      	orrs	r3, r2
 8014b66:	042a      	lsls	r2, r5, #16
 8014b68:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8014b6c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8014b70:	fb0e 8303 	mla	r3, lr, r3, r8
 8014b74:	432a      	orrs	r2, r5
 8014b76:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8014b7a:	fb07 3202 	mla	r2, r7, r2, r3
 8014b7e:	0d53      	lsrs	r3, r2, #21
 8014b80:	0952      	lsrs	r2, r2, #5
 8014b82:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014b86:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014b8a:	431a      	orrs	r2, r3
 8014b8c:	b293      	uxth	r3, r2
 8014b8e:	b2b4      	uxth	r4, r6
 8014b90:	1202      	asrs	r2, r0, #8
 8014b92:	43f6      	mvns	r6, r6
 8014b94:	b2f6      	uxtb	r6, r6
 8014b96:	121d      	asrs	r5, r3, #8
 8014b98:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8014b9c:	fb12 f206 	smulbb	r2, r2, r6
 8014ba0:	10c7      	asrs	r7, r0, #3
 8014ba2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8014ba6:	00c0      	lsls	r0, r0, #3
 8014ba8:	fb05 2504 	mla	r5, r5, r4, r2
 8014bac:	b2c0      	uxtb	r0, r0
 8014bae:	10da      	asrs	r2, r3, #3
 8014bb0:	00db      	lsls	r3, r3, #3
 8014bb2:	b2db      	uxtb	r3, r3
 8014bb4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014bb8:	fb10 f006 	smulbb	r0, r0, r6
 8014bbc:	b2ad      	uxth	r5, r5
 8014bbe:	fb03 0004 	mla	r0, r3, r4, r0
 8014bc2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8014bc6:	fb17 f706 	smulbb	r7, r7, r6
 8014bca:	b280      	uxth	r0, r0
 8014bcc:	1c6b      	adds	r3, r5, #1
 8014bce:	fb02 7204 	mla	r2, r2, r4, r7
 8014bd2:	b292      	uxth	r2, r2
 8014bd4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8014bd8:	1c43      	adds	r3, r0, #1
 8014bda:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8014bde:	1c50      	adds	r0, r2, #1
 8014be0:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8014be4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8014be8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8014bec:	0952      	lsrs	r2, r2, #5
 8014bee:	432b      	orrs	r3, r5
 8014bf0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014bf4:	4313      	orrs	r3, r2
 8014bf6:	800b      	strh	r3, [r1, #0]
 8014bf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014bfc:	4680      	mov	r8, r0
 8014bfe:	e75c      	b.n	8014aba <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8014c00:	4684      	mov	ip, r0
 8014c02:	4680      	mov	r8, r0
 8014c04:	e767      	b.n	8014ad6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8014c06:	4684      	mov	ip, r0
 8014c08:	e765      	b.n	8014ad6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8014c0a:	4605      	mov	r5, r0
 8014c0c:	e776      	b.n	8014afc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8014c0e:	4603      	mov	r3, r0
 8014c10:	4605      	mov	r5, r0
 8014c12:	e782      	b.n	8014b1a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8014c14:	4603      	mov	r3, r0
 8014c16:	e780      	b.n	8014b1a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08014c18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014c18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014c1c:	b099      	sub	sp, #100	; 0x64
 8014c1e:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 8014c22:	9215      	str	r2, [sp, #84]	; 0x54
 8014c24:	9309      	str	r3, [sp, #36]	; 0x24
 8014c26:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8014c28:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 8014c2c:	930d      	str	r3, [sp, #52]	; 0x34
 8014c2e:	910c      	str	r1, [sp, #48]	; 0x30
 8014c30:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 8014c34:	9016      	str	r0, [sp, #88]	; 0x58
 8014c36:	6850      	ldr	r0, [r2, #4]
 8014c38:	6812      	ldr	r2, [r2, #0]
 8014c3a:	fb00 1303 	mla	r3, r0, r3, r1
 8014c3e:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8014c42:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014c44:	681b      	ldr	r3, [r3, #0]
 8014c46:	930b      	str	r3, [sp, #44]	; 0x2c
 8014c48:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014c4a:	685e      	ldr	r6, [r3, #4]
 8014c4c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014c4e:	43db      	mvns	r3, r3
 8014c50:	b2db      	uxtb	r3, r3
 8014c52:	3604      	adds	r6, #4
 8014c54:	930a      	str	r3, [sp, #40]	; 0x28
 8014c56:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014c58:	2b00      	cmp	r3, #0
 8014c5a:	dc03      	bgt.n	8014c64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8014c5c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8014c5e:	2b00      	cmp	r3, #0
 8014c60:	f340 8225 	ble.w	80150ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8014c64:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014c66:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8014c6a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8014c6e:	1e48      	subs	r0, r1, #1
 8014c70:	1e57      	subs	r7, r2, #1
 8014c72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014c74:	2b00      	cmp	r3, #0
 8014c76:	f340 80e3 	ble.w	8014e40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8014c7a:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8014c7e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8014c82:	d406      	bmi.n	8014c92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8014c84:	4584      	cmp	ip, r0
 8014c86:	da04      	bge.n	8014c92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8014c88:	2b00      	cmp	r3, #0
 8014c8a:	db02      	blt.n	8014c92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8014c8c:	42bb      	cmp	r3, r7
 8014c8e:	f2c0 80d8 	blt.w	8014e42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8014c92:	f11c 0c01 	adds.w	ip, ip, #1
 8014c96:	f100 80c9 	bmi.w	8014e2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014c9a:	4561      	cmp	r1, ip
 8014c9c:	f2c0 80c6 	blt.w	8014e2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014ca0:	3301      	adds	r3, #1
 8014ca2:	f100 80c3 	bmi.w	8014e2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014ca6:	429a      	cmp	r2, r3
 8014ca8:	f2c0 80c0 	blt.w	8014e2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014cac:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8014cb0:	4647      	mov	r7, r8
 8014cb2:	f1bb 0f00 	cmp.w	fp, #0
 8014cb6:	f340 80e3 	ble.w	8014e80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8014cba:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8014cbc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014cbe:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8014cc2:	689b      	ldr	r3, [r3, #8]
 8014cc4:	ea5f 422a 	movs.w	r2, sl, asr #16
 8014cc8:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8014ccc:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8014cd0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8014cd4:	f100 8121 	bmi.w	8014f1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8014cd8:	f103 39ff 	add.w	r9, r3, #4294967295
 8014cdc:	454a      	cmp	r2, r9
 8014cde:	f280 811c 	bge.w	8014f1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8014ce2:	f1bc 0f00 	cmp.w	ip, #0
 8014ce6:	f2c0 8118 	blt.w	8014f1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8014cea:	f10e 39ff 	add.w	r9, lr, #4294967295
 8014cee:	45cc      	cmp	ip, r9
 8014cf0:	f280 8113 	bge.w	8014f1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8014cf4:	b21b      	sxth	r3, r3
 8014cf6:	fb0c 2203 	mla	r2, ip, r3, r2
 8014cfa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014cfc:	eb04 0902 	add.w	r9, r4, r2
 8014d00:	5ca2      	ldrb	r2, [r4, r2]
 8014d02:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8014d06:	2800      	cmp	r0, #0
 8014d08:	f000 80fe 	beq.w	8014f08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8014d0c:	f899 2001 	ldrb.w	r2, [r9, #1]
 8014d10:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8014d14:	9211      	str	r2, [sp, #68]	; 0x44
 8014d16:	b151      	cbz	r1, 8014d2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8014d18:	eb09 0203 	add.w	r2, r9, r3
 8014d1c:	f819 3003 	ldrb.w	r3, [r9, r3]
 8014d20:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014d24:	930f      	str	r3, [sp, #60]	; 0x3c
 8014d26:	7853      	ldrb	r3, [r2, #1]
 8014d28:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014d2c:	9312      	str	r3, [sp, #72]	; 0x48
 8014d2e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014d30:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014d32:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014d36:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014d3a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014d3e:	ea4c 0c03 	orr.w	ip, ip, r3
 8014d42:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014d44:	041b      	lsls	r3, r3, #16
 8014d46:	fb10 f201 	smulbb	r2, r0, r1
 8014d4a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8014d4e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014d52:	10d2      	asrs	r2, r2, #3
 8014d54:	4323      	orrs	r3, r4
 8014d56:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8014d5a:	4353      	muls	r3, r2
 8014d5c:	fb09 330c 	mla	r3, r9, ip, r3
 8014d60:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8014d64:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014d68:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8014d6c:	ea4c 0e0e 	orr.w	lr, ip, lr
 8014d70:	f1c1 0c10 	rsb	ip, r1, #16
 8014d74:	ebac 0c00 	sub.w	ip, ip, r0
 8014d78:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014d7c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8014d80:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014d82:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014d84:	0418      	lsls	r0, r3, #16
 8014d86:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014d8a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014d8e:	4318      	orrs	r0, r3
 8014d90:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8014d94:	fb02 c200 	mla	r2, r2, r0, ip
 8014d98:	0d53      	lsrs	r3, r2, #21
 8014d9a:	0952      	lsrs	r2, r2, #5
 8014d9c:	8838      	ldrh	r0, [r7, #0]
 8014d9e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014da2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014da6:	431a      	orrs	r2, r3
 8014da8:	b292      	uxth	r2, r2
 8014daa:	1201      	asrs	r1, r0, #8
 8014dac:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8014db0:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8014db4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8014db8:	fb11 f104 	smulbb	r1, r1, r4
 8014dbc:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8014dc0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014dc4:	00c0      	lsls	r0, r0, #3
 8014dc6:	fb0c 1c03 	mla	ip, ip, r3, r1
 8014dca:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8014dce:	10d1      	asrs	r1, r2, #3
 8014dd0:	b2c0      	uxtb	r0, r0
 8014dd2:	00d2      	lsls	r2, r2, #3
 8014dd4:	b2d2      	uxtb	r2, r2
 8014dd6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014dda:	fb1e fe04 	smulbb	lr, lr, r4
 8014dde:	fb10 f004 	smulbb	r0, r0, r4
 8014de2:	fa1f fc8c 	uxth.w	ip, ip
 8014de6:	fb01 e103 	mla	r1, r1, r3, lr
 8014dea:	fb02 0303 	mla	r3, r2, r3, r0
 8014dee:	b29a      	uxth	r2, r3
 8014df0:	f10c 0301 	add.w	r3, ip, #1
 8014df4:	b289      	uxth	r1, r1
 8014df6:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8014dfa:	1c53      	adds	r3, r2, #1
 8014dfc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8014e00:	1c4a      	adds	r2, r1, #1
 8014e02:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8014e06:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014e0a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8014e0e:	0949      	lsrs	r1, r1, #5
 8014e10:	ea43 030c 	orr.w	r3, r3, ip
 8014e14:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014e18:	430b      	orrs	r3, r1
 8014e1a:	803b      	strh	r3, [r7, #0]
 8014e1c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8014e1e:	449a      	add	sl, r3
 8014e20:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8014e22:	3702      	adds	r7, #2
 8014e24:	441d      	add	r5, r3
 8014e26:	f10b 3bff 	add.w	fp, fp, #4294967295
 8014e2a:	e742      	b.n	8014cb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8014e2c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8014e2e:	449a      	add	sl, r3
 8014e30:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8014e32:	441d      	add	r5, r3
 8014e34:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014e36:	3b01      	subs	r3, #1
 8014e38:	9309      	str	r3, [sp, #36]	; 0x24
 8014e3a:	f108 0802 	add.w	r8, r8, #2
 8014e3e:	e718      	b.n	8014c72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8014e40:	d023      	beq.n	8014e8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8014e42:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014e44:	9825      	ldr	r0, [sp, #148]	; 0x94
 8014e46:	3b01      	subs	r3, #1
 8014e48:	fb00 a003 	mla	r0, r0, r3, sl
 8014e4c:	1400      	asrs	r0, r0, #16
 8014e4e:	f53f af2d 	bmi.w	8014cac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8014e52:	3901      	subs	r1, #1
 8014e54:	4288      	cmp	r0, r1
 8014e56:	f6bf af29 	bge.w	8014cac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8014e5a:	9926      	ldr	r1, [sp, #152]	; 0x98
 8014e5c:	fb01 5303 	mla	r3, r1, r3, r5
 8014e60:	141b      	asrs	r3, r3, #16
 8014e62:	f53f af23 	bmi.w	8014cac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8014e66:	3a01      	subs	r2, #1
 8014e68:	4293      	cmp	r3, r2
 8014e6a:	f6bf af1f 	bge.w	8014cac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8014e6e:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8014e72:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8014e76:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8014e7a:	f1be 0f00 	cmp.w	lr, #0
 8014e7e:	dc6c      	bgt.n	8014f5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8014e80:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014e82:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8014e86:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8014e8a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014e8c:	2b00      	cmp	r3, #0
 8014e8e:	f340 810e 	ble.w	80150ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8014e92:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014e96:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014e9a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014e9e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8014ea0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014ea4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014ea8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014eac:	eef0 6a62 	vmov.f32	s13, s5
 8014eb0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014eb4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014eb8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014ebc:	ee16 aa90 	vmov	sl, s13
 8014ec0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014ec4:	eef0 6a43 	vmov.f32	s13, s6
 8014ec8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014ecc:	ee12 2a90 	vmov	r2, s5
 8014ed0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014ed4:	fb92 f3f3 	sdiv	r3, r2, r3
 8014ed8:	ee13 2a10 	vmov	r2, s6
 8014edc:	9325      	str	r3, [sp, #148]	; 0x94
 8014ede:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8014ee0:	fb92 f3f3 	sdiv	r3, r2, r3
 8014ee4:	9326      	str	r3, [sp, #152]	; 0x98
 8014ee6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014ee8:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8014eea:	3b01      	subs	r3, #1
 8014eec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014ef0:	930c      	str	r3, [sp, #48]	; 0x30
 8014ef2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8014ef4:	bf08      	it	eq
 8014ef6:	4613      	moveq	r3, r2
 8014ef8:	ee16 5a90 	vmov	r5, s13
 8014efc:	9309      	str	r3, [sp, #36]	; 0x24
 8014efe:	eeb0 3a67 	vmov.f32	s6, s15
 8014f02:	eef0 2a47 	vmov.f32	s5, s14
 8014f06:	e6a6      	b.n	8014c56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014f08:	2900      	cmp	r1, #0
 8014f0a:	f43f af10 	beq.w	8014d2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8014f0e:	f819 3003 	ldrb.w	r3, [r9, r3]
 8014f12:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014f16:	930f      	str	r3, [sp, #60]	; 0x3c
 8014f18:	e709      	b.n	8014d2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8014f1a:	f112 0901 	adds.w	r9, r2, #1
 8014f1e:	f53f af7d 	bmi.w	8014e1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8014f22:	454b      	cmp	r3, r9
 8014f24:	f6ff af7a 	blt.w	8014e1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8014f28:	f11c 0901 	adds.w	r9, ip, #1
 8014f2c:	f53f af76 	bmi.w	8014e1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8014f30:	45ce      	cmp	lr, r9
 8014f32:	f6ff af73 	blt.w	8014e1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8014f36:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8014f38:	9202      	str	r2, [sp, #8]
 8014f3a:	b21b      	sxth	r3, r3
 8014f3c:	fa0f f28e 	sxth.w	r2, lr
 8014f40:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8014f44:	e9cd c003 	strd	ip, r0, [sp, #12]
 8014f48:	9201      	str	r2, [sp, #4]
 8014f4a:	9300      	str	r3, [sp, #0]
 8014f4c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014f4e:	9816      	ldr	r0, [sp, #88]	; 0x58
 8014f50:	4633      	mov	r3, r6
 8014f52:	4639      	mov	r1, r7
 8014f54:	f7ff fd8e 	bl	8014a74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8014f58:	e760      	b.n	8014e1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8014f5a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014f5c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014f5e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8014f62:	ea4f 422a 	mov.w	r2, sl, asr #16
 8014f66:	1429      	asrs	r1, r5, #16
 8014f68:	fb03 2101 	mla	r1, r3, r1, r2
 8014f6c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014f6e:	440a      	add	r2, r1
 8014f70:	5c61      	ldrb	r1, [r4, r1]
 8014f72:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8014f76:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8014f7a:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8014f7e:	f1bc 0f00 	cmp.w	ip, #0
 8014f82:	f000 808c 	beq.w	801509e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8014f86:	7857      	ldrb	r7, [r2, #1]
 8014f88:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8014f8c:	9413      	str	r4, [sp, #76]	; 0x4c
 8014f8e:	b140      	cbz	r0, 8014fa2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8014f90:	18d7      	adds	r7, r2, r3
 8014f92:	5cd3      	ldrb	r3, [r2, r3]
 8014f94:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014f98:	9310      	str	r3, [sp, #64]	; 0x40
 8014f9a:	787b      	ldrb	r3, [r7, #1]
 8014f9c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014fa0:	9314      	str	r3, [sp, #80]	; 0x50
 8014fa2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014fa4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014fa6:	fb1c f200 	smulbb	r2, ip, r0
 8014faa:	041f      	lsls	r7, r3, #16
 8014fac:	10d2      	asrs	r2, r2, #3
 8014fae:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014fb2:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8014fb6:	431f      	orrs	r7, r3
 8014fb8:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8014fbc:	9317      	str	r3, [sp, #92]	; 0x5c
 8014fbe:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8014fc0:	041b      	lsls	r3, r3, #16
 8014fc2:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8014fc6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014fca:	ea43 030b 	orr.w	r3, r3, fp
 8014fce:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8014fd0:	4353      	muls	r3, r2
 8014fd2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8014fd6:	fb04 3707 	mla	r7, r4, r7, r3
 8014fda:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8014fde:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8014fe2:	ea43 0b01 	orr.w	fp, r3, r1
 8014fe6:	f1c0 0110 	rsb	r1, r0, #16
 8014fea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014fec:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014fee:	eba1 0c0c 	sub.w	ip, r1, ip
 8014ff2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014ff6:	fb0c 770b 	mla	r7, ip, fp, r7
 8014ffa:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014ffe:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8015002:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015006:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801500a:	ea4c 0c0b 	orr.w	ip, ip, fp
 801500e:	fb02 770c 	mla	r7, r2, ip, r7
 8015012:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015014:	0d79      	lsrs	r1, r7, #21
 8015016:	097f      	lsrs	r7, r7, #5
 8015018:	8812      	ldrh	r2, [r2, #0]
 801501a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801501e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8015022:	430f      	orrs	r7, r1
 8015024:	b2bb      	uxth	r3, r7
 8015026:	1211      	asrs	r1, r2, #8
 8015028:	1218      	asrs	r0, r3, #8
 801502a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801502e:	fb11 f104 	smulbb	r1, r1, r4
 8015032:	10d7      	asrs	r7, r2, #3
 8015034:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015038:	00d2      	lsls	r2, r2, #3
 801503a:	fb00 1009 	mla	r0, r0, r9, r1
 801503e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015042:	10d9      	asrs	r1, r3, #3
 8015044:	b2d2      	uxtb	r2, r2
 8015046:	00db      	lsls	r3, r3, #3
 8015048:	fb17 f704 	smulbb	r7, r7, r4
 801504c:	fb12 f204 	smulbb	r2, r2, r4
 8015050:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8015054:	b2db      	uxtb	r3, r3
 8015056:	b280      	uxth	r0, r0
 8015058:	fb01 7109 	mla	r1, r1, r9, r7
 801505c:	fb03 2309 	mla	r3, r3, r9, r2
 8015060:	b29b      	uxth	r3, r3
 8015062:	b289      	uxth	r1, r1
 8015064:	1c42      	adds	r2, r0, #1
 8015066:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801506a:	1c4f      	adds	r7, r1, #1
 801506c:	1c5a      	adds	r2, r3, #1
 801506e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8015072:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8015076:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801507a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801507e:	0949      	lsrs	r1, r1, #5
 8015080:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015082:	4310      	orrs	r0, r2
 8015084:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015088:	4308      	orrs	r0, r1
 801508a:	f823 0b02 	strh.w	r0, [r3], #2
 801508e:	930e      	str	r3, [sp, #56]	; 0x38
 8015090:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8015092:	449a      	add	sl, r3
 8015094:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015096:	f10e 3eff 	add.w	lr, lr, #4294967295
 801509a:	441d      	add	r5, r3
 801509c:	e6ed      	b.n	8014e7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801509e:	2800      	cmp	r0, #0
 80150a0:	f43f af7f 	beq.w	8014fa2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80150a4:	5cd3      	ldrb	r3, [r2, r3]
 80150a6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80150aa:	9310      	str	r3, [sp, #64]	; 0x40
 80150ac:	e779      	b.n	8014fa2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80150ae:	b019      	add	sp, #100	; 0x64
 80150b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080150b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80150b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80150b8:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 80150bc:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80150c0:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 80150c4:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80150c8:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80150cc:	8808      	ldrh	r0, [r1, #0]
 80150ce:	fb08 470e 	mla	r7, r8, lr, r4
 80150d2:	f1b8 0f00 	cmp.w	r8, #0
 80150d6:	eb02 0907 	add.w	r9, r2, r7
 80150da:	db67      	blt.n	80151ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80150dc:	45c2      	cmp	sl, r8
 80150de:	dd65      	ble.n	80151ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80150e0:	2c00      	cmp	r4, #0
 80150e2:	db61      	blt.n	80151a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80150e4:	45a6      	cmp	lr, r4
 80150e6:	dd5f      	ble.n	80151a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80150e8:	5dd2      	ldrb	r2, [r2, r7]
 80150ea:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 80150ee:	1c62      	adds	r2, r4, #1
 80150f0:	d45f      	bmi.n	80151b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80150f2:	4596      	cmp	lr, r2
 80150f4:	dd5d      	ble.n	80151b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80150f6:	2d00      	cmp	r5, #0
 80150f8:	d05b      	beq.n	80151b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80150fa:	f899 2001 	ldrb.w	r2, [r9, #1]
 80150fe:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8015102:	f118 0801 	adds.w	r8, r8, #1
 8015106:	d458      	bmi.n	80151ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8015108:	45c2      	cmp	sl, r8
 801510a:	dd56      	ble.n	80151ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801510c:	2e00      	cmp	r6, #0
 801510e:	d054      	beq.n	80151ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8015110:	2c00      	cmp	r4, #0
 8015112:	db50      	blt.n	80151b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8015114:	45a6      	cmp	lr, r4
 8015116:	dd4e      	ble.n	80151b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8015118:	f819 200e 	ldrb.w	r2, [r9, lr]
 801511c:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8015120:	3401      	adds	r4, #1
 8015122:	d407      	bmi.n	8015134 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8015124:	45a6      	cmp	lr, r4
 8015126:	dd05      	ble.n	8015134 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8015128:	b125      	cbz	r5, 8015134 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801512a:	44ce      	add	lr, r9
 801512c:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8015130:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8015134:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8015138:	fb15 f406 	smulbb	r4, r5, r6
 801513c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8015140:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8015144:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8015148:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801514c:	ea43 0c0c 	orr.w	ip, r3, ip
 8015150:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8015154:	f1c6 0310 	rsb	r3, r6, #16
 8015158:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801515c:	1b5b      	subs	r3, r3, r5
 801515e:	ea4e 0707 	orr.w	r7, lr, r7
 8015162:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8015166:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801516a:	437d      	muls	r5, r7
 801516c:	fb03 5c0c 	mla	ip, r3, ip, r5
 8015170:	0403      	lsls	r3, r0, #16
 8015172:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8015176:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801517a:	4318      	orrs	r0, r3
 801517c:	0413      	lsls	r3, r2, #16
 801517e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8015182:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015186:	4313      	orrs	r3, r2
 8015188:	fb04 c000 	mla	r0, r4, r0, ip
 801518c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8015190:	fb06 0003 	mla	r0, r6, r3, r0
 8015194:	0d43      	lsrs	r3, r0, #21
 8015196:	0940      	lsrs	r0, r0, #5
 8015198:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801519c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80151a0:	4318      	orrs	r0, r3
 80151a2:	8008      	strh	r0, [r1, #0]
 80151a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80151a8:	4684      	mov	ip, r0
 80151aa:	e7a0      	b.n	80150ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 80151ac:	4607      	mov	r7, r0
 80151ae:	4684      	mov	ip, r0
 80151b0:	e7a7      	b.n	8015102 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80151b2:	4607      	mov	r7, r0
 80151b4:	e7a5      	b.n	8015102 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80151b6:	4602      	mov	r2, r0
 80151b8:	e7b2      	b.n	8015120 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 80151ba:	4602      	mov	r2, r0
 80151bc:	e7ba      	b.n	8015134 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

080151be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80151be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80151c2:	b093      	sub	sp, #76	; 0x4c
 80151c4:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80151c8:	920f      	str	r2, [sp, #60]	; 0x3c
 80151ca:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80151cc:	9108      	str	r1, [sp, #32]
 80151ce:	9306      	str	r3, [sp, #24]
 80151d0:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80151d4:	9010      	str	r0, [sp, #64]	; 0x40
 80151d6:	6850      	ldr	r0, [r2, #4]
 80151d8:	6812      	ldr	r2, [r2, #0]
 80151da:	fb00 1303 	mla	r3, r0, r3, r1
 80151de:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80151e2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80151e4:	681b      	ldr	r3, [r3, #0]
 80151e6:	9307      	str	r3, [sp, #28]
 80151e8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80151ea:	685f      	ldr	r7, [r3, #4]
 80151ec:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80151f0:	3704      	adds	r7, #4
 80151f2:	9b08      	ldr	r3, [sp, #32]
 80151f4:	2b00      	cmp	r3, #0
 80151f6:	dc03      	bgt.n	8015200 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80151f8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80151fa:	2b00      	cmp	r3, #0
 80151fc:	f340 81b2 	ble.w	8015564 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8015200:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015202:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015206:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801520a:	1e48      	subs	r0, r1, #1
 801520c:	f102 3cff 	add.w	ip, r2, #4294967295
 8015210:	9b06      	ldr	r3, [sp, #24]
 8015212:	2b00      	cmp	r3, #0
 8015214:	f340 80a9 	ble.w	801536a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8015218:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801521c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8015220:	d406      	bmi.n	8015230 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015222:	4586      	cmp	lr, r0
 8015224:	da04      	bge.n	8015230 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015226:	2b00      	cmp	r3, #0
 8015228:	db02      	blt.n	8015230 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801522a:	4563      	cmp	r3, ip
 801522c:	f2c0 809e 	blt.w	801536c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8015230:	f11e 0e01 	adds.w	lr, lr, #1
 8015234:	f100 808f 	bmi.w	8015356 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015238:	4571      	cmp	r1, lr
 801523a:	f2c0 808c 	blt.w	8015356 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801523e:	3301      	adds	r3, #1
 8015240:	f100 8089 	bmi.w	8015356 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8015244:	429a      	cmp	r2, r3
 8015246:	f2c0 8086 	blt.w	8015356 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801524a:	f8dd b018 	ldr.w	fp, [sp, #24]
 801524e:	46c8      	mov	r8, r9
 8015250:	f1bb 0f00 	cmp.w	fp, #0
 8015254:	f340 80a6 	ble.w	80153a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8015258:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801525a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801525c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8015260:	689b      	ldr	r3, [r3, #8]
 8015262:	1422      	asrs	r2, r4, #16
 8015264:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8015268:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801526c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8015270:	f100 80e3 	bmi.w	801543a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8015274:	f103 3aff 	add.w	sl, r3, #4294967295
 8015278:	4552      	cmp	r2, sl
 801527a:	f280 80de 	bge.w	801543a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801527e:	f1bc 0f00 	cmp.w	ip, #0
 8015282:	f2c0 80da 	blt.w	801543a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8015286:	f10e 3aff 	add.w	sl, lr, #4294967295
 801528a:	45d4      	cmp	ip, sl
 801528c:	f280 80d5 	bge.w	801543a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8015290:	b21b      	sxth	r3, r3
 8015292:	fb0c 2203 	mla	r2, ip, r3, r2
 8015296:	9d07      	ldr	r5, [sp, #28]
 8015298:	eb05 0a02 	add.w	sl, r5, r2
 801529c:	5caa      	ldrb	r2, [r5, r2]
 801529e:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 80152a2:	2800      	cmp	r0, #0
 80152a4:	f000 80c0 	beq.w	8015428 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 80152a8:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80152ac:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 80152b0:	920b      	str	r2, [sp, #44]	; 0x2c
 80152b2:	b151      	cbz	r1, 80152ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80152b4:	eb0a 0203 	add.w	r2, sl, r3
 80152b8:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80152bc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80152c0:	9309      	str	r3, [sp, #36]	; 0x24
 80152c2:	7853      	ldrb	r3, [r2, #1]
 80152c4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80152c8:	930c      	str	r3, [sp, #48]	; 0x30
 80152ca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80152cc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80152ce:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80152d2:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80152d6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80152da:	ea4c 0c03 	orr.w	ip, ip, r3
 80152de:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80152e0:	041b      	lsls	r3, r3, #16
 80152e2:	fb10 f201 	smulbb	r2, r0, r1
 80152e6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80152ea:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80152ee:	10d2      	asrs	r2, r2, #3
 80152f0:	432b      	orrs	r3, r5
 80152f2:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 80152f6:	4353      	muls	r3, r2
 80152f8:	fb0a 330c 	mla	r3, sl, ip, r3
 80152fc:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8015300:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8015304:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8015308:	ea4c 0e0e 	orr.w	lr, ip, lr
 801530c:	f1c1 0c10 	rsb	ip, r1, #16
 8015310:	ebac 0c00 	sub.w	ip, ip, r0
 8015314:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8015318:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801531c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801531e:	0418      	lsls	r0, r3, #16
 8015320:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8015324:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015328:	4318      	orrs	r0, r3
 801532a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801532e:	fb02 c200 	mla	r2, r2, r0, ip
 8015332:	0d53      	lsrs	r3, r2, #21
 8015334:	0952      	lsrs	r2, r2, #5
 8015336:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801533a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801533e:	431a      	orrs	r2, r3
 8015340:	f8a8 2000 	strh.w	r2, [r8]
 8015344:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8015346:	441c      	add	r4, r3
 8015348:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801534a:	f108 0802 	add.w	r8, r8, #2
 801534e:	441e      	add	r6, r3
 8015350:	f10b 3bff 	add.w	fp, fp, #4294967295
 8015354:	e77c      	b.n	8015250 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015356:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8015358:	441c      	add	r4, r3
 801535a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801535c:	441e      	add	r6, r3
 801535e:	9b06      	ldr	r3, [sp, #24]
 8015360:	3b01      	subs	r3, #1
 8015362:	9306      	str	r3, [sp, #24]
 8015364:	f109 0902 	add.w	r9, r9, #2
 8015368:	e752      	b.n	8015210 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801536a:	d020      	beq.n	80153ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801536c:	9b06      	ldr	r3, [sp, #24]
 801536e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8015370:	3b01      	subs	r3, #1
 8015372:	fb00 4003 	mla	r0, r0, r3, r4
 8015376:	1400      	asrs	r0, r0, #16
 8015378:	f53f af67 	bmi.w	801524a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801537c:	3901      	subs	r1, #1
 801537e:	4288      	cmp	r0, r1
 8015380:	f6bf af63 	bge.w	801524a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8015384:	9920      	ldr	r1, [sp, #128]	; 0x80
 8015386:	fb01 6303 	mla	r3, r1, r3, r6
 801538a:	141b      	asrs	r3, r3, #16
 801538c:	f53f af5d 	bmi.w	801524a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8015390:	3a01      	subs	r2, #1
 8015392:	4293      	cmp	r3, r2
 8015394:	f6bf af59 	bge.w	801524a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8015398:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801539c:	46ca      	mov	sl, r9
 801539e:	f1b8 0f00 	cmp.w	r8, #0
 80153a2:	dc67      	bgt.n	8015474 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80153a4:	9b06      	ldr	r3, [sp, #24]
 80153a6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80153aa:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80153ae:	9b08      	ldr	r3, [sp, #32]
 80153b0:	2b00      	cmp	r3, #0
 80153b2:	f340 80d7 	ble.w	8015564 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80153b6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80153ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80153be:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80153c2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80153c4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80153c8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80153cc:	eeb0 6a62 	vmov.f32	s12, s5
 80153d0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80153d4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80153d8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80153dc:	ee16 4a10 	vmov	r4, s12
 80153e0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80153e4:	eeb0 6a43 	vmov.f32	s12, s6
 80153e8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80153ec:	ee12 2a90 	vmov	r2, s5
 80153f0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80153f4:	fb92 f3f3 	sdiv	r3, r2, r3
 80153f8:	ee13 2a10 	vmov	r2, s6
 80153fc:	931f      	str	r3, [sp, #124]	; 0x7c
 80153fe:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8015400:	fb92 f3f3 	sdiv	r3, r2, r3
 8015404:	9320      	str	r3, [sp, #128]	; 0x80
 8015406:	9b08      	ldr	r3, [sp, #32]
 8015408:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801540a:	3b01      	subs	r3, #1
 801540c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015410:	9308      	str	r3, [sp, #32]
 8015412:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8015414:	bf08      	it	eq
 8015416:	4613      	moveq	r3, r2
 8015418:	ee16 6a10 	vmov	r6, s12
 801541c:	9306      	str	r3, [sp, #24]
 801541e:	eeb0 3a67 	vmov.f32	s6, s15
 8015422:	eef0 2a47 	vmov.f32	s5, s14
 8015426:	e6e4      	b.n	80151f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8015428:	2900      	cmp	r1, #0
 801542a:	f43f af4e 	beq.w	80152ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801542e:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8015432:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8015436:	9309      	str	r3, [sp, #36]	; 0x24
 8015438:	e747      	b.n	80152ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801543a:	f112 0a01 	adds.w	sl, r2, #1
 801543e:	d481      	bmi.n	8015344 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015440:	4553      	cmp	r3, sl
 8015442:	f6ff af7f 	blt.w	8015344 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015446:	f11c 0a01 	adds.w	sl, ip, #1
 801544a:	f53f af7b 	bmi.w	8015344 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801544e:	45d6      	cmp	lr, sl
 8015450:	f6ff af78 	blt.w	8015344 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015454:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8015458:	b21b      	sxth	r3, r3
 801545a:	fa0f f28e 	sxth.w	r2, lr
 801545e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8015462:	9201      	str	r2, [sp, #4]
 8015464:	9300      	str	r3, [sp, #0]
 8015466:	9a07      	ldr	r2, [sp, #28]
 8015468:	9810      	ldr	r0, [sp, #64]	; 0x40
 801546a:	463b      	mov	r3, r7
 801546c:	4641      	mov	r1, r8
 801546e:	f7ff fe21 	bl	80150b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8015472:	e767      	b.n	8015344 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8015474:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8015476:	9d07      	ldr	r5, [sp, #28]
 8015478:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801547c:	1422      	asrs	r2, r4, #16
 801547e:	1431      	asrs	r1, r6, #16
 8015480:	fb03 2101 	mla	r1, r3, r1, r2
 8015484:	9a07      	ldr	r2, [sp, #28]
 8015486:	440a      	add	r2, r1
 8015488:	5c69      	ldrb	r1, [r5, r1]
 801548a:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801548e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8015492:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8015496:	f1be 0f00 	cmp.w	lr, #0
 801549a:	d05c      	beq.n	8015556 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801549c:	f892 c001 	ldrb.w	ip, [r2, #1]
 80154a0:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 80154a4:	950d      	str	r5, [sp, #52]	; 0x34
 80154a6:	b150      	cbz	r0, 80154be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80154a8:	eb02 0c03 	add.w	ip, r2, r3
 80154ac:	5cd3      	ldrb	r3, [r2, r3]
 80154ae:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80154b2:	930a      	str	r3, [sp, #40]	; 0x28
 80154b4:	f89c 3001 	ldrb.w	r3, [ip, #1]
 80154b8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80154bc:	930e      	str	r3, [sp, #56]	; 0x38
 80154be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80154c0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80154c2:	fb1e f200 	smulbb	r2, lr, r0
 80154c6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80154ca:	10d2      	asrs	r2, r2, #3
 80154cc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80154d0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80154d4:	ea4c 0c03 	orr.w	ip, ip, r3
 80154d8:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80154dc:	9311      	str	r3, [sp, #68]	; 0x44
 80154de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80154e0:	041b      	lsls	r3, r3, #16
 80154e2:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 80154e6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80154ea:	ea43 030b 	orr.w	r3, r3, fp
 80154ee:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80154f0:	4353      	muls	r3, r2
 80154f2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80154f6:	fb05 3c0c 	mla	ip, r5, ip, r3
 80154fa:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80154fe:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8015502:	ea43 0b01 	orr.w	fp, r3, r1
 8015506:	f1c0 0110 	rsb	r1, r0, #16
 801550a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801550c:	eba1 0e0e 	sub.w	lr, r1, lr
 8015510:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8015514:	fb0e cc0b 	mla	ip, lr, fp, ip
 8015518:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801551c:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8015520:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8015524:	ea4b 0e0e 	orr.w	lr, fp, lr
 8015528:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801552c:	fb02 cc0e 	mla	ip, r2, lr, ip
 8015530:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8015534:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8015538:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801553c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8015540:	ea43 0c0c 	orr.w	ip, r3, ip
 8015544:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8015546:	f82a cb02 	strh.w	ip, [sl], #2
 801554a:	441c      	add	r4, r3
 801554c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801554e:	f108 38ff 	add.w	r8, r8, #4294967295
 8015552:	441e      	add	r6, r3
 8015554:	e723      	b.n	801539e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8015556:	2800      	cmp	r0, #0
 8015558:	d0b1      	beq.n	80154be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801555a:	5cd3      	ldrb	r3, [r2, r3]
 801555c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8015560:	930a      	str	r3, [sp, #40]	; 0x28
 8015562:	e7ac      	b.n	80154be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8015564:	b013      	add	sp, #76	; 0x4c
 8015566:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801556a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801556a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801556e:	880d      	ldrh	r5, [r1, #0]
 8015570:	b087      	sub	sp, #28
 8015572:	10ef      	asrs	r7, r5, #3
 8015574:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8015578:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801557c:	00ed      	lsls	r5, r5, #3
 801557e:	9701      	str	r7, [sp, #4]
 8015580:	b2ed      	uxtb	r5, r5
 8015582:	9502      	str	r5, [sp, #8]
 8015584:	9d01      	ldr	r5, [sp, #4]
 8015586:	9103      	str	r1, [sp, #12]
 8015588:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801558c:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8015590:	9902      	ldr	r1, [sp, #8]
 8015592:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8015596:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801559a:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801559e:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 80155a2:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 80155a6:	022d      	lsls	r5, r5, #8
 80155a8:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 80155ac:	fb06 0709 	mla	r7, r6, r9, r0
 80155b0:	430d      	orrs	r5, r1
 80155b2:	2e00      	cmp	r6, #0
 80155b4:	eb02 0c07 	add.w	ip, r2, r7
 80155b8:	9505      	str	r5, [sp, #20]
 80155ba:	f2c0 80b6 	blt.w	801572a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80155be:	45b3      	cmp	fp, r6
 80155c0:	f340 80b3 	ble.w	801572a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80155c4:	2800      	cmp	r0, #0
 80155c6:	f2c0 80ae 	blt.w	8015726 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80155ca:	4581      	cmp	r9, r0
 80155cc:	f340 80ab 	ble.w	8015726 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80155d0:	5dd7      	ldrb	r7, [r2, r7]
 80155d2:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80155d6:	441f      	add	r7, r3
 80155d8:	1c42      	adds	r2, r0, #1
 80155da:	f100 80a9 	bmi.w	8015730 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80155de:	4591      	cmp	r9, r2
 80155e0:	f340 80a6 	ble.w	8015730 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80155e4:	2c00      	cmp	r4, #0
 80155e6:	f000 80a3 	beq.w	8015730 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80155ea:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80155ee:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80155f2:	441d      	add	r5, r3
 80155f4:	3601      	adds	r6, #1
 80155f6:	f100 809f 	bmi.w	8015738 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80155fa:	45b3      	cmp	fp, r6
 80155fc:	f340 809c 	ble.w	8015738 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8015600:	f1be 0f00 	cmp.w	lr, #0
 8015604:	f000 8098 	beq.w	8015738 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8015608:	2800      	cmp	r0, #0
 801560a:	f2c0 8093 	blt.w	8015734 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801560e:	4581      	cmp	r9, r0
 8015610:	f340 8090 	ble.w	8015734 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8015614:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8015618:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801561c:	441e      	add	r6, r3
 801561e:	3001      	adds	r0, #1
 8015620:	f100 808d 	bmi.w	801573e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8015624:	4581      	cmp	r9, r0
 8015626:	f340 808a 	ble.w	801573e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801562a:	2c00      	cmp	r4, #0
 801562c:	f000 8087 	beq.w	801573e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8015630:	44e1      	add	r9, ip
 8015632:	f899 2001 	ldrb.w	r2, [r9, #1]
 8015636:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801563a:	4413      	add	r3, r2
 801563c:	b2a4      	uxth	r4, r4
 801563e:	fa1f fe8e 	uxth.w	lr, lr
 8015642:	fb04 fb0e 	mul.w	fp, r4, lr
 8015646:	0124      	lsls	r4, r4, #4
 8015648:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801564c:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8015650:	eba4 040b 	sub.w	r4, r4, fp
 8015654:	fa1f f08e 	uxth.w	r0, lr
 8015658:	b2a2      	uxth	r2, r4
 801565a:	78ac      	ldrb	r4, [r5, #2]
 801565c:	f897 c002 	ldrb.w	ip, [r7, #2]
 8015660:	9901      	ldr	r1, [sp, #4]
 8015662:	eba9 0900 	sub.w	r9, r9, r0
 8015666:	fa1f f989 	uxth.w	r9, r9
 801566a:	4354      	muls	r4, r2
 801566c:	fb09 440c 	mla	r4, r9, ip, r4
 8015670:	f896 c002 	ldrb.w	ip, [r6, #2]
 8015674:	fb00 440c 	mla	r4, r0, ip, r4
 8015678:	f893 c002 	ldrb.w	ip, [r3, #2]
 801567c:	fa1f fe88 	uxth.w	lr, r8
 8015680:	ea6f 0808 	mvn.w	r8, r8
 8015684:	fa5f f888 	uxtb.w	r8, r8
 8015688:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801568c:	fb1a fa08 	smulbb	sl, sl, r8
 8015690:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8015694:	fb0c ac0e 	mla	ip, ip, lr, sl
 8015698:	f895 a001 	ldrb.w	sl, [r5, #1]
 801569c:	787c      	ldrb	r4, [r7, #1]
 801569e:	782d      	ldrb	r5, [r5, #0]
 80156a0:	783f      	ldrb	r7, [r7, #0]
 80156a2:	fb02 fa0a 	mul.w	sl, r2, sl
 80156a6:	fb09 aa04 	mla	sl, r9, r4, sl
 80156aa:	7874      	ldrb	r4, [r6, #1]
 80156ac:	436a      	muls	r2, r5
 80156ae:	7835      	ldrb	r5, [r6, #0]
 80156b0:	fb00 aa04 	mla	sl, r0, r4, sl
 80156b4:	fb09 2207 	mla	r2, r9, r7, r2
 80156b8:	785c      	ldrb	r4, [r3, #1]
 80156ba:	781b      	ldrb	r3, [r3, #0]
 80156bc:	fb00 2005 	mla	r0, r0, r5, r2
 80156c0:	fb0b a404 	mla	r4, fp, r4, sl
 80156c4:	fb0b 0b03 	mla	fp, fp, r3, r0
 80156c8:	9b02      	ldr	r3, [sp, #8]
 80156ca:	fb11 fa08 	smulbb	sl, r1, r8
 80156ce:	fa1f fc8c 	uxth.w	ip, ip
 80156d2:	fb13 f808 	smulbb	r8, r3, r8
 80156d6:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 80156da:	f3c4 2407 	ubfx	r4, r4, #8, #8
 80156de:	fb04 a40e 	mla	r4, r4, lr, sl
 80156e2:	f10c 0301 	add.w	r3, ip, #1
 80156e6:	fb0b 8e0e 	mla	lr, fp, lr, r8
 80156ea:	fa1f fe8e 	uxth.w	lr, lr
 80156ee:	b2a4      	uxth	r4, r4
 80156f0:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80156f4:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 80156f8:	f104 0a01 	add.w	sl, r4, #1
 80156fc:	f10e 0c01 	add.w	ip, lr, #1
 8015700:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8015704:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8015708:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801570c:	0964      	lsrs	r4, r4, #5
 801570e:	ea4c 0c03 	orr.w	ip, ip, r3
 8015712:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8015716:	9b03      	ldr	r3, [sp, #12]
 8015718:	ea4c 0c04 	orr.w	ip, ip, r4
 801571c:	f8a3 c000 	strh.w	ip, [r3]
 8015720:	b007      	add	sp, #28
 8015722:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015726:	af05      	add	r7, sp, #20
 8015728:	e756      	b.n	80155d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801572a:	ad05      	add	r5, sp, #20
 801572c:	462f      	mov	r7, r5
 801572e:	e761      	b.n	80155f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8015730:	ad05      	add	r5, sp, #20
 8015732:	e75f      	b.n	80155f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8015734:	ae05      	add	r6, sp, #20
 8015736:	e772      	b.n	801561e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8015738:	ab05      	add	r3, sp, #20
 801573a:	461e      	mov	r6, r3
 801573c:	e77e      	b.n	801563c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801573e:	ab05      	add	r3, sp, #20
 8015740:	e77c      	b.n	801563c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08015742 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015742:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015746:	b095      	sub	sp, #84	; 0x54
 8015748:	9212      	str	r2, [sp, #72]	; 0x48
 801574a:	9309      	str	r3, [sp, #36]	; 0x24
 801574c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801574e:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8015752:	930f      	str	r3, [sp, #60]	; 0x3c
 8015754:	910e      	str	r1, [sp, #56]	; 0x38
 8015756:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801575a:	9013      	str	r0, [sp, #76]	; 0x4c
 801575c:	6850      	ldr	r0, [r2, #4]
 801575e:	6812      	ldr	r2, [r2, #0]
 8015760:	fb00 1303 	mla	r3, r0, r3, r1
 8015764:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015768:	930a      	str	r3, [sp, #40]	; 0x28
 801576a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801576c:	681b      	ldr	r3, [r3, #0]
 801576e:	930d      	str	r3, [sp, #52]	; 0x34
 8015770:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015772:	685c      	ldr	r4, [r3, #4]
 8015774:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015776:	43db      	mvns	r3, r3
 8015778:	b2db      	uxtb	r3, r3
 801577a:	3404      	adds	r4, #4
 801577c:	930b      	str	r3, [sp, #44]	; 0x2c
 801577e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015780:	2b00      	cmp	r3, #0
 8015782:	dc03      	bgt.n	801578c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8015784:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015786:	2b00      	cmp	r3, #0
 8015788:	f340 8255 	ble.w	8015c36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801578c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801578e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015792:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015796:	1e48      	subs	r0, r1, #1
 8015798:	1e55      	subs	r5, r2, #1
 801579a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801579c:	2b00      	cmp	r3, #0
 801579e:	f340 80f9 	ble.w	8015994 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80157a2:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80157a4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80157a6:	1436      	asrs	r6, r6, #16
 80157a8:	ea4f 4323 	mov.w	r3, r3, asr #16
 80157ac:	d406      	bmi.n	80157bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80157ae:	4286      	cmp	r6, r0
 80157b0:	da04      	bge.n	80157bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80157b2:	2b00      	cmp	r3, #0
 80157b4:	db02      	blt.n	80157bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80157b6:	42ab      	cmp	r3, r5
 80157b8:	f2c0 80ed 	blt.w	8015996 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 80157bc:	3601      	adds	r6, #1
 80157be:	f100 80da 	bmi.w	8015976 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80157c2:	42b1      	cmp	r1, r6
 80157c4:	f2c0 80d7 	blt.w	8015976 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80157c8:	3301      	adds	r3, #1
 80157ca:	f100 80d4 	bmi.w	8015976 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80157ce:	429a      	cmp	r2, r3
 80157d0:	f2c0 80d1 	blt.w	8015976 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80157d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80157d6:	9311      	str	r3, [sp, #68]	; 0x44
 80157d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80157da:	930c      	str	r3, [sp, #48]	; 0x30
 80157dc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80157de:	2b00      	cmp	r3, #0
 80157e0:	f340 80fa 	ble.w	80159d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 80157e4:	9826      	ldr	r0, [sp, #152]	; 0x98
 80157e6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80157e8:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80157ea:	68c6      	ldr	r6, [r0, #12]
 80157ec:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80157ee:	141d      	asrs	r5, r3, #16
 80157f0:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80157f4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80157f6:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80157f8:	1400      	asrs	r0, r0, #16
 80157fa:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80157fe:	6892      	ldr	r2, [r2, #8]
 8015800:	f100 813e 	bmi.w	8015a80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8015804:	1e57      	subs	r7, r2, #1
 8015806:	42b8      	cmp	r0, r7
 8015808:	f280 813a 	bge.w	8015a80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801580c:	2d00      	cmp	r5, #0
 801580e:	f2c0 8137 	blt.w	8015a80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8015812:	1e77      	subs	r7, r6, #1
 8015814:	42bd      	cmp	r5, r7
 8015816:	f280 8133 	bge.w	8015a80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801581a:	b212      	sxth	r2, r2
 801581c:	fb05 0002 	mla	r0, r5, r2, r0
 8015820:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8015822:	f815 a000 	ldrb.w	sl, [r5, r0]
 8015826:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801582a:	182e      	adds	r6, r5, r0
 801582c:	eb04 050a 	add.w	r5, r4, sl
 8015830:	2b00      	cmp	r3, #0
 8015832:	f000 8117 	beq.w	8015a64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8015836:	f896 c001 	ldrb.w	ip, [r6, #1]
 801583a:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801583e:	44a4      	add	ip, r4
 8015840:	2900      	cmp	r1, #0
 8015842:	f000 8117 	beq.w	8015a74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8015846:	18b0      	adds	r0, r6, r2
 8015848:	5cb2      	ldrb	r2, [r6, r2]
 801584a:	7840      	ldrb	r0, [r0, #1]
 801584c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015850:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015854:	4422      	add	r2, r4
 8015856:	4420      	add	r0, r4
 8015858:	b29b      	uxth	r3, r3
 801585a:	b289      	uxth	r1, r1
 801585c:	fb03 f901 	mul.w	r9, r3, r1
 8015860:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015864:	011b      	lsls	r3, r3, #4
 8015866:	b289      	uxth	r1, r1
 8015868:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801586c:	f895 b002 	ldrb.w	fp, [r5, #2]
 8015870:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8015872:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8015876:	f8b6 e000 	ldrh.w	lr, [r6]
 801587a:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801587e:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8015882:	eba3 0309 	sub.w	r3, r3, r9
 8015886:	b29b      	uxth	r3, r3
 8015888:	eba8 0801 	sub.w	r8, r8, r1
 801588c:	fa1f f888 	uxth.w	r8, r8
 8015890:	435f      	muls	r7, r3
 8015892:	fb08 770b 	mla	r7, r8, fp, r7
 8015896:	f892 b002 	ldrb.w	fp, [r2, #2]
 801589a:	9310      	str	r3, [sp, #64]	; 0x40
 801589c:	fb01 770b 	mla	r7, r1, fp, r7
 80158a0:	f890 b002 	ldrb.w	fp, [r0, #2]
 80158a4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80158a6:	fb09 770b 	mla	r7, r9, fp, r7
 80158aa:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80158ae:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80158b2:	fb1b fb03 	smulbb	fp, fp, r3
 80158b6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80158ba:	fb07 b706 	mla	r7, r7, r6, fp
 80158be:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80158c0:	f895 b001 	ldrb.w	fp, [r5, #1]
 80158c4:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80158c8:	f89c c000 	ldrb.w	ip, [ip]
 80158cc:	435d      	muls	r5, r3
 80158ce:	fb08 550b 	mla	r5, r8, fp, r5
 80158d2:	f892 b001 	ldrb.w	fp, [r2, #1]
 80158d6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80158d8:	fb01 550b 	mla	r5, r1, fp, r5
 80158dc:	f890 b001 	ldrb.w	fp, [r0, #1]
 80158e0:	fb09 550b 	mla	r5, r9, fp, r5
 80158e4:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80158e8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80158ec:	fb1b fb03 	smulbb	fp, fp, r3
 80158f0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80158f2:	fb03 f30c 	mul.w	r3, r3, ip
 80158f6:	f892 c000 	ldrb.w	ip, [r2]
 80158fa:	fb08 330a 	mla	r3, r8, sl, r3
 80158fe:	fb01 330c 	mla	r3, r1, ip, r3
 8015902:	f890 c000 	ldrb.w	ip, [r0]
 8015906:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801590a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801590e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015910:	fa5f fe8e 	uxtb.w	lr, lr
 8015914:	b2bf      	uxth	r7, r7
 8015916:	fb1e fe03 	smulbb	lr, lr, r3
 801591a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801591e:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8015922:	fb05 b506 	mla	r5, r5, r6, fp
 8015926:	1c7b      	adds	r3, r7, #1
 8015928:	fb0c e606 	mla	r6, ip, r6, lr
 801592c:	b2ad      	uxth	r5, r5
 801592e:	b2b6      	uxth	r6, r6
 8015930:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8015934:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8015938:	f105 0b01 	add.w	fp, r5, #1
 801593c:	1c77      	adds	r7, r6, #1
 801593e:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8015942:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8015946:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801594a:	096d      	lsrs	r5, r5, #5
 801594c:	431f      	orrs	r7, r3
 801594e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015952:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015954:	433d      	orrs	r5, r7
 8015956:	801d      	strh	r5, [r3, #0]
 8015958:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801595a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801595c:	3302      	adds	r3, #2
 801595e:	930c      	str	r3, [sp, #48]	; 0x30
 8015960:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8015962:	4413      	add	r3, r2
 8015964:	931f      	str	r3, [sp, #124]	; 0x7c
 8015966:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8015968:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801596a:	4413      	add	r3, r2
 801596c:	9320      	str	r3, [sp, #128]	; 0x80
 801596e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015970:	3b01      	subs	r3, #1
 8015972:	9311      	str	r3, [sp, #68]	; 0x44
 8015974:	e732      	b.n	80157dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8015976:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8015978:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801597a:	4433      	add	r3, r6
 801597c:	931f      	str	r3, [sp, #124]	; 0x7c
 801597e:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8015980:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015982:	4433      	add	r3, r6
 8015984:	9320      	str	r3, [sp, #128]	; 0x80
 8015986:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015988:	3b01      	subs	r3, #1
 801598a:	9309      	str	r3, [sp, #36]	; 0x24
 801598c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801598e:	3302      	adds	r3, #2
 8015990:	930a      	str	r3, [sp, #40]	; 0x28
 8015992:	e702      	b.n	801579a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8015994:	d027      	beq.n	80159e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8015996:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015998:	9821      	ldr	r0, [sp, #132]	; 0x84
 801599a:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801599c:	3b01      	subs	r3, #1
 801599e:	fb00 5003 	mla	r0, r0, r3, r5
 80159a2:	1400      	asrs	r0, r0, #16
 80159a4:	f53f af16 	bmi.w	80157d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80159a8:	3901      	subs	r1, #1
 80159aa:	4288      	cmp	r0, r1
 80159ac:	f6bf af12 	bge.w	80157d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80159b0:	9922      	ldr	r1, [sp, #136]	; 0x88
 80159b2:	9820      	ldr	r0, [sp, #128]	; 0x80
 80159b4:	fb01 0303 	mla	r3, r1, r3, r0
 80159b8:	141b      	asrs	r3, r3, #16
 80159ba:	f53f af0b 	bmi.w	80157d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80159be:	3a01      	subs	r2, #1
 80159c0:	4293      	cmp	r3, r2
 80159c2:	f6bf af07 	bge.w	80157d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80159c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80159c8:	9311      	str	r3, [sp, #68]	; 0x44
 80159ca:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 80159ce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80159d0:	930c      	str	r3, [sp, #48]	; 0x30
 80159d2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80159d4:	2b00      	cmp	r3, #0
 80159d6:	dc70      	bgt.n	8015aba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80159d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80159da:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80159dc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80159e0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80159e4:	930a      	str	r3, [sp, #40]	; 0x28
 80159e6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80159e8:	2b00      	cmp	r3, #0
 80159ea:	f340 8124 	ble.w	8015c36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80159ee:	ee30 0a04 	vadd.f32	s0, s0, s8
 80159f2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80159f6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80159fa:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80159fc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015a00:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015a04:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015a08:	eef0 6a62 	vmov.f32	s13, s5
 8015a0c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015a10:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015a14:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015a18:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8015a1c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015a20:	eef0 6a43 	vmov.f32	s13, s6
 8015a24:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015a28:	ee12 2a90 	vmov	r2, s5
 8015a2c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015a30:	fb92 f3f3 	sdiv	r3, r2, r3
 8015a34:	ee13 2a10 	vmov	r2, s6
 8015a38:	9321      	str	r3, [sp, #132]	; 0x84
 8015a3a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8015a3c:	fb92 f3f3 	sdiv	r3, r2, r3
 8015a40:	9322      	str	r3, [sp, #136]	; 0x88
 8015a42:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015a44:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015a46:	3b01      	subs	r3, #1
 8015a48:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015a4c:	930e      	str	r3, [sp, #56]	; 0x38
 8015a4e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8015a50:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 8015a54:	bf08      	it	eq
 8015a56:	4613      	moveq	r3, r2
 8015a58:	9309      	str	r3, [sp, #36]	; 0x24
 8015a5a:	eeb0 3a67 	vmov.f32	s6, s15
 8015a5e:	eef0 2a47 	vmov.f32	s5, s14
 8015a62:	e68c      	b.n	801577e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015a64:	b149      	cbz	r1, 8015a7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8015a66:	5cb2      	ldrb	r2, [r6, r2]
 8015a68:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015a6c:	4422      	add	r2, r4
 8015a6e:	4628      	mov	r0, r5
 8015a70:	46ac      	mov	ip, r5
 8015a72:	e6f1      	b.n	8015858 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8015a74:	4628      	mov	r0, r5
 8015a76:	462a      	mov	r2, r5
 8015a78:	e6ee      	b.n	8015858 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8015a7a:	4628      	mov	r0, r5
 8015a7c:	462a      	mov	r2, r5
 8015a7e:	e7f7      	b.n	8015a70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8015a80:	1c47      	adds	r7, r0, #1
 8015a82:	f53f af69 	bmi.w	8015958 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8015a86:	42ba      	cmp	r2, r7
 8015a88:	f6ff af66 	blt.w	8015958 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8015a8c:	1c6f      	adds	r7, r5, #1
 8015a8e:	f53f af63 	bmi.w	8015958 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8015a92:	42be      	cmp	r6, r7
 8015a94:	f6ff af60 	blt.w	8015958 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8015a98:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8015a9a:	9002      	str	r0, [sp, #8]
 8015a9c:	b236      	sxth	r6, r6
 8015a9e:	b212      	sxth	r2, r2
 8015aa0:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8015aa4:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8015aa8:	9200      	str	r2, [sp, #0]
 8015aaa:	9601      	str	r6, [sp, #4]
 8015aac:	4623      	mov	r3, r4
 8015aae:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8015ab2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015ab4:	f7ff fd59 	bl	801556a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8015ab8:	e74e      	b.n	8015958 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8015aba:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8015abc:	9820      	ldr	r0, [sp, #128]	; 0x80
 8015abe:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8015ac0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8015ac2:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8015ac6:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8015ac8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8015acc:	142d      	asrs	r5, r5, #16
 8015ace:	1400      	asrs	r0, r0, #16
 8015ad0:	fb02 5000 	mla	r0, r2, r0, r5
 8015ad4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8015ad6:	f815 9000 	ldrb.w	r9, [r5, r0]
 8015ada:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8015ade:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8015ae2:	182e      	adds	r6, r5, r0
 8015ae4:	eb04 0509 	add.w	r5, r4, r9
 8015ae8:	2b00      	cmp	r3, #0
 8015aea:	f000 8096 	beq.w	8015c1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8015aee:	7877      	ldrb	r7, [r6, #1]
 8015af0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8015af4:	4427      	add	r7, r4
 8015af6:	2900      	cmp	r1, #0
 8015af8:	f000 8097 	beq.w	8015c2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8015afc:	18b0      	adds	r0, r6, r2
 8015afe:	5cb2      	ldrb	r2, [r6, r2]
 8015b00:	7840      	ldrb	r0, [r0, #1]
 8015b02:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015b06:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015b0a:	4422      	add	r2, r4
 8015b0c:	4420      	add	r0, r4
 8015b0e:	b29b      	uxth	r3, r3
 8015b10:	b289      	uxth	r1, r1
 8015b12:	fb03 f801 	mul.w	r8, r3, r1
 8015b16:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8015b18:	f895 b002 	ldrb.w	fp, [r5, #2]
 8015b1c:	f8b6 c000 	ldrh.w	ip, [r6]
 8015b20:	78be      	ldrb	r6, [r7, #2]
 8015b22:	f814 9009 	ldrb.w	r9, [r4, r9]
 8015b26:	011b      	lsls	r3, r3, #4
 8015b28:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8015b2c:	b289      	uxth	r1, r1
 8015b2e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8015b32:	eba3 0308 	sub.w	r3, r3, r8
 8015b36:	b29b      	uxth	r3, r3
 8015b38:	ebae 0e01 	sub.w	lr, lr, r1
 8015b3c:	fa1f fe8e 	uxth.w	lr, lr
 8015b40:	435e      	muls	r6, r3
 8015b42:	fb0e 660b 	mla	r6, lr, fp, r6
 8015b46:	f892 b002 	ldrb.w	fp, [r2, #2]
 8015b4a:	9310      	str	r3, [sp, #64]	; 0x40
 8015b4c:	fb01 660b 	mla	r6, r1, fp, r6
 8015b50:	f890 b002 	ldrb.w	fp, [r0, #2]
 8015b54:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015b56:	fb08 660b 	mla	r6, r8, fp, r6
 8015b5a:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8015b5e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8015b62:	fb1b fb03 	smulbb	fp, fp, r3
 8015b66:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8015b6a:	fb06 b60a 	mla	r6, r6, sl, fp
 8015b6e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015b70:	f895 b001 	ldrb.w	fp, [r5, #1]
 8015b74:	787d      	ldrb	r5, [r7, #1]
 8015b76:	783f      	ldrb	r7, [r7, #0]
 8015b78:	435d      	muls	r5, r3
 8015b7a:	fb0e 550b 	mla	r5, lr, fp, r5
 8015b7e:	f892 b001 	ldrb.w	fp, [r2, #1]
 8015b82:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015b84:	fb01 550b 	mla	r5, r1, fp, r5
 8015b88:	f890 b001 	ldrb.w	fp, [r0, #1]
 8015b8c:	fb08 550b 	mla	r5, r8, fp, r5
 8015b90:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8015b94:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8015b98:	fb1b fb03 	smulbb	fp, fp, r3
 8015b9c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015b9e:	437b      	muls	r3, r7
 8015ba0:	7817      	ldrb	r7, [r2, #0]
 8015ba2:	fb0e 3309 	mla	r3, lr, r9, r3
 8015ba6:	fb01 3307 	mla	r3, r1, r7, r3
 8015baa:	7807      	ldrb	r7, [r0, #0]
 8015bac:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015bb0:	fb08 3707 	mla	r7, r8, r7, r3
 8015bb4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015bb6:	fa5f fc8c 	uxtb.w	ip, ip
 8015bba:	fb1c fc03 	smulbb	ip, ip, r3
 8015bbe:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8015bc2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8015bc6:	fb05 b50a 	mla	r5, r5, sl, fp
 8015bca:	fb07 c70a 	mla	r7, r7, sl, ip
 8015bce:	b2b6      	uxth	r6, r6
 8015bd0:	b2ad      	uxth	r5, r5
 8015bd2:	b2bf      	uxth	r7, r7
 8015bd4:	1c73      	adds	r3, r6, #1
 8015bd6:	1c7a      	adds	r2, r7, #1
 8015bd8:	f105 0b01 	add.w	fp, r5, #1
 8015bdc:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8015be0:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8015be4:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8015be8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015bec:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8015bf0:	096d      	lsrs	r5, r5, #5
 8015bf2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015bf4:	4316      	orrs	r6, r2
 8015bf6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015bfa:	432e      	orrs	r6, r5
 8015bfc:	f823 6b02 	strh.w	r6, [r3], #2
 8015c00:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8015c02:	930c      	str	r3, [sp, #48]	; 0x30
 8015c04:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8015c06:	4413      	add	r3, r2
 8015c08:	931f      	str	r3, [sp, #124]	; 0x7c
 8015c0a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8015c0c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015c0e:	4413      	add	r3, r2
 8015c10:	9320      	str	r3, [sp, #128]	; 0x80
 8015c12:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015c14:	3b01      	subs	r3, #1
 8015c16:	9311      	str	r3, [sp, #68]	; 0x44
 8015c18:	e6db      	b.n	80159d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8015c1a:	b149      	cbz	r1, 8015c30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8015c1c:	5cb2      	ldrb	r2, [r6, r2]
 8015c1e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015c22:	4422      	add	r2, r4
 8015c24:	4628      	mov	r0, r5
 8015c26:	462f      	mov	r7, r5
 8015c28:	e771      	b.n	8015b0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8015c2a:	4628      	mov	r0, r5
 8015c2c:	462a      	mov	r2, r5
 8015c2e:	e76e      	b.n	8015b0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8015c30:	4628      	mov	r0, r5
 8015c32:	462a      	mov	r2, r5
 8015c34:	e7f7      	b.n	8015c26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8015c36:	b015      	add	sp, #84	; 0x54
 8015c38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015c3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8015c3c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015c40:	880f      	ldrh	r7, [r1, #0]
 8015c42:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8015c46:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8015c4a:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8015c4e:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8015c52:	023c      	lsls	r4, r7, #8
 8015c54:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8015c58:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8015c5c:	017c      	lsls	r4, r7, #5
 8015c5e:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8015c62:	00ff      	lsls	r7, r7, #3
 8015c64:	ea4b 0404 	orr.w	r4, fp, r4
 8015c68:	b2ff      	uxtb	r7, r7
 8015c6a:	fb05 ca0e 	mla	sl, r5, lr, ip
 8015c6e:	4327      	orrs	r7, r4
 8015c70:	2d00      	cmp	r5, #0
 8015c72:	eb02 080a 	add.w	r8, r2, sl
 8015c76:	9701      	str	r7, [sp, #4]
 8015c78:	db7e      	blt.n	8015d78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8015c7a:	45a9      	cmp	r9, r5
 8015c7c:	dd7c      	ble.n	8015d78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8015c7e:	f1bc 0f00 	cmp.w	ip, #0
 8015c82:	db77      	blt.n	8015d74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8015c84:	45e6      	cmp	lr, ip
 8015c86:	dd75      	ble.n	8015d74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8015c88:	f812 700a 	ldrb.w	r7, [r2, sl]
 8015c8c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8015c90:	441f      	add	r7, r3
 8015c92:	f11c 0201 	adds.w	r2, ip, #1
 8015c96:	d472      	bmi.n	8015d7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8015c98:	4596      	cmp	lr, r2
 8015c9a:	dd70      	ble.n	8015d7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8015c9c:	2800      	cmp	r0, #0
 8015c9e:	d06e      	beq.n	8015d7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8015ca0:	f898 4001 	ldrb.w	r4, [r8, #1]
 8015ca4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8015ca8:	441c      	add	r4, r3
 8015caa:	3501      	adds	r5, #1
 8015cac:	d46b      	bmi.n	8015d86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8015cae:	45a9      	cmp	r9, r5
 8015cb0:	dd69      	ble.n	8015d86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8015cb2:	2e00      	cmp	r6, #0
 8015cb4:	d067      	beq.n	8015d86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8015cb6:	f1bc 0f00 	cmp.w	ip, #0
 8015cba:	db62      	blt.n	8015d82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8015cbc:	45e6      	cmp	lr, ip
 8015cbe:	dd60      	ble.n	8015d82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8015cc0:	f818 500e 	ldrb.w	r5, [r8, lr]
 8015cc4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8015cc8:	441d      	add	r5, r3
 8015cca:	f11c 0201 	adds.w	r2, ip, #1
 8015cce:	d45d      	bmi.n	8015d8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8015cd0:	4596      	cmp	lr, r2
 8015cd2:	dd5b      	ble.n	8015d8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8015cd4:	2800      	cmp	r0, #0
 8015cd6:	d059      	beq.n	8015d8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8015cd8:	44c6      	add	lr, r8
 8015cda:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8015cde:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015ce2:	4413      	add	r3, r2
 8015ce4:	b280      	uxth	r0, r0
 8015ce6:	b2b2      	uxth	r2, r6
 8015ce8:	fb00 f602 	mul.w	r6, r0, r2
 8015cec:	0100      	lsls	r0, r0, #4
 8015cee:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8015cf2:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 8015cf6:	1b80      	subs	r0, r0, r6
 8015cf8:	fa1f fc82 	uxth.w	ip, r2
 8015cfc:	b282      	uxth	r2, r0
 8015cfe:	78a0      	ldrb	r0, [r4, #2]
 8015d00:	f897 e002 	ldrb.w	lr, [r7, #2]
 8015d04:	f897 9000 	ldrb.w	r9, [r7]
 8015d08:	787f      	ldrb	r7, [r7, #1]
 8015d0a:	eba8 080c 	sub.w	r8, r8, ip
 8015d0e:	fa1f f888 	uxth.w	r8, r8
 8015d12:	4350      	muls	r0, r2
 8015d14:	fb08 0e0e 	mla	lr, r8, lr, r0
 8015d18:	78a8      	ldrb	r0, [r5, #2]
 8015d1a:	fb0c e000 	mla	r0, ip, r0, lr
 8015d1e:	f893 e002 	ldrb.w	lr, [r3, #2]
 8015d22:	fb06 0e0e 	mla	lr, r6, lr, r0
 8015d26:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8015d2a:	f894 e000 	ldrb.w	lr, [r4]
 8015d2e:	fb02 fe0e 	mul.w	lr, r2, lr
 8015d32:	fb08 e909 	mla	r9, r8, r9, lr
 8015d36:	f895 e000 	ldrb.w	lr, [r5]
 8015d3a:	fb0c 990e 	mla	r9, ip, lr, r9
 8015d3e:	f893 e000 	ldrb.w	lr, [r3]
 8015d42:	785b      	ldrb	r3, [r3, #1]
 8015d44:	fb06 9e0e 	mla	lr, r6, lr, r9
 8015d48:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8015d4c:	ea4e 0e00 	orr.w	lr, lr, r0
 8015d50:	7860      	ldrb	r0, [r4, #1]
 8015d52:	4350      	muls	r0, r2
 8015d54:	786a      	ldrb	r2, [r5, #1]
 8015d56:	fb08 0007 	mla	r0, r8, r7, r0
 8015d5a:	fb0c 0202 	mla	r2, ip, r2, r0
 8015d5e:	fb06 2303 	mla	r3, r6, r3, r2
 8015d62:	095b      	lsrs	r3, r3, #5
 8015d64:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015d68:	ea4e 0303 	orr.w	r3, lr, r3
 8015d6c:	800b      	strh	r3, [r1, #0]
 8015d6e:	b003      	add	sp, #12
 8015d70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015d74:	af01      	add	r7, sp, #4
 8015d76:	e78c      	b.n	8015c92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8015d78:	ac01      	add	r4, sp, #4
 8015d7a:	4627      	mov	r7, r4
 8015d7c:	e795      	b.n	8015caa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8015d7e:	ac01      	add	r4, sp, #4
 8015d80:	e793      	b.n	8015caa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8015d82:	ad01      	add	r5, sp, #4
 8015d84:	e7a1      	b.n	8015cca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8015d86:	ab01      	add	r3, sp, #4
 8015d88:	461d      	mov	r5, r3
 8015d8a:	e7ab      	b.n	8015ce4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8015d8c:	ab01      	add	r3, sp, #4
 8015d8e:	e7a9      	b.n	8015ce4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08015d90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015d90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d94:	b08f      	sub	sp, #60	; 0x3c
 8015d96:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8015d9a:	920c      	str	r2, [sp, #48]	; 0x30
 8015d9c:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8015d9e:	910a      	str	r1, [sp, #40]	; 0x28
 8015da0:	9306      	str	r3, [sp, #24]
 8015da2:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 8015da6:	900d      	str	r0, [sp, #52]	; 0x34
 8015da8:	6850      	ldr	r0, [r2, #4]
 8015daa:	6812      	ldr	r2, [r2, #0]
 8015dac:	fb00 1303 	mla	r3, r0, r3, r1
 8015db0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015db4:	9307      	str	r3, [sp, #28]
 8015db6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015db8:	681b      	ldr	r3, [r3, #0]
 8015dba:	9308      	str	r3, [sp, #32]
 8015dbc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015dbe:	685c      	ldr	r4, [r3, #4]
 8015dc0:	3404      	adds	r4, #4
 8015dc2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015dc4:	2b00      	cmp	r3, #0
 8015dc6:	dc03      	bgt.n	8015dd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015dc8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015dca:	2b00      	cmp	r3, #0
 8015dcc:	f340 81d6 	ble.w	801617c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8015dd0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8015dd2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015dd6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015dda:	1e48      	subs	r0, r1, #1
 8015ddc:	1e56      	subs	r6, r2, #1
 8015dde:	9b06      	ldr	r3, [sp, #24]
 8015de0:	2b00      	cmp	r3, #0
 8015de2:	f340 80b7 	ble.w	8015f54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8015de6:	ea5f 472b 	movs.w	r7, fp, asr #16
 8015dea:	ea4f 4325 	mov.w	r3, r5, asr #16
 8015dee:	d406      	bmi.n	8015dfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015df0:	4287      	cmp	r7, r0
 8015df2:	da04      	bge.n	8015dfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015df4:	2b00      	cmp	r3, #0
 8015df6:	db02      	blt.n	8015dfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015df8:	42b3      	cmp	r3, r6
 8015dfa:	f2c0 80ac 	blt.w	8015f56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8015dfe:	3701      	adds	r7, #1
 8015e00:	f100 809d 	bmi.w	8015f3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8015e04:	42b9      	cmp	r1, r7
 8015e06:	f2c0 809a 	blt.w	8015f3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8015e0a:	3301      	adds	r3, #1
 8015e0c:	f100 8097 	bmi.w	8015f3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8015e10:	429a      	cmp	r2, r3
 8015e12:	f2c0 8094 	blt.w	8015f3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8015e16:	9b06      	ldr	r3, [sp, #24]
 8015e18:	930b      	str	r3, [sp, #44]	; 0x2c
 8015e1a:	9b07      	ldr	r3, [sp, #28]
 8015e1c:	9309      	str	r3, [sp, #36]	; 0x24
 8015e1e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015e20:	2b00      	cmp	r3, #0
 8015e22:	f340 80b5 	ble.w	8015f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8015e26:	9820      	ldr	r0, [sp, #128]	; 0x80
 8015e28:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8015e2a:	68c7      	ldr	r7, [r0, #12]
 8015e2c:	6892      	ldr	r2, [r2, #8]
 8015e2e:	ea5f 402b 	movs.w	r0, fp, asr #16
 8015e32:	ea4f 4625 	mov.w	r6, r5, asr #16
 8015e36:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8015e3a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8015e3e:	f100 80fb 	bmi.w	8016038 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8015e42:	f102 3cff 	add.w	ip, r2, #4294967295
 8015e46:	4560      	cmp	r0, ip
 8015e48:	f280 80f6 	bge.w	8016038 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8015e4c:	2e00      	cmp	r6, #0
 8015e4e:	f2c0 80f3 	blt.w	8016038 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8015e52:	f107 3cff 	add.w	ip, r7, #4294967295
 8015e56:	4566      	cmp	r6, ip
 8015e58:	f280 80ee 	bge.w	8016038 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8015e5c:	b212      	sxth	r2, r2
 8015e5e:	fb06 0002 	mla	r0, r6, r2, r0
 8015e62:	9e08      	ldr	r6, [sp, #32]
 8015e64:	1837      	adds	r7, r6, r0
 8015e66:	5c30      	ldrb	r0, [r6, r0]
 8015e68:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8015e6c:	eb04 0c08 	add.w	ip, r4, r8
 8015e70:	2b00      	cmp	r3, #0
 8015e72:	f000 80d3 	beq.w	801601c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8015e76:	787e      	ldrb	r6, [r7, #1]
 8015e78:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015e7c:	4426      	add	r6, r4
 8015e7e:	2900      	cmp	r1, #0
 8015e80:	f000 80d4 	beq.w	801602c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8015e84:	18b8      	adds	r0, r7, r2
 8015e86:	5cba      	ldrb	r2, [r7, r2]
 8015e88:	7840      	ldrb	r0, [r0, #1]
 8015e8a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015e8e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015e92:	4422      	add	r2, r4
 8015e94:	4420      	add	r0, r4
 8015e96:	b29b      	uxth	r3, r3
 8015e98:	b289      	uxth	r1, r1
 8015e9a:	fb03 f901 	mul.w	r9, r3, r1
 8015e9e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8015ea2:	011b      	lsls	r3, r3, #4
 8015ea4:	b289      	uxth	r1, r1
 8015ea6:	78b7      	ldrb	r7, [r6, #2]
 8015ea8:	f89c a002 	ldrb.w	sl, [ip, #2]
 8015eac:	f89c c001 	ldrb.w	ip, [ip, #1]
 8015eb0:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8015eb4:	eba3 0309 	sub.w	r3, r3, r9
 8015eb8:	b29b      	uxth	r3, r3
 8015eba:	ebae 0e01 	sub.w	lr, lr, r1
 8015ebe:	fa1f fe8e 	uxth.w	lr, lr
 8015ec2:	435f      	muls	r7, r3
 8015ec4:	fb0e 770a 	mla	r7, lr, sl, r7
 8015ec8:	f892 a002 	ldrb.w	sl, [r2, #2]
 8015ecc:	fb01 770a 	mla	r7, r1, sl, r7
 8015ed0:	f890 a002 	ldrb.w	sl, [r0, #2]
 8015ed4:	fb09 7a0a 	mla	sl, r9, sl, r7
 8015ed8:	f814 7008 	ldrb.w	r7, [r4, r8]
 8015edc:	f896 8000 	ldrb.w	r8, [r6]
 8015ee0:	7876      	ldrb	r6, [r6, #1]
 8015ee2:	fb03 f808 	mul.w	r8, r3, r8
 8015ee6:	fb0e 8807 	mla	r8, lr, r7, r8
 8015eea:	7817      	ldrb	r7, [r2, #0]
 8015eec:	fb01 8807 	mla	r8, r1, r7, r8
 8015ef0:	7807      	ldrb	r7, [r0, #0]
 8015ef2:	fb09 8707 	mla	r7, r9, r7, r8
 8015ef6:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8015efa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015efe:	ea47 070a 	orr.w	r7, r7, sl
 8015f02:	4373      	muls	r3, r6
 8015f04:	f892 a001 	ldrb.w	sl, [r2, #1]
 8015f08:	fb0e 330c 	mla	r3, lr, ip, r3
 8015f0c:	fb01 310a 	mla	r1, r1, sl, r3
 8015f10:	f890 a001 	ldrb.w	sl, [r0, #1]
 8015f14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015f16:	fb09 1a0a 	mla	sl, r9, sl, r1
 8015f1a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015f1e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015f22:	ea47 070a 	orr.w	r7, r7, sl
 8015f26:	801f      	strh	r7, [r3, #0]
 8015f28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015f2a:	3302      	adds	r3, #2
 8015f2c:	9309      	str	r3, [sp, #36]	; 0x24
 8015f2e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8015f30:	449b      	add	fp, r3
 8015f32:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8015f34:	441d      	add	r5, r3
 8015f36:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015f38:	3b01      	subs	r3, #1
 8015f3a:	930b      	str	r3, [sp, #44]	; 0x2c
 8015f3c:	e76f      	b.n	8015e1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8015f3e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8015f40:	449b      	add	fp, r3
 8015f42:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8015f44:	441d      	add	r5, r3
 8015f46:	9b06      	ldr	r3, [sp, #24]
 8015f48:	3b01      	subs	r3, #1
 8015f4a:	9306      	str	r3, [sp, #24]
 8015f4c:	9b07      	ldr	r3, [sp, #28]
 8015f4e:	3302      	adds	r3, #2
 8015f50:	9307      	str	r3, [sp, #28]
 8015f52:	e744      	b.n	8015dde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8015f54:	d023      	beq.n	8015f9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8015f56:	9b06      	ldr	r3, [sp, #24]
 8015f58:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8015f5a:	3b01      	subs	r3, #1
 8015f5c:	fb00 b003 	mla	r0, r0, r3, fp
 8015f60:	1400      	asrs	r0, r0, #16
 8015f62:	f53f af58 	bmi.w	8015e16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8015f66:	3901      	subs	r1, #1
 8015f68:	4288      	cmp	r0, r1
 8015f6a:	f6bf af54 	bge.w	8015e16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8015f6e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8015f70:	fb01 5303 	mla	r3, r1, r3, r5
 8015f74:	141b      	asrs	r3, r3, #16
 8015f76:	f53f af4e 	bmi.w	8015e16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8015f7a:	3a01      	subs	r2, #1
 8015f7c:	4293      	cmp	r3, r2
 8015f7e:	f6bf af4a 	bge.w	8015e16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8015f82:	9b06      	ldr	r3, [sp, #24]
 8015f84:	9309      	str	r3, [sp, #36]	; 0x24
 8015f86:	9b07      	ldr	r3, [sp, #28]
 8015f88:	930b      	str	r3, [sp, #44]	; 0x2c
 8015f8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015f8c:	2b00      	cmp	r3, #0
 8015f8e:	dc70      	bgt.n	8016072 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8015f90:	9b06      	ldr	r3, [sp, #24]
 8015f92:	9a07      	ldr	r2, [sp, #28]
 8015f94:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015f98:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015f9c:	9307      	str	r3, [sp, #28]
 8015f9e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015fa0:	2b00      	cmp	r3, #0
 8015fa2:	f340 80eb 	ble.w	801617c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8015fa6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015faa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015fae:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015fb2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8015fb4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015fb8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015fbc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015fc0:	eef0 6a62 	vmov.f32	s13, s5
 8015fc4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015fc8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015fcc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015fd0:	ee16 ba90 	vmov	fp, s13
 8015fd4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015fd8:	eef0 6a43 	vmov.f32	s13, s6
 8015fdc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015fe0:	ee12 2a90 	vmov	r2, s5
 8015fe4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015fe8:	fb92 f3f3 	sdiv	r3, r2, r3
 8015fec:	ee13 2a10 	vmov	r2, s6
 8015ff0:	931b      	str	r3, [sp, #108]	; 0x6c
 8015ff2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8015ff4:	fb92 f3f3 	sdiv	r3, r2, r3
 8015ff8:	931c      	str	r3, [sp, #112]	; 0x70
 8015ffa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015ffc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8015ffe:	3b01      	subs	r3, #1
 8016000:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016004:	930a      	str	r3, [sp, #40]	; 0x28
 8016006:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8016008:	bf08      	it	eq
 801600a:	4613      	moveq	r3, r2
 801600c:	ee16 5a90 	vmov	r5, s13
 8016010:	9306      	str	r3, [sp, #24]
 8016012:	eeb0 3a67 	vmov.f32	s6, s15
 8016016:	eef0 2a47 	vmov.f32	s5, s14
 801601a:	e6d2      	b.n	8015dc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801601c:	b149      	cbz	r1, 8016032 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801601e:	5cba      	ldrb	r2, [r7, r2]
 8016020:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016024:	4422      	add	r2, r4
 8016026:	4660      	mov	r0, ip
 8016028:	4666      	mov	r6, ip
 801602a:	e734      	b.n	8015e96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801602c:	4660      	mov	r0, ip
 801602e:	4662      	mov	r2, ip
 8016030:	e731      	b.n	8015e96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8016032:	4660      	mov	r0, ip
 8016034:	4662      	mov	r2, ip
 8016036:	e7f7      	b.n	8016028 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8016038:	f110 0c01 	adds.w	ip, r0, #1
 801603c:	f53f af74 	bmi.w	8015f28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016040:	4562      	cmp	r2, ip
 8016042:	f6ff af71 	blt.w	8015f28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016046:	f116 0c01 	adds.w	ip, r6, #1
 801604a:	f53f af6d 	bmi.w	8015f28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801604e:	4567      	cmp	r7, ip
 8016050:	f6ff af6a 	blt.w	8015f28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016054:	b23f      	sxth	r7, r7
 8016056:	b212      	sxth	r2, r2
 8016058:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801605c:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8016060:	9200      	str	r2, [sp, #0]
 8016062:	9701      	str	r7, [sp, #4]
 8016064:	4623      	mov	r3, r4
 8016066:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801606a:	980d      	ldr	r0, [sp, #52]	; 0x34
 801606c:	f7ff fde6 	bl	8015c3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8016070:	e75a      	b.n	8015f28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016072:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8016074:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8016078:	ea4f 462b 	mov.w	r6, fp, asr #16
 801607c:	1428      	asrs	r0, r5, #16
 801607e:	fb02 6000 	mla	r0, r2, r0, r6
 8016082:	9e08      	ldr	r6, [sp, #32]
 8016084:	f816 8000 	ldrb.w	r8, [r6, r0]
 8016088:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801608c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8016090:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8016094:	1837      	adds	r7, r6, r0
 8016096:	eb04 0c08 	add.w	ip, r4, r8
 801609a:	2b00      	cmp	r3, #0
 801609c:	d060      	beq.n	8016160 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801609e:	787e      	ldrb	r6, [r7, #1]
 80160a0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80160a4:	4426      	add	r6, r4
 80160a6:	2900      	cmp	r1, #0
 80160a8:	d062      	beq.n	8016170 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 80160aa:	18b8      	adds	r0, r7, r2
 80160ac:	5cba      	ldrb	r2, [r7, r2]
 80160ae:	7840      	ldrb	r0, [r0, #1]
 80160b0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80160b4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80160b8:	4422      	add	r2, r4
 80160ba:	4420      	add	r0, r4
 80160bc:	b29b      	uxth	r3, r3
 80160be:	b289      	uxth	r1, r1
 80160c0:	fb03 f901 	mul.w	r9, r3, r1
 80160c4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80160c8:	011b      	lsls	r3, r3, #4
 80160ca:	b289      	uxth	r1, r1
 80160cc:	78b7      	ldrb	r7, [r6, #2]
 80160ce:	f89c a002 	ldrb.w	sl, [ip, #2]
 80160d2:	f89c c001 	ldrb.w	ip, [ip, #1]
 80160d6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80160da:	eba3 0309 	sub.w	r3, r3, r9
 80160de:	b29b      	uxth	r3, r3
 80160e0:	ebae 0e01 	sub.w	lr, lr, r1
 80160e4:	fa1f fe8e 	uxth.w	lr, lr
 80160e8:	435f      	muls	r7, r3
 80160ea:	fb0e 770a 	mla	r7, lr, sl, r7
 80160ee:	f892 a002 	ldrb.w	sl, [r2, #2]
 80160f2:	fb01 770a 	mla	r7, r1, sl, r7
 80160f6:	f890 a002 	ldrb.w	sl, [r0, #2]
 80160fa:	fb09 7a0a 	mla	sl, r9, sl, r7
 80160fe:	f814 7008 	ldrb.w	r7, [r4, r8]
 8016102:	f896 8000 	ldrb.w	r8, [r6]
 8016106:	7876      	ldrb	r6, [r6, #1]
 8016108:	fb03 f808 	mul.w	r8, r3, r8
 801610c:	fb0e 8807 	mla	r8, lr, r7, r8
 8016110:	7817      	ldrb	r7, [r2, #0]
 8016112:	fb01 8807 	mla	r8, r1, r7, r8
 8016116:	7807      	ldrb	r7, [r0, #0]
 8016118:	fb09 8707 	mla	r7, r9, r7, r8
 801611c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8016120:	4373      	muls	r3, r6
 8016122:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8016126:	7856      	ldrb	r6, [r2, #1]
 8016128:	ea47 070a 	orr.w	r7, r7, sl
 801612c:	fb0e 330c 	mla	r3, lr, ip, r3
 8016130:	f890 a001 	ldrb.w	sl, [r0, #1]
 8016134:	fb01 3306 	mla	r3, r1, r6, r3
 8016138:	fb09 3a0a 	mla	sl, r9, sl, r3
 801613c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016140:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016142:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016146:	ea47 070a 	orr.w	r7, r7, sl
 801614a:	f823 7b02 	strh.w	r7, [r3], #2
 801614e:	930b      	str	r3, [sp, #44]	; 0x2c
 8016150:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8016152:	449b      	add	fp, r3
 8016154:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8016156:	441d      	add	r5, r3
 8016158:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801615a:	3b01      	subs	r3, #1
 801615c:	9309      	str	r3, [sp, #36]	; 0x24
 801615e:	e714      	b.n	8015f8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8016160:	b149      	cbz	r1, 8016176 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8016162:	5cba      	ldrb	r2, [r7, r2]
 8016164:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016168:	4422      	add	r2, r4
 801616a:	4660      	mov	r0, ip
 801616c:	4666      	mov	r6, ip
 801616e:	e7a5      	b.n	80160bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8016170:	4660      	mov	r0, ip
 8016172:	4662      	mov	r2, ip
 8016174:	e7a2      	b.n	80160bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8016176:	4660      	mov	r0, ip
 8016178:	4662      	mov	r2, ip
 801617a:	e7f7      	b.n	801616c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801617c:	b00f      	add	sp, #60	; 0x3c
 801617e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016182 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8016182:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016186:	b085      	sub	sp, #20
 8016188:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801618c:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8016190:	9102      	str	r1, [sp, #8]
 8016192:	2c00      	cmp	r4, #0
 8016194:	fb04 710c 	mla	r1, r4, ip, r7
 8016198:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801619c:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 80161a0:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80161a4:	eb02 0e01 	add.w	lr, r2, r1
 80161a8:	f2c0 8122 	blt.w	80163f0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80161ac:	45a0      	cmp	r8, r4
 80161ae:	f340 811f 	ble.w	80163f0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80161b2:	2f00      	cmp	r7, #0
 80161b4:	f2c0 811a 	blt.w	80163ec <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80161b8:	45bc      	cmp	ip, r7
 80161ba:	f340 8117 	ble.w	80163ec <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80161be:	5c52      	ldrb	r2, [r2, r1]
 80161c0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80161c4:	1c7a      	adds	r2, r7, #1
 80161c6:	f100 8116 	bmi.w	80163f6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80161ca:	4594      	cmp	ip, r2
 80161cc:	f340 8113 	ble.w	80163f6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80161d0:	2e00      	cmp	r6, #0
 80161d2:	f000 8112 	beq.w	80163fa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 80161d6:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80161da:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80161de:	3401      	adds	r4, #1
 80161e0:	f100 810f 	bmi.w	8016402 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80161e4:	45a0      	cmp	r8, r4
 80161e6:	f340 810c 	ble.w	8016402 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80161ea:	2800      	cmp	r0, #0
 80161ec:	f000 810c 	beq.w	8016408 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 80161f0:	2f00      	cmp	r7, #0
 80161f2:	f2c0 8104 	blt.w	80163fe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 80161f6:	45bc      	cmp	ip, r7
 80161f8:	f340 8101 	ble.w	80163fe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 80161fc:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8016200:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8016204:	3701      	adds	r7, #1
 8016206:	f100 8102 	bmi.w	801640e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801620a:	45bc      	cmp	ip, r7
 801620c:	f340 80ff 	ble.w	801640e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8016210:	2e00      	cmp	r6, #0
 8016212:	f000 80fe 	beq.w	8016412 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8016216:	44f4      	add	ip, lr
 8016218:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801621c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8016220:	b2b6      	uxth	r6, r6
 8016222:	b280      	uxth	r0, r0
 8016224:	fb00 fe06 	mul.w	lr, r0, r6
 8016228:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801622c:	0136      	lsls	r6, r6, #4
 801622e:	eba6 070e 	sub.w	r7, r6, lr
 8016232:	b280      	uxth	r0, r0
 8016234:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8016238:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801623c:	b2bf      	uxth	r7, r7
 801623e:	1a1b      	subs	r3, r3, r0
 8016240:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8016244:	b29b      	uxth	r3, r3
 8016246:	fb0a f607 	mul.w	r6, sl, r7
 801624a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801624e:	fb0b 6603 	mla	r6, fp, r3, r6
 8016252:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8016256:	fb00 6609 	mla	r6, r0, r9, r6
 801625a:	fb0e 6608 	mla	r6, lr, r8, r6
 801625e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8016262:	9600      	str	r6, [sp, #0]
 8016264:	2e00      	cmp	r6, #0
 8016266:	f000 80be 	beq.w	80163e6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801626a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801626e:	fb0b fc0c 	mul.w	ip, fp, ip
 8016272:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8016276:	fb0b f505 	mul.w	r5, fp, r5
 801627a:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801627e:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8016282:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8016286:	44dc      	add	ip, fp
 8016288:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801628c:	9501      	str	r5, [sp, #4]
 801628e:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8016292:	9503      	str	r5, [sp, #12]
 8016294:	9d01      	ldr	r5, [sp, #4]
 8016296:	9e02      	ldr	r6, [sp, #8]
 8016298:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801629c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80162a0:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80162a4:	fb0a fc0c 	mul.w	ip, sl, ip
 80162a8:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80162ac:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80162b0:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80162b4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80162b8:	4465      	add	r5, ip
 80162ba:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80162be:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80162c2:	fb09 fc0c 	mul.w	ip, r9, ip
 80162c6:	fb09 f904 	mul.w	r9, r9, r4
 80162ca:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80162ce:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80162d2:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80162d6:	fb08 f404 	mul.w	r4, r8, r4
 80162da:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80162de:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80162e2:	fb08 f802 	mul.w	r8, r8, r2
 80162e6:	fb0a fa01 	mul.w	sl, sl, r1
 80162ea:	0a22      	lsrs	r2, r4, #8
 80162ec:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80162f0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80162f4:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80162f8:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80162fc:	4414      	add	r4, r2
 80162fe:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8016302:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8016306:	0a2d      	lsrs	r5, r5, #8
 8016308:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801630c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8016310:	9a03      	ldr	r2, [sp, #12]
 8016312:	8836      	ldrh	r6, [r6, #0]
 8016314:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8016318:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801631c:	437d      	muls	r5, r7
 801631e:	4461      	add	r1, ip
 8016320:	0a24      	lsrs	r4, r4, #8
 8016322:	fb02 5503 	mla	r5, r2, r3, r5
 8016326:	0a09      	lsrs	r1, r1, #8
 8016328:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801632c:	fb04 540e 	mla	r4, r4, lr, r5
 8016330:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8016334:	fb01 4100 	mla	r1, r1, r0, r4
 8016338:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801633c:	0a09      	lsrs	r1, r1, #8
 801633e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016342:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8016346:	fb07 f70a 	mul.w	r7, r7, sl
 801634a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801634e:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8016352:	fb03 7101 	mla	r1, r3, r1, r7
 8016356:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801635a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801635e:	fb0e 1e08 	mla	lr, lr, r8, r1
 8016362:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8016366:	fb00 e101 	mla	r1, r0, r1, lr
 801636a:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801636e:	9a00      	ldr	r2, [sp, #0]
 8016370:	b287      	uxth	r7, r0
 8016372:	437a      	muls	r2, r7
 8016374:	0a09      	lsrs	r1, r1, #8
 8016376:	1c53      	adds	r3, r2, #1
 8016378:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801637c:	4321      	orrs	r1, r4
 801637e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8016382:	1235      	asrs	r5, r6, #8
 8016384:	0c0a      	lsrs	r2, r1, #16
 8016386:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801638a:	b2db      	uxtb	r3, r3
 801638c:	fb12 f207 	smulbb	r2, r2, r7
 8016390:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8016394:	fb05 2503 	mla	r5, r5, r3, r2
 8016398:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801639c:	10f2      	asrs	r2, r6, #3
 801639e:	b2c8      	uxtb	r0, r1
 80163a0:	00f6      	lsls	r6, r6, #3
 80163a2:	fb14 f407 	smulbb	r4, r4, r7
 80163a6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80163aa:	b2f6      	uxtb	r6, r6
 80163ac:	fb10 f007 	smulbb	r0, r0, r7
 80163b0:	fb02 4203 	mla	r2, r2, r3, r4
 80163b4:	b2ad      	uxth	r5, r5
 80163b6:	fb06 0303 	mla	r3, r6, r3, r0
 80163ba:	b299      	uxth	r1, r3
 80163bc:	b294      	uxth	r4, r2
 80163be:	1c6b      	adds	r3, r5, #1
 80163c0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80163c4:	1c62      	adds	r2, r4, #1
 80163c6:	1c4b      	adds	r3, r1, #1
 80163c8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80163cc:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80163d0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80163d4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80163d8:	0952      	lsrs	r2, r2, #5
 80163da:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80163de:	432b      	orrs	r3, r5
 80163e0:	4313      	orrs	r3, r2
 80163e2:	9a02      	ldr	r2, [sp, #8]
 80163e4:	8013      	strh	r3, [r2, #0]
 80163e6:	b005      	add	sp, #20
 80163e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80163ec:	2500      	movs	r5, #0
 80163ee:	e6e9      	b.n	80161c4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 80163f0:	2100      	movs	r1, #0
 80163f2:	460d      	mov	r5, r1
 80163f4:	e6f3      	b.n	80161de <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80163f6:	2100      	movs	r1, #0
 80163f8:	e6f1      	b.n	80161de <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80163fa:	4631      	mov	r1, r6
 80163fc:	e6ef      	b.n	80161de <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80163fe:	2400      	movs	r4, #0
 8016400:	e700      	b.n	8016204 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8016402:	2200      	movs	r2, #0
 8016404:	4614      	mov	r4, r2
 8016406:	e70b      	b.n	8016220 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8016408:	4602      	mov	r2, r0
 801640a:	4604      	mov	r4, r0
 801640c:	e708      	b.n	8016220 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801640e:	2200      	movs	r2, #0
 8016410:	e706      	b.n	8016220 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8016412:	4632      	mov	r2, r6
 8016414:	e704      	b.n	8016220 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08016416 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016416:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801641a:	b09f      	sub	sp, #124	; 0x7c
 801641c:	921b      	str	r2, [sp, #108]	; 0x6c
 801641e:	9309      	str	r3, [sp, #36]	; 0x24
 8016420:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016422:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8016426:	931c      	str	r3, [sp, #112]	; 0x70
 8016428:	9119      	str	r1, [sp, #100]	; 0x64
 801642a:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801642e:	901d      	str	r0, [sp, #116]	; 0x74
 8016430:	6850      	ldr	r0, [r2, #4]
 8016432:	6812      	ldr	r2, [r2, #0]
 8016434:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8016436:	fb00 1303 	mla	r3, r0, r3, r1
 801643a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801643e:	930c      	str	r3, [sp, #48]	; 0x30
 8016440:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016442:	681b      	ldr	r3, [r3, #0]
 8016444:	9312      	str	r3, [sp, #72]	; 0x48
 8016446:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016448:	685e      	ldr	r6, [r3, #4]
 801644a:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801644e:	930d      	str	r3, [sp, #52]	; 0x34
 8016450:	3604      	adds	r6, #4
 8016452:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8016454:	2b00      	cmp	r3, #0
 8016456:	dc03      	bgt.n	8016460 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8016458:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801645a:	2b00      	cmp	r3, #0
 801645c:	f340 8388 	ble.w	8016b70 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8016460:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8016462:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016466:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801646a:	1e48      	subs	r0, r1, #1
 801646c:	1e57      	subs	r7, r2, #1
 801646e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016470:	2b00      	cmp	r3, #0
 8016472:	f340 8195 	ble.w	80167a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8016476:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8016478:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801647c:	ea4f 4325 	mov.w	r3, r5, asr #16
 8016480:	d406      	bmi.n	8016490 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8016482:	4584      	cmp	ip, r0
 8016484:	da04      	bge.n	8016490 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8016486:	2b00      	cmp	r3, #0
 8016488:	db02      	blt.n	8016490 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801648a:	42bb      	cmp	r3, r7
 801648c:	f2c0 8189 	blt.w	80167a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8016490:	f11c 0c01 	adds.w	ip, ip, #1
 8016494:	f100 8177 	bmi.w	8016786 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8016498:	4561      	cmp	r1, ip
 801649a:	f2c0 8174 	blt.w	8016786 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801649e:	3301      	adds	r3, #1
 80164a0:	f100 8171 	bmi.w	8016786 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80164a4:	429a      	cmp	r2, r3
 80164a6:	f2c0 816e 	blt.w	8016786 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80164aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80164ac:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80164ae:	931a      	str	r3, [sp, #104]	; 0x68
 80164b0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80164b2:	2b00      	cmp	r3, #0
 80164b4:	f340 8193 	ble.w	80167de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80164b8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80164ba:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80164be:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80164c0:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80164c4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80164c6:	141b      	asrs	r3, r3, #16
 80164c8:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80164cc:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80164d0:	f100 81d6 	bmi.w	8016880 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80164d4:	f100 38ff 	add.w	r8, r0, #4294967295
 80164d8:	4543      	cmp	r3, r8
 80164da:	f280 81d1 	bge.w	8016880 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80164de:	f1bc 0f00 	cmp.w	ip, #0
 80164e2:	f2c0 81cd 	blt.w	8016880 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80164e6:	f10e 38ff 	add.w	r8, lr, #4294967295
 80164ea:	45c4      	cmp	ip, r8
 80164ec:	f280 81c8 	bge.w	8016880 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80164f0:	b200      	sxth	r0, r0
 80164f2:	fb0c 3300 	mla	r3, ip, r0, r3
 80164f6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80164f8:	eb04 0803 	add.w	r8, r4, r3
 80164fc:	5ce3      	ldrb	r3, [r4, r3]
 80164fe:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8016502:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8016506:	2a00      	cmp	r2, #0
 8016508:	f000 81af 	beq.w	801686a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801650c:	f898 c001 	ldrb.w	ip, [r8, #1]
 8016510:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8016514:	940e      	str	r4, [sp, #56]	; 0x38
 8016516:	0e24      	lsrs	r4, r4, #24
 8016518:	9415      	str	r4, [sp, #84]	; 0x54
 801651a:	b179      	cbz	r1, 801653c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801651c:	eb08 0c00 	add.w	ip, r8, r0
 8016520:	f818 0000 	ldrb.w	r0, [r8, r0]
 8016524:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8016528:	900a      	str	r0, [sp, #40]	; 0x28
 801652a:	0e00      	lsrs	r0, r0, #24
 801652c:	9013      	str	r0, [sp, #76]	; 0x4c
 801652e:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8016532:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8016536:	900f      	str	r0, [sp, #60]	; 0x3c
 8016538:	0e00      	lsrs	r0, r0, #24
 801653a:	9016      	str	r0, [sp, #88]	; 0x58
 801653c:	b292      	uxth	r2, r2
 801653e:	b289      	uxth	r1, r1
 8016540:	fb02 f901 	mul.w	r9, r2, r1
 8016544:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8016548:	0112      	lsls	r2, r2, #4
 801654a:	eba2 0809 	sub.w	r8, r2, r9
 801654e:	b289      	uxth	r1, r1
 8016550:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8016554:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016556:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016558:	fa1f f888 	uxth.w	r8, r8
 801655c:	1a52      	subs	r2, r2, r1
 801655e:	b292      	uxth	r2, r2
 8016560:	fb08 f000 	mul.w	r0, r8, r0
 8016564:	fb02 000e 	mla	r0, r2, lr, r0
 8016568:	fb01 0004 	mla	r0, r1, r4, r0
 801656c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801656e:	fb09 0004 	mla	r0, r9, r4, r0
 8016572:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8016576:	2800      	cmp	r0, #0
 8016578:	f000 80fa 	beq.w	8016770 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801657c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8016580:	d01b      	beq.n	80165ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8016582:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8016586:	fb0e fa0a 	mul.w	sl, lr, sl
 801658a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801658e:	fb0e fe03 	mul.w	lr, lr, r3
 8016592:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8016596:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801659a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801659e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80165a2:	4453      	add	r3, sl
 80165a4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80165a8:	0a1b      	lsrs	r3, r3, #8
 80165aa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80165ae:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80165b2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80165b6:	ea43 030c 	orr.w	r3, r3, ip
 80165ba:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80165bc:	2cff      	cmp	r4, #255	; 0xff
 80165be:	d021      	beq.n	8016604 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80165c0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80165c2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80165c6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80165c8:	fb04 fb0b 	mul.w	fp, r4, fp
 80165cc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80165ce:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80165d2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80165d4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80165d8:	fb04 fa0a 	mul.w	sl, r4, sl
 80165dc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80165e0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80165e4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80165e8:	44de      	add	lr, fp
 80165ea:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80165ee:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80165f2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80165f6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80165fa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80165fe:	ea4e 040a 	orr.w	r4, lr, sl
 8016602:	940e      	str	r4, [sp, #56]	; 0x38
 8016604:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016606:	2cff      	cmp	r4, #255	; 0xff
 8016608:	d021      	beq.n	801664e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801660a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801660c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016610:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016612:	fb04 fb0b 	mul.w	fp, r4, fp
 8016616:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016618:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801661c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801661e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016622:	fb04 fa0a 	mul.w	sl, r4, sl
 8016626:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801662a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801662e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016632:	44de      	add	lr, fp
 8016634:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016638:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801663c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016640:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016644:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016648:	ea4e 040a 	orr.w	r4, lr, sl
 801664c:	940a      	str	r4, [sp, #40]	; 0x28
 801664e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8016650:	2cff      	cmp	r4, #255	; 0xff
 8016652:	d021      	beq.n	8016698 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8016654:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016656:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801665a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801665c:	fb04 fb0b 	mul.w	fp, r4, fp
 8016660:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016662:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016666:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8016668:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801666c:	fb04 fa0a 	mul.w	sl, r4, sl
 8016670:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016674:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016678:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801667c:	44de      	add	lr, fp
 801667e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016682:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016686:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801668a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801668e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016692:	ea4e 040a 	orr.w	r4, lr, sl
 8016696:	940f      	str	r4, [sp, #60]	; 0x3c
 8016698:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801669a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801669e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80166a0:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80166a4:	fb08 fc0c 	mul.w	ip, r8, ip
 80166a8:	fb02 cc0e 	mla	ip, r2, lr, ip
 80166ac:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80166b0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80166b2:	fb01 cc0e 	mla	ip, r1, lr, ip
 80166b6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80166ba:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80166bc:	fb09 cc0e 	mla	ip, r9, lr, ip
 80166c0:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80166c4:	fb08 f80e 	mul.w	r8, r8, lr
 80166c8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80166cc:	fb02 8303 	mla	r3, r2, r3, r8
 80166d0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80166d2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80166d4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80166d8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80166da:	fb01 330a 	mla	r3, r1, sl, r3
 80166de:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80166e2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80166e4:	fb09 3901 	mla	r9, r9, r1, r3
 80166e8:	4342      	muls	r2, r0
 80166ea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80166ee:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80166f2:	883b      	ldrh	r3, [r7, #0]
 80166f4:	1c50      	adds	r0, r2, #1
 80166f6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80166fa:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80166fe:	ea4c 0c09 	orr.w	ip, ip, r9
 8016702:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8016706:	1219      	asrs	r1, r3, #8
 8016708:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801670c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8016710:	b2c0      	uxtb	r0, r0
 8016712:	fb12 f204 	smulbb	r2, r2, r4
 8016716:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801671a:	fb01 2100 	mla	r1, r1, r0, r2
 801671e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8016722:	10da      	asrs	r2, r3, #3
 8016724:	fa5f fc8c 	uxtb.w	ip, ip
 8016728:	00db      	lsls	r3, r3, #3
 801672a:	fb1c fc04 	smulbb	ip, ip, r4
 801672e:	b2db      	uxtb	r3, r3
 8016730:	b289      	uxth	r1, r1
 8016732:	fb03 c300 	mla	r3, r3, r0, ip
 8016736:	fa1f fc83 	uxth.w	ip, r3
 801673a:	1c4b      	adds	r3, r1, #1
 801673c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8016740:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8016744:	fb1e fe04 	smulbb	lr, lr, r4
 8016748:	f10c 0301 	add.w	r3, ip, #1
 801674c:	fb02 e200 	mla	r2, r2, r0, lr
 8016750:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8016754:	b292      	uxth	r2, r2
 8016756:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801675a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801675e:	430b      	orrs	r3, r1
 8016760:	1c51      	adds	r1, r2, #1
 8016762:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016766:	0952      	lsrs	r2, r2, #5
 8016768:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801676c:	4313      	orrs	r3, r2
 801676e:	803b      	strh	r3, [r7, #0]
 8016770:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016772:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016774:	441a      	add	r2, r3
 8016776:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016778:	9229      	str	r2, [sp, #164]	; 0xa4
 801677a:	441d      	add	r5, r3
 801677c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801677e:	3b01      	subs	r3, #1
 8016780:	3702      	adds	r7, #2
 8016782:	931a      	str	r3, [sp, #104]	; 0x68
 8016784:	e694      	b.n	80164b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8016786:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016788:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801678a:	441c      	add	r4, r3
 801678c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801678e:	9429      	str	r4, [sp, #164]	; 0xa4
 8016790:	441d      	add	r5, r3
 8016792:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016794:	3b01      	subs	r3, #1
 8016796:	9309      	str	r3, [sp, #36]	; 0x24
 8016798:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801679a:	3302      	adds	r3, #2
 801679c:	930c      	str	r3, [sp, #48]	; 0x30
 801679e:	e666      	b.n	801646e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80167a0:	d024      	beq.n	80167ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 80167a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80167a4:	982b      	ldr	r0, [sp, #172]	; 0xac
 80167a6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80167a8:	3b01      	subs	r3, #1
 80167aa:	fb00 4003 	mla	r0, r0, r3, r4
 80167ae:	1400      	asrs	r0, r0, #16
 80167b0:	f53f ae7b 	bmi.w	80164aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80167b4:	3901      	subs	r1, #1
 80167b6:	4288      	cmp	r0, r1
 80167b8:	f6bf ae77 	bge.w	80164aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80167bc:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80167be:	fb01 5303 	mla	r3, r1, r3, r5
 80167c2:	141b      	asrs	r3, r3, #16
 80167c4:	f53f ae71 	bmi.w	80164aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80167c8:	3a01      	subs	r2, #1
 80167ca:	4293      	cmp	r3, r2
 80167cc:	f6bf ae6d 	bge.w	80164aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80167d0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80167d4:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80167d8:	f1bb 0f00 	cmp.w	fp, #0
 80167dc:	dc70      	bgt.n	80168c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 80167de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80167e0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80167e4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80167e6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80167ea:	930c      	str	r3, [sp, #48]	; 0x30
 80167ec:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80167ee:	2b00      	cmp	r3, #0
 80167f0:	f340 81be 	ble.w	8016b70 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80167f4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80167f8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80167fc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8016800:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016802:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016806:	ee31 1a05 	vadd.f32	s2, s2, s10
 801680a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801680e:	eef0 6a62 	vmov.f32	s13, s5
 8016812:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016816:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801681a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801681e:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8016822:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016826:	eef0 6a43 	vmov.f32	s13, s6
 801682a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801682e:	ee12 2a90 	vmov	r2, s5
 8016832:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016836:	fb92 f3f3 	sdiv	r3, r2, r3
 801683a:	ee13 2a10 	vmov	r2, s6
 801683e:	932b      	str	r3, [sp, #172]	; 0xac
 8016840:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016842:	fb92 f3f3 	sdiv	r3, r2, r3
 8016846:	932c      	str	r3, [sp, #176]	; 0xb0
 8016848:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801684a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801684c:	3b01      	subs	r3, #1
 801684e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016852:	9319      	str	r3, [sp, #100]	; 0x64
 8016854:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016856:	bf08      	it	eq
 8016858:	4613      	moveq	r3, r2
 801685a:	ee16 5a90 	vmov	r5, s13
 801685e:	9309      	str	r3, [sp, #36]	; 0x24
 8016860:	eeb0 3a67 	vmov.f32	s6, s15
 8016864:	eef0 2a47 	vmov.f32	s5, s14
 8016868:	e5f3      	b.n	8016452 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801686a:	2900      	cmp	r1, #0
 801686c:	f43f ae66 	beq.w	801653c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8016870:	f818 0000 	ldrb.w	r0, [r8, r0]
 8016874:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8016878:	900a      	str	r0, [sp, #40]	; 0x28
 801687a:	0e00      	lsrs	r0, r0, #24
 801687c:	9013      	str	r0, [sp, #76]	; 0x4c
 801687e:	e65d      	b.n	801653c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8016880:	f113 0801 	adds.w	r8, r3, #1
 8016884:	f53f af74 	bmi.w	8016770 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8016888:	4540      	cmp	r0, r8
 801688a:	f6ff af71 	blt.w	8016770 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801688e:	f11c 0801 	adds.w	r8, ip, #1
 8016892:	f53f af6d 	bmi.w	8016770 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8016896:	45c6      	cmp	lr, r8
 8016898:	f6ff af6a 	blt.w	8016770 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801689c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801689e:	9302      	str	r3, [sp, #8]
 80168a0:	b200      	sxth	r0, r0
 80168a2:	fa0f f38e 	sxth.w	r3, lr
 80168a6:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80168aa:	e9cd c203 	strd	ip, r2, [sp, #12]
 80168ae:	9301      	str	r3, [sp, #4]
 80168b0:	9000      	str	r0, [sp, #0]
 80168b2:	4633      	mov	r3, r6
 80168b4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80168b6:	981d      	ldr	r0, [sp, #116]	; 0x74
 80168b8:	4639      	mov	r1, r7
 80168ba:	f7ff fc62 	bl	8016182 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80168be:	e757      	b.n	8016770 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80168c0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80168c2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80168c4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80168c8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80168ca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80168ce:	1427      	asrs	r7, r4, #16
 80168d0:	142b      	asrs	r3, r5, #16
 80168d2:	fb01 7303 	mla	r3, r1, r3, r7
 80168d6:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80168d8:	18e7      	adds	r7, r4, r3
 80168da:	5ce3      	ldrb	r3, [r4, r3]
 80168dc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80168e0:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80168e4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80168e8:	2a00      	cmp	r2, #0
 80168ea:	f000 8137 	beq.w	8016b5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80168ee:	f897 e001 	ldrb.w	lr, [r7, #1]
 80168f2:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80168f6:	9410      	str	r4, [sp, #64]	; 0x40
 80168f8:	0e24      	lsrs	r4, r4, #24
 80168fa:	9417      	str	r4, [sp, #92]	; 0x5c
 80168fc:	b170      	cbz	r0, 801691c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80168fe:	eb07 0e01 	add.w	lr, r7, r1
 8016902:	5c79      	ldrb	r1, [r7, r1]
 8016904:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016908:	910b      	str	r1, [sp, #44]	; 0x2c
 801690a:	0e09      	lsrs	r1, r1, #24
 801690c:	9114      	str	r1, [sp, #80]	; 0x50
 801690e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8016912:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016916:	9111      	str	r1, [sp, #68]	; 0x44
 8016918:	0e09      	lsrs	r1, r1, #24
 801691a:	9118      	str	r1, [sp, #96]	; 0x60
 801691c:	b292      	uxth	r2, r2
 801691e:	b280      	uxth	r0, r0
 8016920:	fb02 f800 	mul.w	r8, r2, r0
 8016924:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8016928:	0112      	lsls	r2, r2, #4
 801692a:	eba2 0e08 	sub.w	lr, r2, r8
 801692e:	b280      	uxth	r0, r0
 8016930:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8016934:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8016936:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016938:	fa1f fe8e 	uxth.w	lr, lr
 801693c:	1a12      	subs	r2, r2, r0
 801693e:	b292      	uxth	r2, r2
 8016940:	fb0e f101 	mul.w	r1, lr, r1
 8016944:	fb02 110c 	mla	r1, r2, ip, r1
 8016948:	fb00 1104 	mla	r1, r0, r4, r1
 801694c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801694e:	fb08 1104 	mla	r1, r8, r4, r1
 8016952:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8016956:	2900      	cmp	r1, #0
 8016958:	f000 80f5 	beq.w	8016b46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801695c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8016960:	d019      	beq.n	8016996 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8016962:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8016966:	fb0c fa0a 	mul.w	sl, ip, sl
 801696a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801696e:	fb0c fc03 	mul.w	ip, ip, r3
 8016972:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8016976:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801697a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801697e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8016982:	4453      	add	r3, sl
 8016984:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8016988:	0a1b      	lsrs	r3, r3, #8
 801698a:	0a3f      	lsrs	r7, r7, #8
 801698c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016990:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8016994:	433b      	orrs	r3, r7
 8016996:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8016998:	2cff      	cmp	r4, #255	; 0xff
 801699a:	d020      	beq.n	80169de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801699c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801699e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80169a2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80169a4:	4367      	muls	r7, r4
 80169a6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80169a8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80169ac:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80169ae:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80169b2:	fb04 fa0a 	mul.w	sl, r4, sl
 80169b6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80169ba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80169be:	44bc      	add	ip, r7
 80169c0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80169c4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80169c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80169cc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80169d0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80169d4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80169d8:	ea4c 040a 	orr.w	r4, ip, sl
 80169dc:	9410      	str	r4, [sp, #64]	; 0x40
 80169de:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80169e0:	2cff      	cmp	r4, #255	; 0xff
 80169e2:	d020      	beq.n	8016a26 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 80169e4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80169e6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80169ea:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80169ec:	4367      	muls	r7, r4
 80169ee:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80169f0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80169f4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80169f6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80169fa:	fb04 fa0a 	mul.w	sl, r4, sl
 80169fe:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016a02:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016a06:	44bc      	add	ip, r7
 8016a08:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016a0c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016a10:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016a14:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016a18:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016a1c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016a20:	ea4c 040a 	orr.w	r4, ip, sl
 8016a24:	940b      	str	r4, [sp, #44]	; 0x2c
 8016a26:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8016a28:	2cff      	cmp	r4, #255	; 0xff
 8016a2a:	d020      	beq.n	8016a6e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8016a2c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016a2e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016a32:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8016a34:	4367      	muls	r7, r4
 8016a36:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016a38:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016a3c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8016a3e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016a42:	fb04 fa0a 	mul.w	sl, r4, sl
 8016a46:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016a4a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016a4e:	44bc      	add	ip, r7
 8016a50:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8016a54:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8016a58:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016a5c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016a60:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016a64:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016a68:	ea4c 040a 	orr.w	r4, ip, sl
 8016a6c:	9411      	str	r4, [sp, #68]	; 0x44
 8016a6e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016a70:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8016a74:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016a76:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8016a7a:	fb0e f707 	mul.w	r7, lr, r7
 8016a7e:	fb02 770c 	mla	r7, r2, ip, r7
 8016a82:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016a86:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016a88:	fb00 770c 	mla	r7, r0, ip, r7
 8016a8c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8016a90:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016a92:	fb08 770c 	mla	r7, r8, ip, r7
 8016a96:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8016a9a:	fb0e fe0c 	mul.w	lr, lr, ip
 8016a9e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016aa2:	fb02 e303 	mla	r3, r2, r3, lr
 8016aa6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016aa8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016aaa:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8016aae:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016ab0:	fb00 330a 	mla	r3, r0, sl, r3
 8016ab4:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8016ab8:	fb08 3c0c 	mla	ip, r8, ip, r3
 8016abc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016abe:	f8b9 0000 	ldrh.w	r0, [r9]
 8016ac2:	434b      	muls	r3, r1
 8016ac4:	0a3f      	lsrs	r7, r7, #8
 8016ac6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016aca:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016ace:	1c59      	adds	r1, r3, #1
 8016ad0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8016ad4:	ea47 070c 	orr.w	r7, r7, ip
 8016ad8:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8016adc:	1202      	asrs	r2, r0, #8
 8016ade:	0c3b      	lsrs	r3, r7, #16
 8016ae0:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8016ae4:	b2c9      	uxtb	r1, r1
 8016ae6:	fb13 f304 	smulbb	r3, r3, r4
 8016aea:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8016aee:	fb02 3201 	mla	r2, r2, r1, r3
 8016af2:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8016af6:	10c3      	asrs	r3, r0, #3
 8016af8:	b2ff      	uxtb	r7, r7
 8016afa:	00c0      	lsls	r0, r0, #3
 8016afc:	b292      	uxth	r2, r2
 8016afe:	fb1c fc04 	smulbb	ip, ip, r4
 8016b02:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8016b06:	b2c0      	uxtb	r0, r0
 8016b08:	fb17 f704 	smulbb	r7, r7, r4
 8016b0c:	fb03 c301 	mla	r3, r3, r1, ip
 8016b10:	fb00 7001 	mla	r0, r0, r1, r7
 8016b14:	f102 0c01 	add.w	ip, r2, #1
 8016b18:	b280      	uxth	r0, r0
 8016b1a:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8016b1e:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8016b22:	1c42      	adds	r2, r0, #1
 8016b24:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8016b28:	b29b      	uxth	r3, r3
 8016b2a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016b2e:	ea42 020c 	orr.w	r2, r2, ip
 8016b32:	f103 0c01 	add.w	ip, r3, #1
 8016b36:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8016b3a:	095b      	lsrs	r3, r3, #5
 8016b3c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016b40:	431a      	orrs	r2, r3
 8016b42:	f8a9 2000 	strh.w	r2, [r9]
 8016b46:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016b48:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016b4a:	441a      	add	r2, r3
 8016b4c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016b4e:	9229      	str	r2, [sp, #164]	; 0xa4
 8016b50:	f109 0902 	add.w	r9, r9, #2
 8016b54:	441d      	add	r5, r3
 8016b56:	f10b 3bff 	add.w	fp, fp, #4294967295
 8016b5a:	e63d      	b.n	80167d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8016b5c:	2800      	cmp	r0, #0
 8016b5e:	f43f aedd 	beq.w	801691c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8016b62:	5c79      	ldrb	r1, [r7, r1]
 8016b64:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016b68:	910b      	str	r1, [sp, #44]	; 0x2c
 8016b6a:	0e09      	lsrs	r1, r1, #24
 8016b6c:	9114      	str	r1, [sp, #80]	; 0x50
 8016b6e:	e6d5      	b.n	801691c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8016b70:	b01f      	add	sp, #124	; 0x7c
 8016b72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016b76 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8016b76:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016b7a:	b089      	sub	sp, #36	; 0x24
 8016b7c:	9101      	str	r1, [sp, #4]
 8016b7e:	9801      	ldr	r0, [sp, #4]
 8016b80:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 8016b84:	8800      	ldrh	r0, [r0, #0]
 8016b86:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8016b8a:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8016b8e:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 8016b92:	1206      	asrs	r6, r0, #8
 8016b94:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8016b98:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016b9c:	9602      	str	r6, [sp, #8]
 8016b9e:	10c6      	asrs	r6, r0, #3
 8016ba0:	00c0      	lsls	r0, r0, #3
 8016ba2:	b2c0      	uxtb	r0, r0
 8016ba4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016ba8:	9004      	str	r0, [sp, #16]
 8016baa:	2f00      	cmp	r7, #0
 8016bac:	fb07 100c 	mla	r0, r7, ip, r1
 8016bb0:	9603      	str	r6, [sp, #12]
 8016bb2:	eb02 0e00 	add.w	lr, r2, r0
 8016bb6:	f2c0 810a 	blt.w	8016dce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8016bba:	45b8      	cmp	r8, r7
 8016bbc:	f340 8107 	ble.w	8016dce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8016bc0:	2900      	cmp	r1, #0
 8016bc2:	f2c0 8102 	blt.w	8016dca <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8016bc6:	458c      	cmp	ip, r1
 8016bc8:	f340 80ff 	ble.w	8016dca <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8016bcc:	5c12      	ldrb	r2, [r2, r0]
 8016bce:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8016bd2:	1c4a      	adds	r2, r1, #1
 8016bd4:	f100 80fe 	bmi.w	8016dd4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8016bd8:	4594      	cmp	ip, r2
 8016bda:	f340 80fb 	ble.w	8016dd4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8016bde:	2d00      	cmp	r5, #0
 8016be0:	f000 80fa 	beq.w	8016dd8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8016be4:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8016be8:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8016bec:	3701      	adds	r7, #1
 8016bee:	f100 80f7 	bmi.w	8016de0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8016bf2:	45b8      	cmp	r8, r7
 8016bf4:	f340 80f4 	ble.w	8016de0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8016bf8:	2c00      	cmp	r4, #0
 8016bfa:	f000 80f4 	beq.w	8016de6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8016bfe:	2900      	cmp	r1, #0
 8016c00:	eb0e 020c 	add.w	r2, lr, ip
 8016c04:	f2c0 80ea 	blt.w	8016ddc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8016c08:	458c      	cmp	ip, r1
 8016c0a:	f340 80e7 	ble.w	8016ddc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8016c0e:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8016c12:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8016c16:	3101      	adds	r1, #1
 8016c18:	f100 80e8 	bmi.w	8016dec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8016c1c:	458c      	cmp	ip, r1
 8016c1e:	f340 80e5 	ble.w	8016dec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8016c22:	2d00      	cmp	r5, #0
 8016c24:	f000 80e4 	beq.w	8016df0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8016c28:	7852      	ldrb	r2, [r2, #1]
 8016c2a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8016c2e:	0e0b      	lsrs	r3, r1, #24
 8016c30:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8016c34:	9300      	str	r3, [sp, #0]
 8016c36:	b2a4      	uxth	r4, r4
 8016c38:	b2ab      	uxth	r3, r5
 8016c3a:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8016c3e:	fb03 f904 	mul.w	r9, r3, r4
 8016c42:	fb0a f505 	mul.w	r5, sl, r5
 8016c46:	011b      	lsls	r3, r3, #4
 8016c48:	eba3 0e09 	sub.w	lr, r3, r9
 8016c4c:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8016c50:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8016c54:	0a28      	lsrs	r0, r5, #8
 8016c56:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8016c5a:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8016c5e:	4405      	add	r5, r0
 8016c60:	0a2d      	lsrs	r5, r5, #8
 8016c62:	fb0a f303 	mul.w	r3, sl, r3
 8016c66:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8016c6a:	9005      	str	r0, [sp, #20]
 8016c6c:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8016c70:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8016c74:	0a1b      	lsrs	r3, r3, #8
 8016c76:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8016c7a:	9306      	str	r3, [sp, #24]
 8016c7c:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8016c80:	fb0b f303 	mul.w	r3, fp, r3
 8016c84:	0a1d      	lsrs	r5, r3, #8
 8016c86:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016c8a:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8016c8e:	fb0b f606 	mul.w	r6, fp, r6
 8016c92:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8016c96:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8016c9a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8016c9e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8016ca2:	fb08 f707 	mul.w	r7, r8, r7
 8016ca6:	441d      	add	r5, r3
 8016ca8:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8016cac:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8016cb0:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8016cb4:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8016cb8:	fb08 fc0c 	mul.w	ip, r8, ip
 8016cbc:	0a1b      	lsrs	r3, r3, #8
 8016cbe:	9307      	str	r3, [sp, #28]
 8016cc0:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8016cc4:	0e0b      	lsrs	r3, r1, #24
 8016cc6:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8016cca:	435f      	muls	r7, r3
 8016ccc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8016cd0:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8016cd4:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8016cd8:	4460      	add	r0, ip
 8016cda:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016cde:	b2a4      	uxth	r4, r4
 8016ce0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016ce4:	0a2d      	lsrs	r5, r5, #8
 8016ce6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8016cea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016cee:	fa1f fe8e 	uxth.w	lr, lr
 8016cf2:	4359      	muls	r1, r3
 8016cf4:	1b12      	subs	r2, r2, r4
 8016cf6:	9b05      	ldr	r3, [sp, #20]
 8016cf8:	44bc      	add	ip, r7
 8016cfa:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8016cfe:	b292      	uxth	r2, r2
 8016d00:	fb05 f50e 	mul.w	r5, r5, lr
 8016d04:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016d08:	fb03 5502 	mla	r5, r3, r2, r5
 8016d0c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016d10:	9b06      	ldr	r3, [sp, #24]
 8016d12:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8016d16:	0a36      	lsrs	r6, r6, #8
 8016d18:	0a00      	lsrs	r0, r0, #8
 8016d1a:	fb0c 5509 	mla	r5, ip, r9, r5
 8016d1e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8016d22:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8016d26:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016d2a:	fb00 5504 	mla	r5, r0, r4, r5
 8016d2e:	fb0e f606 	mul.w	r6, lr, r6
 8016d32:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8016d36:	0a09      	lsrs	r1, r1, #8
 8016d38:	9b07      	ldr	r3, [sp, #28]
 8016d3a:	fb02 6000 	mla	r0, r2, r0, r6
 8016d3e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8016d42:	fb09 0001 	mla	r0, r9, r1, r0
 8016d46:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016d4a:	fb0e fe0b 	mul.w	lr, lr, fp
 8016d4e:	fb04 0003 	mla	r0, r4, r3, r0
 8016d52:	fb02 e20a 	mla	r2, r2, sl, lr
 8016d56:	9b00      	ldr	r3, [sp, #0]
 8016d58:	fb04 2408 	mla	r4, r4, r8, r2
 8016d5c:	fb09 4903 	mla	r9, r9, r3, r4
 8016d60:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8016d64:	9b02      	ldr	r3, [sp, #8]
 8016d66:	9a04      	ldr	r2, [sp, #16]
 8016d68:	fa5f f989 	uxtb.w	r9, r9
 8016d6c:	fb03 f109 	mul.w	r1, r3, r9
 8016d70:	9b03      	ldr	r3, [sp, #12]
 8016d72:	0a2d      	lsrs	r5, r5, #8
 8016d74:	0a00      	lsrs	r0, r0, #8
 8016d76:	fb03 f309 	mul.w	r3, r3, r9
 8016d7a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8016d7e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8016d82:	4305      	orrs	r5, r0
 8016d84:	fb02 f909 	mul.w	r9, r2, r9
 8016d88:	1c58      	adds	r0, r3, #1
 8016d8a:	1c4a      	adds	r2, r1, #1
 8016d8c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8016d90:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016d94:	0a2b      	lsrs	r3, r5, #8
 8016d96:	0c2a      	lsrs	r2, r5, #16
 8016d98:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8016d9c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8016da0:	00db      	lsls	r3, r3, #3
 8016da2:	0212      	lsls	r2, r2, #8
 8016da4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8016da8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016dac:	4313      	orrs	r3, r2
 8016dae:	f109 0201 	add.w	r2, r9, #1
 8016db2:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8016db6:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8016dba:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016dbe:	431d      	orrs	r5, r3
 8016dc0:	9b01      	ldr	r3, [sp, #4]
 8016dc2:	801d      	strh	r5, [r3, #0]
 8016dc4:	b009      	add	sp, #36	; 0x24
 8016dc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016dca:	2000      	movs	r0, #0
 8016dcc:	e701      	b.n	8016bd2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8016dce:	2600      	movs	r6, #0
 8016dd0:	4630      	mov	r0, r6
 8016dd2:	e70b      	b.n	8016bec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8016dd4:	2600      	movs	r6, #0
 8016dd6:	e709      	b.n	8016bec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8016dd8:	462e      	mov	r6, r5
 8016dda:	e707      	b.n	8016bec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8016ddc:	2700      	movs	r7, #0
 8016dde:	e71a      	b.n	8016c16 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8016de0:	2100      	movs	r1, #0
 8016de2:	460f      	mov	r7, r1
 8016de4:	e723      	b.n	8016c2e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8016de6:	4621      	mov	r1, r4
 8016de8:	4627      	mov	r7, r4
 8016dea:	e720      	b.n	8016c2e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8016dec:	2100      	movs	r1, #0
 8016dee:	e71e      	b.n	8016c2e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8016df0:	4629      	mov	r1, r5
 8016df2:	e71c      	b.n	8016c2e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08016df4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016df4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016df8:	b09b      	sub	sp, #108	; 0x6c
 8016dfa:	9218      	str	r2, [sp, #96]	; 0x60
 8016dfc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8016dfe:	9116      	str	r1, [sp, #88]	; 0x58
 8016e00:	9307      	str	r3, [sp, #28]
 8016e02:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8016e06:	9019      	str	r0, [sp, #100]	; 0x64
 8016e08:	6850      	ldr	r0, [r2, #4]
 8016e0a:	6812      	ldr	r2, [r2, #0]
 8016e0c:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8016e0e:	fb00 1303 	mla	r3, r0, r3, r1
 8016e12:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016e16:	930a      	str	r3, [sp, #40]	; 0x28
 8016e18:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016e1a:	681b      	ldr	r3, [r3, #0]
 8016e1c:	930f      	str	r3, [sp, #60]	; 0x3c
 8016e1e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016e20:	685e      	ldr	r6, [r3, #4]
 8016e22:	3604      	adds	r6, #4
 8016e24:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8016e26:	2b00      	cmp	r3, #0
 8016e28:	dc03      	bgt.n	8016e32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8016e2a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8016e2c:	2b00      	cmp	r3, #0
 8016e2e:	f340 8373 	ble.w	8017518 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8016e32:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016e34:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016e38:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016e3c:	1e48      	subs	r0, r1, #1
 8016e3e:	1e57      	subs	r7, r2, #1
 8016e40:	9b07      	ldr	r3, [sp, #28]
 8016e42:	2b00      	cmp	r3, #0
 8016e44:	f340 8190 	ble.w	8017168 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8016e48:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8016e4a:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8016e4e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8016e52:	d406      	bmi.n	8016e62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016e54:	4584      	cmp	ip, r0
 8016e56:	da04      	bge.n	8016e62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016e58:	2b00      	cmp	r3, #0
 8016e5a:	db02      	blt.n	8016e62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016e5c:	42bb      	cmp	r3, r7
 8016e5e:	f2c0 8184 	blt.w	801716a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8016e62:	f11c 0c01 	adds.w	ip, ip, #1
 8016e66:	f100 8172 	bmi.w	801714e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8016e6a:	4561      	cmp	r1, ip
 8016e6c:	f2c0 816f 	blt.w	801714e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8016e70:	3301      	adds	r3, #1
 8016e72:	f100 816c 	bmi.w	801714e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8016e76:	429a      	cmp	r2, r3
 8016e78:	f2c0 8169 	blt.w	801714e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8016e7c:	9b07      	ldr	r3, [sp, #28]
 8016e7e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8016e80:	9317      	str	r3, [sp, #92]	; 0x5c
 8016e82:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8016e84:	2b00      	cmp	r3, #0
 8016e86:	f340 818e 	ble.w	80171a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8016e8a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8016e8c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016e90:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016e92:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8016e96:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8016e98:	141b      	asrs	r3, r3, #16
 8016e9a:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8016e9e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8016ea2:	f100 81d1 	bmi.w	8017248 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8016ea6:	f101 38ff 	add.w	r8, r1, #4294967295
 8016eaa:	4543      	cmp	r3, r8
 8016eac:	f280 81cc 	bge.w	8017248 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8016eb0:	f1bc 0f00 	cmp.w	ip, #0
 8016eb4:	f2c0 81c8 	blt.w	8017248 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8016eb8:	f10e 38ff 	add.w	r8, lr, #4294967295
 8016ebc:	45c4      	cmp	ip, r8
 8016ebe:	f280 81c3 	bge.w	8017248 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8016ec2:	b209      	sxth	r1, r1
 8016ec4:	fb0c 3301 	mla	r3, ip, r1, r3
 8016ec8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016eca:	eb04 0803 	add.w	r8, r4, r3
 8016ece:	5ce3      	ldrb	r3, [r4, r3]
 8016ed0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8016ed4:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8016ed8:	2a00      	cmp	r2, #0
 8016eda:	f000 81aa 	beq.w	8017232 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8016ede:	f898 c001 	ldrb.w	ip, [r8, #1]
 8016ee2:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8016ee6:	940b      	str	r4, [sp, #44]	; 0x2c
 8016ee8:	0e24      	lsrs	r4, r4, #24
 8016eea:	9412      	str	r4, [sp, #72]	; 0x48
 8016eec:	b178      	cbz	r0, 8016f0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8016eee:	eb08 0c01 	add.w	ip, r8, r1
 8016ef2:	f818 1001 	ldrb.w	r1, [r8, r1]
 8016ef6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016efa:	9108      	str	r1, [sp, #32]
 8016efc:	0e09      	lsrs	r1, r1, #24
 8016efe:	9110      	str	r1, [sp, #64]	; 0x40
 8016f00:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8016f04:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8016f08:	910c      	str	r1, [sp, #48]	; 0x30
 8016f0a:	0e09      	lsrs	r1, r1, #24
 8016f0c:	9113      	str	r1, [sp, #76]	; 0x4c
 8016f0e:	b292      	uxth	r2, r2
 8016f10:	b280      	uxth	r0, r0
 8016f12:	fb02 f900 	mul.w	r9, r2, r0
 8016f16:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8016f1a:	0112      	lsls	r2, r2, #4
 8016f1c:	eba2 0809 	sub.w	r8, r2, r9
 8016f20:	b280      	uxth	r0, r0
 8016f22:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8016f26:	9912      	ldr	r1, [sp, #72]	; 0x48
 8016f28:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016f2a:	fa1f f888 	uxth.w	r8, r8
 8016f2e:	1a12      	subs	r2, r2, r0
 8016f30:	b292      	uxth	r2, r2
 8016f32:	fb08 f101 	mul.w	r1, r8, r1
 8016f36:	fb02 110e 	mla	r1, r2, lr, r1
 8016f3a:	fb00 1104 	mla	r1, r0, r4, r1
 8016f3e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016f40:	fb09 1104 	mla	r1, r9, r4, r1
 8016f44:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8016f48:	2900      	cmp	r1, #0
 8016f4a:	f000 80f5 	beq.w	8017138 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8016f4e:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8016f52:	d01b      	beq.n	8016f8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016f54:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8016f58:	fb0e fa0a 	mul.w	sl, lr, sl
 8016f5c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016f60:	fb0e fe03 	mul.w	lr, lr, r3
 8016f64:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8016f68:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016f6c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016f70:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8016f74:	4453      	add	r3, sl
 8016f76:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8016f7a:	0a1b      	lsrs	r3, r3, #8
 8016f7c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016f80:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016f84:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016f88:	ea43 030c 	orr.w	r3, r3, ip
 8016f8c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016f8e:	2cff      	cmp	r4, #255	; 0xff
 8016f90:	d021      	beq.n	8016fd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8016f92:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016f94:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016f98:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016f9a:	fb04 fb0b 	mul.w	fp, r4, fp
 8016f9e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016fa0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016fa4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016fa6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016faa:	fb04 fa0a 	mul.w	sl, r4, sl
 8016fae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016fb2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8016fb6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016fba:	44de      	add	lr, fp
 8016fbc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8016fc0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016fc4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016fc8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016fcc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8016fd0:	ea4e 040a 	orr.w	r4, lr, sl
 8016fd4:	940b      	str	r4, [sp, #44]	; 0x2c
 8016fd6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016fd8:	2cff      	cmp	r4, #255	; 0xff
 8016fda:	d021      	beq.n	8017020 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8016fdc:	9c08      	ldr	r4, [sp, #32]
 8016fde:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8016fe2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016fe4:	fb04 fb0b 	mul.w	fp, r4, fp
 8016fe8:	9c08      	ldr	r4, [sp, #32]
 8016fea:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8016fee:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016ff0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8016ff4:	fb04 fa0a 	mul.w	sl, r4, sl
 8016ff8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016ffc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017000:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017004:	44de      	add	lr, fp
 8017006:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801700a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801700e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017012:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017016:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801701a:	ea4e 040a 	orr.w	r4, lr, sl
 801701e:	9408      	str	r4, [sp, #32]
 8017020:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017022:	2cff      	cmp	r4, #255	; 0xff
 8017024:	d021      	beq.n	801706a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8017026:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017028:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801702c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801702e:	fb04 fb0b 	mul.w	fp, r4, fp
 8017032:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017034:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017038:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801703a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801703e:	fb04 fa0a 	mul.w	sl, r4, sl
 8017042:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017046:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801704a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801704e:	44de      	add	lr, fp
 8017050:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017054:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017058:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801705c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017060:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017064:	ea4e 040a 	orr.w	r4, lr, sl
 8017068:	940c      	str	r4, [sp, #48]	; 0x30
 801706a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801706c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017070:	9c08      	ldr	r4, [sp, #32]
 8017072:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8017076:	fb08 fc0c 	mul.w	ip, r8, ip
 801707a:	fb02 cc0e 	mla	ip, r2, lr, ip
 801707e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8017082:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017084:	fb00 cc0e 	mla	ip, r0, lr, ip
 8017088:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801708c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801708e:	fb09 cc0e 	mla	ip, r9, lr, ip
 8017092:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8017096:	fb08 f80e 	mul.w	r8, r8, lr
 801709a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801709e:	fb02 8303 	mla	r3, r2, r3, r8
 80170a2:	9a08      	ldr	r2, [sp, #32]
 80170a4:	f8b7 8000 	ldrh.w	r8, [r7]
 80170a8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80170ac:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80170ae:	fb00 330a 	mla	r3, r0, sl, r3
 80170b2:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 80170b6:	fb09 3900 	mla	r9, r9, r0, r3
 80170ba:	43c9      	mvns	r1, r1
 80170bc:	ea4f 2228 	mov.w	r2, r8, asr #8
 80170c0:	fa5f fe81 	uxtb.w	lr, r1
 80170c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80170c8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80170cc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80170d0:	fb02 f20e 	mul.w	r2, r2, lr
 80170d4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80170d8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80170dc:	ea4c 0c09 	orr.w	ip, ip, r9
 80170e0:	1c53      	adds	r3, r2, #1
 80170e2:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 80170e6:	ea4f 00e8 	mov.w	r0, r8, asr #3
 80170ea:	ea4f 431c 	mov.w	r3, ip, lsr #16
 80170ee:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80170f2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80170f6:	4a63      	ldr	r2, [pc, #396]	; (8017284 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 80170f8:	fb00 f00e 	mul.w	r0, r0, lr
 80170fc:	b2db      	uxtb	r3, r3
 80170fe:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8017102:	1c43      	adds	r3, r0, #1
 8017104:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8017108:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801710c:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8017110:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8017114:	b2c9      	uxtb	r1, r1
 8017116:	00db      	lsls	r3, r3, #3
 8017118:	fb01 f10e 	mul.w	r1, r1, lr
 801711c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017120:	4313      	orrs	r3, r2
 8017122:	1c4a      	adds	r2, r1, #1
 8017124:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017128:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801712c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8017130:	ea4c 0c03 	orr.w	ip, ip, r3
 8017134:	f8a7 c000 	strh.w	ip, [r7]
 8017138:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801713a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801713c:	441a      	add	r2, r3
 801713e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017140:	9225      	str	r2, [sp, #148]	; 0x94
 8017142:	441d      	add	r5, r3
 8017144:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8017146:	3b01      	subs	r3, #1
 8017148:	3702      	adds	r7, #2
 801714a:	9317      	str	r3, [sp, #92]	; 0x5c
 801714c:	e699      	b.n	8016e82 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801714e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017150:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8017152:	441c      	add	r4, r3
 8017154:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017156:	9425      	str	r4, [sp, #148]	; 0x94
 8017158:	441d      	add	r5, r3
 801715a:	9b07      	ldr	r3, [sp, #28]
 801715c:	3b01      	subs	r3, #1
 801715e:	9307      	str	r3, [sp, #28]
 8017160:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017162:	3302      	adds	r3, #2
 8017164:	930a      	str	r3, [sp, #40]	; 0x28
 8017166:	e66b      	b.n	8016e40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8017168:	d024      	beq.n	80171b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801716a:	9b07      	ldr	r3, [sp, #28]
 801716c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801716e:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8017170:	3b01      	subs	r3, #1
 8017172:	fb00 4003 	mla	r0, r0, r3, r4
 8017176:	1400      	asrs	r0, r0, #16
 8017178:	f53f ae80 	bmi.w	8016e7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801717c:	3901      	subs	r1, #1
 801717e:	4288      	cmp	r0, r1
 8017180:	f6bf ae7c 	bge.w	8016e7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8017184:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8017186:	fb01 5303 	mla	r3, r1, r3, r5
 801718a:	141b      	asrs	r3, r3, #16
 801718c:	f53f ae76 	bmi.w	8016e7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8017190:	3a01      	subs	r2, #1
 8017192:	4293      	cmp	r3, r2
 8017194:	f6bf ae72 	bge.w	8016e7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8017198:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801719c:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80171a0:	f1bb 0f00 	cmp.w	fp, #0
 80171a4:	dc70      	bgt.n	8017288 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80171a6:	9b07      	ldr	r3, [sp, #28]
 80171a8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80171ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80171ae:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80171b2:	930a      	str	r3, [sp, #40]	; 0x28
 80171b4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80171b6:	2b00      	cmp	r3, #0
 80171b8:	f340 81ae 	ble.w	8017518 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80171bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80171c0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80171c4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80171c8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80171ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80171ce:	ee31 1a05 	vadd.f32	s2, s2, s10
 80171d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80171d6:	eef0 6a62 	vmov.f32	s13, s5
 80171da:	ee61 7a27 	vmul.f32	s15, s2, s15
 80171de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80171e2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80171e6:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 80171ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80171ee:	eef0 6a43 	vmov.f32	s13, s6
 80171f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80171f6:	ee12 2a90 	vmov	r2, s5
 80171fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80171fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8017202:	ee13 2a10 	vmov	r2, s6
 8017206:	9327      	str	r3, [sp, #156]	; 0x9c
 8017208:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801720a:	fb92 f3f3 	sdiv	r3, r2, r3
 801720e:	9328      	str	r3, [sp, #160]	; 0xa0
 8017210:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8017212:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8017214:	3b01      	subs	r3, #1
 8017216:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801721a:	9316      	str	r3, [sp, #88]	; 0x58
 801721c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801721e:	bf08      	it	eq
 8017220:	4613      	moveq	r3, r2
 8017222:	ee16 5a90 	vmov	r5, s13
 8017226:	9307      	str	r3, [sp, #28]
 8017228:	eeb0 3a67 	vmov.f32	s6, s15
 801722c:	eef0 2a47 	vmov.f32	s5, s14
 8017230:	e5f8      	b.n	8016e24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8017232:	2800      	cmp	r0, #0
 8017234:	f43f ae6b 	beq.w	8016f0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8017238:	f818 1001 	ldrb.w	r1, [r8, r1]
 801723c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017240:	9108      	str	r1, [sp, #32]
 8017242:	0e09      	lsrs	r1, r1, #24
 8017244:	9110      	str	r1, [sp, #64]	; 0x40
 8017246:	e662      	b.n	8016f0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8017248:	f113 0801 	adds.w	r8, r3, #1
 801724c:	f53f af74 	bmi.w	8017138 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8017250:	4541      	cmp	r1, r8
 8017252:	f6ff af71 	blt.w	8017138 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8017256:	f11c 0801 	adds.w	r8, ip, #1
 801725a:	f53f af6d 	bmi.w	8017138 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801725e:	45c6      	cmp	lr, r8
 8017260:	f6ff af6a 	blt.w	8017138 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8017264:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8017268:	b209      	sxth	r1, r1
 801726a:	fa0f f38e 	sxth.w	r3, lr
 801726e:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8017272:	9301      	str	r3, [sp, #4]
 8017274:	9100      	str	r1, [sp, #0]
 8017276:	4633      	mov	r3, r6
 8017278:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801727a:	9819      	ldr	r0, [sp, #100]	; 0x64
 801727c:	4639      	mov	r1, r7
 801727e:	f7ff fc7a 	bl	8016b76 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8017282:	e759      	b.n	8017138 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8017284:	fffff800 	.word	0xfffff800
 8017288:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801728a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801728c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017290:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017292:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017296:	1427      	asrs	r7, r4, #16
 8017298:	142b      	asrs	r3, r5, #16
 801729a:	fb01 7303 	mla	r3, r1, r3, r7
 801729e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80172a0:	18e7      	adds	r7, r4, r3
 80172a2:	5ce3      	ldrb	r3, [r4, r3]
 80172a4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80172a8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80172ac:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80172b0:	2a00      	cmp	r2, #0
 80172b2:	f000 8127 	beq.w	8017504 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80172b6:	f897 e001 	ldrb.w	lr, [r7, #1]
 80172ba:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80172be:	940d      	str	r4, [sp, #52]	; 0x34
 80172c0:	0e24      	lsrs	r4, r4, #24
 80172c2:	9414      	str	r4, [sp, #80]	; 0x50
 80172c4:	b170      	cbz	r0, 80172e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80172c6:	eb07 0e01 	add.w	lr, r7, r1
 80172ca:	5c79      	ldrb	r1, [r7, r1]
 80172cc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80172d0:	9109      	str	r1, [sp, #36]	; 0x24
 80172d2:	0e09      	lsrs	r1, r1, #24
 80172d4:	9111      	str	r1, [sp, #68]	; 0x44
 80172d6:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80172da:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80172de:	910e      	str	r1, [sp, #56]	; 0x38
 80172e0:	0e09      	lsrs	r1, r1, #24
 80172e2:	9115      	str	r1, [sp, #84]	; 0x54
 80172e4:	b292      	uxth	r2, r2
 80172e6:	b280      	uxth	r0, r0
 80172e8:	fb02 f800 	mul.w	r8, r2, r0
 80172ec:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80172f0:	0112      	lsls	r2, r2, #4
 80172f2:	eba2 0e08 	sub.w	lr, r2, r8
 80172f6:	b280      	uxth	r0, r0
 80172f8:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80172fc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80172fe:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017300:	fa1f fe8e 	uxth.w	lr, lr
 8017304:	1a09      	subs	r1, r1, r0
 8017306:	b289      	uxth	r1, r1
 8017308:	fb0e f202 	mul.w	r2, lr, r2
 801730c:	fb01 220c 	mla	r2, r1, ip, r2
 8017310:	fb00 2204 	mla	r2, r0, r4, r2
 8017314:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8017316:	fb08 2204 	mla	r2, r8, r4, r2
 801731a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801731e:	2a00      	cmp	r2, #0
 8017320:	f000 80e5 	beq.w	80174ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8017324:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8017328:	d019      	beq.n	801735e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801732a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801732e:	fb0c fa0a 	mul.w	sl, ip, sl
 8017332:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017336:	fb0c fc03 	mul.w	ip, ip, r3
 801733a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801733e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017342:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8017346:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801734a:	4453      	add	r3, sl
 801734c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8017350:	0a1b      	lsrs	r3, r3, #8
 8017352:	0a3f      	lsrs	r7, r7, #8
 8017354:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017358:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801735c:	433b      	orrs	r3, r7
 801735e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017360:	2cff      	cmp	r4, #255	; 0xff
 8017362:	d020      	beq.n	80173a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8017364:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017366:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801736a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801736c:	4367      	muls	r7, r4
 801736e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017370:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017374:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017376:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801737a:	fb04 fa0a 	mul.w	sl, r4, sl
 801737e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8017382:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017386:	44bc      	add	ip, r7
 8017388:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801738c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8017390:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017394:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017398:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801739c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80173a0:	ea4c 040a 	orr.w	r4, ip, sl
 80173a4:	940d      	str	r4, [sp, #52]	; 0x34
 80173a6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80173a8:	2cff      	cmp	r4, #255	; 0xff
 80173aa:	d020      	beq.n	80173ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 80173ac:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80173ae:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80173b2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80173b4:	4367      	muls	r7, r4
 80173b6:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80173b8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80173bc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80173be:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80173c2:	fb04 fa0a 	mul.w	sl, r4, sl
 80173c6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80173ca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80173ce:	44bc      	add	ip, r7
 80173d0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80173d4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80173d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80173dc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80173e0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80173e4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80173e8:	ea4c 040a 	orr.w	r4, ip, sl
 80173ec:	9409      	str	r4, [sp, #36]	; 0x24
 80173ee:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80173f0:	2cff      	cmp	r4, #255	; 0xff
 80173f2:	d020      	beq.n	8017436 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 80173f4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80173f6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80173fa:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80173fc:	4367      	muls	r7, r4
 80173fe:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017400:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017404:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8017406:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801740a:	fb04 fa0a 	mul.w	sl, r4, sl
 801740e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8017412:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017416:	44bc      	add	ip, r7
 8017418:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801741c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8017420:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017424:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017428:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801742c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017430:	ea4c 040a 	orr.w	r4, ip, sl
 8017434:	940e      	str	r4, [sp, #56]	; 0x38
 8017436:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017438:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801743c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801743e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8017442:	fb0e f707 	mul.w	r7, lr, r7
 8017446:	fb01 770c 	mla	r7, r1, ip, r7
 801744a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801744e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017450:	fb00 770c 	mla	r7, r0, ip, r7
 8017454:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017458:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801745a:	fb08 770c 	mla	r7, r8, ip, r7
 801745e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8017462:	fb0e fe0c 	mul.w	lr, lr, ip
 8017466:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801746a:	fb01 e303 	mla	r3, r1, r3, lr
 801746e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8017470:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8017474:	990e      	ldr	r1, [sp, #56]	; 0x38
 8017476:	fb00 330a 	mla	r3, r0, sl, r3
 801747a:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801747e:	fb08 3c0c 	mla	ip, r8, ip, r3
 8017482:	f8b9 3000 	ldrh.w	r3, [r9]
 8017486:	43d2      	mvns	r2, r2
 8017488:	1218      	asrs	r0, r3, #8
 801748a:	b2d2      	uxtb	r2, r2
 801748c:	10d9      	asrs	r1, r3, #3
 801748e:	0a3f      	lsrs	r7, r7, #8
 8017490:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017494:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017498:	00db      	lsls	r3, r3, #3
 801749a:	4350      	muls	r0, r2
 801749c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80174a0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80174a4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80174a8:	b2db      	uxtb	r3, r3
 80174aa:	ea47 070c 	orr.w	r7, r7, ip
 80174ae:	4351      	muls	r1, r2
 80174b0:	4353      	muls	r3, r2
 80174b2:	1c42      	adds	r2, r0, #1
 80174b4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80174b8:	0c3a      	lsrs	r2, r7, #16
 80174ba:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80174be:	4a18      	ldr	r2, [pc, #96]	; (8017520 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 80174c0:	b2c0      	uxtb	r0, r0
 80174c2:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80174c6:	1c4a      	adds	r2, r1, #1
 80174c8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80174cc:	0a3a      	lsrs	r2, r7, #8
 80174ce:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80174d2:	00c9      	lsls	r1, r1, #3
 80174d4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80174d8:	4301      	orrs	r1, r0
 80174da:	1c58      	adds	r0, r3, #1
 80174dc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80174e0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80174e4:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80174e8:	4308      	orrs	r0, r1
 80174ea:	f8a9 0000 	strh.w	r0, [r9]
 80174ee:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80174f0:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80174f2:	441a      	add	r2, r3
 80174f4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80174f6:	9225      	str	r2, [sp, #148]	; 0x94
 80174f8:	f109 0902 	add.w	r9, r9, #2
 80174fc:	441d      	add	r5, r3
 80174fe:	f10b 3bff 	add.w	fp, fp, #4294967295
 8017502:	e64d      	b.n	80171a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8017504:	2800      	cmp	r0, #0
 8017506:	f43f aeed 	beq.w	80172e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801750a:	5c79      	ldrb	r1, [r7, r1]
 801750c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017510:	9109      	str	r1, [sp, #36]	; 0x24
 8017512:	0e09      	lsrs	r1, r1, #24
 8017514:	9111      	str	r1, [sp, #68]	; 0x44
 8017516:	e6e5      	b.n	80172e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8017518:	b01b      	add	sp, #108	; 0x6c
 801751a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801751e:	bf00      	nop
 8017520:	fffff800 	.word	0xfffff800

08017524 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8017524:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017528:	b085      	sub	sp, #20
 801752a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801752e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8017532:	9103      	str	r1, [sp, #12]
 8017534:	fb00 7406 	mla	r4, r0, r6, r7
 8017538:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801753c:	2800      	cmp	r0, #0
 801753e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8017542:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8017546:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801754a:	9501      	str	r5, [sp, #4]
 801754c:	eb03 0904 	add.w	r9, r3, r4
 8017550:	f2c0 8150 	blt.w	80177f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8017554:	4583      	cmp	fp, r0
 8017556:	f340 814d 	ble.w	80177f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801755a:	2f00      	cmp	r7, #0
 801755c:	f2c0 8146 	blt.w	80177ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8017560:	42be      	cmp	r6, r7
 8017562:	f340 8143 	ble.w	80177ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8017566:	f813 c004 	ldrb.w	ip, [r3, r4]
 801756a:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801756e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8017572:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8017576:	4355      	muls	r5, r2
 8017578:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801757c:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8017580:	fb0c f203 	mul.w	r2, ip, r3
 8017584:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8017588:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801758c:	441d      	add	r5, r3
 801758e:	f102 0320 	add.w	r3, r2, #32
 8017592:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8017596:	0a1b      	lsrs	r3, r3, #8
 8017598:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801759c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80175a0:	431c      	orrs	r4, r3
 80175a2:	1c7b      	adds	r3, r7, #1
 80175a4:	f100 812b 	bmi.w	80177fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80175a8:	429e      	cmp	r6, r3
 80175aa:	f340 8128 	ble.w	80177fe <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80175ae:	2900      	cmp	r1, #0
 80175b0:	f000 8128 	beq.w	8017804 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 80175b4:	9a01      	ldr	r2, [sp, #4]
 80175b6:	f899 3001 	ldrb.w	r3, [r9, #1]
 80175ba:	8855      	ldrh	r5, [r2, #2]
 80175bc:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80175c0:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80175c4:	fb08 f802 	mul.w	r8, r8, r2
 80175c8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80175cc:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80175d0:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80175d4:	435d      	muls	r5, r3
 80175d6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80175da:	44d0      	add	r8, sl
 80175dc:	f105 0a20 	add.w	sl, r5, #32
 80175e0:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80175e4:	0a2d      	lsrs	r5, r5, #8
 80175e6:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80175ea:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80175ee:	432a      	orrs	r2, r5
 80175f0:	3001      	adds	r0, #1
 80175f2:	f100 810d 	bmi.w	8017810 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80175f6:	4583      	cmp	fp, r0
 80175f8:	f340 810a 	ble.w	8017810 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80175fc:	f1be 0f00 	cmp.w	lr, #0
 8017600:	f000 810b 	beq.w	801781a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8017604:	2f00      	cmp	r7, #0
 8017606:	f2c0 8100 	blt.w	801780a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801760a:	42be      	cmp	r6, r7
 801760c:	f340 80fd 	ble.w	801780a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8017610:	9801      	ldr	r0, [sp, #4]
 8017612:	f819 5006 	ldrb.w	r5, [r9, r6]
 8017616:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801761a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801761e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8017622:	fb0a fa00 	mul.w	sl, sl, r0
 8017626:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801762a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801762e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8017632:	fb05 f808 	mul.w	r8, r5, r8
 8017636:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801763a:	4482      	add	sl, r0
 801763c:	f108 0020 	add.w	r0, r8, #32
 8017640:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8017644:	0a00      	lsrs	r0, r0, #8
 8017646:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801764a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801764e:	ea4b 0b00 	orr.w	fp, fp, r0
 8017652:	3701      	adds	r7, #1
 8017654:	f100 80e6 	bmi.w	8017824 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8017658:	42be      	cmp	r6, r7
 801765a:	f340 80e3 	ble.w	8017824 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801765e:	2900      	cmp	r1, #0
 8017660:	f000 80e3 	beq.w	801782a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8017664:	3601      	adds	r6, #1
 8017666:	9801      	ldr	r0, [sp, #4]
 8017668:	f819 7006 	ldrb.w	r7, [r9, r6]
 801766c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8017670:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8017674:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8017678:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801767c:	fb09 f906 	mul.w	r9, r9, r6
 8017680:	fb07 f800 	mul.w	r8, r7, r0
 8017684:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8017688:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801768c:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8017690:	44d1      	add	r9, sl
 8017692:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8017696:	f108 0020 	add.w	r0, r8, #32
 801769a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801769e:	0a00      	lsrs	r0, r0, #8
 80176a0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80176a4:	4330      	orrs	r0, r6
 80176a6:	b28e      	uxth	r6, r1
 80176a8:	fa1f f98e 	uxth.w	r9, lr
 80176ac:	fb06 f809 	mul.w	r8, r6, r9
 80176b0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80176b4:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80176b8:	0136      	lsls	r6, r6, #4
 80176ba:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80176be:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80176c2:	9601      	str	r6, [sp, #4]
 80176c4:	ea4a 0404 	orr.w	r4, sl, r4
 80176c8:	fa1f f689 	uxth.w	r6, r9
 80176cc:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80176d0:	fb11 f90e 	smulbb	r9, r1, lr
 80176d4:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80176d8:	9602      	str	r6, [sp, #8]
 80176da:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80176de:	4626      	mov	r6, r4
 80176e0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80176e4:	f1ce 0410 	rsb	r4, lr, #16
 80176e8:	1a64      	subs	r4, r4, r1
 80176ea:	ea4a 0202 	orr.w	r2, sl, r2
 80176ee:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80176f2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80176f6:	434a      	muls	r2, r1
 80176f8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80176fc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017700:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017704:	fb04 2406 	mla	r4, r4, r6, r2
 8017708:	ea4a 0000 	orr.w	r0, sl, r0
 801770c:	fb09 4200 	mla	r2, r9, r0, r4
 8017710:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8017714:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8017718:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801771c:	ea44 0b0b 	orr.w	fp, r4, fp
 8017720:	9c01      	ldr	r4, [sp, #4]
 8017722:	9e02      	ldr	r6, [sp, #8]
 8017724:	9903      	ldr	r1, [sp, #12]
 8017726:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801772a:	1ba4      	subs	r4, r4, r6
 801772c:	9e01      	ldr	r6, [sp, #4]
 801772e:	8808      	ldrh	r0, [r1, #0]
 8017730:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8017734:	eba6 0608 	sub.w	r6, r6, r8
 8017738:	b2b6      	uxth	r6, r6
 801773a:	b2a4      	uxth	r4, r4
 801773c:	4373      	muls	r3, r6
 801773e:	fb0c 3304 	mla	r3, ip, r4, r3
 8017742:	9c02      	ldr	r4, [sp, #8]
 8017744:	fb04 3505 	mla	r5, r4, r5, r3
 8017748:	fb08 5707 	mla	r7, r8, r7, r5
 801774c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8017750:	b289      	uxth	r1, r1
 8017752:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8017756:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801775a:	434f      	muls	r7, r1
 801775c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8017760:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017764:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017768:	1c7b      	adds	r3, r7, #1
 801776a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801776e:	ea42 0e0e 	orr.w	lr, r2, lr
 8017772:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8017776:	fa1f f28e 	uxth.w	r2, lr
 801777a:	1203      	asrs	r3, r0, #8
 801777c:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8017780:	b2ff      	uxtb	r7, r7
 8017782:	1215      	asrs	r5, r2, #8
 8017784:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8017788:	fb13 f307 	smulbb	r3, r3, r7
 801778c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017790:	fb05 3501 	mla	r5, r5, r1, r3
 8017794:	10c3      	asrs	r3, r0, #3
 8017796:	10d4      	asrs	r4, r2, #3
 8017798:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801779c:	fb13 f307 	smulbb	r3, r3, r7
 80177a0:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80177a4:	fb04 3401 	mla	r4, r4, r1, r3
 80177a8:	00c3      	lsls	r3, r0, #3
 80177aa:	00d2      	lsls	r2, r2, #3
 80177ac:	b2db      	uxtb	r3, r3
 80177ae:	fb13 f307 	smulbb	r3, r3, r7
 80177b2:	b2d2      	uxtb	r2, r2
 80177b4:	fb02 3101 	mla	r1, r2, r1, r3
 80177b8:	b2ad      	uxth	r5, r5
 80177ba:	b289      	uxth	r1, r1
 80177bc:	b2a4      	uxth	r4, r4
 80177be:	1c6b      	adds	r3, r5, #1
 80177c0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80177c4:	1c62      	adds	r2, r4, #1
 80177c6:	1c4b      	adds	r3, r1, #1
 80177c8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80177cc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80177d0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80177d4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80177d8:	0964      	lsrs	r4, r4, #5
 80177da:	432b      	orrs	r3, r5
 80177dc:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80177e0:	9a03      	ldr	r2, [sp, #12]
 80177e2:	4323      	orrs	r3, r4
 80177e4:	8013      	strh	r3, [r2, #0]
 80177e6:	b005      	add	sp, #20
 80177e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80177ec:	f04f 0c00 	mov.w	ip, #0
 80177f0:	4664      	mov	r4, ip
 80177f2:	e6d6      	b.n	80175a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 80177f4:	2300      	movs	r3, #0
 80177f6:	469c      	mov	ip, r3
 80177f8:	461a      	mov	r2, r3
 80177fa:	461c      	mov	r4, r3
 80177fc:	e6f8      	b.n	80175f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80177fe:	2300      	movs	r3, #0
 8017800:	461a      	mov	r2, r3
 8017802:	e6f5      	b.n	80175f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8017804:	460b      	mov	r3, r1
 8017806:	460a      	mov	r2, r1
 8017808:	e6f2      	b.n	80175f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801780a:	2500      	movs	r5, #0
 801780c:	46ab      	mov	fp, r5
 801780e:	e720      	b.n	8017652 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8017810:	2700      	movs	r7, #0
 8017812:	463d      	mov	r5, r7
 8017814:	4638      	mov	r0, r7
 8017816:	46bb      	mov	fp, r7
 8017818:	e745      	b.n	80176a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801781a:	4677      	mov	r7, lr
 801781c:	4675      	mov	r5, lr
 801781e:	4670      	mov	r0, lr
 8017820:	46f3      	mov	fp, lr
 8017822:	e740      	b.n	80176a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8017824:	2700      	movs	r7, #0
 8017826:	4638      	mov	r0, r7
 8017828:	e73d      	b.n	80176a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801782a:	460f      	mov	r7, r1
 801782c:	4608      	mov	r0, r1
 801782e:	e73a      	b.n	80176a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08017830 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017830:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017834:	b097      	sub	sp, #92	; 0x5c
 8017836:	9214      	str	r2, [sp, #80]	; 0x50
 8017838:	9308      	str	r3, [sp, #32]
 801783a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801783c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8017840:	9312      	str	r3, [sp, #72]	; 0x48
 8017842:	9111      	str	r1, [sp, #68]	; 0x44
 8017844:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8017848:	9015      	str	r0, [sp, #84]	; 0x54
 801784a:	6850      	ldr	r0, [r2, #4]
 801784c:	6812      	ldr	r2, [r2, #0]
 801784e:	fb00 1303 	mla	r3, r0, r3, r1
 8017852:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017856:	9309      	str	r3, [sp, #36]	; 0x24
 8017858:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801785a:	681b      	ldr	r3, [r3, #0]
 801785c:	930b      	str	r3, [sp, #44]	; 0x2c
 801785e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017860:	685b      	ldr	r3, [r3, #4]
 8017862:	930c      	str	r3, [sp, #48]	; 0x30
 8017864:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8017868:	930a      	str	r3, [sp, #40]	; 0x28
 801786a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801786c:	2b00      	cmp	r3, #0
 801786e:	dc03      	bgt.n	8017878 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8017870:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8017872:	2b00      	cmp	r3, #0
 8017874:	f340 83cb 	ble.w	801800e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8017878:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801787a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801787e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017882:	1e48      	subs	r0, r1, #1
 8017884:	1e55      	subs	r5, r2, #1
 8017886:	9b08      	ldr	r3, [sp, #32]
 8017888:	2b00      	cmp	r3, #0
 801788a:	f340 81a3 	ble.w	8017bd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801788e:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8017890:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8017892:	1436      	asrs	r6, r6, #16
 8017894:	ea4f 4323 	mov.w	r3, r3, asr #16
 8017898:	d406      	bmi.n	80178a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801789a:	4286      	cmp	r6, r0
 801789c:	da04      	bge.n	80178a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801789e:	2b00      	cmp	r3, #0
 80178a0:	db02      	blt.n	80178a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80178a2:	42ab      	cmp	r3, r5
 80178a4:	f2c0 8197 	blt.w	8017bd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80178a8:	3601      	adds	r6, #1
 80178aa:	f100 8184 	bmi.w	8017bb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80178ae:	42b1      	cmp	r1, r6
 80178b0:	f2c0 8181 	blt.w	8017bb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80178b4:	3301      	adds	r3, #1
 80178b6:	f100 817e 	bmi.w	8017bb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80178ba:	429a      	cmp	r2, r3
 80178bc:	f2c0 817b 	blt.w	8017bb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80178c0:	9b08      	ldr	r3, [sp, #32]
 80178c2:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80178c4:	9313      	str	r3, [sp, #76]	; 0x4c
 80178c6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80178ca:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80178cc:	2b00      	cmp	r3, #0
 80178ce:	f340 81a4 	ble.w	8017c1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80178d2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80178d4:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80178d6:	1418      	asrs	r0, r3, #16
 80178d8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80178da:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80178de:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80178e0:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80178e4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80178e6:	142d      	asrs	r5, r5, #16
 80178e8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80178ec:	f100 81f8 	bmi.w	8017ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80178f0:	f102 3eff 	add.w	lr, r2, #4294967295
 80178f4:	4575      	cmp	r5, lr
 80178f6:	f280 81f3 	bge.w	8017ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80178fa:	2800      	cmp	r0, #0
 80178fc:	f2c0 81f0 	blt.w	8017ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8017900:	f103 3eff 	add.w	lr, r3, #4294967295
 8017904:	4570      	cmp	r0, lr
 8017906:	f280 81eb 	bge.w	8017ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801790a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801790c:	b212      	sxth	r2, r2
 801790e:	fb00 5002 	mla	r0, r0, r2, r5
 8017912:	fa1f fe81 	uxth.w	lr, r1
 8017916:	eb03 0a00 	add.w	sl, r3, r0
 801791a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801791e:	f813 9000 	ldrb.w	r9, [r3, r0]
 8017922:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017926:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801792a:	b29b      	uxth	r3, r3
 801792c:	f1bc 0f00 	cmp.w	ip, #0
 8017930:	f000 81b9 	beq.w	8017ca6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8017934:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8017938:	940d      	str	r4, [sp, #52]	; 0x34
 801793a:	eb0a 0b02 	add.w	fp, sl, r2
 801793e:	fa1f fa8c 	uxth.w	sl, ip
 8017942:	fb0a fe0e 	mul.w	lr, sl, lr
 8017946:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801794a:	fa1f fa8a 	uxth.w	sl, sl
 801794e:	eba5 050e 	sub.w	r5, r5, lr
 8017952:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017956:	940e      	str	r4, [sp, #56]	; 0x38
 8017958:	eba3 030a 	sub.w	r3, r3, sl
 801795c:	b2ad      	uxth	r5, r5
 801795e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017960:	b29b      	uxth	r3, r3
 8017962:	fb08 f505 	mul.w	r5, r8, r5
 8017966:	fb09 5303 	mla	r3, r9, r3, r5
 801796a:	fb0a 3304 	mla	r3, sl, r4, r3
 801796e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017970:	fb0e 3304 	mla	r3, lr, r4, r3
 8017974:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017978:	2b00      	cmp	r3, #0
 801797a:	f000 810f 	beq.w	8017b9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801797e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017980:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017984:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8017988:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801798c:	f000 8190 	beq.w	8017cb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8017990:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8017994:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017998:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801799c:	fb09 f000 	mul.w	r0, r9, r0
 80179a0:	fb0a fe0e 	mul.w	lr, sl, lr
 80179a4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80179a8:	f100 0b20 	add.w	fp, r0, #32
 80179ac:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80179b0:	44ce      	add	lr, r9
 80179b2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80179b6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80179ba:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80179be:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80179c2:	ea4e 0909 	orr.w	r9, lr, r9
 80179c6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80179ca:	8868      	ldrh	r0, [r5, #2]
 80179cc:	d019      	beq.n	8017a02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80179ce:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80179d2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80179d6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80179da:	fb08 f800 	mul.w	r8, r8, r0
 80179de:	fb0a fe0e 	mul.w	lr, sl, lr
 80179e2:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80179e6:	f108 0b20 	add.w	fp, r8, #32
 80179ea:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80179ee:	4486      	add	lr, r0
 80179f0:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80179f4:	0a00      	lsrs	r0, r0, #8
 80179f6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80179fa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80179fe:	ea4e 0000 	orr.w	r0, lr, r0
 8017a02:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8017a06:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8017a0a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017a0e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017a12:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017a16:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017a1a:	ea4e 0909 	orr.w	r9, lr, r9
 8017a1e:	ea4a 0000 	orr.w	r0, sl, r0
 8017a22:	f1bc 0f00 	cmp.w	ip, #0
 8017a26:	f000 8145 	beq.w	8017cb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8017a2a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8017a2e:	3a01      	subs	r2, #1
 8017a30:	0052      	lsls	r2, r2, #1
 8017a32:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017a34:	3202      	adds	r2, #2
 8017a36:	2cff      	cmp	r4, #255	; 0xff
 8017a38:	eb05 0e02 	add.w	lr, r5, r2
 8017a3c:	5aaa      	ldrh	r2, [r5, r2]
 8017a3e:	d018      	beq.n	8017a72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8017a40:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8017a44:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017a48:	fb04 fa02 	mul.w	sl, r4, r2
 8017a4c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017a50:	fb08 f805 	mul.w	r8, r8, r5
 8017a54:	f10a 0520 	add.w	r5, sl, #32
 8017a58:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8017a5c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8017a60:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017a64:	4442      	add	r2, r8
 8017a66:	0a2d      	lsrs	r5, r5, #8
 8017a68:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8017a6c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017a70:	432a      	orrs	r2, r5
 8017a72:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017a74:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8017a78:	2cff      	cmp	r4, #255	; 0xff
 8017a7a:	d01a      	beq.n	8017ab2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8017a7c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8017a80:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017a84:	fb04 fa05 	mul.w	sl, r4, r5
 8017a88:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017a8c:	fb08 f80e 	mul.w	r8, r8, lr
 8017a90:	f10a 0e20 	add.w	lr, sl, #32
 8017a94:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8017a98:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8017a9c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017aa0:	4445      	add	r5, r8
 8017aa2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017aa6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8017aaa:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8017aae:	ea45 050e 	orr.w	r5, r5, lr
 8017ab2:	fb1c fe01 	smulbb	lr, ip, r1
 8017ab6:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8017aba:	f1cc 0810 	rsb	r8, ip, #16
 8017abe:	eba8 0801 	sub.w	r8, r8, r1
 8017ac2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8017ac6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8017aca:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8017ace:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8017ad2:	4341      	muls	r1, r0
 8017ad4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017ad8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017adc:	ea4a 0202 	orr.w	r2, sl, r2
 8017ae0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8017ae4:	fb09 1108 	mla	r1, r9, r8, r1
 8017ae8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017aec:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8017af0:	fb0c 1102 	mla	r1, ip, r2, r1
 8017af4:	ea4b 0505 	orr.w	r5, fp, r5
 8017af8:	fb0e 1e05 	mla	lr, lr, r5, r1
 8017afc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8017b00:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017b04:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017b08:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017b0c:	ea42 0e0e 	orr.w	lr, r2, lr
 8017b10:	fa1f f28e 	uxth.w	r2, lr
 8017b14:	2bff      	cmp	r3, #255	; 0xff
 8017b16:	d103      	bne.n	8017b20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8017b18:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017b1a:	29ff      	cmp	r1, #255	; 0xff
 8017b1c:	f000 80de 	beq.w	8017cdc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8017b20:	990a      	ldr	r1, [sp, #40]	; 0x28
 8017b22:	8838      	ldrh	r0, [r7, #0]
 8017b24:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017b26:	434b      	muls	r3, r1
 8017b28:	f103 0c01 	add.w	ip, r3, #1
 8017b2c:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8017b30:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8017b34:	fa5f fc83 	uxtb.w	ip, r3
 8017b38:	1203      	asrs	r3, r0, #8
 8017b3a:	1215      	asrs	r5, r2, #8
 8017b3c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8017b40:	fb13 f30c 	smulbb	r3, r3, ip
 8017b44:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017b48:	fb05 3501 	mla	r5, r5, r1, r3
 8017b4c:	10c3      	asrs	r3, r0, #3
 8017b4e:	10d1      	asrs	r1, r2, #3
 8017b50:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8017b54:	fb13 f30c 	smulbb	r3, r3, ip
 8017b58:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017b5c:	fb01 3104 	mla	r1, r1, r4, r3
 8017b60:	00c3      	lsls	r3, r0, #3
 8017b62:	00d2      	lsls	r2, r2, #3
 8017b64:	b2db      	uxtb	r3, r3
 8017b66:	b2d2      	uxtb	r2, r2
 8017b68:	fb13 f30c 	smulbb	r3, r3, ip
 8017b6c:	b2ad      	uxth	r5, r5
 8017b6e:	fb02 3304 	mla	r3, r2, r4, r3
 8017b72:	b29a      	uxth	r2, r3
 8017b74:	1c6b      	adds	r3, r5, #1
 8017b76:	b289      	uxth	r1, r1
 8017b78:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8017b7c:	1c53      	adds	r3, r2, #1
 8017b7e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8017b82:	1c4a      	adds	r2, r1, #1
 8017b84:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017b88:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017b8c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8017b90:	0949      	lsrs	r1, r1, #5
 8017b92:	432b      	orrs	r3, r5
 8017b94:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017b98:	430b      	orrs	r3, r1
 8017b9a:	803b      	strh	r3, [r7, #0]
 8017b9c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8017b9e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8017ba0:	4413      	add	r3, r2
 8017ba2:	9321      	str	r3, [sp, #132]	; 0x84
 8017ba4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8017ba6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8017ba8:	441a      	add	r2, r3
 8017baa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017bac:	9222      	str	r2, [sp, #136]	; 0x88
 8017bae:	3b01      	subs	r3, #1
 8017bb0:	3702      	adds	r7, #2
 8017bb2:	9313      	str	r3, [sp, #76]	; 0x4c
 8017bb4:	e689      	b.n	80178ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8017bb6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8017bb8:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8017bba:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8017bbc:	4433      	add	r3, r6
 8017bbe:	9321      	str	r3, [sp, #132]	; 0x84
 8017bc0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8017bc2:	441c      	add	r4, r3
 8017bc4:	9b08      	ldr	r3, [sp, #32]
 8017bc6:	9422      	str	r4, [sp, #136]	; 0x88
 8017bc8:	3b01      	subs	r3, #1
 8017bca:	9308      	str	r3, [sp, #32]
 8017bcc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017bce:	3302      	adds	r3, #2
 8017bd0:	9309      	str	r3, [sp, #36]	; 0x24
 8017bd2:	e658      	b.n	8017886 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8017bd4:	d028      	beq.n	8017c28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8017bd6:	9b08      	ldr	r3, [sp, #32]
 8017bd8:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8017bda:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8017bdc:	3b01      	subs	r3, #1
 8017bde:	fb00 5003 	mla	r0, r0, r3, r5
 8017be2:	1400      	asrs	r0, r0, #16
 8017be4:	f53f ae6c 	bmi.w	80178c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017be8:	3901      	subs	r1, #1
 8017bea:	4288      	cmp	r0, r1
 8017bec:	f6bf ae68 	bge.w	80178c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017bf0:	9924      	ldr	r1, [sp, #144]	; 0x90
 8017bf2:	9822      	ldr	r0, [sp, #136]	; 0x88
 8017bf4:	fb01 0303 	mla	r3, r1, r3, r0
 8017bf8:	141b      	asrs	r3, r3, #16
 8017bfa:	f53f ae61 	bmi.w	80178c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017bfe:	3a01      	subs	r2, #1
 8017c00:	4293      	cmp	r3, r2
 8017c02:	f6bf ae5d 	bge.w	80178c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8017c06:	9b08      	ldr	r3, [sp, #32]
 8017c08:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8017c0c:	9313      	str	r3, [sp, #76]	; 0x4c
 8017c0e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8017c12:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017c14:	2b00      	cmp	r3, #0
 8017c16:	f300 8082 	bgt.w	8017d1e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8017c1a:	9b08      	ldr	r3, [sp, #32]
 8017c1c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017c20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017c22:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017c26:	9309      	str	r3, [sp, #36]	; 0x24
 8017c28:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017c2a:	2b00      	cmp	r3, #0
 8017c2c:	f340 81ef 	ble.w	801800e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8017c30:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017c34:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017c38:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8017c3c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8017c3e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017c42:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017c46:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017c4a:	eef0 6a62 	vmov.f32	s13, s5
 8017c4e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017c52:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017c56:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017c5a:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8017c5e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017c62:	eef0 6a43 	vmov.f32	s13, s6
 8017c66:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017c6a:	ee12 2a90 	vmov	r2, s5
 8017c6e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017c72:	fb92 f3f3 	sdiv	r3, r2, r3
 8017c76:	ee13 2a10 	vmov	r2, s6
 8017c7a:	9323      	str	r3, [sp, #140]	; 0x8c
 8017c7c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8017c7e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017c82:	9324      	str	r3, [sp, #144]	; 0x90
 8017c84:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017c86:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017c88:	3b01      	subs	r3, #1
 8017c8a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017c8e:	9311      	str	r3, [sp, #68]	; 0x44
 8017c90:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8017c92:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8017c96:	bf08      	it	eq
 8017c98:	4613      	moveq	r3, r2
 8017c9a:	9308      	str	r3, [sp, #32]
 8017c9c:	eeb0 3a67 	vmov.f32	s6, s15
 8017ca0:	eef0 2a47 	vmov.f32	s5, s14
 8017ca4:	e5e1      	b.n	801786a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8017ca6:	fb08 f505 	mul.w	r5, r8, r5
 8017caa:	fb09 5303 	mla	r3, r9, r3, r5
 8017cae:	e661      	b.n	8017974 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8017cb0:	4681      	mov	r9, r0
 8017cb2:	e688      	b.n	80179c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8017cb4:	f1c1 0210 	rsb	r2, r1, #16
 8017cb8:	4341      	muls	r1, r0
 8017cba:	fb09 1902 	mla	r9, r9, r2, r1
 8017cbe:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017cc2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8017cc6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017cca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017cce:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017cd2:	ea42 0909 	orr.w	r9, r2, r9
 8017cd6:	fa1f f289 	uxth.w	r2, r9
 8017cda:	e71b      	b.n	8017b14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8017cdc:	803a      	strh	r2, [r7, #0]
 8017cde:	e75d      	b.n	8017b9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8017ce0:	f115 0e01 	adds.w	lr, r5, #1
 8017ce4:	f53f af5a 	bmi.w	8017b9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8017ce8:	4572      	cmp	r2, lr
 8017cea:	f6ff af57 	blt.w	8017b9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8017cee:	f110 0e01 	adds.w	lr, r0, #1
 8017cf2:	f53f af53 	bmi.w	8017b9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8017cf6:	4573      	cmp	r3, lr
 8017cf8:	f6ff af50 	blt.w	8017b9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8017cfc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017cfe:	9502      	str	r5, [sp, #8]
 8017d00:	b21b      	sxth	r3, r3
 8017d02:	b212      	sxth	r2, r2
 8017d04:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8017d08:	9301      	str	r3, [sp, #4]
 8017d0a:	9200      	str	r2, [sp, #0]
 8017d0c:	e9cd c405 	strd	ip, r4, [sp, #20]
 8017d10:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8017d14:	4639      	mov	r1, r7
 8017d16:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017d18:	f7ff fc04 	bl	8017524 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8017d1c:	e73e      	b.n	8017b9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8017d1e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8017d20:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017d24:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8017d26:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8017d2a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017d2c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017d30:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8017d32:	141f      	asrs	r7, r3, #16
 8017d34:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8017d36:	141b      	asrs	r3, r3, #16
 8017d38:	fb01 3707 	mla	r7, r1, r7, r3
 8017d3c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017d3e:	fa1f fc82 	uxth.w	ip, r2
 8017d42:	eb03 0a07 	add.w	sl, r3, r7
 8017d46:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8017d4a:	f813 9007 	ldrb.w	r9, [r3, r7]
 8017d4e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017d52:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8017d56:	b29b      	uxth	r3, r3
 8017d58:	2d00      	cmp	r5, #0
 8017d5a:	f000 813d 	beq.w	8017fd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8017d5e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8017d62:	940f      	str	r4, [sp, #60]	; 0x3c
 8017d64:	eb0a 0b01 	add.w	fp, sl, r1
 8017d68:	fa1f fa85 	uxth.w	sl, r5
 8017d6c:	fb0a fc0c 	mul.w	ip, sl, ip
 8017d70:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8017d74:	fa1f fa8a 	uxth.w	sl, sl
 8017d78:	eba0 000c 	sub.w	r0, r0, ip
 8017d7c:	eba3 030a 	sub.w	r3, r3, sl
 8017d80:	b280      	uxth	r0, r0
 8017d82:	fb08 f000 	mul.w	r0, r8, r0
 8017d86:	b29b      	uxth	r3, r3
 8017d88:	fb09 0303 	mla	r3, r9, r3, r0
 8017d8c:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017d8e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017d92:	9410      	str	r4, [sp, #64]	; 0x40
 8017d94:	fb0a 3300 	mla	r3, sl, r0, r3
 8017d98:	fb0c 3304 	mla	r3, ip, r4, r3
 8017d9c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017da0:	2b00      	cmp	r3, #0
 8017da2:	f000 810b 	beq.w	8017fbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8017da6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017da8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017daa:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017dae:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8017db2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8017db6:	f000 8114 	beq.w	8017fe2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8017dba:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8017dbe:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017dc2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017dc6:	fb09 f707 	mul.w	r7, r9, r7
 8017dca:	fb0a fc0c 	mul.w	ip, sl, ip
 8017dce:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8017dd2:	f107 0b20 	add.w	fp, r7, #32
 8017dd6:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017dda:	44cc      	add	ip, r9
 8017ddc:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8017de0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017de4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017de8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017dec:	ea4c 0909 	orr.w	r9, ip, r9
 8017df0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017df4:	8847      	ldrh	r7, [r0, #2]
 8017df6:	d019      	beq.n	8017e2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8017df8:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8017dfc:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017e00:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017e04:	fb08 f807 	mul.w	r8, r8, r7
 8017e08:	fb0a fc0c 	mul.w	ip, sl, ip
 8017e0c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8017e10:	f108 0b20 	add.w	fp, r8, #32
 8017e14:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017e18:	44bc      	add	ip, r7
 8017e1a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8017e1e:	0a3f      	lsrs	r7, r7, #8
 8017e20:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017e24:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017e28:	ea4c 0707 	orr.w	r7, ip, r7
 8017e2c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8017e30:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8017e34:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8017e38:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017e3c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017e40:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8017e44:	ea4c 0909 	orr.w	r9, ip, r9
 8017e48:	ea4a 0707 	orr.w	r7, sl, r7
 8017e4c:	2d00      	cmp	r5, #0
 8017e4e:	f000 80ca 	beq.w	8017fe6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8017e52:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8017e56:	3901      	subs	r1, #1
 8017e58:	0049      	lsls	r1, r1, #1
 8017e5a:	3102      	adds	r1, #2
 8017e5c:	eb00 0c01 	add.w	ip, r0, r1
 8017e60:	5a41      	ldrh	r1, [r0, r1]
 8017e62:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017e64:	28ff      	cmp	r0, #255	; 0xff
 8017e66:	d019      	beq.n	8017e9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8017e68:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017e6a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8017e6e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017e72:	fb04 fa01 	mul.w	sl, r4, r1
 8017e76:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017e7a:	fb08 f800 	mul.w	r8, r8, r0
 8017e7e:	f10a 0020 	add.w	r0, sl, #32
 8017e82:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8017e86:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8017e8a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017e8e:	4441      	add	r1, r8
 8017e90:	0a00      	lsrs	r0, r0, #8
 8017e92:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8017e96:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017e9a:	4301      	orrs	r1, r0
 8017e9c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017e9e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8017ea2:	2cff      	cmp	r4, #255	; 0xff
 8017ea4:	d01a      	beq.n	8017edc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8017ea6:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8017eaa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017eae:	fb04 fa00 	mul.w	sl, r4, r0
 8017eb2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017eb6:	fb08 f80c 	mul.w	r8, r8, ip
 8017eba:	f10a 0c20 	add.w	ip, sl, #32
 8017ebe:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8017ec2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8017ec6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017eca:	4440      	add	r0, r8
 8017ecc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017ed0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8017ed4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8017ed8:	ea40 000c 	orr.w	r0, r0, ip
 8017edc:	fb15 fc02 	smulbb	ip, r5, r2
 8017ee0:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8017ee4:	f1c5 0810 	rsb	r8, r5, #16
 8017ee8:	eba8 0802 	sub.w	r8, r8, r2
 8017eec:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8017ef0:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8017ef4:	437a      	muls	r2, r7
 8017ef6:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8017efa:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8017efe:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017f02:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017f06:	fb09 2208 	mla	r2, r9, r8, r2
 8017f0a:	ea4a 0101 	orr.w	r1, sl, r1
 8017f0e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8017f12:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017f16:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017f1a:	fb05 2201 	mla	r2, r5, r1, r2
 8017f1e:	ea4b 0000 	orr.w	r0, fp, r0
 8017f22:	fb0c 2200 	mla	r2, ip, r0, r2
 8017f26:	0d57      	lsrs	r7, r2, #21
 8017f28:	0952      	lsrs	r2, r2, #5
 8017f2a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017f2e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017f32:	433a      	orrs	r2, r7
 8017f34:	2bff      	cmp	r3, #255	; 0xff
 8017f36:	b292      	uxth	r2, r2
 8017f38:	d102      	bne.n	8017f40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8017f3a:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017f3c:	29ff      	cmp	r1, #255	; 0xff
 8017f3e:	d063      	beq.n	8018008 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8017f40:	980a      	ldr	r0, [sp, #40]	; 0x28
 8017f42:	f8be 1000 	ldrh.w	r1, [lr]
 8017f46:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017f48:	4343      	muls	r3, r0
 8017f4a:	1c58      	adds	r0, r3, #1
 8017f4c:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8017f50:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8017f54:	1208      	asrs	r0, r1, #8
 8017f56:	b2db      	uxtb	r3, r3
 8017f58:	1215      	asrs	r5, r2, #8
 8017f5a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017f5e:	fb10 f003 	smulbb	r0, r0, r3
 8017f62:	10cf      	asrs	r7, r1, #3
 8017f64:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017f68:	00c9      	lsls	r1, r1, #3
 8017f6a:	fb05 0504 	mla	r5, r5, r4, r0
 8017f6e:	b2c9      	uxtb	r1, r1
 8017f70:	10d0      	asrs	r0, r2, #3
 8017f72:	00d2      	lsls	r2, r2, #3
 8017f74:	fb11 f103 	smulbb	r1, r1, r3
 8017f78:	b2d2      	uxtb	r2, r2
 8017f7a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017f7e:	fb02 1204 	mla	r2, r2, r4, r1
 8017f82:	fb17 f703 	smulbb	r7, r7, r3
 8017f86:	b2ad      	uxth	r5, r5
 8017f88:	b292      	uxth	r2, r2
 8017f8a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8017f8e:	fb00 7004 	mla	r0, r0, r4, r7
 8017f92:	1c6b      	adds	r3, r5, #1
 8017f94:	1c57      	adds	r7, r2, #1
 8017f96:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8017f9a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8017f9e:	b280      	uxth	r0, r0
 8017fa0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017fa4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017fa8:	433d      	orrs	r5, r7
 8017faa:	1c47      	adds	r7, r0, #1
 8017fac:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8017fb0:	097f      	lsrs	r7, r7, #5
 8017fb2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017fb6:	433d      	orrs	r5, r7
 8017fb8:	f8ae 5000 	strh.w	r5, [lr]
 8017fbc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8017fbe:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8017fc0:	4413      	add	r3, r2
 8017fc2:	9321      	str	r3, [sp, #132]	; 0x84
 8017fc4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8017fc6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8017fc8:	441a      	add	r2, r3
 8017fca:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017fcc:	9222      	str	r2, [sp, #136]	; 0x88
 8017fce:	3b01      	subs	r3, #1
 8017fd0:	f10e 0e02 	add.w	lr, lr, #2
 8017fd4:	9313      	str	r3, [sp, #76]	; 0x4c
 8017fd6:	e61c      	b.n	8017c12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8017fd8:	fb08 f000 	mul.w	r0, r8, r0
 8017fdc:	fb09 0303 	mla	r3, r9, r3, r0
 8017fe0:	e6dc      	b.n	8017d9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8017fe2:	46b9      	mov	r9, r7
 8017fe4:	e704      	b.n	8017df0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8017fe6:	f1c2 0110 	rsb	r1, r2, #16
 8017fea:	437a      	muls	r2, r7
 8017fec:	fb09 2901 	mla	r9, r9, r1, r2
 8017ff0:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017ff4:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8017ff8:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8017ffc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018000:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018004:	4302      	orrs	r2, r0
 8018006:	e795      	b.n	8017f34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8018008:	f8ae 2000 	strh.w	r2, [lr]
 801800c:	e7d6      	b.n	8017fbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801800e:	b017      	add	sp, #92	; 0x5c
 8018010:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018014 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8018014:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018018:	b085      	sub	sp, #20
 801801a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801801e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8018022:	9103      	str	r1, [sp, #12]
 8018024:	fb00 7406 	mla	r4, r0, r6, r7
 8018028:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801802c:	2800      	cmp	r0, #0
 801802e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8018032:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8018036:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801803a:	9501      	str	r5, [sp, #4]
 801803c:	eb02 0904 	add.w	r9, r2, r4
 8018040:	f2c0 8141 	blt.w	80182c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8018044:	4583      	cmp	fp, r0
 8018046:	f340 813e 	ble.w	80182c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801804a:	2f00      	cmp	r7, #0
 801804c:	f2c0 8137 	blt.w	80182be <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8018050:	42be      	cmp	r6, r7
 8018052:	f340 8134 	ble.w	80182be <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8018056:	f812 c004 	ldrb.w	ip, [r2, r4]
 801805a:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801805e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8018062:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8018066:	4355      	muls	r5, r2
 8018068:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801806c:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8018070:	fb0c f203 	mul.w	r2, ip, r3
 8018074:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8018078:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801807c:	441d      	add	r5, r3
 801807e:	f102 0320 	add.w	r3, r2, #32
 8018082:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018086:	0a1b      	lsrs	r3, r3, #8
 8018088:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801808c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018090:	431c      	orrs	r4, r3
 8018092:	1c7b      	adds	r3, r7, #1
 8018094:	f100 811c 	bmi.w	80182d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8018098:	429e      	cmp	r6, r3
 801809a:	f340 8119 	ble.w	80182d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801809e:	2900      	cmp	r1, #0
 80180a0:	f000 8119 	beq.w	80182d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 80180a4:	9a01      	ldr	r2, [sp, #4]
 80180a6:	f899 3001 	ldrb.w	r3, [r9, #1]
 80180aa:	8855      	ldrh	r5, [r2, #2]
 80180ac:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80180b0:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80180b4:	fb08 f802 	mul.w	r8, r8, r2
 80180b8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80180bc:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80180c0:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80180c4:	435d      	muls	r5, r3
 80180c6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80180ca:	44d0      	add	r8, sl
 80180cc:	f105 0a20 	add.w	sl, r5, #32
 80180d0:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80180d4:	0a2d      	lsrs	r5, r5, #8
 80180d6:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80180da:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80180de:	432a      	orrs	r2, r5
 80180e0:	3001      	adds	r0, #1
 80180e2:	f100 80fe 	bmi.w	80182e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80180e6:	4583      	cmp	fp, r0
 80180e8:	f340 80fb 	ble.w	80182e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80180ec:	f1be 0f00 	cmp.w	lr, #0
 80180f0:	f000 80fc 	beq.w	80182ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 80180f4:	2f00      	cmp	r7, #0
 80180f6:	f2c0 80f1 	blt.w	80182dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 80180fa:	42be      	cmp	r6, r7
 80180fc:	f340 80ee 	ble.w	80182dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8018100:	9801      	ldr	r0, [sp, #4]
 8018102:	f819 5006 	ldrb.w	r5, [r9, r6]
 8018106:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801810a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801810e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8018112:	fb0a fa00 	mul.w	sl, sl, r0
 8018116:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801811a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801811e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8018122:	fb05 f808 	mul.w	r8, r5, r8
 8018126:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801812a:	4482      	add	sl, r0
 801812c:	f108 0020 	add.w	r0, r8, #32
 8018130:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8018134:	0a00      	lsrs	r0, r0, #8
 8018136:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801813a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801813e:	ea4b 0b00 	orr.w	fp, fp, r0
 8018142:	3701      	adds	r7, #1
 8018144:	f100 80d7 	bmi.w	80182f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8018148:	42be      	cmp	r6, r7
 801814a:	f340 80d4 	ble.w	80182f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801814e:	2900      	cmp	r1, #0
 8018150:	f000 80d4 	beq.w	80182fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8018154:	3601      	adds	r6, #1
 8018156:	9801      	ldr	r0, [sp, #4]
 8018158:	f819 7006 	ldrb.w	r7, [r9, r6]
 801815c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8018160:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8018164:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8018168:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801816c:	fb09 f906 	mul.w	r9, r9, r6
 8018170:	fb07 f800 	mul.w	r8, r7, r0
 8018174:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8018178:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801817c:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8018180:	44d1      	add	r9, sl
 8018182:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8018186:	f108 0020 	add.w	r0, r8, #32
 801818a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801818e:	0a00      	lsrs	r0, r0, #8
 8018190:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018194:	4330      	orrs	r0, r6
 8018196:	b28e      	uxth	r6, r1
 8018198:	fa1f f98e 	uxth.w	r9, lr
 801819c:	fb06 f809 	mul.w	r8, r6, r9
 80181a0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80181a4:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80181a8:	0136      	lsls	r6, r6, #4
 80181aa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80181ae:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80181b2:	9601      	str	r6, [sp, #4]
 80181b4:	ea4a 0404 	orr.w	r4, sl, r4
 80181b8:	fa1f f689 	uxth.w	r6, r9
 80181bc:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80181c0:	fb11 f90e 	smulbb	r9, r1, lr
 80181c4:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80181c8:	9602      	str	r6, [sp, #8]
 80181ca:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80181ce:	4626      	mov	r6, r4
 80181d0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80181d4:	f1ce 0410 	rsb	r4, lr, #16
 80181d8:	1a64      	subs	r4, r4, r1
 80181da:	ea4a 0202 	orr.w	r2, sl, r2
 80181de:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80181e2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80181e6:	434a      	muls	r2, r1
 80181e8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80181ec:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80181f0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80181f4:	fb04 2406 	mla	r4, r4, r6, r2
 80181f8:	ea4a 0000 	orr.w	r0, sl, r0
 80181fc:	fb09 4200 	mla	r2, r9, r0, r4
 8018200:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8018204:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018208:	9801      	ldr	r0, [sp, #4]
 801820a:	9903      	ldr	r1, [sp, #12]
 801820c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8018210:	ea44 0b0b 	orr.w	fp, r4, fp
 8018214:	9c02      	ldr	r4, [sp, #8]
 8018216:	8809      	ldrh	r1, [r1, #0]
 8018218:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801821c:	1b00      	subs	r0, r0, r4
 801821e:	9c01      	ldr	r4, [sp, #4]
 8018220:	eba4 0608 	sub.w	r6, r4, r8
 8018224:	b2b6      	uxth	r6, r6
 8018226:	b280      	uxth	r0, r0
 8018228:	4373      	muls	r3, r6
 801822a:	fb0c 3300 	mla	r3, ip, r0, r3
 801822e:	9802      	ldr	r0, [sp, #8]
 8018230:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8018234:	fb00 3505 	mla	r5, r0, r5, r3
 8018238:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801823c:	fb08 5707 	mla	r7, r8, r7, r5
 8018240:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8018244:	120b      	asrs	r3, r1, #8
 8018246:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801824a:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801824e:	b2ff      	uxtb	r7, r7
 8018250:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018254:	10c8      	asrs	r0, r1, #3
 8018256:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801825a:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801825e:	00c9      	lsls	r1, r1, #3
 8018260:	437b      	muls	r3, r7
 8018262:	ea42 0e0e 	orr.w	lr, r2, lr
 8018266:	b2c9      	uxtb	r1, r1
 8018268:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801826c:	fa1f f28e 	uxth.w	r2, lr
 8018270:	4378      	muls	r0, r7
 8018272:	434f      	muls	r7, r1
 8018274:	1c59      	adds	r1, r3, #1
 8018276:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801827a:	1213      	asrs	r3, r2, #8
 801827c:	f023 0307 	bic.w	r3, r3, #7
 8018280:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8018284:	1c41      	adds	r1, r0, #1
 8018286:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801828a:	10d1      	asrs	r1, r2, #3
 801828c:	f021 0103 	bic.w	r1, r1, #3
 8018290:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8018294:	021b      	lsls	r3, r3, #8
 8018296:	00c9      	lsls	r1, r1, #3
 8018298:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801829c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80182a0:	430b      	orrs	r3, r1
 80182a2:	1c79      	adds	r1, r7, #1
 80182a4:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80182a8:	00d2      	lsls	r2, r2, #3
 80182aa:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80182ae:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80182b2:	431a      	orrs	r2, r3
 80182b4:	9b03      	ldr	r3, [sp, #12]
 80182b6:	801a      	strh	r2, [r3, #0]
 80182b8:	b005      	add	sp, #20
 80182ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80182be:	f04f 0c00 	mov.w	ip, #0
 80182c2:	4664      	mov	r4, ip
 80182c4:	e6e5      	b.n	8018092 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 80182c6:	2300      	movs	r3, #0
 80182c8:	469c      	mov	ip, r3
 80182ca:	461a      	mov	r2, r3
 80182cc:	461c      	mov	r4, r3
 80182ce:	e707      	b.n	80180e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80182d0:	2300      	movs	r3, #0
 80182d2:	461a      	mov	r2, r3
 80182d4:	e704      	b.n	80180e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80182d6:	460b      	mov	r3, r1
 80182d8:	460a      	mov	r2, r1
 80182da:	e701      	b.n	80180e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80182dc:	2500      	movs	r5, #0
 80182de:	46ab      	mov	fp, r5
 80182e0:	e72f      	b.n	8018142 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 80182e2:	2700      	movs	r7, #0
 80182e4:	463d      	mov	r5, r7
 80182e6:	4638      	mov	r0, r7
 80182e8:	46bb      	mov	fp, r7
 80182ea:	e754      	b.n	8018196 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80182ec:	4677      	mov	r7, lr
 80182ee:	4675      	mov	r5, lr
 80182f0:	4670      	mov	r0, lr
 80182f2:	46f3      	mov	fp, lr
 80182f4:	e74f      	b.n	8018196 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80182f6:	2700      	movs	r7, #0
 80182f8:	4638      	mov	r0, r7
 80182fa:	e74c      	b.n	8018196 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80182fc:	460f      	mov	r7, r1
 80182fe:	4608      	mov	r0, r1
 8018300:	e749      	b.n	8018196 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08018304 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018304:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018308:	b093      	sub	sp, #76	; 0x4c
 801830a:	9210      	str	r2, [sp, #64]	; 0x40
 801830c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801830e:	910e      	str	r1, [sp, #56]	; 0x38
 8018310:	9306      	str	r3, [sp, #24]
 8018312:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8018316:	9011      	str	r0, [sp, #68]	; 0x44
 8018318:	6850      	ldr	r0, [r2, #4]
 801831a:	6812      	ldr	r2, [r2, #0]
 801831c:	fb00 1303 	mla	r3, r0, r3, r1
 8018320:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018324:	9307      	str	r3, [sp, #28]
 8018326:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018328:	681b      	ldr	r3, [r3, #0]
 801832a:	9308      	str	r3, [sp, #32]
 801832c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801832e:	685b      	ldr	r3, [r3, #4]
 8018330:	9309      	str	r3, [sp, #36]	; 0x24
 8018332:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018334:	2b00      	cmp	r3, #0
 8018336:	dc03      	bgt.n	8018340 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018338:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801833a:	2b00      	cmp	r3, #0
 801833c:	f340 83b4 	ble.w	8018aa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8018340:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018342:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018346:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801834a:	1e48      	subs	r0, r1, #1
 801834c:	1e55      	subs	r5, r2, #1
 801834e:	9b06      	ldr	r3, [sp, #24]
 8018350:	2b00      	cmp	r3, #0
 8018352:	f340 8163 	ble.w	801861c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8018356:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8018358:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801835a:	1436      	asrs	r6, r6, #16
 801835c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8018360:	d406      	bmi.n	8018370 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018362:	4286      	cmp	r6, r0
 8018364:	da04      	bge.n	8018370 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018366:	2b00      	cmp	r3, #0
 8018368:	db02      	blt.n	8018370 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801836a:	42ab      	cmp	r3, r5
 801836c:	f2c0 8157 	blt.w	801861e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8018370:	3601      	adds	r6, #1
 8018372:	f100 8144 	bmi.w	80185fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8018376:	42b1      	cmp	r1, r6
 8018378:	f2c0 8141 	blt.w	80185fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801837c:	3301      	adds	r3, #1
 801837e:	f100 813e 	bmi.w	80185fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8018382:	429a      	cmp	r2, r3
 8018384:	f2c0 813b 	blt.w	80185fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8018388:	9b06      	ldr	r3, [sp, #24]
 801838a:	9f07      	ldr	r7, [sp, #28]
 801838c:	930f      	str	r3, [sp, #60]	; 0x3c
 801838e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8018392:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018394:	2b00      	cmp	r3, #0
 8018396:	f340 8164 	ble.w	8018662 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801839a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801839c:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801839e:	1418      	asrs	r0, r3, #16
 80183a0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80183a2:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80183a6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80183a8:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80183ac:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80183ae:	142d      	asrs	r5, r5, #16
 80183b0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80183b4:	f100 81ee 	bmi.w	8018794 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80183b8:	f102 3eff 	add.w	lr, r2, #4294967295
 80183bc:	4575      	cmp	r5, lr
 80183be:	f280 81e9 	bge.w	8018794 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80183c2:	2800      	cmp	r0, #0
 80183c4:	f2c0 81e6 	blt.w	8018794 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80183c8:	f103 3eff 	add.w	lr, r3, #4294967295
 80183cc:	4570      	cmp	r0, lr
 80183ce:	f280 81e1 	bge.w	8018794 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80183d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80183d4:	b212      	sxth	r2, r2
 80183d6:	fb00 5002 	mla	r0, r0, r2, r5
 80183da:	fa1f fe81 	uxth.w	lr, r1
 80183de:	eb03 0a00 	add.w	sl, r3, r0
 80183e2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80183e6:	f813 9000 	ldrb.w	r9, [r3, r0]
 80183ea:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80183ee:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80183f2:	b29b      	uxth	r3, r3
 80183f4:	f1bc 0f00 	cmp.w	ip, #0
 80183f8:	f000 8179 	beq.w	80186ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80183fc:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8018400:	940a      	str	r4, [sp, #40]	; 0x28
 8018402:	eb0a 0b02 	add.w	fp, sl, r2
 8018406:	fa1f fa8c 	uxth.w	sl, ip
 801840a:	fb0a fe0e 	mul.w	lr, sl, lr
 801840e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8018412:	fa1f fa8a 	uxth.w	sl, sl
 8018416:	eba5 050e 	sub.w	r5, r5, lr
 801841a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801841e:	940b      	str	r4, [sp, #44]	; 0x2c
 8018420:	eba3 030a 	sub.w	r3, r3, sl
 8018424:	b2ad      	uxth	r5, r5
 8018426:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018428:	b29b      	uxth	r3, r3
 801842a:	fb08 f505 	mul.w	r5, r8, r5
 801842e:	fb09 5303 	mla	r3, r9, r3, r5
 8018432:	fb0a 3304 	mla	r3, sl, r4, r3
 8018436:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018438:	fb0e 3304 	mla	r3, lr, r4, r3
 801843c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018440:	2b00      	cmp	r3, #0
 8018442:	f000 80cf 	beq.w	80185e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8018446:	9c08      	ldr	r4, [sp, #32]
 8018448:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801844c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8018450:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8018454:	f000 8150 	beq.w	80186f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8018458:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801845c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8018460:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018464:	fb09 f000 	mul.w	r0, r9, r0
 8018468:	fb0a fe0e 	mul.w	lr, sl, lr
 801846c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8018470:	f100 0b20 	add.w	fp, r0, #32
 8018474:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8018478:	44ce      	add	lr, r9
 801847a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801847e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018482:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8018486:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801848a:	ea4e 0909 	orr.w	r9, lr, r9
 801848e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018492:	8868      	ldrh	r0, [r5, #2]
 8018494:	d019      	beq.n	80184ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8018496:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801849a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801849e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80184a2:	fb08 f800 	mul.w	r8, r8, r0
 80184a6:	fb0a fe0e 	mul.w	lr, sl, lr
 80184aa:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80184ae:	f108 0b20 	add.w	fp, r8, #32
 80184b2:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80184b6:	4486      	add	lr, r0
 80184b8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80184bc:	0a00      	lsrs	r0, r0, #8
 80184be:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80184c2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80184c6:	ea4e 0000 	orr.w	r0, lr, r0
 80184ca:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80184ce:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80184d2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80184d6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80184da:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80184de:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80184e2:	ea4e 0909 	orr.w	r9, lr, r9
 80184e6:	ea4a 0000 	orr.w	r0, sl, r0
 80184ea:	f1bc 0f00 	cmp.w	ip, #0
 80184ee:	f000 8105 	beq.w	80186fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80184f2:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80184f6:	3a01      	subs	r2, #1
 80184f8:	0052      	lsls	r2, r2, #1
 80184fa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80184fc:	3202      	adds	r2, #2
 80184fe:	2cff      	cmp	r4, #255	; 0xff
 8018500:	eb05 0e02 	add.w	lr, r5, r2
 8018504:	5aaa      	ldrh	r2, [r5, r2]
 8018506:	d018      	beq.n	801853a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8018508:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801850c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018510:	fb04 fa02 	mul.w	sl, r4, r2
 8018514:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018518:	fb08 f805 	mul.w	r8, r8, r5
 801851c:	f10a 0520 	add.w	r5, sl, #32
 8018520:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8018524:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8018528:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801852c:	4442      	add	r2, r8
 801852e:	0a2d      	lsrs	r5, r5, #8
 8018530:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8018534:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018538:	432a      	orrs	r2, r5
 801853a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801853c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8018540:	2cff      	cmp	r4, #255	; 0xff
 8018542:	d01a      	beq.n	801857a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8018544:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8018548:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801854c:	fb04 fa05 	mul.w	sl, r4, r5
 8018550:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018554:	fb08 f80e 	mul.w	r8, r8, lr
 8018558:	f10a 0e20 	add.w	lr, sl, #32
 801855c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8018560:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8018564:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018568:	4445      	add	r5, r8
 801856a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801856e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8018572:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8018576:	ea45 050e 	orr.w	r5, r5, lr
 801857a:	fb1c fe01 	smulbb	lr, ip, r1
 801857e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8018582:	f1cc 0810 	rsb	r8, ip, #16
 8018586:	eba8 0801 	sub.w	r8, r8, r1
 801858a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801858e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8018592:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8018596:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801859a:	4341      	muls	r1, r0
 801859c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80185a0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80185a4:	ea4a 0202 	orr.w	r2, sl, r2
 80185a8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80185ac:	fb09 1108 	mla	r1, r9, r8, r1
 80185b0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80185b4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80185b8:	fb0c 1102 	mla	r1, ip, r2, r1
 80185bc:	ea4b 0505 	orr.w	r5, fp, r5
 80185c0:	fb0e 1e05 	mla	lr, lr, r5, r1
 80185c4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80185c8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80185cc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80185d0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80185d4:	ea42 0e0e 	orr.w	lr, r2, lr
 80185d8:	fa1f f28e 	uxth.w	r2, lr
 80185dc:	2bff      	cmp	r3, #255	; 0xff
 80185de:	f040 80a1 	bne.w	8018724 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 80185e2:	803a      	strh	r2, [r7, #0]
 80185e4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80185e6:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80185e8:	4413      	add	r3, r2
 80185ea:	931d      	str	r3, [sp, #116]	; 0x74
 80185ec:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80185ee:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80185f0:	441a      	add	r2, r3
 80185f2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80185f4:	921e      	str	r2, [sp, #120]	; 0x78
 80185f6:	3b01      	subs	r3, #1
 80185f8:	3702      	adds	r7, #2
 80185fa:	930f      	str	r3, [sp, #60]	; 0x3c
 80185fc:	e6c9      	b.n	8018392 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80185fe:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8018600:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8018602:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8018604:	4433      	add	r3, r6
 8018606:	931d      	str	r3, [sp, #116]	; 0x74
 8018608:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801860a:	441c      	add	r4, r3
 801860c:	9b06      	ldr	r3, [sp, #24]
 801860e:	941e      	str	r4, [sp, #120]	; 0x78
 8018610:	3b01      	subs	r3, #1
 8018612:	9306      	str	r3, [sp, #24]
 8018614:	9b07      	ldr	r3, [sp, #28]
 8018616:	3302      	adds	r3, #2
 8018618:	9307      	str	r3, [sp, #28]
 801861a:	e698      	b.n	801834e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801861c:	d028      	beq.n	8018670 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801861e:	9b06      	ldr	r3, [sp, #24]
 8018620:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8018622:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8018624:	3b01      	subs	r3, #1
 8018626:	fb00 5003 	mla	r0, r0, r3, r5
 801862a:	1400      	asrs	r0, r0, #16
 801862c:	f53f aeac 	bmi.w	8018388 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018630:	3901      	subs	r1, #1
 8018632:	4288      	cmp	r0, r1
 8018634:	f6bf aea8 	bge.w	8018388 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018638:	9920      	ldr	r1, [sp, #128]	; 0x80
 801863a:	981e      	ldr	r0, [sp, #120]	; 0x78
 801863c:	fb01 0303 	mla	r3, r1, r3, r0
 8018640:	141b      	asrs	r3, r3, #16
 8018642:	f53f aea1 	bmi.w	8018388 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018646:	3a01      	subs	r2, #1
 8018648:	4293      	cmp	r3, r2
 801864a:	f6bf ae9d 	bge.w	8018388 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801864e:	9b06      	ldr	r3, [sp, #24]
 8018650:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8018654:	930f      	str	r3, [sp, #60]	; 0x3c
 8018656:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801865a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801865c:	2b00      	cmp	r3, #0
 801865e:	f300 80b6 	bgt.w	80187ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8018662:	9b06      	ldr	r3, [sp, #24]
 8018664:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018668:	9b07      	ldr	r3, [sp, #28]
 801866a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801866e:	9307      	str	r3, [sp, #28]
 8018670:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018672:	2b00      	cmp	r3, #0
 8018674:	f340 8218 	ble.w	8018aa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8018678:	ee30 0a04 	vadd.f32	s0, s0, s8
 801867c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018680:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018684:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8018686:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801868a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801868e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018692:	eef0 6a62 	vmov.f32	s13, s5
 8018696:	ee61 7a27 	vmul.f32	s15, s2, s15
 801869a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801869e:	ee77 2a62 	vsub.f32	s5, s14, s5
 80186a2:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 80186a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80186aa:	eef0 6a43 	vmov.f32	s13, s6
 80186ae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80186b2:	ee12 2a90 	vmov	r2, s5
 80186b6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80186ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80186be:	ee13 2a10 	vmov	r2, s6
 80186c2:	931f      	str	r3, [sp, #124]	; 0x7c
 80186c4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80186c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80186ca:	9320      	str	r3, [sp, #128]	; 0x80
 80186cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80186ce:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80186d0:	3b01      	subs	r3, #1
 80186d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80186d6:	930e      	str	r3, [sp, #56]	; 0x38
 80186d8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80186da:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 80186de:	bf08      	it	eq
 80186e0:	4613      	moveq	r3, r2
 80186e2:	9306      	str	r3, [sp, #24]
 80186e4:	eeb0 3a67 	vmov.f32	s6, s15
 80186e8:	eef0 2a47 	vmov.f32	s5, s14
 80186ec:	e621      	b.n	8018332 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80186ee:	fb08 f505 	mul.w	r5, r8, r5
 80186f2:	fb09 5303 	mla	r3, r9, r3, r5
 80186f6:	e6a1      	b.n	801843c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80186f8:	4681      	mov	r9, r0
 80186fa:	e6c8      	b.n	801848e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 80186fc:	f1c1 0210 	rsb	r2, r1, #16
 8018700:	4341      	muls	r1, r0
 8018702:	fb09 1902 	mla	r9, r9, r2, r1
 8018706:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801870a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801870e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018712:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018716:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801871a:	ea42 0909 	orr.w	r9, r2, r9
 801871e:	fa1f f289 	uxth.w	r2, r9
 8018722:	e75b      	b.n	80185dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8018724:	f8b7 c000 	ldrh.w	ip, [r7]
 8018728:	43db      	mvns	r3, r3
 801872a:	ea4f 202c 	mov.w	r0, ip, asr #8
 801872e:	fa5f fe83 	uxtb.w	lr, r3
 8018732:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018736:	fb00 f00e 	mul.w	r0, r0, lr
 801873a:	1c41      	adds	r1, r0, #1
 801873c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8018740:	1211      	asrs	r1, r2, #8
 8018742:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8018746:	f021 0107 	bic.w	r1, r1, #7
 801874a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801874e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018752:	48d7      	ldr	r0, [pc, #860]	; (8018ab0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8018754:	fb05 f50e 	mul.w	r5, r5, lr
 8018758:	b2c9      	uxtb	r1, r1
 801875a:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801875e:	1c69      	adds	r1, r5, #1
 8018760:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8018764:	10d1      	asrs	r1, r2, #3
 8018766:	f021 0103 	bic.w	r1, r1, #3
 801876a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801876e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8018772:	b2db      	uxtb	r3, r3
 8018774:	00c9      	lsls	r1, r1, #3
 8018776:	fb03 f30e 	mul.w	r3, r3, lr
 801877a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801877e:	4301      	orrs	r1, r0
 8018780:	1c58      	adds	r0, r3, #1
 8018782:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8018786:	00d2      	lsls	r2, r2, #3
 8018788:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801878c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018790:	430a      	orrs	r2, r1
 8018792:	e726      	b.n	80185e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8018794:	f115 0e01 	adds.w	lr, r5, #1
 8018798:	f53f af24 	bmi.w	80185e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801879c:	4572      	cmp	r2, lr
 801879e:	f6ff af21 	blt.w	80185e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80187a2:	f110 0e01 	adds.w	lr, r0, #1
 80187a6:	f53f af1d 	bmi.w	80185e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80187aa:	4573      	cmp	r3, lr
 80187ac:	f6ff af1a 	blt.w	80185e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80187b0:	b21b      	sxth	r3, r3
 80187b2:	b212      	sxth	r2, r2
 80187b4:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80187b8:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80187bc:	9301      	str	r3, [sp, #4]
 80187be:	9200      	str	r2, [sp, #0]
 80187c0:	4639      	mov	r1, r7
 80187c2:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80187c6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80187c8:	f7ff fc24 	bl	8018014 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80187cc:	e70a      	b.n	80185e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80187ce:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80187d0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80187d4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80187d6:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80187da:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80187dc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80187e0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80187e2:	141f      	asrs	r7, r3, #16
 80187e4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80187e6:	141b      	asrs	r3, r3, #16
 80187e8:	fb01 3707 	mla	r7, r1, r7, r3
 80187ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80187ee:	fa1f fc82 	uxth.w	ip, r2
 80187f2:	eb03 0a07 	add.w	sl, r3, r7
 80187f6:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80187fa:	f813 9007 	ldrb.w	r9, [r3, r7]
 80187fe:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8018802:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8018806:	b29b      	uxth	r3, r3
 8018808:	2d00      	cmp	r5, #0
 801880a:	f000 80fe 	beq.w	8018a0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801880e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8018812:	940c      	str	r4, [sp, #48]	; 0x30
 8018814:	eb0a 0b01 	add.w	fp, sl, r1
 8018818:	fa1f fa85 	uxth.w	sl, r5
 801881c:	fb0a fc0c 	mul.w	ip, sl, ip
 8018820:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8018824:	fa1f fa8a 	uxth.w	sl, sl
 8018828:	eba0 000c 	sub.w	r0, r0, ip
 801882c:	eba3 030a 	sub.w	r3, r3, sl
 8018830:	b280      	uxth	r0, r0
 8018832:	fb08 f000 	mul.w	r0, r8, r0
 8018836:	b29b      	uxth	r3, r3
 8018838:	fb09 0303 	mla	r3, r9, r3, r0
 801883c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801883e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8018842:	940d      	str	r4, [sp, #52]	; 0x34
 8018844:	fb0a 3300 	mla	r3, sl, r0, r3
 8018848:	fb0c 3304 	mla	r3, ip, r4, r3
 801884c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018850:	2b00      	cmp	r3, #0
 8018852:	f000 80cc 	beq.w	80189ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8018856:	9808      	ldr	r0, [sp, #32]
 8018858:	9c08      	ldr	r4, [sp, #32]
 801885a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801885e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8018862:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8018866:	f000 80d5 	beq.w	8018a14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801886a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801886e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8018872:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018876:	fb09 f707 	mul.w	r7, r9, r7
 801887a:	fb0a fc0c 	mul.w	ip, sl, ip
 801887e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8018882:	f107 0b20 	add.w	fp, r7, #32
 8018886:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801888a:	44cc      	add	ip, r9
 801888c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8018890:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018894:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8018898:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801889c:	ea4c 0909 	orr.w	r9, ip, r9
 80188a0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80188a4:	8847      	ldrh	r7, [r0, #2]
 80188a6:	d019      	beq.n	80188dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 80188a8:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80188ac:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80188b0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80188b4:	fb08 f807 	mul.w	r8, r8, r7
 80188b8:	fb0a fc0c 	mul.w	ip, sl, ip
 80188bc:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80188c0:	f108 0b20 	add.w	fp, r8, #32
 80188c4:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80188c8:	44bc      	add	ip, r7
 80188ca:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80188ce:	0a3f      	lsrs	r7, r7, #8
 80188d0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80188d4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80188d8:	ea4c 0707 	orr.w	r7, ip, r7
 80188dc:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80188e0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80188e4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80188e8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80188ec:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80188f0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80188f4:	ea4c 0909 	orr.w	r9, ip, r9
 80188f8:	ea4a 0707 	orr.w	r7, sl, r7
 80188fc:	2d00      	cmp	r5, #0
 80188fe:	f000 808b 	beq.w	8018a18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8018902:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8018906:	3901      	subs	r1, #1
 8018908:	0049      	lsls	r1, r1, #1
 801890a:	3102      	adds	r1, #2
 801890c:	eb00 0c01 	add.w	ip, r0, r1
 8018910:	5a41      	ldrh	r1, [r0, r1]
 8018912:	980c      	ldr	r0, [sp, #48]	; 0x30
 8018914:	28ff      	cmp	r0, #255	; 0xff
 8018916:	d019      	beq.n	801894c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8018918:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801891a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801891e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018922:	fb04 fa01 	mul.w	sl, r4, r1
 8018926:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801892a:	fb08 f800 	mul.w	r8, r8, r0
 801892e:	f10a 0020 	add.w	r0, sl, #32
 8018932:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8018936:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801893a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801893e:	4441      	add	r1, r8
 8018940:	0a00      	lsrs	r0, r0, #8
 8018942:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8018946:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801894a:	4301      	orrs	r1, r0
 801894c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801894e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8018952:	2cff      	cmp	r4, #255	; 0xff
 8018954:	d01a      	beq.n	801898c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8018956:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801895a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801895e:	fb04 fa00 	mul.w	sl, r4, r0
 8018962:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018966:	fb08 f80c 	mul.w	r8, r8, ip
 801896a:	f10a 0c20 	add.w	ip, sl, #32
 801896e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8018972:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8018976:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801897a:	4440      	add	r0, r8
 801897c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018980:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8018984:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8018988:	ea40 000c 	orr.w	r0, r0, ip
 801898c:	fb15 fc02 	smulbb	ip, r5, r2
 8018990:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8018994:	f1c5 0810 	rsb	r8, r5, #16
 8018998:	eba8 0802 	sub.w	r8, r8, r2
 801899c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80189a0:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80189a4:	437a      	muls	r2, r7
 80189a6:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80189aa:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80189ae:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80189b2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80189b6:	fb09 2208 	mla	r2, r9, r8, r2
 80189ba:	ea4a 0101 	orr.w	r1, sl, r1
 80189be:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80189c2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80189c6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80189ca:	fb05 2201 	mla	r2, r5, r1, r2
 80189ce:	ea4b 0000 	orr.w	r0, fp, r0
 80189d2:	fb0c 2200 	mla	r2, ip, r0, r2
 80189d6:	0d57      	lsrs	r7, r2, #21
 80189d8:	0952      	lsrs	r2, r2, #5
 80189da:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80189de:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80189e2:	433a      	orrs	r2, r7
 80189e4:	2bff      	cmp	r3, #255	; 0xff
 80189e6:	b292      	uxth	r2, r2
 80189e8:	d127      	bne.n	8018a3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 80189ea:	f8ae 2000 	strh.w	r2, [lr]
 80189ee:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80189f0:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80189f2:	4413      	add	r3, r2
 80189f4:	931d      	str	r3, [sp, #116]	; 0x74
 80189f6:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80189f8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80189fa:	441a      	add	r2, r3
 80189fc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80189fe:	921e      	str	r2, [sp, #120]	; 0x78
 8018a00:	3b01      	subs	r3, #1
 8018a02:	f10e 0e02 	add.w	lr, lr, #2
 8018a06:	930f      	str	r3, [sp, #60]	; 0x3c
 8018a08:	e627      	b.n	801865a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8018a0a:	fb08 f000 	mul.w	r0, r8, r0
 8018a0e:	fb09 0303 	mla	r3, r9, r3, r0
 8018a12:	e71b      	b.n	801884c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8018a14:	46b9      	mov	r9, r7
 8018a16:	e743      	b.n	80188a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8018a18:	f1c2 0110 	rsb	r1, r2, #16
 8018a1c:	437a      	muls	r2, r7
 8018a1e:	fb09 2901 	mla	r9, r9, r1, r2
 8018a22:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018a26:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8018a2a:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8018a2e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018a32:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018a36:	4302      	orrs	r2, r0
 8018a38:	e7d4      	b.n	80189e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8018a3a:	f8be 7000 	ldrh.w	r7, [lr]
 8018a3e:	4c1c      	ldr	r4, [pc, #112]	; (8018ab0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8018a40:	43db      	mvns	r3, r3
 8018a42:	1238      	asrs	r0, r7, #8
 8018a44:	fa5f fc83 	uxtb.w	ip, r3
 8018a48:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018a4c:	10fd      	asrs	r5, r7, #3
 8018a4e:	fb00 f00c 	mul.w	r0, r0, ip
 8018a52:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018a56:	fb05 f10c 	mul.w	r1, r5, ip
 8018a5a:	1c45      	adds	r5, r0, #1
 8018a5c:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8018a60:	1215      	asrs	r5, r2, #8
 8018a62:	f025 0507 	bic.w	r5, r5, #7
 8018a66:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8018a6a:	1c4d      	adds	r5, r1, #1
 8018a6c:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8018a70:	10d1      	asrs	r1, r2, #3
 8018a72:	f021 0103 	bic.w	r1, r1, #3
 8018a76:	00fb      	lsls	r3, r7, #3
 8018a78:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8018a7c:	b2db      	uxtb	r3, r3
 8018a7e:	b2c0      	uxtb	r0, r0
 8018a80:	00c9      	lsls	r1, r1, #3
 8018a82:	fb03 f30c 	mul.w	r3, r3, ip
 8018a86:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018a8a:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8018a8e:	4308      	orrs	r0, r1
 8018a90:	1c59      	adds	r1, r3, #1
 8018a92:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018a96:	00d2      	lsls	r2, r2, #3
 8018a98:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8018a9c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8018aa0:	4318      	orrs	r0, r3
 8018aa2:	f8ae 0000 	strh.w	r0, [lr]
 8018aa6:	e7a2      	b.n	80189ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8018aa8:	b013      	add	sp, #76	; 0x4c
 8018aaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018aae:	bf00      	nop
 8018ab0:	fffff800 	.word	0xfffff800

08018ab4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8018ab4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018ab8:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8018abc:	fb05 4c03 	mla	ip, r5, r3, r4
 8018ac0:	2d00      	cmp	r5, #0
 8018ac2:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8018ac6:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8018aca:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8018ace:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8018ad2:	8808      	ldrh	r0, [r1, #0]
 8018ad4:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8018ad8:	f2c0 80a7 	blt.w	8018c2a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8018adc:	45aa      	cmp	sl, r5
 8018ade:	f340 80a4 	ble.w	8018c2a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8018ae2:	2c00      	cmp	r4, #0
 8018ae4:	f2c0 809f 	blt.w	8018c26 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8018ae8:	42a3      	cmp	r3, r4
 8018aea:	f340 809c 	ble.w	8018c26 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8018aee:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8018af2:	1c62      	adds	r2, r4, #1
 8018af4:	f100 809c 	bmi.w	8018c30 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8018af8:	4293      	cmp	r3, r2
 8018afa:	f340 8099 	ble.w	8018c30 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8018afe:	f1b9 0f00 	cmp.w	r9, #0
 8018b02:	f000 8095 	beq.w	8018c30 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8018b06:	f8be c002 	ldrh.w	ip, [lr, #2]
 8018b0a:	3501      	adds	r5, #1
 8018b0c:	f100 8094 	bmi.w	8018c38 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8018b10:	45aa      	cmp	sl, r5
 8018b12:	f340 8091 	ble.w	8018c38 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8018b16:	2f00      	cmp	r7, #0
 8018b18:	f000 808e 	beq.w	8018c38 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8018b1c:	2c00      	cmp	r4, #0
 8018b1e:	f2c0 8089 	blt.w	8018c34 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8018b22:	42a3      	cmp	r3, r4
 8018b24:	f340 8086 	ble.w	8018c34 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8018b28:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8018b2c:	3401      	adds	r4, #1
 8018b2e:	f100 8086 	bmi.w	8018c3e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8018b32:	42a3      	cmp	r3, r4
 8018b34:	f340 8083 	ble.w	8018c3e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8018b38:	f1b9 0f00 	cmp.w	r9, #0
 8018b3c:	d07f      	beq.n	8018c3e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8018b3e:	3301      	adds	r3, #1
 8018b40:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8018b44:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8018b48:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018b4c:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8018b50:	fb19 fe07 	smulbb	lr, r9, r7
 8018b54:	ea44 0808 	orr.w	r8, r4, r8
 8018b58:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8018b5c:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8018b60:	f1c7 0210 	rsb	r2, r7, #16
 8018b64:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018b68:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018b6c:	ea44 0c0c 	orr.w	ip, r4, ip
 8018b70:	eba2 0209 	sub.w	r2, r2, r9
 8018b74:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8018b78:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8018b7c:	fb04 f40c 	mul.w	r4, r4, ip
 8018b80:	fb02 4808 	mla	r8, r2, r8, r4
 8018b84:	041a      	lsls	r2, r3, #16
 8018b86:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018b8a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018b8e:	4313      	orrs	r3, r2
 8018b90:	042a      	lsls	r2, r5, #16
 8018b92:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018b96:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8018b9a:	fb0e 8303 	mla	r3, lr, r3, r8
 8018b9e:	432a      	orrs	r2, r5
 8018ba0:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8018ba4:	fb07 3202 	mla	r2, r7, r2, r3
 8018ba8:	0d53      	lsrs	r3, r2, #21
 8018baa:	0952      	lsrs	r2, r2, #5
 8018bac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018bb0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018bb4:	431a      	orrs	r2, r3
 8018bb6:	b293      	uxth	r3, r2
 8018bb8:	b2b4      	uxth	r4, r6
 8018bba:	1202      	asrs	r2, r0, #8
 8018bbc:	43f6      	mvns	r6, r6
 8018bbe:	b2f6      	uxtb	r6, r6
 8018bc0:	121d      	asrs	r5, r3, #8
 8018bc2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8018bc6:	fb12 f206 	smulbb	r2, r2, r6
 8018bca:	10c7      	asrs	r7, r0, #3
 8018bcc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018bd0:	00c0      	lsls	r0, r0, #3
 8018bd2:	fb05 2504 	mla	r5, r5, r4, r2
 8018bd6:	b2c0      	uxtb	r0, r0
 8018bd8:	10da      	asrs	r2, r3, #3
 8018bda:	00db      	lsls	r3, r3, #3
 8018bdc:	b2db      	uxtb	r3, r3
 8018bde:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018be2:	fb10 f006 	smulbb	r0, r0, r6
 8018be6:	b2ad      	uxth	r5, r5
 8018be8:	fb03 0004 	mla	r0, r3, r4, r0
 8018bec:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018bf0:	fb17 f706 	smulbb	r7, r7, r6
 8018bf4:	b280      	uxth	r0, r0
 8018bf6:	1c6b      	adds	r3, r5, #1
 8018bf8:	fb02 7204 	mla	r2, r2, r4, r7
 8018bfc:	b292      	uxth	r2, r2
 8018bfe:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8018c02:	1c43      	adds	r3, r0, #1
 8018c04:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8018c08:	1c50      	adds	r0, r2, #1
 8018c0a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8018c0e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8018c12:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018c16:	0952      	lsrs	r2, r2, #5
 8018c18:	432b      	orrs	r3, r5
 8018c1a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018c1e:	4313      	orrs	r3, r2
 8018c20:	800b      	strh	r3, [r1, #0]
 8018c22:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018c26:	4680      	mov	r8, r0
 8018c28:	e763      	b.n	8018af2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8018c2a:	4684      	mov	ip, r0
 8018c2c:	4680      	mov	r8, r0
 8018c2e:	e76c      	b.n	8018b0a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8018c30:	4684      	mov	ip, r0
 8018c32:	e76a      	b.n	8018b0a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8018c34:	4605      	mov	r5, r0
 8018c36:	e779      	b.n	8018b2c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8018c38:	4603      	mov	r3, r0
 8018c3a:	4605      	mov	r5, r0
 8018c3c:	e782      	b.n	8018b44 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8018c3e:	4603      	mov	r3, r0
 8018c40:	e780      	b.n	8018b44 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08018c42 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018c42:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018c46:	b093      	sub	sp, #76	; 0x4c
 8018c48:	461d      	mov	r5, r3
 8018c4a:	9210      	str	r2, [sp, #64]	; 0x40
 8018c4c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8018c4e:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 8018c52:	920b      	str	r2, [sp, #44]	; 0x2c
 8018c54:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8018c58:	910a      	str	r1, [sp, #40]	; 0x28
 8018c5a:	6859      	ldr	r1, [r3, #4]
 8018c5c:	681b      	ldr	r3, [r3, #0]
 8018c5e:	9011      	str	r0, [sp, #68]	; 0x44
 8018c60:	fb01 2707 	mla	r7, r1, r7, r2
 8018c64:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8018c68:	9307      	str	r3, [sp, #28]
 8018c6a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018c6c:	681b      	ldr	r3, [r3, #0]
 8018c6e:	9309      	str	r3, [sp, #36]	; 0x24
 8018c70:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018c72:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8018c76:	43db      	mvns	r3, r3
 8018c78:	b2db      	uxtb	r3, r3
 8018c7a:	9308      	str	r3, [sp, #32]
 8018c7c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018c7e:	2b00      	cmp	r3, #0
 8018c80:	dc03      	bgt.n	8018c8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8018c82:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018c84:	2b00      	cmp	r3, #0
 8018c86:	f340 8203 	ble.w	8019090 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8018c8a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018c8c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018c90:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018c94:	1e48      	subs	r0, r1, #1
 8018c96:	f102 3cff 	add.w	ip, r2, #4294967295
 8018c9a:	2d00      	cmp	r5, #0
 8018c9c:	f340 80da 	ble.w	8018e54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8018ca0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8018ca4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018ca8:	d406      	bmi.n	8018cb8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018caa:	4586      	cmp	lr, r0
 8018cac:	da04      	bge.n	8018cb8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018cae:	2b00      	cmp	r3, #0
 8018cb0:	db02      	blt.n	8018cb8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018cb2:	4563      	cmp	r3, ip
 8018cb4:	f2c0 80cf 	blt.w	8018e56 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8018cb8:	f11e 0e01 	adds.w	lr, lr, #1
 8018cbc:	f100 80c1 	bmi.w	8018e42 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8018cc0:	4571      	cmp	r1, lr
 8018cc2:	f2c0 80be 	blt.w	8018e42 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8018cc6:	3301      	adds	r3, #1
 8018cc8:	f100 80bb 	bmi.w	8018e42 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8018ccc:	429a      	cmp	r2, r3
 8018cce:	f2c0 80b8 	blt.w	8018e42 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8018cd2:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8018cd6:	46a9      	mov	r9, r5
 8018cd8:	f1b9 0f00 	cmp.w	r9, #0
 8018cdc:	f340 80d8 	ble.w	8018e90 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8018ce0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018ce2:	1421      	asrs	r1, r4, #16
 8018ce4:	ea4f 4026 	mov.w	r0, r6, asr #16
 8018ce8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018cec:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8018cf0:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8018cf4:	f100 8111 	bmi.w	8018f1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8018cf8:	f10e 3aff 	add.w	sl, lr, #4294967295
 8018cfc:	4551      	cmp	r1, sl
 8018cfe:	f280 810c 	bge.w	8018f1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8018d02:	2800      	cmp	r0, #0
 8018d04:	f2c0 8109 	blt.w	8018f1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8018d08:	f103 3aff 	add.w	sl, r3, #4294967295
 8018d0c:	4550      	cmp	r0, sl
 8018d0e:	f280 8104 	bge.w	8018f1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8018d12:	fa0f f38e 	sxth.w	r3, lr
 8018d16:	fb00 1103 	mla	r1, r0, r3, r1
 8018d1a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8018d1c:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8018d20:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8018d24:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8018d28:	f1bc 0f00 	cmp.w	ip, #0
 8018d2c:	d007      	beq.n	8018d3e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8018d2e:	005b      	lsls	r3, r3, #1
 8018d30:	eb0a 0003 	add.w	r0, sl, r3
 8018d34:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8018d38:	930c      	str	r3, [sp, #48]	; 0x30
 8018d3a:	8843      	ldrh	r3, [r0, #2]
 8018d3c:	930d      	str	r3, [sp, #52]	; 0x34
 8018d3e:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8018d42:	fb12 f30c 	smulbb	r3, r2, ip
 8018d46:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018d4a:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018d4e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018d52:	10db      	asrs	r3, r3, #3
 8018d54:	ea40 000e 	orr.w	r0, r0, lr
 8018d58:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018d5c:	f1cc 0e10 	rsb	lr, ip, #16
 8018d60:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018d64:	ebae 0e02 	sub.w	lr, lr, r2
 8018d68:	ea4a 0101 	orr.w	r1, sl, r1
 8018d6c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8018d70:	4351      	muls	r1, r2
 8018d72:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018d74:	9f08      	ldr	r7, [sp, #32]
 8018d76:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8018d7a:	fb0e 1e00 	mla	lr, lr, r0, r1
 8018d7e:	0410      	lsls	r0, r2, #16
 8018d80:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018d84:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018d88:	4310      	orrs	r0, r2
 8018d8a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018d8c:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018d8e:	0412      	lsls	r2, r2, #16
 8018d90:	fb03 e000 	mla	r0, r3, r0, lr
 8018d94:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018d98:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8018d9c:	ea42 020e 	orr.w	r2, r2, lr
 8018da0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8018da4:	fb03 0302 	mla	r3, r3, r2, r0
 8018da8:	0d5a      	lsrs	r2, r3, #21
 8018daa:	095b      	lsrs	r3, r3, #5
 8018dac:	f8b8 0000 	ldrh.w	r0, [r8]
 8018db0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018db4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018db8:	4313      	orrs	r3, r2
 8018dba:	b29b      	uxth	r3, r3
 8018dbc:	1201      	asrs	r1, r0, #8
 8018dbe:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8018dc2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8018dc6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018dca:	fb11 f107 	smulbb	r1, r1, r7
 8018dce:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8018dd2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018dd6:	00c0      	lsls	r0, r0, #3
 8018dd8:	fb0c 1c02 	mla	ip, ip, r2, r1
 8018ddc:	b2c0      	uxtb	r0, r0
 8018dde:	10d9      	asrs	r1, r3, #3
 8018de0:	00db      	lsls	r3, r3, #3
 8018de2:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8018de6:	b2db      	uxtb	r3, r3
 8018de8:	fb10 f007 	smulbb	r0, r0, r7
 8018dec:	fa1f fc8c 	uxth.w	ip, ip
 8018df0:	fb03 0302 	mla	r3, r3, r2, r0
 8018df4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018df8:	fb1e fe07 	smulbb	lr, lr, r7
 8018dfc:	fb01 e102 	mla	r1, r1, r2, lr
 8018e00:	b29a      	uxth	r2, r3
 8018e02:	f10c 0301 	add.w	r3, ip, #1
 8018e06:	b289      	uxth	r1, r1
 8018e08:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8018e0c:	1c53      	adds	r3, r2, #1
 8018e0e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018e12:	1c4a      	adds	r2, r1, #1
 8018e14:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018e18:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018e1c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018e20:	0949      	lsrs	r1, r1, #5
 8018e22:	ea43 030c 	orr.w	r3, r3, ip
 8018e26:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018e2a:	430b      	orrs	r3, r1
 8018e2c:	f8a8 3000 	strh.w	r3, [r8]
 8018e30:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8018e32:	441c      	add	r4, r3
 8018e34:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018e36:	f108 0802 	add.w	r8, r8, #2
 8018e3a:	441e      	add	r6, r3
 8018e3c:	f109 39ff 	add.w	r9, r9, #4294967295
 8018e40:	e74a      	b.n	8018cd8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018e42:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8018e44:	441c      	add	r4, r3
 8018e46:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018e48:	441e      	add	r6, r3
 8018e4a:	9b07      	ldr	r3, [sp, #28]
 8018e4c:	3302      	adds	r3, #2
 8018e4e:	3d01      	subs	r5, #1
 8018e50:	9307      	str	r3, [sp, #28]
 8018e52:	e722      	b.n	8018c9a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8018e54:	d022      	beq.n	8018e9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8018e56:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8018e58:	1e6b      	subs	r3, r5, #1
 8018e5a:	fb00 4003 	mla	r0, r0, r3, r4
 8018e5e:	1400      	asrs	r0, r0, #16
 8018e60:	f53f af37 	bmi.w	8018cd2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8018e64:	3901      	subs	r1, #1
 8018e66:	4288      	cmp	r0, r1
 8018e68:	f6bf af33 	bge.w	8018cd2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8018e6c:	9920      	ldr	r1, [sp, #128]	; 0x80
 8018e6e:	fb01 6303 	mla	r3, r1, r3, r6
 8018e72:	141b      	asrs	r3, r3, #16
 8018e74:	f53f af2d 	bmi.w	8018cd2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8018e78:	3a01      	subs	r2, #1
 8018e7a:	4293      	cmp	r3, r2
 8018e7c:	f6bf af29 	bge.w	8018cd2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8018e80:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8018e84:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8018e88:	46a8      	mov	r8, r5
 8018e8a:	f1b8 0f00 	cmp.w	r8, #0
 8018e8e:	dc5e      	bgt.n	8018f4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8018e90:	9b07      	ldr	r3, [sp, #28]
 8018e92:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8018e96:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8018e9a:	9307      	str	r3, [sp, #28]
 8018e9c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018e9e:	2b00      	cmp	r3, #0
 8018ea0:	f340 80f6 	ble.w	8019090 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8018ea4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018ea8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018eac:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018eb0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8018eb2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018eb6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018eba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018ebe:	eef0 6a62 	vmov.f32	s13, s5
 8018ec2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018ec6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018eca:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018ece:	ee16 4a90 	vmov	r4, s13
 8018ed2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018ed6:	eef0 6a43 	vmov.f32	s13, s6
 8018eda:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018ede:	ee12 2a90 	vmov	r2, s5
 8018ee2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018ee6:	fb92 f3f3 	sdiv	r3, r2, r3
 8018eea:	ee13 2a10 	vmov	r2, s6
 8018eee:	931f      	str	r3, [sp, #124]	; 0x7c
 8018ef0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8018ef2:	fb92 f3f3 	sdiv	r3, r2, r3
 8018ef6:	9320      	str	r3, [sp, #128]	; 0x80
 8018ef8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018efa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018efc:	3b01      	subs	r3, #1
 8018efe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018f02:	930a      	str	r3, [sp, #40]	; 0x28
 8018f04:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8018f06:	ee16 6a90 	vmov	r6, s13
 8018f0a:	bf14      	ite	ne
 8018f0c:	461d      	movne	r5, r3
 8018f0e:	4615      	moveq	r5, r2
 8018f10:	eeb0 3a67 	vmov.f32	s6, s15
 8018f14:	eef0 2a47 	vmov.f32	s5, s14
 8018f18:	e6b0      	b.n	8018c7c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8018f1a:	f111 0a01 	adds.w	sl, r1, #1
 8018f1e:	d487      	bmi.n	8018e30 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8018f20:	45d6      	cmp	lr, sl
 8018f22:	db85      	blt.n	8018e30 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8018f24:	f110 0a01 	adds.w	sl, r0, #1
 8018f28:	d482      	bmi.n	8018e30 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8018f2a:	4553      	cmp	r3, sl
 8018f2c:	db80      	blt.n	8018e30 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8018f2e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8018f30:	9101      	str	r1, [sp, #4]
 8018f32:	b21b      	sxth	r3, r3
 8018f34:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8018f38:	9300      	str	r3, [sp, #0]
 8018f3a:	e9cd c704 	strd	ip, r7, [sp, #16]
 8018f3e:	fa0f f38e 	sxth.w	r3, lr
 8018f42:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018f44:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018f46:	4641      	mov	r1, r8
 8018f48:	f7ff fdb4 	bl	8018ab4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8018f4c:	e770      	b.n	8018e30 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8018f4e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018f50:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8018f52:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018f56:	1430      	asrs	r0, r6, #16
 8018f58:	1423      	asrs	r3, r4, #16
 8018f5a:	fb01 3000 	mla	r0, r1, r0, r3
 8018f5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018f60:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8018f64:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8018f68:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8018f6c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018f70:	8858      	ldrh	r0, [r3, #2]
 8018f72:	f1be 0f00 	cmp.w	lr, #0
 8018f76:	d00b      	beq.n	8018f90 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8018f78:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8018f7c:	3901      	subs	r1, #1
 8018f7e:	0049      	lsls	r1, r1, #1
 8018f80:	3102      	adds	r1, #2
 8018f82:	eb03 0b01 	add.w	fp, r3, r1
 8018f86:	5a5b      	ldrh	r3, [r3, r1]
 8018f88:	930e      	str	r3, [sp, #56]	; 0x38
 8018f8a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8018f8e:	930f      	str	r3, [sp, #60]	; 0x3c
 8018f90:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8018f94:	fb12 f30e 	smulbb	r3, r2, lr
 8018f98:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018f9c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8018fa0:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8018fa4:	10db      	asrs	r3, r3, #3
 8018fa6:	ea41 010c 	orr.w	r1, r1, ip
 8018faa:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018fae:	f1ce 0c10 	rsb	ip, lr, #16
 8018fb2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018fb6:	ebac 0c02 	sub.w	ip, ip, r2
 8018fba:	ea4b 0000 	orr.w	r0, fp, r0
 8018fbe:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8018fc2:	4350      	muls	r0, r2
 8018fc4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018fc6:	9f08      	ldr	r7, [sp, #32]
 8018fc8:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8018fcc:	fb0c 0c01 	mla	ip, ip, r1, r0
 8018fd0:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8018fd4:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8018fd8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8018fda:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018fdc:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018fe0:	0412      	lsls	r2, r2, #16
 8018fe2:	ea4b 0101 	orr.w	r1, fp, r1
 8018fe6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018fea:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018fee:	fb03 c101 	mla	r1, r3, r1, ip
 8018ff2:	4302      	orrs	r2, r0
 8018ff4:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8018ff8:	fb03 1202 	mla	r2, r3, r2, r1
 8018ffc:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8019000:	0952      	lsrs	r2, r2, #5
 8019002:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8019006:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801900a:	f8b9 2000 	ldrh.w	r2, [r9]
 801900e:	ea4b 0303 	orr.w	r3, fp, r3
 8019012:	b29b      	uxth	r3, r3
 8019014:	1211      	asrs	r1, r2, #8
 8019016:	1218      	asrs	r0, r3, #8
 8019018:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801901c:	fb11 f107 	smulbb	r1, r1, r7
 8019020:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8019024:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019028:	00d2      	lsls	r2, r2, #3
 801902a:	fb00 100a 	mla	r0, r0, sl, r1
 801902e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8019032:	10d9      	asrs	r1, r3, #3
 8019034:	b2d2      	uxtb	r2, r2
 8019036:	00db      	lsls	r3, r3, #3
 8019038:	fb1c fc07 	smulbb	ip, ip, r7
 801903c:	fb12 f207 	smulbb	r2, r2, r7
 8019040:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019044:	b2db      	uxtb	r3, r3
 8019046:	b280      	uxth	r0, r0
 8019048:	fb01 c10a 	mla	r1, r1, sl, ip
 801904c:	fb03 230a 	mla	r3, r3, sl, r2
 8019050:	b29b      	uxth	r3, r3
 8019052:	b289      	uxth	r1, r1
 8019054:	1c42      	adds	r2, r0, #1
 8019056:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801905a:	f101 0c01 	add.w	ip, r1, #1
 801905e:	1c5a      	adds	r2, r3, #1
 8019060:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8019064:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8019068:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801906a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801906e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019072:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019076:	4310      	orrs	r0, r2
 8019078:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801907c:	441c      	add	r4, r3
 801907e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019080:	ea40 000c 	orr.w	r0, r0, ip
 8019084:	f829 0b02 	strh.w	r0, [r9], #2
 8019088:	441e      	add	r6, r3
 801908a:	f108 38ff 	add.w	r8, r8, #4294967295
 801908e:	e6fc      	b.n	8018e8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8019090:	b013      	add	sp, #76	; 0x4c
 8019092:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019096 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8019096:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801909a:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801909e:	fb0e 4703 	mla	r7, lr, r3, r4
 80190a2:	f1be 0f00 	cmp.w	lr, #0
 80190a6:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 80190aa:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 80190ae:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 80190b2:	8808      	ldrh	r0, [r1, #0]
 80190b4:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 80190b8:	db60      	blt.n	801917c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 80190ba:	45f1      	cmp	r9, lr
 80190bc:	dd5e      	ble.n	801917c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 80190be:	2c00      	cmp	r4, #0
 80190c0:	db5a      	blt.n	8019178 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 80190c2:	42a3      	cmp	r3, r4
 80190c4:	dd58      	ble.n	8019178 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 80190c6:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 80190ca:	1c62      	adds	r2, r4, #1
 80190cc:	d459      	bmi.n	8019182 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80190ce:	4293      	cmp	r3, r2
 80190d0:	dd57      	ble.n	8019182 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80190d2:	2d00      	cmp	r5, #0
 80190d4:	d055      	beq.n	8019182 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80190d6:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 80190da:	f11e 0e01 	adds.w	lr, lr, #1
 80190de:	d454      	bmi.n	801918a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80190e0:	45f1      	cmp	r9, lr
 80190e2:	dd52      	ble.n	801918a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80190e4:	2e00      	cmp	r6, #0
 80190e6:	d050      	beq.n	801918a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80190e8:	2c00      	cmp	r4, #0
 80190ea:	db4c      	blt.n	8019186 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80190ec:	42a3      	cmp	r3, r4
 80190ee:	dd4a      	ble.n	8019186 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80190f0:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 80190f4:	3401      	adds	r4, #1
 80190f6:	d405      	bmi.n	8019104 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80190f8:	42a3      	cmp	r3, r4
 80190fa:	dd03      	ble.n	8019104 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80190fc:	b115      	cbz	r5, 8019104 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80190fe:	3301      	adds	r3, #1
 8019100:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8019104:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8019108:	fb15 f406 	smulbb	r4, r5, r6
 801910c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019110:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8019114:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019118:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801911c:	ea43 0c0c 	orr.w	ip, r3, ip
 8019120:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8019124:	f1c6 0310 	rsb	r3, r6, #16
 8019128:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801912c:	1b5b      	subs	r3, r3, r5
 801912e:	ea4e 0707 	orr.w	r7, lr, r7
 8019132:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8019136:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801913a:	437d      	muls	r5, r7
 801913c:	fb03 5c0c 	mla	ip, r3, ip, r5
 8019140:	0403      	lsls	r3, r0, #16
 8019142:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019146:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801914a:	4318      	orrs	r0, r3
 801914c:	0413      	lsls	r3, r2, #16
 801914e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019152:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019156:	4313      	orrs	r3, r2
 8019158:	fb04 c000 	mla	r0, r4, r0, ip
 801915c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8019160:	fb06 0003 	mla	r0, r6, r3, r0
 8019164:	0d43      	lsrs	r3, r0, #21
 8019166:	0940      	lsrs	r0, r0, #5
 8019168:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801916c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019170:	4318      	orrs	r0, r3
 8019172:	8008      	strh	r0, [r1, #0]
 8019174:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8019178:	4684      	mov	ip, r0
 801917a:	e7a6      	b.n	80190ca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801917c:	4607      	mov	r7, r0
 801917e:	4684      	mov	ip, r0
 8019180:	e7ab      	b.n	80190da <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8019182:	4607      	mov	r7, r0
 8019184:	e7a9      	b.n	80190da <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8019186:	4602      	mov	r2, r0
 8019188:	e7b4      	b.n	80190f4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801918a:	4602      	mov	r2, r0
 801918c:	e7ba      	b.n	8019104 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801918e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801918e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019192:	b08f      	sub	sp, #60	; 0x3c
 8019194:	461d      	mov	r5, r3
 8019196:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8019198:	920c      	str	r2, [sp, #48]	; 0x30
 801919a:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 801919e:	9107      	str	r1, [sp, #28]
 80191a0:	6859      	ldr	r1, [r3, #4]
 80191a2:	681b      	ldr	r3, [r3, #0]
 80191a4:	900d      	str	r0, [sp, #52]	; 0x34
 80191a6:	fb01 2707 	mla	r7, r1, r7, r2
 80191aa:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 80191ae:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80191b0:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 80191b4:	f8d3 8000 	ldr.w	r8, [r3]
 80191b8:	9b07      	ldr	r3, [sp, #28]
 80191ba:	2b00      	cmp	r3, #0
 80191bc:	dc03      	bgt.n	80191c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80191be:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80191c0:	2b00      	cmp	r3, #0
 80191c2:	f340 8181 	ble.w	80194c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 80191c6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80191c8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80191cc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80191d0:	1e48      	subs	r0, r1, #1
 80191d2:	f102 3cff 	add.w	ip, r2, #4294967295
 80191d6:	2d00      	cmp	r5, #0
 80191d8:	f340 809b 	ble.w	8019312 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 80191dc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80191e0:	ea4f 4326 	mov.w	r3, r6, asr #16
 80191e4:	d406      	bmi.n	80191f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80191e6:	4586      	cmp	lr, r0
 80191e8:	da04      	bge.n	80191f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80191ea:	2b00      	cmp	r3, #0
 80191ec:	db02      	blt.n	80191f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80191ee:	4563      	cmp	r3, ip
 80191f0:	f2c0 8090 	blt.w	8019314 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80191f4:	f11e 0e01 	adds.w	lr, lr, #1
 80191f8:	f100 8084 	bmi.w	8019304 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80191fc:	4571      	cmp	r1, lr
 80191fe:	f2c0 8081 	blt.w	8019304 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8019202:	3301      	adds	r3, #1
 8019204:	d47e      	bmi.n	8019304 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8019206:	429a      	cmp	r2, r3
 8019208:	db7c      	blt.n	8019304 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801920a:	46aa      	mov	sl, r5
 801920c:	46b9      	mov	r9, r7
 801920e:	f1ba 0f00 	cmp.w	sl, #0
 8019212:	f340 8099 	ble.w	8019348 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8019216:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019218:	1421      	asrs	r1, r4, #16
 801921a:	ea4f 4026 	mov.w	r0, r6, asr #16
 801921e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019222:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8019226:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801922a:	f100 80d0 	bmi.w	80193ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801922e:	f10e 3bff 	add.w	fp, lr, #4294967295
 8019232:	4559      	cmp	r1, fp
 8019234:	f280 80cb 	bge.w	80193ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8019238:	2800      	cmp	r0, #0
 801923a:	f2c0 80c8 	blt.w	80193ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801923e:	f103 3bff 	add.w	fp, r3, #4294967295
 8019242:	4558      	cmp	r0, fp
 8019244:	f280 80c3 	bge.w	80193ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8019248:	fa0f fe8e 	sxth.w	lr, lr
 801924c:	fb00 110e 	mla	r1, r0, lr, r1
 8019250:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8019254:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8019258:	8841      	ldrh	r1, [r0, #2]
 801925a:	f1bc 0f00 	cmp.w	ip, #0
 801925e:	d00b      	beq.n	8019278 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8019260:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8019264:	3b01      	subs	r3, #1
 8019266:	005b      	lsls	r3, r3, #1
 8019268:	3302      	adds	r3, #2
 801926a:	eb00 0e03 	add.w	lr, r0, r3
 801926e:	5ac3      	ldrh	r3, [r0, r3]
 8019270:	9308      	str	r3, [sp, #32]
 8019272:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8019276:	9309      	str	r3, [sp, #36]	; 0x24
 8019278:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801927c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019280:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8019284:	ea40 000b 	orr.w	r0, r0, fp
 8019288:	fb12 f30c 	smulbb	r3, r2, ip
 801928c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019290:	10db      	asrs	r3, r3, #3
 8019292:	f1cc 0e10 	rsb	lr, ip, #16
 8019296:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801929a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801929e:	ebae 0e02 	sub.w	lr, lr, r2
 80192a2:	ea4b 0101 	orr.w	r1, fp, r1
 80192a6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80192aa:	4351      	muls	r1, r2
 80192ac:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80192ae:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80192b2:	fb0e 1e00 	mla	lr, lr, r0, r1
 80192b6:	0410      	lsls	r0, r2, #16
 80192b8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80192bc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80192c0:	4310      	orrs	r0, r2
 80192c2:	9a08      	ldr	r2, [sp, #32]
 80192c4:	9908      	ldr	r1, [sp, #32]
 80192c6:	0412      	lsls	r2, r2, #16
 80192c8:	fb03 e000 	mla	r0, r3, r0, lr
 80192cc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80192d0:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80192d4:	ea42 020e 	orr.w	r2, r2, lr
 80192d8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80192dc:	fb03 0302 	mla	r3, r3, r2, r0
 80192e0:	0d5a      	lsrs	r2, r3, #21
 80192e2:	095b      	lsrs	r3, r3, #5
 80192e4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80192e8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80192ec:	4313      	orrs	r3, r2
 80192ee:	f8a9 3000 	strh.w	r3, [r9]
 80192f2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80192f4:	441c      	add	r4, r3
 80192f6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80192f8:	f109 0902 	add.w	r9, r9, #2
 80192fc:	441e      	add	r6, r3
 80192fe:	f10a 3aff 	add.w	sl, sl, #4294967295
 8019302:	e784      	b.n	801920e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8019304:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8019306:	441c      	add	r4, r3
 8019308:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801930a:	3d01      	subs	r5, #1
 801930c:	441e      	add	r6, r3
 801930e:	3702      	adds	r7, #2
 8019310:	e761      	b.n	80191d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019312:	d01d      	beq.n	8019350 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8019314:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8019316:	1e6b      	subs	r3, r5, #1
 8019318:	fb00 4003 	mla	r0, r0, r3, r4
 801931c:	1400      	asrs	r0, r0, #16
 801931e:	f53f af74 	bmi.w	801920a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019322:	3901      	subs	r1, #1
 8019324:	4288      	cmp	r0, r1
 8019326:	f6bf af70 	bge.w	801920a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801932a:	991c      	ldr	r1, [sp, #112]	; 0x70
 801932c:	fb01 6303 	mla	r3, r1, r3, r6
 8019330:	141b      	asrs	r3, r3, #16
 8019332:	f53f af6a 	bmi.w	801920a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019336:	3a01      	subs	r2, #1
 8019338:	4293      	cmp	r3, r2
 801933a:	f6bf af66 	bge.w	801920a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801933e:	46a9      	mov	r9, r5
 8019340:	46ba      	mov	sl, r7
 8019342:	f1b9 0f00 	cmp.w	r9, #0
 8019346:	dc5a      	bgt.n	80193fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8019348:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801934c:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8019350:	9b07      	ldr	r3, [sp, #28]
 8019352:	2b00      	cmp	r3, #0
 8019354:	f340 80b8 	ble.w	80194c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8019358:	ee30 0a04 	vadd.f32	s0, s0, s8
 801935c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019360:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019364:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019366:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801936a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801936e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019372:	eef0 6a62 	vmov.f32	s13, s5
 8019376:	ee61 7a27 	vmul.f32	s15, s2, s15
 801937a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801937e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019382:	ee16 4a90 	vmov	r4, s13
 8019386:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801938a:	eef0 6a43 	vmov.f32	s13, s6
 801938e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019392:	ee12 2a90 	vmov	r2, s5
 8019396:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801939a:	fb92 f3f3 	sdiv	r3, r2, r3
 801939e:	ee13 2a10 	vmov	r2, s6
 80193a2:	931b      	str	r3, [sp, #108]	; 0x6c
 80193a4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80193a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80193aa:	931c      	str	r3, [sp, #112]	; 0x70
 80193ac:	9b07      	ldr	r3, [sp, #28]
 80193ae:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80193b0:	3b01      	subs	r3, #1
 80193b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80193b6:	9307      	str	r3, [sp, #28]
 80193b8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80193ba:	ee16 6a90 	vmov	r6, s13
 80193be:	bf14      	ite	ne
 80193c0:	461d      	movne	r5, r3
 80193c2:	4615      	moveq	r5, r2
 80193c4:	eeb0 3a67 	vmov.f32	s6, s15
 80193c8:	eef0 2a47 	vmov.f32	s5, s14
 80193cc:	e6f4      	b.n	80191b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80193ce:	f111 0b01 	adds.w	fp, r1, #1
 80193d2:	d48e      	bmi.n	80192f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80193d4:	45de      	cmp	lr, fp
 80193d6:	db8c      	blt.n	80192f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80193d8:	f110 0b01 	adds.w	fp, r0, #1
 80193dc:	d489      	bmi.n	80192f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80193de:	455b      	cmp	r3, fp
 80193e0:	db87      	blt.n	80192f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80193e2:	b21b      	sxth	r3, r3
 80193e4:	e9cd 1001 	strd	r1, r0, [sp, #4]
 80193e8:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 80193ec:	9300      	str	r3, [sp, #0]
 80193ee:	4642      	mov	r2, r8
 80193f0:	fa0f f38e 	sxth.w	r3, lr
 80193f4:	4649      	mov	r1, r9
 80193f6:	980d      	ldr	r0, [sp, #52]	; 0x34
 80193f8:	f7ff fe4d 	bl	8019096 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 80193fc:	e779      	b.n	80192f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80193fe:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019400:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019404:	1420      	asrs	r0, r4, #16
 8019406:	1431      	asrs	r1, r6, #16
 8019408:	fb03 0101 	mla	r1, r3, r1, r0
 801940c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8019410:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8019414:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8019418:	8841      	ldrh	r1, [r0, #2]
 801941a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801941e:	f1be 0f00 	cmp.w	lr, #0
 8019422:	d00b      	beq.n	801943c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8019424:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8019428:	3b01      	subs	r3, #1
 801942a:	005b      	lsls	r3, r3, #1
 801942c:	3302      	adds	r3, #2
 801942e:	eb00 0b03 	add.w	fp, r0, r3
 8019432:	5ac3      	ldrh	r3, [r0, r3]
 8019434:	930a      	str	r3, [sp, #40]	; 0x28
 8019436:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801943a:	930b      	str	r3, [sp, #44]	; 0x2c
 801943c:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8019440:	fb12 f30e 	smulbb	r3, r2, lr
 8019444:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019448:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801944c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019450:	10db      	asrs	r3, r3, #3
 8019452:	ea40 000c 	orr.w	r0, r0, ip
 8019456:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801945a:	f1ce 0c10 	rsb	ip, lr, #16
 801945e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019462:	ebac 0c02 	sub.w	ip, ip, r2
 8019466:	ea4b 0101 	orr.w	r1, fp, r1
 801946a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801946e:	4351      	muls	r1, r2
 8019470:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019472:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8019476:	fb0c 1c00 	mla	ip, ip, r0, r1
 801947a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801947e:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8019482:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8019484:	990a      	ldr	r1, [sp, #40]	; 0x28
 8019486:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801948a:	0412      	lsls	r2, r2, #16
 801948c:	ea4b 0000 	orr.w	r0, fp, r0
 8019490:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019494:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8019498:	fb03 c000 	mla	r0, r3, r0, ip
 801949c:	ea42 0b0b 	orr.w	fp, r2, fp
 80194a0:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80194a4:	fb03 000b 	mla	r0, r3, fp, r0
 80194a8:	0d43      	lsrs	r3, r0, #21
 80194aa:	0940      	lsrs	r0, r0, #5
 80194ac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80194b0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80194b4:	4318      	orrs	r0, r3
 80194b6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80194b8:	f82a 0b02 	strh.w	r0, [sl], #2
 80194bc:	441c      	add	r4, r3
 80194be:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80194c0:	f109 39ff 	add.w	r9, r9, #4294967295
 80194c4:	441e      	add	r6, r3
 80194c6:	e73c      	b.n	8019342 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80194c8:	b00f      	add	sp, #60	; 0x3c
 80194ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080194ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80194ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80194d2:	b085      	sub	sp, #20
 80194d4:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 80194d8:	9102      	str	r1, [sp, #8]
 80194da:	2c00      	cmp	r4, #0
 80194dc:	fb04 7103 	mla	r1, r4, r3, r7
 80194e0:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80194e4:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80194e8:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80194ec:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80194f0:	f2c0 811b 	blt.w	801972a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80194f4:	45a6      	cmp	lr, r4
 80194f6:	f340 8118 	ble.w	801972a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80194fa:	2f00      	cmp	r7, #0
 80194fc:	f2c0 8113 	blt.w	8019726 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8019500:	42bb      	cmp	r3, r7
 8019502:	f340 8110 	ble.w	8019726 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8019506:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801950a:	1c7a      	adds	r2, r7, #1
 801950c:	f100 8110 	bmi.w	8019730 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8019510:	4293      	cmp	r3, r2
 8019512:	f340 810d 	ble.w	8019730 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8019516:	2e00      	cmp	r6, #0
 8019518:	f000 810c 	beq.w	8019734 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801951c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8019520:	3401      	adds	r4, #1
 8019522:	f100 810b 	bmi.w	801973c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8019526:	45a6      	cmp	lr, r4
 8019528:	f340 8108 	ble.w	801973c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801952c:	2800      	cmp	r0, #0
 801952e:	f000 8108 	beq.w	8019742 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8019532:	2f00      	cmp	r7, #0
 8019534:	f2c0 8100 	blt.w	8019738 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8019538:	42bb      	cmp	r3, r7
 801953a:	f340 80fd 	ble.w	8019738 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801953e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8019542:	3701      	adds	r7, #1
 8019544:	f100 8100 	bmi.w	8019748 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8019548:	42bb      	cmp	r3, r7
 801954a:	f340 80fd 	ble.w	8019748 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801954e:	2e00      	cmp	r6, #0
 8019550:	f000 80fc 	beq.w	801974c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8019554:	3301      	adds	r3, #1
 8019556:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801955a:	b2b6      	uxth	r6, r6
 801955c:	b280      	uxth	r0, r0
 801955e:	fb00 fe06 	mul.w	lr, r0, r6
 8019562:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8019566:	0136      	lsls	r6, r6, #4
 8019568:	eba6 070e 	sub.w	r7, r6, lr
 801956c:	b280      	uxth	r0, r0
 801956e:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8019572:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8019576:	b2bf      	uxth	r7, r7
 8019578:	1a1b      	subs	r3, r3, r0
 801957a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801957e:	b29b      	uxth	r3, r3
 8019580:	fb0a f607 	mul.w	r6, sl, r7
 8019584:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8019588:	fb0b 6603 	mla	r6, fp, r3, r6
 801958c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8019590:	fb00 6609 	mla	r6, r0, r9, r6
 8019594:	fb0e 6608 	mla	r6, lr, r8, r6
 8019598:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801959c:	9600      	str	r6, [sp, #0]
 801959e:	2e00      	cmp	r6, #0
 80195a0:	f000 80be 	beq.w	8019720 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 80195a4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80195a8:	fb0b fc0c 	mul.w	ip, fp, ip
 80195ac:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80195b0:	fb0b f505 	mul.w	r5, fp, r5
 80195b4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80195b8:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80195bc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80195c0:	44dc      	add	ip, fp
 80195c2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80195c6:	9501      	str	r5, [sp, #4]
 80195c8:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80195cc:	9503      	str	r5, [sp, #12]
 80195ce:	9d01      	ldr	r5, [sp, #4]
 80195d0:	9e02      	ldr	r6, [sp, #8]
 80195d2:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80195d6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80195da:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80195de:	fb0a fc0c 	mul.w	ip, sl, ip
 80195e2:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80195e6:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80195ea:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80195ee:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80195f2:	4465      	add	r5, ip
 80195f4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80195f8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80195fc:	fb09 fc0c 	mul.w	ip, r9, ip
 8019600:	fb09 f904 	mul.w	r9, r9, r4
 8019604:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8019608:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801960c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8019610:	fb08 f404 	mul.w	r4, r8, r4
 8019614:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8019618:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801961c:	fb08 f802 	mul.w	r8, r8, r2
 8019620:	fb0a fa01 	mul.w	sl, sl, r1
 8019624:	0a22      	lsrs	r2, r4, #8
 8019626:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801962a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801962e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8019632:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8019636:	4414      	add	r4, r2
 8019638:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801963c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8019640:	0a2d      	lsrs	r5, r5, #8
 8019642:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8019646:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801964a:	9a03      	ldr	r2, [sp, #12]
 801964c:	8836      	ldrh	r6, [r6, #0]
 801964e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8019652:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8019656:	437d      	muls	r5, r7
 8019658:	4461      	add	r1, ip
 801965a:	0a24      	lsrs	r4, r4, #8
 801965c:	fb02 5503 	mla	r5, r2, r3, r5
 8019660:	0a09      	lsrs	r1, r1, #8
 8019662:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019666:	fb04 540e 	mla	r4, r4, lr, r5
 801966a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801966e:	fb01 4100 	mla	r1, r1, r0, r4
 8019672:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019676:	0a09      	lsrs	r1, r1, #8
 8019678:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801967c:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8019680:	fb07 f70a 	mul.w	r7, r7, sl
 8019684:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8019688:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801968c:	fb03 7101 	mla	r1, r3, r1, r7
 8019690:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019694:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8019698:	fb0e 1e08 	mla	lr, lr, r8, r1
 801969c:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80196a0:	fb00 e101 	mla	r1, r0, r1, lr
 80196a4:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80196a8:	9a00      	ldr	r2, [sp, #0]
 80196aa:	b287      	uxth	r7, r0
 80196ac:	437a      	muls	r2, r7
 80196ae:	0a09      	lsrs	r1, r1, #8
 80196b0:	1c53      	adds	r3, r2, #1
 80196b2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80196b6:	4321      	orrs	r1, r4
 80196b8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80196bc:	1235      	asrs	r5, r6, #8
 80196be:	0c0a      	lsrs	r2, r1, #16
 80196c0:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80196c4:	b2db      	uxtb	r3, r3
 80196c6:	fb12 f207 	smulbb	r2, r2, r7
 80196ca:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80196ce:	fb05 2503 	mla	r5, r5, r3, r2
 80196d2:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80196d6:	10f2      	asrs	r2, r6, #3
 80196d8:	b2c8      	uxtb	r0, r1
 80196da:	00f6      	lsls	r6, r6, #3
 80196dc:	fb14 f407 	smulbb	r4, r4, r7
 80196e0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80196e4:	b2f6      	uxtb	r6, r6
 80196e6:	fb10 f007 	smulbb	r0, r0, r7
 80196ea:	fb02 4203 	mla	r2, r2, r3, r4
 80196ee:	b2ad      	uxth	r5, r5
 80196f0:	fb06 0303 	mla	r3, r6, r3, r0
 80196f4:	b299      	uxth	r1, r3
 80196f6:	b294      	uxth	r4, r2
 80196f8:	1c6b      	adds	r3, r5, #1
 80196fa:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80196fe:	1c62      	adds	r2, r4, #1
 8019700:	1c4b      	adds	r3, r1, #1
 8019702:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8019706:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801970a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801970e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019712:	0952      	lsrs	r2, r2, #5
 8019714:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019718:	432b      	orrs	r3, r5
 801971a:	4313      	orrs	r3, r2
 801971c:	9a02      	ldr	r2, [sp, #8]
 801971e:	8013      	strh	r3, [r2, #0]
 8019720:	b005      	add	sp, #20
 8019722:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019726:	2500      	movs	r5, #0
 8019728:	e6ef      	b.n	801950a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801972a:	2100      	movs	r1, #0
 801972c:	460d      	mov	r5, r1
 801972e:	e6f7      	b.n	8019520 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8019730:	2100      	movs	r1, #0
 8019732:	e6f5      	b.n	8019520 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8019734:	4631      	mov	r1, r6
 8019736:	e6f3      	b.n	8019520 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8019738:	2400      	movs	r4, #0
 801973a:	e702      	b.n	8019542 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801973c:	2200      	movs	r2, #0
 801973e:	4614      	mov	r4, r2
 8019740:	e70b      	b.n	801955a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8019742:	4602      	mov	r2, r0
 8019744:	4604      	mov	r4, r0
 8019746:	e708      	b.n	801955a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8019748:	2200      	movs	r2, #0
 801974a:	e706      	b.n	801955a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801974c:	4632      	mov	r2, r6
 801974e:	e704      	b.n	801955a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08019750 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019750:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019754:	b09d      	sub	sp, #116	; 0x74
 8019756:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801975a:	9219      	str	r2, [sp, #100]	; 0x64
 801975c:	9307      	str	r3, [sp, #28]
 801975e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8019760:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8019764:	931a      	str	r3, [sp, #104]	; 0x68
 8019766:	9117      	str	r1, [sp, #92]	; 0x5c
 8019768:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801976c:	901b      	str	r0, [sp, #108]	; 0x6c
 801976e:	6850      	ldr	r0, [r2, #4]
 8019770:	6812      	ldr	r2, [r2, #0]
 8019772:	fb00 1303 	mla	r3, r0, r3, r1
 8019776:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801977a:	930a      	str	r3, [sp, #40]	; 0x28
 801977c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801977e:	681b      	ldr	r3, [r3, #0]
 8019780:	9310      	str	r3, [sp, #64]	; 0x40
 8019782:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8019786:	930b      	str	r3, [sp, #44]	; 0x2c
 8019788:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801978a:	2b00      	cmp	r3, #0
 801978c:	dc03      	bgt.n	8019796 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801978e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8019790:	2b00      	cmp	r3, #0
 8019792:	f340 8375 	ble.w	8019e80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8019796:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019798:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801979c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80197a0:	1e48      	subs	r0, r1, #1
 80197a2:	1e57      	subs	r7, r2, #1
 80197a4:	9b07      	ldr	r3, [sp, #28]
 80197a6:	2b00      	cmp	r3, #0
 80197a8:	f340 818e 	ble.w	8019ac8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80197ac:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80197b0:	ea4f 4326 	mov.w	r3, r6, asr #16
 80197b4:	d406      	bmi.n	80197c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80197b6:	4584      	cmp	ip, r0
 80197b8:	da04      	bge.n	80197c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80197ba:	2b00      	cmp	r3, #0
 80197bc:	db02      	blt.n	80197c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80197be:	42bb      	cmp	r3, r7
 80197c0:	f2c0 8183 	blt.w	8019aca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80197c4:	f11c 0c01 	adds.w	ip, ip, #1
 80197c8:	f100 8173 	bmi.w	8019ab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80197cc:	4561      	cmp	r1, ip
 80197ce:	f2c0 8170 	blt.w	8019ab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80197d2:	3301      	adds	r3, #1
 80197d4:	f100 816d 	bmi.w	8019ab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80197d8:	429a      	cmp	r2, r3
 80197da:	f2c0 816a 	blt.w	8019ab2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80197de:	9b07      	ldr	r3, [sp, #28]
 80197e0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80197e2:	9318      	str	r3, [sp, #96]	; 0x60
 80197e4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80197e6:	2b00      	cmp	r3, #0
 80197e8:	f340 818c 	ble.w	8019b04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 80197ec:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80197ee:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80197f0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80197f4:	689b      	ldr	r3, [r3, #8]
 80197f6:	1422      	asrs	r2, r4, #16
 80197f8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80197fc:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019800:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019804:	f100 81cd 	bmi.w	8019ba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8019808:	f103 38ff 	add.w	r8, r3, #4294967295
 801980c:	4542      	cmp	r2, r8
 801980e:	f280 81c8 	bge.w	8019ba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8019812:	f1bc 0f00 	cmp.w	ip, #0
 8019816:	f2c0 81c4 	blt.w	8019ba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801981a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801981e:	45c4      	cmp	ip, r8
 8019820:	f280 81bf 	bge.w	8019ba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8019824:	b21b      	sxth	r3, r3
 8019826:	fb0c 2203 	mla	r2, ip, r3, r2
 801982a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801982c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8019830:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8019834:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8019838:	2800      	cmp	r0, #0
 801983a:	f000 81a9 	beq.w	8019b90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801983e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8019842:	950c      	str	r5, [sp, #48]	; 0x30
 8019844:	0e2d      	lsrs	r5, r5, #24
 8019846:	9513      	str	r5, [sp, #76]	; 0x4c
 8019848:	b181      	cbz	r1, 801986c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801984a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801984e:	3b01      	subs	r3, #1
 8019850:	009b      	lsls	r3, r3, #2
 8019852:	3304      	adds	r3, #4
 8019854:	eb08 0c03 	add.w	ip, r8, r3
 8019858:	f858 3003 	ldr.w	r3, [r8, r3]
 801985c:	9308      	str	r3, [sp, #32]
 801985e:	0e1b      	lsrs	r3, r3, #24
 8019860:	9311      	str	r3, [sp, #68]	; 0x44
 8019862:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8019866:	930d      	str	r3, [sp, #52]	; 0x34
 8019868:	0e1b      	lsrs	r3, r3, #24
 801986a:	9314      	str	r3, [sp, #80]	; 0x50
 801986c:	b280      	uxth	r0, r0
 801986e:	b289      	uxth	r1, r1
 8019870:	fb00 f901 	mul.w	r9, r0, r1
 8019874:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8019878:	0100      	lsls	r0, r0, #4
 801987a:	eba0 0809 	sub.w	r8, r0, r9
 801987e:	b289      	uxth	r1, r1
 8019880:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8019884:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019886:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019888:	fa1f f888 	uxth.w	r8, r8
 801988c:	1a5b      	subs	r3, r3, r1
 801988e:	b29b      	uxth	r3, r3
 8019890:	fb08 f000 	mul.w	r0, r8, r0
 8019894:	fb03 000e 	mla	r0, r3, lr, r0
 8019898:	fb01 0005 	mla	r0, r1, r5, r0
 801989c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801989e:	fb09 0005 	mla	r0, r9, r5, r0
 80198a2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80198a6:	2800      	cmp	r0, #0
 80198a8:	f000 80fa 	beq.w	8019aa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80198ac:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80198b0:	d01b      	beq.n	80198ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80198b2:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80198b6:	fb0e fa0a 	mul.w	sl, lr, sl
 80198ba:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80198be:	fb0e fe02 	mul.w	lr, lr, r2
 80198c2:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80198c6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80198ca:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80198ce:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80198d2:	4452      	add	r2, sl
 80198d4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80198d8:	0a12      	lsrs	r2, r2, #8
 80198da:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80198de:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80198e2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80198e6:	ea42 020c 	orr.w	r2, r2, ip
 80198ea:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80198ec:	2dff      	cmp	r5, #255	; 0xff
 80198ee:	d021      	beq.n	8019934 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80198f0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80198f2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80198f6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80198f8:	fb05 fb0b 	mul.w	fp, r5, fp
 80198fc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80198fe:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019902:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019904:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019908:	fb05 fa0a 	mul.w	sl, r5, sl
 801990c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019910:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8019914:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019918:	44de      	add	lr, fp
 801991a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801991e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019922:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019926:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801992a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801992e:	ea4e 050a 	orr.w	r5, lr, sl
 8019932:	950c      	str	r5, [sp, #48]	; 0x30
 8019934:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019936:	2dff      	cmp	r5, #255	; 0xff
 8019938:	d021      	beq.n	801997e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801993a:	9d08      	ldr	r5, [sp, #32]
 801993c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8019940:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019942:	fb05 fb0b 	mul.w	fp, r5, fp
 8019946:	9d08      	ldr	r5, [sp, #32]
 8019948:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801994c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801994e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8019952:	fb05 fa0a 	mul.w	sl, r5, sl
 8019956:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801995a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801995e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019962:	44de      	add	lr, fp
 8019964:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019968:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801996c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019970:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019974:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019978:	ea4e 050a 	orr.w	r5, lr, sl
 801997c:	9508      	str	r5, [sp, #32]
 801997e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019980:	2dff      	cmp	r5, #255	; 0xff
 8019982:	d021      	beq.n	80199c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8019984:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019986:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801998a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801998c:	fb05 fb0b 	mul.w	fp, r5, fp
 8019990:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019992:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019996:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019998:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801999c:	fb05 fa0a 	mul.w	sl, r5, sl
 80199a0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80199a4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80199a8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80199ac:	44de      	add	lr, fp
 80199ae:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80199b2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80199b6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80199ba:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80199be:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80199c2:	ea4e 050a 	orr.w	r5, lr, sl
 80199c6:	950d      	str	r5, [sp, #52]	; 0x34
 80199c8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80199ca:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80199ce:	9d08      	ldr	r5, [sp, #32]
 80199d0:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80199d4:	fb08 fc0c 	mul.w	ip, r8, ip
 80199d8:	fb03 cc0e 	mla	ip, r3, lr, ip
 80199dc:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80199e0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80199e2:	fb01 cc0e 	mla	ip, r1, lr, ip
 80199e6:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80199ea:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80199ec:	fb09 cc0e 	mla	ip, r9, lr, ip
 80199f0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80199f4:	fb08 f80e 	mul.w	r8, r8, lr
 80199f8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80199fc:	fb03 8202 	mla	r2, r3, r2, r8
 8019a00:	9b08      	ldr	r3, [sp, #32]
 8019a02:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019a04:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8019a08:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019a0a:	fb01 220a 	mla	r2, r1, sl, r2
 8019a0e:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8019a12:	fb09 2901 	mla	r9, r9, r1, r2
 8019a16:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019a18:	883b      	ldrh	r3, [r7, #0]
 8019a1a:	4342      	muls	r2, r0
 8019a1c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019a20:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019a24:	1c50      	adds	r0, r2, #1
 8019a26:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019a2a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8019a2e:	ea4c 0c09 	orr.w	ip, ip, r9
 8019a32:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8019a36:	1219      	asrs	r1, r3, #8
 8019a38:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8019a3c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8019a40:	b2c0      	uxtb	r0, r0
 8019a42:	fb12 f205 	smulbb	r2, r2, r5
 8019a46:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019a4a:	fb01 2100 	mla	r1, r1, r0, r2
 8019a4e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8019a52:	10da      	asrs	r2, r3, #3
 8019a54:	fa5f fc8c 	uxtb.w	ip, ip
 8019a58:	00db      	lsls	r3, r3, #3
 8019a5a:	fb1c fc05 	smulbb	ip, ip, r5
 8019a5e:	b2db      	uxtb	r3, r3
 8019a60:	b289      	uxth	r1, r1
 8019a62:	fb03 c300 	mla	r3, r3, r0, ip
 8019a66:	fa1f fc83 	uxth.w	ip, r3
 8019a6a:	1c4b      	adds	r3, r1, #1
 8019a6c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019a70:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019a74:	fb1e fe05 	smulbb	lr, lr, r5
 8019a78:	f10c 0301 	add.w	r3, ip, #1
 8019a7c:	fb02 e200 	mla	r2, r2, r0, lr
 8019a80:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8019a84:	b292      	uxth	r2, r2
 8019a86:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8019a8a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019a8e:	430b      	orrs	r3, r1
 8019a90:	1c51      	adds	r1, r2, #1
 8019a92:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019a96:	0952      	lsrs	r2, r2, #5
 8019a98:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019a9c:	4313      	orrs	r3, r2
 8019a9e:	803b      	strh	r3, [r7, #0]
 8019aa0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019aa2:	441c      	add	r4, r3
 8019aa4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019aa6:	441e      	add	r6, r3
 8019aa8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8019aaa:	3b01      	subs	r3, #1
 8019aac:	3702      	adds	r7, #2
 8019aae:	9318      	str	r3, [sp, #96]	; 0x60
 8019ab0:	e698      	b.n	80197e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019ab2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019ab4:	441c      	add	r4, r3
 8019ab6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019ab8:	441e      	add	r6, r3
 8019aba:	9b07      	ldr	r3, [sp, #28]
 8019abc:	3b01      	subs	r3, #1
 8019abe:	9307      	str	r3, [sp, #28]
 8019ac0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019ac2:	3302      	adds	r3, #2
 8019ac4:	930a      	str	r3, [sp, #40]	; 0x28
 8019ac6:	e66d      	b.n	80197a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8019ac8:	d023      	beq.n	8019b12 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8019aca:	9b07      	ldr	r3, [sp, #28]
 8019acc:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8019ace:	3b01      	subs	r3, #1
 8019ad0:	fb00 4003 	mla	r0, r0, r3, r4
 8019ad4:	1400      	asrs	r0, r0, #16
 8019ad6:	f53f ae82 	bmi.w	80197de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8019ada:	3901      	subs	r1, #1
 8019adc:	4288      	cmp	r0, r1
 8019ade:	f6bf ae7e 	bge.w	80197de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8019ae2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8019ae4:	fb01 6303 	mla	r3, r1, r3, r6
 8019ae8:	141b      	asrs	r3, r3, #16
 8019aea:	f53f ae78 	bmi.w	80197de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8019aee:	3a01      	subs	r2, #1
 8019af0:	4293      	cmp	r3, r2
 8019af2:	f6bf ae74 	bge.w	80197de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8019af6:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8019afa:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8019afe:	f1bb 0f00 	cmp.w	fp, #0
 8019b02:	dc6c      	bgt.n	8019bde <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8019b04:	9b07      	ldr	r3, [sp, #28]
 8019b06:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019b0a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019b0c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8019b10:	930a      	str	r3, [sp, #40]	; 0x28
 8019b12:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019b14:	2b00      	cmp	r3, #0
 8019b16:	f340 81b3 	ble.w	8019e80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8019b1a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019b1e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019b22:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019b26:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019b28:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019b2c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019b30:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019b34:	eef0 6a62 	vmov.f32	s13, s5
 8019b38:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019b3c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019b40:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019b44:	ee16 4a90 	vmov	r4, s13
 8019b48:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019b4c:	eef0 6a43 	vmov.f32	s13, s6
 8019b50:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019b54:	ee12 2a90 	vmov	r2, s5
 8019b58:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019b5c:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b60:	ee13 2a10 	vmov	r2, s6
 8019b64:	9329      	str	r3, [sp, #164]	; 0xa4
 8019b66:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019b68:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b6c:	932a      	str	r3, [sp, #168]	; 0xa8
 8019b6e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8019b70:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8019b72:	3b01      	subs	r3, #1
 8019b74:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019b78:	9317      	str	r3, [sp, #92]	; 0x5c
 8019b7a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019b7c:	bf08      	it	eq
 8019b7e:	4613      	moveq	r3, r2
 8019b80:	ee16 6a90 	vmov	r6, s13
 8019b84:	9307      	str	r3, [sp, #28]
 8019b86:	eeb0 3a67 	vmov.f32	s6, s15
 8019b8a:	eef0 2a47 	vmov.f32	s5, s14
 8019b8e:	e5fb      	b.n	8019788 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019b90:	2900      	cmp	r1, #0
 8019b92:	f43f ae6b 	beq.w	801986c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019b96:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8019b9a:	9308      	str	r3, [sp, #32]
 8019b9c:	0e1b      	lsrs	r3, r3, #24
 8019b9e:	9311      	str	r3, [sp, #68]	; 0x44
 8019ba0:	e664      	b.n	801986c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019ba2:	f112 0801 	adds.w	r8, r2, #1
 8019ba6:	f53f af7b 	bmi.w	8019aa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8019baa:	4543      	cmp	r3, r8
 8019bac:	f6ff af78 	blt.w	8019aa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8019bb0:	f11c 0801 	adds.w	r8, ip, #1
 8019bb4:	f53f af74 	bmi.w	8019aa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8019bb8:	45c6      	cmp	lr, r8
 8019bba:	f6ff af71 	blt.w	8019aa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8019bbe:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8019bc0:	9201      	str	r2, [sp, #4]
 8019bc2:	fa0f f28e 	sxth.w	r2, lr
 8019bc6:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8019bca:	e9cd c002 	strd	ip, r0, [sp, #8]
 8019bce:	9200      	str	r2, [sp, #0]
 8019bd0:	b21b      	sxth	r3, r3
 8019bd2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019bd4:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8019bd6:	4639      	mov	r1, r7
 8019bd8:	f7ff fc79 	bl	80194ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8019bdc:	e760      	b.n	8019aa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8019bde:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019be0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019be2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019be6:	1427      	asrs	r7, r4, #16
 8019be8:	1433      	asrs	r3, r6, #16
 8019bea:	fb01 7303 	mla	r3, r1, r3, r7
 8019bee:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8019bf2:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8019bf6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019bfa:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019bfe:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8019c02:	2a00      	cmp	r2, #0
 8019c04:	f000 8133 	beq.w	8019e6e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8019c08:	687d      	ldr	r5, [r7, #4]
 8019c0a:	950e      	str	r5, [sp, #56]	; 0x38
 8019c0c:	0e2d      	lsrs	r5, r5, #24
 8019c0e:	9515      	str	r5, [sp, #84]	; 0x54
 8019c10:	b178      	cbz	r0, 8019c32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8019c12:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8019c16:	3901      	subs	r1, #1
 8019c18:	0089      	lsls	r1, r1, #2
 8019c1a:	3104      	adds	r1, #4
 8019c1c:	eb07 0e01 	add.w	lr, r7, r1
 8019c20:	5879      	ldr	r1, [r7, r1]
 8019c22:	9109      	str	r1, [sp, #36]	; 0x24
 8019c24:	0e09      	lsrs	r1, r1, #24
 8019c26:	9112      	str	r1, [sp, #72]	; 0x48
 8019c28:	f8de 1004 	ldr.w	r1, [lr, #4]
 8019c2c:	910f      	str	r1, [sp, #60]	; 0x3c
 8019c2e:	0e09      	lsrs	r1, r1, #24
 8019c30:	9116      	str	r1, [sp, #88]	; 0x58
 8019c32:	b292      	uxth	r2, r2
 8019c34:	b280      	uxth	r0, r0
 8019c36:	fb02 f800 	mul.w	r8, r2, r0
 8019c3a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8019c3e:	0112      	lsls	r2, r2, #4
 8019c40:	eba2 0e08 	sub.w	lr, r2, r8
 8019c44:	b280      	uxth	r0, r0
 8019c46:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8019c4a:	9915      	ldr	r1, [sp, #84]	; 0x54
 8019c4c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019c4e:	fa1f fe8e 	uxth.w	lr, lr
 8019c52:	1a12      	subs	r2, r2, r0
 8019c54:	b292      	uxth	r2, r2
 8019c56:	fb0e f101 	mul.w	r1, lr, r1
 8019c5a:	fb02 110c 	mla	r1, r2, ip, r1
 8019c5e:	fb00 1105 	mla	r1, r0, r5, r1
 8019c62:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019c64:	fb08 1105 	mla	r1, r8, r5, r1
 8019c68:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8019c6c:	2900      	cmp	r1, #0
 8019c6e:	f000 80f5 	beq.w	8019e5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8019c72:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8019c76:	d019      	beq.n	8019cac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8019c78:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8019c7c:	fb0c fa0a 	mul.w	sl, ip, sl
 8019c80:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019c84:	fb0c fc03 	mul.w	ip, ip, r3
 8019c88:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8019c8c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019c90:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019c94:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8019c98:	4453      	add	r3, sl
 8019c9a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8019c9e:	0a1b      	lsrs	r3, r3, #8
 8019ca0:	0a3f      	lsrs	r7, r7, #8
 8019ca2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019ca6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8019caa:	433b      	orrs	r3, r7
 8019cac:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019cae:	2dff      	cmp	r5, #255	; 0xff
 8019cb0:	d020      	beq.n	8019cf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8019cb2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019cb4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019cb8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019cba:	436f      	muls	r7, r5
 8019cbc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019cbe:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019cc2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019cc4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019cc8:	fb05 fa0a 	mul.w	sl, r5, sl
 8019ccc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019cd0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019cd4:	44bc      	add	ip, r7
 8019cd6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019cda:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019cde:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019ce2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019ce6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019cea:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019cee:	ea4c 050a 	orr.w	r5, ip, sl
 8019cf2:	950e      	str	r5, [sp, #56]	; 0x38
 8019cf4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019cf6:	2dff      	cmp	r5, #255	; 0xff
 8019cf8:	d020      	beq.n	8019d3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8019cfa:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8019cfc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019d00:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019d02:	436f      	muls	r7, r5
 8019d04:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8019d06:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019d0a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019d0c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019d10:	fb05 fa0a 	mul.w	sl, r5, sl
 8019d14:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019d18:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019d1c:	44bc      	add	ip, r7
 8019d1e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019d22:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019d26:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019d2a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019d2e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019d32:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019d36:	ea4c 050a 	orr.w	r5, ip, sl
 8019d3a:	9509      	str	r5, [sp, #36]	; 0x24
 8019d3c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019d3e:	2dff      	cmp	r5, #255	; 0xff
 8019d40:	d020      	beq.n	8019d84 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8019d42:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8019d44:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019d48:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019d4a:	436f      	muls	r7, r5
 8019d4c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8019d4e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8019d52:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019d54:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019d58:	fb05 fa0a 	mul.w	sl, r5, sl
 8019d5c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019d60:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019d64:	44bc      	add	ip, r7
 8019d66:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8019d6a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8019d6e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019d72:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019d76:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019d7a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019d7e:	ea4c 050a 	orr.w	r5, ip, sl
 8019d82:	950f      	str	r5, [sp, #60]	; 0x3c
 8019d84:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019d86:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8019d8a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8019d8c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8019d90:	fb0e f707 	mul.w	r7, lr, r7
 8019d94:	fb02 770c 	mla	r7, r2, ip, r7
 8019d98:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019d9c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8019d9e:	fb00 770c 	mla	r7, r0, ip, r7
 8019da2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019da6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019da8:	fb08 770c 	mla	r7, r8, ip, r7
 8019dac:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8019db0:	fb0e fe0c 	mul.w	lr, lr, ip
 8019db4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019db8:	fb02 e303 	mla	r3, r2, r3, lr
 8019dbc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019dbe:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019dc0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8019dc4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019dc6:	fb00 330a 	mla	r3, r0, sl, r3
 8019dca:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8019dce:	fb08 3c0c 	mla	ip, r8, ip, r3
 8019dd2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019dd4:	f8b9 0000 	ldrh.w	r0, [r9]
 8019dd8:	4359      	muls	r1, r3
 8019dda:	0a3f      	lsrs	r7, r7, #8
 8019ddc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019de0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019de4:	1c4b      	adds	r3, r1, #1
 8019de6:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8019dea:	ea47 070c 	orr.w	r7, r7, ip
 8019dee:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019df2:	1202      	asrs	r2, r0, #8
 8019df4:	0c3b      	lsrs	r3, r7, #16
 8019df6:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8019dfa:	b2c9      	uxtb	r1, r1
 8019dfc:	fb13 f305 	smulbb	r3, r3, r5
 8019e00:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8019e04:	fb02 3201 	mla	r2, r2, r1, r3
 8019e08:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8019e0c:	10c3      	asrs	r3, r0, #3
 8019e0e:	b2ff      	uxtb	r7, r7
 8019e10:	00c0      	lsls	r0, r0, #3
 8019e12:	b2c0      	uxtb	r0, r0
 8019e14:	fb17 f705 	smulbb	r7, r7, r5
 8019e18:	fb00 7001 	mla	r0, r0, r1, r7
 8019e1c:	b292      	uxth	r2, r2
 8019e1e:	fb1c fc05 	smulbb	ip, ip, r5
 8019e22:	b280      	uxth	r0, r0
 8019e24:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8019e28:	fb03 c301 	mla	r3, r3, r1, ip
 8019e2c:	1c51      	adds	r1, r2, #1
 8019e2e:	f100 0c01 	add.w	ip, r0, #1
 8019e32:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019e36:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8019e3a:	b29b      	uxth	r3, r3
 8019e3c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019e40:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8019e44:	ea4c 0202 	orr.w	r2, ip, r2
 8019e48:	f103 0c01 	add.w	ip, r3, #1
 8019e4c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8019e50:	095b      	lsrs	r3, r3, #5
 8019e52:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019e56:	431a      	orrs	r2, r3
 8019e58:	f8a9 2000 	strh.w	r2, [r9]
 8019e5c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019e5e:	441c      	add	r4, r3
 8019e60:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019e62:	f109 0902 	add.w	r9, r9, #2
 8019e66:	441e      	add	r6, r3
 8019e68:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019e6c:	e647      	b.n	8019afe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8019e6e:	2800      	cmp	r0, #0
 8019e70:	f43f aedf 	beq.w	8019c32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8019e74:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8019e78:	9109      	str	r1, [sp, #36]	; 0x24
 8019e7a:	0e09      	lsrs	r1, r1, #24
 8019e7c:	9112      	str	r1, [sp, #72]	; 0x48
 8019e7e:	e6d8      	b.n	8019c32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8019e80:	b01d      	add	sp, #116	; 0x74
 8019e82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019e86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8019e86:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019e8a:	b085      	sub	sp, #20
 8019e8c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8019e90:	9102      	str	r1, [sp, #8]
 8019e92:	2c00      	cmp	r4, #0
 8019e94:	fb04 7103 	mla	r1, r4, r3, r7
 8019e98:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8019e9c:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8019ea0:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8019ea4:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8019ea8:	f2c0 810c 	blt.w	801a0c4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8019eac:	45a6      	cmp	lr, r4
 8019eae:	f340 8109 	ble.w	801a0c4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8019eb2:	2f00      	cmp	r7, #0
 8019eb4:	f2c0 8104 	blt.w	801a0c0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8019eb8:	42bb      	cmp	r3, r7
 8019eba:	f340 8101 	ble.w	801a0c0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8019ebe:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8019ec2:	1c7a      	adds	r2, r7, #1
 8019ec4:	f100 8101 	bmi.w	801a0ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8019ec8:	4293      	cmp	r3, r2
 8019eca:	f340 80fe 	ble.w	801a0ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8019ece:	2e00      	cmp	r6, #0
 8019ed0:	f000 80fd 	beq.w	801a0ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8019ed4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8019ed8:	3401      	adds	r4, #1
 8019eda:	f100 80fc 	bmi.w	801a0d6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8019ede:	45a6      	cmp	lr, r4
 8019ee0:	f340 80f9 	ble.w	801a0d6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8019ee4:	2800      	cmp	r0, #0
 8019ee6:	f000 80f9 	beq.w	801a0dc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8019eea:	2f00      	cmp	r7, #0
 8019eec:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8019ef0:	f2c0 80ef 	blt.w	801a0d2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8019ef4:	42bb      	cmp	r3, r7
 8019ef6:	f340 80ec 	ble.w	801a0d2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8019efa:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8019efe:	3701      	adds	r7, #1
 8019f00:	f100 80ef 	bmi.w	801a0e2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8019f04:	42bb      	cmp	r3, r7
 8019f06:	f340 80ec 	ble.w	801a0e2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8019f0a:	2e00      	cmp	r6, #0
 8019f0c:	f000 80eb 	beq.w	801a0e6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8019f10:	6852      	ldr	r2, [r2, #4]
 8019f12:	b2b6      	uxth	r6, r6
 8019f14:	b280      	uxth	r0, r0
 8019f16:	fb00 fe06 	mul.w	lr, r0, r6
 8019f1a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8019f1e:	0136      	lsls	r6, r6, #4
 8019f20:	eba6 070e 	sub.w	r7, r6, lr
 8019f24:	b280      	uxth	r0, r0
 8019f26:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8019f2a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8019f2e:	b2bf      	uxth	r7, r7
 8019f30:	1a1b      	subs	r3, r3, r0
 8019f32:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8019f36:	b29b      	uxth	r3, r3
 8019f38:	fb07 f60a 	mul.w	r6, r7, sl
 8019f3c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8019f40:	fb0b 6603 	mla	r6, fp, r3, r6
 8019f44:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8019f48:	fb00 6609 	mla	r6, r0, r9, r6
 8019f4c:	fb0e 6608 	mla	r6, lr, r8, r6
 8019f50:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8019f54:	9600      	str	r6, [sp, #0]
 8019f56:	2e00      	cmp	r6, #0
 8019f58:	f000 80af 	beq.w	801a0ba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8019f5c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8019f60:	fb0b fc0c 	mul.w	ip, fp, ip
 8019f64:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8019f68:	fb0b f505 	mul.w	r5, fp, r5
 8019f6c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8019f70:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8019f74:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8019f78:	44dc      	add	ip, fp
 8019f7a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019f7e:	9501      	str	r5, [sp, #4]
 8019f80:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8019f84:	9503      	str	r5, [sp, #12]
 8019f86:	9d01      	ldr	r5, [sp, #4]
 8019f88:	9e02      	ldr	r6, [sp, #8]
 8019f8a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8019f8e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8019f92:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8019f96:	fb0a fc0c 	mul.w	ip, sl, ip
 8019f9a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8019f9e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8019fa2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8019fa6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8019faa:	4465      	add	r5, ip
 8019fac:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019fb0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8019fb4:	fb09 fc0c 	mul.w	ip, r9, ip
 8019fb8:	fb09 f904 	mul.w	r9, r9, r4
 8019fbc:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8019fc0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8019fc4:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8019fc8:	fb08 f404 	mul.w	r4, r8, r4
 8019fcc:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8019fd0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019fd4:	fb08 f802 	mul.w	r8, r8, r2
 8019fd8:	fb0a fa01 	mul.w	sl, sl, r1
 8019fdc:	0a22      	lsrs	r2, r4, #8
 8019fde:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8019fe2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019fe6:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8019fea:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8019fee:	4414      	add	r4, r2
 8019ff0:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8019ff4:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8019ff8:	0a2d      	lsrs	r5, r5, #8
 8019ffa:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8019ffe:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801a002:	9a03      	ldr	r2, [sp, #12]
 801a004:	8836      	ldrh	r6, [r6, #0]
 801a006:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801a00a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a00e:	437d      	muls	r5, r7
 801a010:	4461      	add	r1, ip
 801a012:	0a24      	lsrs	r4, r4, #8
 801a014:	fb02 5503 	mla	r5, r2, r3, r5
 801a018:	0a09      	lsrs	r1, r1, #8
 801a01a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a01e:	fb04 540e 	mla	r4, r4, lr, r5
 801a022:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801a026:	fb01 4100 	mla	r1, r1, r0, r4
 801a02a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a02e:	0a09      	lsrs	r1, r1, #8
 801a030:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a034:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801a038:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801a03c:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801a040:	fb07 f70a 	mul.w	r7, r7, sl
 801a044:	fb03 7101 	mla	r1, r3, r1, r7
 801a048:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a04c:	9b00      	ldr	r3, [sp, #0]
 801a04e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801a052:	fb0e 1e08 	mla	lr, lr, r8, r1
 801a056:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801a05a:	fb00 e101 	mla	r1, r0, r1, lr
 801a05e:	43da      	mvns	r2, r3
 801a060:	1233      	asrs	r3, r6, #8
 801a062:	b2d2      	uxtb	r2, r2
 801a064:	10f0      	asrs	r0, r6, #3
 801a066:	0a09      	lsrs	r1, r1, #8
 801a068:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801a06c:	00f6      	lsls	r6, r6, #3
 801a06e:	4353      	muls	r3, r2
 801a070:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801a074:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a078:	b2f6      	uxtb	r6, r6
 801a07a:	4321      	orrs	r1, r4
 801a07c:	4350      	muls	r0, r2
 801a07e:	4356      	muls	r6, r2
 801a080:	1c5a      	adds	r2, r3, #1
 801a082:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a086:	0c0b      	lsrs	r3, r1, #16
 801a088:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a08c:	1c42      	adds	r2, r0, #1
 801a08e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a092:	0a0a      	lsrs	r2, r1, #8
 801a094:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801a098:	021b      	lsls	r3, r3, #8
 801a09a:	00d2      	lsls	r2, r2, #3
 801a09c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a0a0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801a0a4:	4313      	orrs	r3, r2
 801a0a6:	1c72      	adds	r2, r6, #1
 801a0a8:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801a0ac:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801a0b0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801a0b4:	4319      	orrs	r1, r3
 801a0b6:	9b02      	ldr	r3, [sp, #8]
 801a0b8:	8019      	strh	r1, [r3, #0]
 801a0ba:	b005      	add	sp, #20
 801a0bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a0c0:	2500      	movs	r5, #0
 801a0c2:	e6fe      	b.n	8019ec2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801a0c4:	2100      	movs	r1, #0
 801a0c6:	460d      	mov	r5, r1
 801a0c8:	e706      	b.n	8019ed8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801a0ca:	2100      	movs	r1, #0
 801a0cc:	e704      	b.n	8019ed8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801a0ce:	4631      	mov	r1, r6
 801a0d0:	e702      	b.n	8019ed8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801a0d2:	2400      	movs	r4, #0
 801a0d4:	e713      	b.n	8019efe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801a0d6:	2200      	movs	r2, #0
 801a0d8:	4614      	mov	r4, r2
 801a0da:	e71a      	b.n	8019f12 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801a0dc:	4602      	mov	r2, r0
 801a0de:	4604      	mov	r4, r0
 801a0e0:	e717      	b.n	8019f12 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801a0e2:	2200      	movs	r2, #0
 801a0e4:	e715      	b.n	8019f12 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801a0e6:	4632      	mov	r2, r6
 801a0e8:	e713      	b.n	8019f12 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801a0ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a0ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a0f0:	b09b      	sub	sp, #108	; 0x6c
 801a0f2:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801a0f6:	9218      	str	r2, [sp, #96]	; 0x60
 801a0f8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801a0fa:	9116      	str	r1, [sp, #88]	; 0x58
 801a0fc:	9307      	str	r3, [sp, #28]
 801a0fe:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801a102:	9019      	str	r0, [sp, #100]	; 0x64
 801a104:	6850      	ldr	r0, [r2, #4]
 801a106:	6812      	ldr	r2, [r2, #0]
 801a108:	fb00 1303 	mla	r3, r0, r3, r1
 801a10c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a110:	930a      	str	r3, [sp, #40]	; 0x28
 801a112:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a114:	681b      	ldr	r3, [r3, #0]
 801a116:	930f      	str	r3, [sp, #60]	; 0x3c
 801a118:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a11a:	2b00      	cmp	r3, #0
 801a11c:	dc03      	bgt.n	801a126 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801a11e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a120:	2b00      	cmp	r3, #0
 801a122:	f340 8386 	ble.w	801a832 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801a126:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a128:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a12c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a130:	1e48      	subs	r0, r1, #1
 801a132:	1e57      	subs	r7, r2, #1
 801a134:	9b07      	ldr	r3, [sp, #28]
 801a136:	2b00      	cmp	r3, #0
 801a138:	f340 8166 	ble.w	801a408 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a13c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801a140:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a144:	d406      	bmi.n	801a154 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a146:	4584      	cmp	ip, r0
 801a148:	da04      	bge.n	801a154 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a14a:	2b00      	cmp	r3, #0
 801a14c:	db02      	blt.n	801a154 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a14e:	42bb      	cmp	r3, r7
 801a150:	f2c0 815b 	blt.w	801a40a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801a154:	f11c 0c01 	adds.w	ip, ip, #1
 801a158:	f100 814b 	bmi.w	801a3f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801a15c:	4561      	cmp	r1, ip
 801a15e:	f2c0 8148 	blt.w	801a3f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801a162:	3301      	adds	r3, #1
 801a164:	f100 8145 	bmi.w	801a3f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801a168:	429a      	cmp	r2, r3
 801a16a:	f2c0 8142 	blt.w	801a3f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801a16e:	9b07      	ldr	r3, [sp, #28]
 801a170:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801a172:	9317      	str	r3, [sp, #92]	; 0x5c
 801a174:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a176:	2b00      	cmp	r3, #0
 801a178:	f340 8165 	ble.w	801a446 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801a17c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801a17e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a180:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801a184:	689b      	ldr	r3, [r3, #8]
 801a186:	1422      	asrs	r2, r4, #16
 801a188:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801a18c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801a190:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a194:	f100 81d5 	bmi.w	801a542 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801a198:	f103 38ff 	add.w	r8, r3, #4294967295
 801a19c:	4542      	cmp	r2, r8
 801a19e:	f280 81d0 	bge.w	801a542 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801a1a2:	f1bc 0f00 	cmp.w	ip, #0
 801a1a6:	f2c0 81cc 	blt.w	801a542 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801a1aa:	f10e 38ff 	add.w	r8, lr, #4294967295
 801a1ae:	45c4      	cmp	ip, r8
 801a1b0:	f280 81c7 	bge.w	801a542 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801a1b4:	b21b      	sxth	r3, r3
 801a1b6:	fb0c 2203 	mla	r2, ip, r3, r2
 801a1ba:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a1bc:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801a1c0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801a1c4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801a1c8:	2900      	cmp	r1, #0
 801a1ca:	f000 8182 	beq.w	801a4d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801a1ce:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801a1d2:	950b      	str	r5, [sp, #44]	; 0x2c
 801a1d4:	0e2d      	lsrs	r5, r5, #24
 801a1d6:	9512      	str	r5, [sp, #72]	; 0x48
 801a1d8:	b180      	cbz	r0, 801a1fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801a1da:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801a1de:	3b01      	subs	r3, #1
 801a1e0:	009b      	lsls	r3, r3, #2
 801a1e2:	3304      	adds	r3, #4
 801a1e4:	eb08 0c03 	add.w	ip, r8, r3
 801a1e8:	f858 3003 	ldr.w	r3, [r8, r3]
 801a1ec:	9308      	str	r3, [sp, #32]
 801a1ee:	0e1b      	lsrs	r3, r3, #24
 801a1f0:	9310      	str	r3, [sp, #64]	; 0x40
 801a1f2:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801a1f6:	930c      	str	r3, [sp, #48]	; 0x30
 801a1f8:	0e1b      	lsrs	r3, r3, #24
 801a1fa:	9313      	str	r3, [sp, #76]	; 0x4c
 801a1fc:	b289      	uxth	r1, r1
 801a1fe:	b280      	uxth	r0, r0
 801a200:	fb01 f900 	mul.w	r9, r1, r0
 801a204:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801a208:	0109      	lsls	r1, r1, #4
 801a20a:	eba1 0809 	sub.w	r8, r1, r9
 801a20e:	b280      	uxth	r0, r0
 801a210:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801a214:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801a216:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a218:	fa1f f888 	uxth.w	r8, r8
 801a21c:	1a09      	subs	r1, r1, r0
 801a21e:	b289      	uxth	r1, r1
 801a220:	fb08 f303 	mul.w	r3, r8, r3
 801a224:	fb01 330e 	mla	r3, r1, lr, r3
 801a228:	fb00 3305 	mla	r3, r0, r5, r3
 801a22c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a22e:	fb09 3305 	mla	r3, r9, r5, r3
 801a232:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a236:	2b00      	cmp	r3, #0
 801a238:	f000 80d2 	beq.w	801a3e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801a23c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801a240:	d01b      	beq.n	801a27a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801a242:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801a246:	fb0e fa0a 	mul.w	sl, lr, sl
 801a24a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a24e:	fb0e fe02 	mul.w	lr, lr, r2
 801a252:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801a256:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a25a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a25e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801a262:	4452      	add	r2, sl
 801a264:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a268:	0a12      	lsrs	r2, r2, #8
 801a26a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a26e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a272:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a276:	ea42 020c 	orr.w	r2, r2, ip
 801a27a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a27c:	2dff      	cmp	r5, #255	; 0xff
 801a27e:	d021      	beq.n	801a2c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801a280:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a282:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801a286:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a288:	fb05 fb0b 	mul.w	fp, r5, fp
 801a28c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a28e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a292:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a294:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a298:	fb05 fa0a 	mul.w	sl, r5, sl
 801a29c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a2a0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a2a4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a2a8:	44de      	add	lr, fp
 801a2aa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a2ae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a2b2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a2b6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a2ba:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a2be:	ea4e 050a 	orr.w	r5, lr, sl
 801a2c2:	950b      	str	r5, [sp, #44]	; 0x2c
 801a2c4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a2c6:	2dff      	cmp	r5, #255	; 0xff
 801a2c8:	d021      	beq.n	801a30e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801a2ca:	9d08      	ldr	r5, [sp, #32]
 801a2cc:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801a2d0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a2d2:	fb05 fb0b 	mul.w	fp, r5, fp
 801a2d6:	9d08      	ldr	r5, [sp, #32]
 801a2d8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801a2dc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a2de:	fb05 fa0e 	mul.w	sl, r5, lr
 801a2e2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a2e6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a2ea:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a2ee:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a2f2:	44de      	add	lr, fp
 801a2f4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a2f8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a2fc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a300:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a304:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a308:	ea4e 050a 	orr.w	r5, lr, sl
 801a30c:	9508      	str	r5, [sp, #32]
 801a30e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a310:	2dff      	cmp	r5, #255	; 0xff
 801a312:	d021      	beq.n	801a358 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801a314:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a316:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801a31a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a31c:	fb05 fb0b 	mul.w	fp, r5, fp
 801a320:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a322:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a326:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a328:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801a32c:	fb05 fa0a 	mul.w	sl, r5, sl
 801a330:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a334:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801a338:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801a33c:	44de      	add	lr, fp
 801a33e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801a342:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a346:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a34a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801a34e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a352:	ea4e 050a 	orr.w	r5, lr, sl
 801a356:	950c      	str	r5, [sp, #48]	; 0x30
 801a358:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a35a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a35e:	9d08      	ldr	r5, [sp, #32]
 801a360:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801a364:	fb08 fc0c 	mul.w	ip, r8, ip
 801a368:	fb01 cc0e 	mla	ip, r1, lr, ip
 801a36c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801a370:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a372:	fb00 cc0e 	mla	ip, r0, lr, ip
 801a376:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801a37a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a37c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801a380:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801a384:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a388:	fb08 f80e 	mul.w	r8, r8, lr
 801a38c:	fb01 8202 	mla	r2, r1, r2, r8
 801a390:	9908      	ldr	r1, [sp, #32]
 801a392:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801a396:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a398:	fb00 220a 	mla	r2, r0, sl, r2
 801a39c:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801a3a0:	fb09 2900 	mla	r9, r9, r0, r2
 801a3a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a3a8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a3ac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a3b0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801a3b4:	ea4c 0c09 	orr.w	ip, ip, r9
 801a3b8:	2bff      	cmp	r3, #255	; 0xff
 801a3ba:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801a3be:	f040 8091 	bne.w	801a4e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801a3c2:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801a3c6:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801a3ca:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a3ce:	f022 0207 	bic.w	r2, r2, #7
 801a3d2:	431a      	orrs	r2, r3
 801a3d4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801a3d8:	ea4c 0c02 	orr.w	ip, ip, r2
 801a3dc:	f8a7 c000 	strh.w	ip, [r7]
 801a3e0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801a3e2:	441c      	add	r4, r3
 801a3e4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a3e6:	441e      	add	r6, r3
 801a3e8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801a3ea:	3b01      	subs	r3, #1
 801a3ec:	3702      	adds	r7, #2
 801a3ee:	9317      	str	r3, [sp, #92]	; 0x5c
 801a3f0:	e6c0      	b.n	801a174 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801a3f2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801a3f4:	441c      	add	r4, r3
 801a3f6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a3f8:	441e      	add	r6, r3
 801a3fa:	9b07      	ldr	r3, [sp, #28]
 801a3fc:	3b01      	subs	r3, #1
 801a3fe:	9307      	str	r3, [sp, #28]
 801a400:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a402:	3302      	adds	r3, #2
 801a404:	930a      	str	r3, [sp, #40]	; 0x28
 801a406:	e695      	b.n	801a134 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801a408:	d024      	beq.n	801a454 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801a40a:	9b07      	ldr	r3, [sp, #28]
 801a40c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801a40e:	3b01      	subs	r3, #1
 801a410:	fb00 4003 	mla	r0, r0, r3, r4
 801a414:	1400      	asrs	r0, r0, #16
 801a416:	f53f aeaa 	bmi.w	801a16e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801a41a:	3901      	subs	r1, #1
 801a41c:	4288      	cmp	r0, r1
 801a41e:	f6bf aea6 	bge.w	801a16e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801a422:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801a424:	fb01 6303 	mla	r3, r1, r3, r6
 801a428:	141b      	asrs	r3, r3, #16
 801a42a:	f53f aea0 	bmi.w	801a16e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801a42e:	3a01      	subs	r2, #1
 801a430:	4293      	cmp	r3, r2
 801a432:	f6bf ae9c 	bge.w	801a16e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801a436:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801a43a:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801a43e:	f1bb 0f00 	cmp.w	fp, #0
 801a442:	f300 809a 	bgt.w	801a57a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801a446:	9b07      	ldr	r3, [sp, #28]
 801a448:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a44c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a44e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801a452:	930a      	str	r3, [sp, #40]	; 0x28
 801a454:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a456:	2b00      	cmp	r3, #0
 801a458:	f340 81eb 	ble.w	801a832 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801a45c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a460:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a464:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a468:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a46a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a46e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a472:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a476:	eef0 6a62 	vmov.f32	s13, s5
 801a47a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a47e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a482:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a486:	ee16 4a90 	vmov	r4, s13
 801a48a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a48e:	eef0 6a43 	vmov.f32	s13, s6
 801a492:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a496:	ee12 2a90 	vmov	r2, s5
 801a49a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a49e:	fb92 f3f3 	sdiv	r3, r2, r3
 801a4a2:	ee13 2a10 	vmov	r2, s6
 801a4a6:	9327      	str	r3, [sp, #156]	; 0x9c
 801a4a8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a4aa:	fb92 f3f3 	sdiv	r3, r2, r3
 801a4ae:	9328      	str	r3, [sp, #160]	; 0xa0
 801a4b0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a4b2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801a4b4:	3b01      	subs	r3, #1
 801a4b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a4ba:	9316      	str	r3, [sp, #88]	; 0x58
 801a4bc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a4be:	bf08      	it	eq
 801a4c0:	4613      	moveq	r3, r2
 801a4c2:	ee16 6a90 	vmov	r6, s13
 801a4c6:	9307      	str	r3, [sp, #28]
 801a4c8:	eeb0 3a67 	vmov.f32	s6, s15
 801a4cc:	eef0 2a47 	vmov.f32	s5, s14
 801a4d0:	e622      	b.n	801a118 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801a4d2:	2800      	cmp	r0, #0
 801a4d4:	f43f ae92 	beq.w	801a1fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801a4d8:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801a4dc:	9308      	str	r3, [sp, #32]
 801a4de:	0e1b      	lsrs	r3, r3, #24
 801a4e0:	9310      	str	r3, [sp, #64]	; 0x40
 801a4e2:	e68b      	b.n	801a1fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801a4e4:	8839      	ldrh	r1, [r7, #0]
 801a4e6:	4dd4      	ldr	r5, [pc, #848]	; (801a838 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801a4e8:	43db      	mvns	r3, r3
 801a4ea:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801a4ee:	fa5f f883 	uxtb.w	r8, r3
 801a4f2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a4f6:	fb0e fe08 	mul.w	lr, lr, r8
 801a4fa:	10c8      	asrs	r0, r1, #3
 801a4fc:	00cb      	lsls	r3, r1, #3
 801a4fe:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a502:	f10e 0101 	add.w	r1, lr, #1
 801a506:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801a50a:	fb00 f008 	mul.w	r0, r0, r8
 801a50e:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801a512:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801a516:	f100 0e01 	add.w	lr, r0, #1
 801a51a:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801a51e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801a522:	b2db      	uxtb	r3, r3
 801a524:	b2c9      	uxtb	r1, r1
 801a526:	00d2      	lsls	r2, r2, #3
 801a528:	fb03 f308 	mul.w	r3, r3, r8
 801a52c:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801a530:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a534:	430a      	orrs	r2, r1
 801a536:	1c59      	adds	r1, r3, #1
 801a538:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801a53c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801a540:	e748      	b.n	801a3d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801a542:	f112 0801 	adds.w	r8, r2, #1
 801a546:	f53f af4b 	bmi.w	801a3e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801a54a:	4543      	cmp	r3, r8
 801a54c:	f6ff af48 	blt.w	801a3e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801a550:	f11c 0801 	adds.w	r8, ip, #1
 801a554:	f53f af44 	bmi.w	801a3e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801a558:	45c6      	cmp	lr, r8
 801a55a:	f6ff af41 	blt.w	801a3e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801a55e:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801a562:	fa0f f28e 	sxth.w	r2, lr
 801a566:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801a56a:	9200      	str	r2, [sp, #0]
 801a56c:	b21b      	sxth	r3, r3
 801a56e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a570:	9819      	ldr	r0, [sp, #100]	; 0x64
 801a572:	4639      	mov	r1, r7
 801a574:	f7ff fc87 	bl	8019e86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801a578:	e732      	b.n	801a3e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801a57a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a57c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a57e:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801a582:	1421      	asrs	r1, r4, #16
 801a584:	1433      	asrs	r3, r6, #16
 801a586:	fb07 1303 	mla	r3, r7, r3, r1
 801a58a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801a58c:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801a590:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801a594:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a598:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a59c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801a5a0:	2a00      	cmp	r2, #0
 801a5a2:	f000 8107 	beq.w	801a7b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801a5a6:	684d      	ldr	r5, [r1, #4]
 801a5a8:	950d      	str	r5, [sp, #52]	; 0x34
 801a5aa:	0e2d      	lsrs	r5, r5, #24
 801a5ac:	9514      	str	r5, [sp, #80]	; 0x50
 801a5ae:	b178      	cbz	r0, 801a5d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801a5b0:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801a5b4:	3f01      	subs	r7, #1
 801a5b6:	00bf      	lsls	r7, r7, #2
 801a5b8:	3704      	adds	r7, #4
 801a5ba:	eb01 0e07 	add.w	lr, r1, r7
 801a5be:	59c9      	ldr	r1, [r1, r7]
 801a5c0:	9109      	str	r1, [sp, #36]	; 0x24
 801a5c2:	0e09      	lsrs	r1, r1, #24
 801a5c4:	9111      	str	r1, [sp, #68]	; 0x44
 801a5c6:	f8de 1004 	ldr.w	r1, [lr, #4]
 801a5ca:	910e      	str	r1, [sp, #56]	; 0x38
 801a5cc:	0e09      	lsrs	r1, r1, #24
 801a5ce:	9115      	str	r1, [sp, #84]	; 0x54
 801a5d0:	b292      	uxth	r2, r2
 801a5d2:	b280      	uxth	r0, r0
 801a5d4:	fb02 f900 	mul.w	r9, r2, r0
 801a5d8:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801a5dc:	0112      	lsls	r2, r2, #4
 801a5de:	eba2 0e09 	sub.w	lr, r2, r9
 801a5e2:	b280      	uxth	r0, r0
 801a5e4:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801a5e8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a5ea:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a5ec:	fa1f fe8e 	uxth.w	lr, lr
 801a5f0:	1a09      	subs	r1, r1, r0
 801a5f2:	b289      	uxth	r1, r1
 801a5f4:	fb0e f202 	mul.w	r2, lr, r2
 801a5f8:	fb01 220c 	mla	r2, r1, ip, r2
 801a5fc:	fb00 2205 	mla	r2, r0, r5, r2
 801a600:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a602:	fb09 2205 	mla	r2, r9, r5, r2
 801a606:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801a60a:	2a00      	cmp	r2, #0
 801a60c:	f000 80c9 	beq.w	801a7a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801a610:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801a614:	d019      	beq.n	801a64a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801a616:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801a61a:	fb0c fa0a 	mul.w	sl, ip, sl
 801a61e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a622:	fb0c fc03 	mul.w	ip, ip, r3
 801a626:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801a62a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a62e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801a632:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801a636:	4453      	add	r3, sl
 801a638:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801a63c:	0a1b      	lsrs	r3, r3, #8
 801a63e:	0a3f      	lsrs	r7, r7, #8
 801a640:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801a644:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801a648:	433b      	orrs	r3, r7
 801a64a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a64c:	2dff      	cmp	r5, #255	; 0xff
 801a64e:	d020      	beq.n	801a692 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801a650:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a652:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a656:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a658:	436f      	muls	r7, r5
 801a65a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a65c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a660:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a662:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a666:	fb05 fa0a 	mul.w	sl, r5, sl
 801a66a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a66e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a672:	44bc      	add	ip, r7
 801a674:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a678:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a67c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a680:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a684:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a688:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a68c:	ea4c 050a 	orr.w	r5, ip, sl
 801a690:	950d      	str	r5, [sp, #52]	; 0x34
 801a692:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a694:	2dff      	cmp	r5, #255	; 0xff
 801a696:	d020      	beq.n	801a6da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801a698:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a69a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a69e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a6a0:	436f      	muls	r7, r5
 801a6a2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a6a4:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801a6a8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a6aa:	fb05 fa0c 	mul.w	sl, r5, ip
 801a6ae:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a6b2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a6b6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a6ba:	44bc      	add	ip, r7
 801a6bc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a6c0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a6c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a6c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a6cc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a6d0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a6d4:	ea4c 050a 	orr.w	r5, ip, sl
 801a6d8:	9509      	str	r5, [sp, #36]	; 0x24
 801a6da:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a6dc:	2dff      	cmp	r5, #255	; 0xff
 801a6de:	d020      	beq.n	801a722 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801a6e0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a6e2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a6e6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a6e8:	436f      	muls	r7, r5
 801a6ea:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a6ec:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801a6f0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801a6f2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801a6f6:	fb05 fa0a 	mul.w	sl, r5, sl
 801a6fa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801a6fe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a702:	44bc      	add	ip, r7
 801a704:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801a708:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801a70c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a710:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a714:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801a718:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a71c:	ea4c 050a 	orr.w	r5, ip, sl
 801a720:	950e      	str	r5, [sp, #56]	; 0x38
 801a722:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a724:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801a728:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a72a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801a72e:	fb0e f707 	mul.w	r7, lr, r7
 801a732:	fb01 770c 	mla	r7, r1, ip, r7
 801a736:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a73a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a73c:	fb00 770c 	mla	r7, r0, ip, r7
 801a740:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a744:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a746:	fb09 770c 	mla	r7, r9, ip, r7
 801a74a:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801a74e:	fb0e fe0c 	mul.w	lr, lr, ip
 801a752:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a756:	fb01 e303 	mla	r3, r1, r3, lr
 801a75a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a75c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801a760:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a762:	fb00 330a 	mla	r3, r0, sl, r3
 801a766:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801a76a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a76e:	0a3f      	lsrs	r7, r7, #8
 801a770:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a774:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801a778:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801a77c:	ea47 070c 	orr.w	r7, r7, ip
 801a780:	2aff      	cmp	r2, #255	; 0xff
 801a782:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801a786:	d11e      	bne.n	801a7c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801a788:	097a      	lsrs	r2, r7, #5
 801a78a:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801a78e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a792:	f023 0307 	bic.w	r3, r3, #7
 801a796:	4313      	orrs	r3, r2
 801a798:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801a79c:	431f      	orrs	r7, r3
 801a79e:	f8a8 7000 	strh.w	r7, [r8]
 801a7a2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801a7a4:	441c      	add	r4, r3
 801a7a6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a7a8:	f108 0802 	add.w	r8, r8, #2
 801a7ac:	441e      	add	r6, r3
 801a7ae:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a7b2:	e644      	b.n	801a43e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801a7b4:	2800      	cmp	r0, #0
 801a7b6:	f43f af0b 	beq.w	801a5d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801a7ba:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801a7be:	9109      	str	r1, [sp, #36]	; 0x24
 801a7c0:	0e09      	lsrs	r1, r1, #24
 801a7c2:	9111      	str	r1, [sp, #68]	; 0x44
 801a7c4:	e704      	b.n	801a5d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801a7c6:	f8b8 1000 	ldrh.w	r1, [r8]
 801a7ca:	43d2      	mvns	r2, r2
 801a7cc:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801a7d0:	fa5f fe82 	uxtb.w	lr, r2
 801a7d4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a7d8:	fb0c fc0e 	mul.w	ip, ip, lr
 801a7dc:	10c8      	asrs	r0, r1, #3
 801a7de:	00ca      	lsls	r2, r1, #3
 801a7e0:	f10c 0101 	add.w	r1, ip, #1
 801a7e4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801a7e8:	0c39      	lsrs	r1, r7, #16
 801a7ea:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801a7ee:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a7f2:	4911      	ldr	r1, [pc, #68]	; (801a838 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801a7f4:	fb00 f00e 	mul.w	r0, r0, lr
 801a7f8:	fa5f fc8c 	uxtb.w	ip, ip
 801a7fc:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801a800:	b2d2      	uxtb	r2, r2
 801a802:	1c41      	adds	r1, r0, #1
 801a804:	fb02 f20e 	mul.w	r2, r2, lr
 801a808:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801a80c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801a810:	1c51      	adds	r1, r2, #1
 801a812:	00c0      	lsls	r0, r0, #3
 801a814:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a818:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a81c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801a820:	ea4c 0c00 	orr.w	ip, ip, r0
 801a824:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801a828:	ea47 0c0c 	orr.w	ip, r7, ip
 801a82c:	f8a8 c000 	strh.w	ip, [r8]
 801a830:	e7b7      	b.n	801a7a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801a832:	b01b      	add	sp, #108	; 0x6c
 801a834:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a838:	fffff800 	.word	0xfffff800

0801a83c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801a83c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a840:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801a844:	2d00      	cmp	r5, #0
 801a846:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801a84a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801a84e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801a852:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801a856:	fb05 0e03 	mla	lr, r5, r3, r0
 801a85a:	f2c0 808c 	blt.w	801a976 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801a85e:	45a9      	cmp	r9, r5
 801a860:	f340 8089 	ble.w	801a976 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801a864:	2800      	cmp	r0, #0
 801a866:	f2c0 8084 	blt.w	801a972 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801a86a:	4580      	cmp	r8, r0
 801a86c:	f340 8081 	ble.w	801a972 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801a870:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801a874:	f01e 0f01 	tst.w	lr, #1
 801a878:	5d16      	ldrb	r6, [r2, r4]
 801a87a:	bf0c      	ite	eq
 801a87c:	f006 060f 	andeq.w	r6, r6, #15
 801a880:	1136      	asrne	r6, r6, #4
 801a882:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801a886:	b2f6      	uxtb	r6, r6
 801a888:	1c44      	adds	r4, r0, #1
 801a88a:	d477      	bmi.n	801a97c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801a88c:	45a0      	cmp	r8, r4
 801a88e:	dd75      	ble.n	801a97c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801a890:	2f00      	cmp	r7, #0
 801a892:	d075      	beq.n	801a980 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801a894:	f10e 0a01 	add.w	sl, lr, #1
 801a898:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801a89c:	f01a 0f01 	tst.w	sl, #1
 801a8a0:	5d14      	ldrb	r4, [r2, r4]
 801a8a2:	bf0c      	ite	eq
 801a8a4:	f004 040f 	andeq.w	r4, r4, #15
 801a8a8:	1124      	asrne	r4, r4, #4
 801a8aa:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801a8ae:	b2e4      	uxtb	r4, r4
 801a8b0:	3501      	adds	r5, #1
 801a8b2:	d469      	bmi.n	801a988 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801a8b4:	45a9      	cmp	r9, r5
 801a8b6:	dd67      	ble.n	801a988 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801a8b8:	f1bc 0f00 	cmp.w	ip, #0
 801a8bc:	d067      	beq.n	801a98e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801a8be:	2800      	cmp	r0, #0
 801a8c0:	db60      	blt.n	801a984 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801a8c2:	4580      	cmp	r8, r0
 801a8c4:	dd5e      	ble.n	801a984 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801a8c6:	eb03 090e 	add.w	r9, r3, lr
 801a8ca:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801a8ce:	f019 0f01 	tst.w	r9, #1
 801a8d2:	5d55      	ldrb	r5, [r2, r5]
 801a8d4:	bf0c      	ite	eq
 801a8d6:	f005 050f 	andeq.w	r5, r5, #15
 801a8da:	112d      	asrne	r5, r5, #4
 801a8dc:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801a8e0:	b2ed      	uxtb	r5, r5
 801a8e2:	3001      	adds	r0, #1
 801a8e4:	d456      	bmi.n	801a994 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801a8e6:	4580      	cmp	r8, r0
 801a8e8:	dd54      	ble.n	801a994 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801a8ea:	2f00      	cmp	r7, #0
 801a8ec:	d054      	beq.n	801a998 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801a8ee:	3301      	adds	r3, #1
 801a8f0:	449e      	add	lr, r3
 801a8f2:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801a8f6:	f01e 0f01 	tst.w	lr, #1
 801a8fa:	5cd0      	ldrb	r0, [r2, r3]
 801a8fc:	bf0c      	ite	eq
 801a8fe:	f000 000f 	andeq.w	r0, r0, #15
 801a902:	1100      	asrne	r0, r0, #4
 801a904:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a908:	b2c3      	uxtb	r3, r0
 801a90a:	b2ba      	uxth	r2, r7
 801a90c:	fa1f fc8c 	uxth.w	ip, ip
 801a910:	fb02 f00c 	mul.w	r0, r2, ip
 801a914:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801a918:	0112      	lsls	r2, r2, #4
 801a91a:	fa1f fc8c 	uxth.w	ip, ip
 801a91e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801a922:	1a12      	subs	r2, r2, r0
 801a924:	eba7 070c 	sub.w	r7, r7, ip
 801a928:	b292      	uxth	r2, r2
 801a92a:	b2bf      	uxth	r7, r7
 801a92c:	4362      	muls	r2, r4
 801a92e:	fb06 2207 	mla	r2, r6, r7, r2
 801a932:	fb0c 2505 	mla	r5, ip, r5, r2
 801a936:	fb00 5303 	mla	r3, r0, r3, r5
 801a93a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a93e:	b1b3      	cbz	r3, 801a96e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801a940:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801a944:	435a      	muls	r2, r3
 801a946:	1c53      	adds	r3, r2, #1
 801a948:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a94c:	4a2d      	ldr	r2, [pc, #180]	; (801aa04 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801a94e:	121b      	asrs	r3, r3, #8
 801a950:	6812      	ldr	r2, [r2, #0]
 801a952:	2bff      	cmp	r3, #255	; 0xff
 801a954:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801a958:	d120      	bne.n	801a99c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801a95a:	4b2b      	ldr	r3, [pc, #172]	; (801aa08 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801a95c:	0950      	lsrs	r0, r2, #5
 801a95e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a962:	4033      	ands	r3, r6
 801a964:	4318      	orrs	r0, r3
 801a966:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801a96a:	4302      	orrs	r2, r0
 801a96c:	800a      	strh	r2, [r1, #0]
 801a96e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a972:	2600      	movs	r6, #0
 801a974:	e788      	b.n	801a888 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801a976:	2400      	movs	r4, #0
 801a978:	4626      	mov	r6, r4
 801a97a:	e799      	b.n	801a8b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801a97c:	2400      	movs	r4, #0
 801a97e:	e797      	b.n	801a8b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801a980:	463c      	mov	r4, r7
 801a982:	e795      	b.n	801a8b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801a984:	2500      	movs	r5, #0
 801a986:	e7ac      	b.n	801a8e2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801a988:	2300      	movs	r3, #0
 801a98a:	461d      	mov	r5, r3
 801a98c:	e7bd      	b.n	801a90a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801a98e:	4663      	mov	r3, ip
 801a990:	4665      	mov	r5, ip
 801a992:	e7ba      	b.n	801a90a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801a994:	2300      	movs	r3, #0
 801a996:	e7b8      	b.n	801a90a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801a998:	463b      	mov	r3, r7
 801a99a:	e7b6      	b.n	801a90a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801a99c:	880d      	ldrh	r5, [r1, #0]
 801a99e:	b29f      	uxth	r7, r3
 801a9a0:	122c      	asrs	r4, r5, #8
 801a9a2:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801a9a6:	43db      	mvns	r3, r3
 801a9a8:	b2db      	uxtb	r3, r3
 801a9aa:	fb10 f007 	smulbb	r0, r0, r7
 801a9ae:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801a9b2:	fb04 0403 	mla	r4, r4, r3, r0
 801a9b6:	b2f6      	uxtb	r6, r6
 801a9b8:	10e8      	asrs	r0, r5, #3
 801a9ba:	b2d2      	uxtb	r2, r2
 801a9bc:	00ed      	lsls	r5, r5, #3
 801a9be:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a9c2:	fb12 f207 	smulbb	r2, r2, r7
 801a9c6:	fb16 f607 	smulbb	r6, r6, r7
 801a9ca:	b2ed      	uxtb	r5, r5
 801a9cc:	b2a4      	uxth	r4, r4
 801a9ce:	fb00 6603 	mla	r6, r0, r3, r6
 801a9d2:	fb05 2303 	mla	r3, r5, r3, r2
 801a9d6:	b29a      	uxth	r2, r3
 801a9d8:	1c63      	adds	r3, r4, #1
 801a9da:	b2b0      	uxth	r0, r6
 801a9dc:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801a9e0:	1c53      	adds	r3, r2, #1
 801a9e2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a9e6:	1c42      	adds	r2, r0, #1
 801a9e8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a9ec:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801a9f0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a9f4:	0940      	lsrs	r0, r0, #5
 801a9f6:	4323      	orrs	r3, r4
 801a9f8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a9fc:	4303      	orrs	r3, r0
 801a9fe:	800b      	strh	r3, [r1, #0]
 801aa00:	e7b5      	b.n	801a96e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801aa02:	bf00      	nop
 801aa04:	20012678 	.word	0x20012678
 801aa08:	00fff800 	.word	0x00fff800

0801aa0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aa0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa10:	b097      	sub	sp, #92	; 0x5c
 801aa12:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801aa16:	9214      	str	r2, [sp, #80]	; 0x50
 801aa18:	9309      	str	r3, [sp, #36]	; 0x24
 801aa1a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801aa1c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801aa20:	910d      	str	r1, [sp, #52]	; 0x34
 801aa22:	930f      	str	r3, [sp, #60]	; 0x3c
 801aa24:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801aa28:	9015      	str	r0, [sp, #84]	; 0x54
 801aa2a:	6850      	ldr	r0, [r2, #4]
 801aa2c:	6812      	ldr	r2, [r2, #0]
 801aa2e:	fb00 1303 	mla	r3, r0, r3, r1
 801aa32:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801aa36:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801aa38:	689b      	ldr	r3, [r3, #8]
 801aa3a:	3301      	adds	r3, #1
 801aa3c:	f023 0301 	bic.w	r3, r3, #1
 801aa40:	930a      	str	r3, [sp, #40]	; 0x28
 801aa42:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801aa44:	681f      	ldr	r7, [r3, #0]
 801aa46:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801aa48:	2b00      	cmp	r3, #0
 801aa4a:	dc03      	bgt.n	801aa54 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801aa4c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801aa4e:	2b00      	cmp	r3, #0
 801aa50:	f340 8287 	ble.w	801af62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801aa54:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801aa56:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801aa5a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801aa5e:	1e48      	subs	r0, r1, #1
 801aa60:	f102 3cff 	add.w	ip, r2, #4294967295
 801aa64:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801aa66:	2b00      	cmp	r3, #0
 801aa68:	f340 80c4 	ble.w	801abf4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801aa6c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801aa70:	ea4f 4326 	mov.w	r3, r6, asr #16
 801aa74:	d406      	bmi.n	801aa84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801aa76:	4586      	cmp	lr, r0
 801aa78:	da04      	bge.n	801aa84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801aa7a:	2b00      	cmp	r3, #0
 801aa7c:	db02      	blt.n	801aa84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801aa7e:	4563      	cmp	r3, ip
 801aa80:	f2c0 80b9 	blt.w	801abf6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801aa84:	f11e 0e01 	adds.w	lr, lr, #1
 801aa88:	f100 80aa 	bmi.w	801abe0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801aa8c:	4571      	cmp	r1, lr
 801aa8e:	f2c0 80a7 	blt.w	801abe0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801aa92:	3301      	adds	r3, #1
 801aa94:	f100 80a4 	bmi.w	801abe0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801aa98:	429a      	cmp	r2, r3
 801aa9a:	f2c0 80a1 	blt.w	801abe0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801aa9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801aaa0:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801aaa4:	930e      	str	r3, [sp, #56]	; 0x38
 801aaa6:	46c8      	mov	r8, r9
 801aaa8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801aaaa:	2b00      	cmp	r3, #0
 801aaac:	f340 80c3 	ble.w	801ac36 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801aab0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801aab2:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801aab6:	1423      	asrs	r3, r4, #16
 801aab8:	ea4f 4026 	mov.w	r0, r6, asr #16
 801aabc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801aac0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801aac4:	f100 814d 	bmi.w	801ad62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801aac8:	f10c 3bff 	add.w	fp, ip, #4294967295
 801aacc:	455b      	cmp	r3, fp
 801aace:	f280 8148 	bge.w	801ad62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801aad2:	2800      	cmp	r0, #0
 801aad4:	f2c0 8145 	blt.w	801ad62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801aad8:	f10e 3bff 	add.w	fp, lr, #4294967295
 801aadc:	4558      	cmp	r0, fp
 801aade:	f280 8140 	bge.w	801ad62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801aae2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801aae4:	fb00 3305 	mla	r3, r0, r5, r3
 801aae8:	0858      	lsrs	r0, r3, #1
 801aaea:	07dd      	lsls	r5, r3, #31
 801aaec:	f817 c000 	ldrb.w	ip, [r7, r0]
 801aaf0:	bf54      	ite	pl
 801aaf2:	f00c 0c0f 	andpl.w	ip, ip, #15
 801aaf6:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801aafa:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801aafe:	fa5f fc8c 	uxtb.w	ip, ip
 801ab02:	2a00      	cmp	r2, #0
 801ab04:	f000 80db 	beq.w	801acbe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801ab08:	1c58      	adds	r0, r3, #1
 801ab0a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801ab0e:	07c0      	lsls	r0, r0, #31
 801ab10:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ab14:	bf54      	ite	pl
 801ab16:	f00e 0e0f 	andpl.w	lr, lr, #15
 801ab1a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801ab1e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801ab22:	fa5f f08e 	uxtb.w	r0, lr
 801ab26:	9010      	str	r0, [sp, #64]	; 0x40
 801ab28:	b1c9      	cbz	r1, 801ab5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ab2a:	4453      	add	r3, sl
 801ab2c:	0858      	lsrs	r0, r3, #1
 801ab2e:	07dd      	lsls	r5, r3, #31
 801ab30:	5c38      	ldrb	r0, [r7, r0]
 801ab32:	bf54      	ite	pl
 801ab34:	f000 000f 	andpl.w	r0, r0, #15
 801ab38:	1100      	asrmi	r0, r0, #4
 801ab3a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ab3e:	3301      	adds	r3, #1
 801ab40:	b2c0      	uxtb	r0, r0
 801ab42:	900b      	str	r0, [sp, #44]	; 0x2c
 801ab44:	0858      	lsrs	r0, r3, #1
 801ab46:	07dd      	lsls	r5, r3, #31
 801ab48:	f817 e000 	ldrb.w	lr, [r7, r0]
 801ab4c:	bf54      	ite	pl
 801ab4e:	f00e 030f 	andpl.w	r3, lr, #15
 801ab52:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801ab56:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ab5a:	b2db      	uxtb	r3, r3
 801ab5c:	9311      	str	r3, [sp, #68]	; 0x44
 801ab5e:	b292      	uxth	r2, r2
 801ab60:	b289      	uxth	r1, r1
 801ab62:	fb02 f301 	mul.w	r3, r2, r1
 801ab66:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801ab6a:	0112      	lsls	r2, r2, #4
 801ab6c:	b289      	uxth	r1, r1
 801ab6e:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801ab72:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ab74:	1ad2      	subs	r2, r2, r3
 801ab76:	1a40      	subs	r0, r0, r1
 801ab78:	b292      	uxth	r2, r2
 801ab7a:	436a      	muls	r2, r5
 801ab7c:	b280      	uxth	r0, r0
 801ab7e:	fb0c 2c00 	mla	ip, ip, r0, r2
 801ab82:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ab84:	fb01 c102 	mla	r1, r1, r2, ip
 801ab88:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ab8a:	fb03 1302 	mla	r3, r3, r2, r1
 801ab8e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ab92:	b1db      	cbz	r3, 801abcc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801ab94:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ab96:	4353      	muls	r3, r2
 801ab98:	1c5a      	adds	r2, r3, #1
 801ab9a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801ab9e:	4ac6      	ldr	r2, [pc, #792]	; (801aeb8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801aba0:	121b      	asrs	r3, r3, #8
 801aba2:	6812      	ldr	r2, [r2, #0]
 801aba4:	2bff      	cmp	r3, #255	; 0xff
 801aba6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801abaa:	f040 8099 	bne.w	801ace0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801abae:	0953      	lsrs	r3, r2, #5
 801abb0:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801abb4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801abb8:	f02c 0c07 	bic.w	ip, ip, #7
 801abbc:	ea43 0c0c 	orr.w	ip, r3, ip
 801abc0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801abc4:	ea4c 0202 	orr.w	r2, ip, r2
 801abc8:	f8a8 2000 	strh.w	r2, [r8]
 801abcc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801abce:	441c      	add	r4, r3
 801abd0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801abd2:	441e      	add	r6, r3
 801abd4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801abd6:	3b01      	subs	r3, #1
 801abd8:	f108 0802 	add.w	r8, r8, #2
 801abdc:	930e      	str	r3, [sp, #56]	; 0x38
 801abde:	e763      	b.n	801aaa8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801abe0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801abe2:	441c      	add	r4, r3
 801abe4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801abe6:	441e      	add	r6, r3
 801abe8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801abea:	3b01      	subs	r3, #1
 801abec:	9309      	str	r3, [sp, #36]	; 0x24
 801abee:	f109 0902 	add.w	r9, r9, #2
 801abf2:	e737      	b.n	801aa64 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801abf4:	d024      	beq.n	801ac40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801abf6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801abf8:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801abfa:	3b01      	subs	r3, #1
 801abfc:	fb00 4003 	mla	r0, r0, r3, r4
 801ac00:	1400      	asrs	r0, r0, #16
 801ac02:	f53f af4c 	bmi.w	801aa9e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ac06:	3901      	subs	r1, #1
 801ac08:	4288      	cmp	r0, r1
 801ac0a:	f6bf af48 	bge.w	801aa9e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ac0e:	9924      	ldr	r1, [sp, #144]	; 0x90
 801ac10:	fb01 6303 	mla	r3, r1, r3, r6
 801ac14:	141b      	asrs	r3, r3, #16
 801ac16:	f53f af42 	bmi.w	801aa9e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ac1a:	3a01      	subs	r2, #1
 801ac1c:	4293      	cmp	r3, r2
 801ac1e:	f6bf af3e 	bge.w	801aa9e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ac22:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801ac26:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801ac2a:	930e      	str	r3, [sp, #56]	; 0x38
 801ac2c:	46c8      	mov	r8, r9
 801ac2e:	f1bb 0f00 	cmp.w	fp, #0
 801ac32:	f300 80b7 	bgt.w	801ada4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801ac36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ac38:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ac3c:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801ac40:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ac42:	2b00      	cmp	r3, #0
 801ac44:	f340 818d 	ble.w	801af62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801ac48:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ac4c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ac50:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ac54:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ac56:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ac5a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ac5e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ac62:	eef0 6a62 	vmov.f32	s13, s5
 801ac66:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ac6a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ac6e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ac72:	ee16 4a90 	vmov	r4, s13
 801ac76:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ac7a:	eef0 6a43 	vmov.f32	s13, s6
 801ac7e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ac82:	ee12 2a90 	vmov	r2, s5
 801ac86:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ac8a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ac8e:	ee13 2a10 	vmov	r2, s6
 801ac92:	9323      	str	r3, [sp, #140]	; 0x8c
 801ac94:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ac96:	fb92 f3f3 	sdiv	r3, r2, r3
 801ac9a:	9324      	str	r3, [sp, #144]	; 0x90
 801ac9c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ac9e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801aca0:	3b01      	subs	r3, #1
 801aca2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801aca6:	930d      	str	r3, [sp, #52]	; 0x34
 801aca8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801acaa:	bf08      	it	eq
 801acac:	4613      	moveq	r3, r2
 801acae:	ee16 6a90 	vmov	r6, s13
 801acb2:	9309      	str	r3, [sp, #36]	; 0x24
 801acb4:	eeb0 3a67 	vmov.f32	s6, s15
 801acb8:	eef0 2a47 	vmov.f32	s5, s14
 801acbc:	e6c3      	b.n	801aa46 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801acbe:	2900      	cmp	r1, #0
 801acc0:	f43f af4d 	beq.w	801ab5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801acc4:	eb0a 0003 	add.w	r0, sl, r3
 801acc8:	0843      	lsrs	r3, r0, #1
 801acca:	07c0      	lsls	r0, r0, #31
 801accc:	5cfb      	ldrb	r3, [r7, r3]
 801acce:	bf54      	ite	pl
 801acd0:	f003 030f 	andpl.w	r3, r3, #15
 801acd4:	111b      	asrmi	r3, r3, #4
 801acd6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801acda:	b2db      	uxtb	r3, r3
 801acdc:	930b      	str	r3, [sp, #44]	; 0x2c
 801acde:	e73e      	b.n	801ab5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801ace0:	f8b8 e000 	ldrh.w	lr, [r8]
 801ace4:	fa1f fb83 	uxth.w	fp, r3
 801ace8:	ea4f 202e 	mov.w	r0, lr, asr #8
 801acec:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801acf0:	43db      	mvns	r3, r3
 801acf2:	b2db      	uxtb	r3, r3
 801acf4:	fb11 f10b 	smulbb	r1, r1, fp
 801acf8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801acfc:	fb00 1003 	mla	r0, r0, r3, r1
 801ad00:	fa5f fc8c 	uxtb.w	ip, ip
 801ad04:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801ad08:	b2d2      	uxtb	r2, r2
 801ad0a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ad0e:	b280      	uxth	r0, r0
 801ad10:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ad14:	fb1c fc0b 	smulbb	ip, ip, fp
 801ad18:	fa5f fe8e 	uxtb.w	lr, lr
 801ad1c:	fb12 fb0b 	smulbb	fp, r2, fp
 801ad20:	fb01 cc03 	mla	ip, r1, r3, ip
 801ad24:	fb0e bb03 	mla	fp, lr, r3, fp
 801ad28:	1c43      	adds	r3, r0, #1
 801ad2a:	fa1f fc8c 	uxth.w	ip, ip
 801ad2e:	fa1f fb8b 	uxth.w	fp, fp
 801ad32:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ad36:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801ad3a:	f10c 0101 	add.w	r1, ip, #1
 801ad3e:	f10b 0001 	add.w	r0, fp, #1
 801ad42:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801ad46:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801ad4a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801ad4e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801ad52:	4318      	orrs	r0, r3
 801ad54:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801ad58:	ea40 000c 	orr.w	r0, r0, ip
 801ad5c:	f8a8 0000 	strh.w	r0, [r8]
 801ad60:	e734      	b.n	801abcc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801ad62:	f113 0b01 	adds.w	fp, r3, #1
 801ad66:	f53f af31 	bmi.w	801abcc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801ad6a:	45dc      	cmp	ip, fp
 801ad6c:	f6ff af2e 	blt.w	801abcc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801ad70:	f110 0b01 	adds.w	fp, r0, #1
 801ad74:	f53f af2a 	bmi.w	801abcc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801ad78:	45de      	cmp	lr, fp
 801ad7a:	f6ff af27 	blt.w	801abcc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801ad7e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801ad80:	9302      	str	r3, [sp, #8]
 801ad82:	fa0f f38e 	sxth.w	r3, lr
 801ad86:	9301      	str	r3, [sp, #4]
 801ad88:	fa0f f38c 	sxth.w	r3, ip
 801ad8c:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801ad90:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801ad94:	9300      	str	r3, [sp, #0]
 801ad96:	463a      	mov	r2, r7
 801ad98:	4653      	mov	r3, sl
 801ad9a:	4641      	mov	r1, r8
 801ad9c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ad9e:	f7ff fd4d 	bl	801a83c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801ada2:	e713      	b.n	801abcc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801ada4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801ada6:	1422      	asrs	r2, r4, #16
 801ada8:	1433      	asrs	r3, r6, #16
 801adaa:	fb05 2303 	mla	r3, r5, r3, r2
 801adae:	085a      	lsrs	r2, r3, #1
 801adb0:	07dd      	lsls	r5, r3, #31
 801adb2:	5cba      	ldrb	r2, [r7, r2]
 801adb4:	bf54      	ite	pl
 801adb6:	f002 020f 	andpl.w	r2, r2, #15
 801adba:	1112      	asrmi	r2, r2, #4
 801adbc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801adc0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801adc4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801adc8:	b2d2      	uxtb	r2, r2
 801adca:	2900      	cmp	r1, #0
 801adcc:	d076      	beq.n	801aebc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801adce:	f103 0e01 	add.w	lr, r3, #1
 801add2:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801add6:	f01e 0f01 	tst.w	lr, #1
 801adda:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801adde:	bf0c      	ite	eq
 801ade0:	f00c 0c0f 	andeq.w	ip, ip, #15
 801ade4:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801ade8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801adec:	fa5f f58c 	uxtb.w	r5, ip
 801adf0:	9512      	str	r5, [sp, #72]	; 0x48
 801adf2:	b300      	cbz	r0, 801ae36 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801adf4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801adf6:	442b      	add	r3, r5
 801adf8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801adfc:	07dd      	lsls	r5, r3, #31
 801adfe:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ae02:	bf54      	ite	pl
 801ae04:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ae08:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ae0c:	3301      	adds	r3, #1
 801ae0e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ae12:	fa5f f58c 	uxtb.w	r5, ip
 801ae16:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801ae1a:	950c      	str	r5, [sp, #48]	; 0x30
 801ae1c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ae20:	07dd      	lsls	r5, r3, #31
 801ae22:	bf54      	ite	pl
 801ae24:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ae28:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ae2c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ae30:	fa5f f38c 	uxtb.w	r3, ip
 801ae34:	9313      	str	r3, [sp, #76]	; 0x4c
 801ae36:	b289      	uxth	r1, r1
 801ae38:	b280      	uxth	r0, r0
 801ae3a:	fb01 f300 	mul.w	r3, r1, r0
 801ae3e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801ae42:	0109      	lsls	r1, r1, #4
 801ae44:	b280      	uxth	r0, r0
 801ae46:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801ae4a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ae4c:	1ac9      	subs	r1, r1, r3
 801ae4e:	ebac 0c00 	sub.w	ip, ip, r0
 801ae52:	b289      	uxth	r1, r1
 801ae54:	4369      	muls	r1, r5
 801ae56:	fa1f fc8c 	uxth.w	ip, ip
 801ae5a:	fb02 120c 	mla	r2, r2, ip, r1
 801ae5e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ae60:	fb00 2001 	mla	r0, r0, r1, r2
 801ae64:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ae66:	fb03 0302 	mla	r3, r3, r2, r0
 801ae6a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ae6e:	b1d3      	cbz	r3, 801aea6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801ae70:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ae72:	4353      	muls	r3, r2
 801ae74:	1c5a      	adds	r2, r3, #1
 801ae76:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801ae7a:	4a0f      	ldr	r2, [pc, #60]	; (801aeb8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801ae7c:	121b      	asrs	r3, r3, #8
 801ae7e:	6812      	ldr	r2, [r2, #0]
 801ae80:	2bff      	cmp	r3, #255	; 0xff
 801ae82:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801ae86:	d12d      	bne.n	801aee4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801ae88:	0953      	lsrs	r3, r2, #5
 801ae8a:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801ae8e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ae92:	f02c 0c07 	bic.w	ip, ip, #7
 801ae96:	ea43 0c0c 	orr.w	ip, r3, ip
 801ae9a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ae9e:	ea4c 0202 	orr.w	r2, ip, r2
 801aea2:	f8a8 2000 	strh.w	r2, [r8]
 801aea6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801aea8:	441c      	add	r4, r3
 801aeaa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801aeac:	f108 0802 	add.w	r8, r8, #2
 801aeb0:	441e      	add	r6, r3
 801aeb2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801aeb6:	e6ba      	b.n	801ac2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801aeb8:	20012678 	.word	0x20012678
 801aebc:	2800      	cmp	r0, #0
 801aebe:	d0ba      	beq.n	801ae36 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801aec0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801aec2:	442b      	add	r3, r5
 801aec4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801aec8:	07db      	lsls	r3, r3, #31
 801aeca:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801aece:	bf54      	ite	pl
 801aed0:	f00c 0c0f 	andpl.w	ip, ip, #15
 801aed4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801aed8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801aedc:	fa5f f38c 	uxtb.w	r3, ip
 801aee0:	930c      	str	r3, [sp, #48]	; 0x30
 801aee2:	e7a8      	b.n	801ae36 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801aee4:	f8b8 e000 	ldrh.w	lr, [r8]
 801aee8:	fa1f fa83 	uxth.w	sl, r3
 801aeec:	ea4f 202e 	mov.w	r0, lr, asr #8
 801aef0:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801aef4:	43db      	mvns	r3, r3
 801aef6:	b2db      	uxtb	r3, r3
 801aef8:	fb11 f10a 	smulbb	r1, r1, sl
 801aefc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801af00:	fb00 1003 	mla	r0, r0, r3, r1
 801af04:	b2d2      	uxtb	r2, r2
 801af06:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801af0a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801af0e:	fa5f fe8e 	uxtb.w	lr, lr
 801af12:	fb12 f20a 	smulbb	r2, r2, sl
 801af16:	fb0e 2203 	mla	r2, lr, r3, r2
 801af1a:	fa5f fc8c 	uxtb.w	ip, ip
 801af1e:	b280      	uxth	r0, r0
 801af20:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801af24:	b292      	uxth	r2, r2
 801af26:	fb1c fc0a 	smulbb	ip, ip, sl
 801af2a:	fb01 cc03 	mla	ip, r1, r3, ip
 801af2e:	1c43      	adds	r3, r0, #1
 801af30:	1c51      	adds	r1, r2, #1
 801af32:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801af36:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801af3a:	fa1f fc8c 	uxth.w	ip, ip
 801af3e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801af42:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801af46:	4308      	orrs	r0, r1
 801af48:	f10c 0101 	add.w	r1, ip, #1
 801af4c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801af50:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801af54:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801af58:	ea40 000c 	orr.w	r0, r0, ip
 801af5c:	f8a8 0000 	strh.w	r0, [r8]
 801af60:	e7a1      	b.n	801aea6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801af62:	b017      	add	sp, #92	; 0x5c
 801af64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801af68 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801af68:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801af6c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801af70:	2d00      	cmp	r5, #0
 801af72:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801af76:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801af7a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801af7e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801af82:	fb05 0e03 	mla	lr, r5, r3, r0
 801af86:	f2c0 80b0 	blt.w	801b0ea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801af8a:	45a9      	cmp	r9, r5
 801af8c:	f340 80ad 	ble.w	801b0ea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801af90:	2800      	cmp	r0, #0
 801af92:	f2c0 80a8 	blt.w	801b0e6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801af96:	4580      	cmp	r8, r0
 801af98:	f340 80a5 	ble.w	801b0e6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801af9c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801afa0:	f01e 0f01 	tst.w	lr, #1
 801afa4:	5d16      	ldrb	r6, [r2, r4]
 801afa6:	bf0c      	ite	eq
 801afa8:	f006 060f 	andeq.w	r6, r6, #15
 801afac:	1136      	asrne	r6, r6, #4
 801afae:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801afb2:	b2f6      	uxtb	r6, r6
 801afb4:	1c44      	adds	r4, r0, #1
 801afb6:	f100 809b 	bmi.w	801b0f0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801afba:	45a0      	cmp	r8, r4
 801afbc:	f340 8098 	ble.w	801b0f0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801afc0:	2f00      	cmp	r7, #0
 801afc2:	f000 8097 	beq.w	801b0f4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801afc6:	f10e 0a01 	add.w	sl, lr, #1
 801afca:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801afce:	f01a 0f01 	tst.w	sl, #1
 801afd2:	5d14      	ldrb	r4, [r2, r4]
 801afd4:	bf0c      	ite	eq
 801afd6:	f004 040f 	andeq.w	r4, r4, #15
 801afda:	1124      	asrne	r4, r4, #4
 801afdc:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801afe0:	b2e4      	uxtb	r4, r4
 801afe2:	3501      	adds	r5, #1
 801afe4:	f100 808a 	bmi.w	801b0fc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801afe8:	45a9      	cmp	r9, r5
 801afea:	f340 8087 	ble.w	801b0fc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801afee:	f1bc 0f00 	cmp.w	ip, #0
 801aff2:	f000 8086 	beq.w	801b102 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801aff6:	2800      	cmp	r0, #0
 801aff8:	db7e      	blt.n	801b0f8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801affa:	4580      	cmp	r8, r0
 801affc:	dd7c      	ble.n	801b0f8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801affe:	eb03 090e 	add.w	r9, r3, lr
 801b002:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801b006:	f019 0f01 	tst.w	r9, #1
 801b00a:	5d55      	ldrb	r5, [r2, r5]
 801b00c:	bf0c      	ite	eq
 801b00e:	f005 050f 	andeq.w	r5, r5, #15
 801b012:	112d      	asrne	r5, r5, #4
 801b014:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801b018:	b2ed      	uxtb	r5, r5
 801b01a:	3001      	adds	r0, #1
 801b01c:	d474      	bmi.n	801b108 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801b01e:	4580      	cmp	r8, r0
 801b020:	dd72      	ble.n	801b108 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801b022:	2f00      	cmp	r7, #0
 801b024:	d072      	beq.n	801b10c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801b026:	3301      	adds	r3, #1
 801b028:	449e      	add	lr, r3
 801b02a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801b02e:	f01e 0f01 	tst.w	lr, #1
 801b032:	5cd0      	ldrb	r0, [r2, r3]
 801b034:	bf0c      	ite	eq
 801b036:	f000 000f 	andeq.w	r0, r0, #15
 801b03a:	1100      	asrne	r0, r0, #4
 801b03c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801b040:	b2c3      	uxtb	r3, r0
 801b042:	b2ba      	uxth	r2, r7
 801b044:	fa1f fc8c 	uxth.w	ip, ip
 801b048:	fb02 f00c 	mul.w	r0, r2, ip
 801b04c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801b050:	0112      	lsls	r2, r2, #4
 801b052:	fa1f fc8c 	uxth.w	ip, ip
 801b056:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801b05a:	1a12      	subs	r2, r2, r0
 801b05c:	eba7 070c 	sub.w	r7, r7, ip
 801b060:	b292      	uxth	r2, r2
 801b062:	b2bf      	uxth	r7, r7
 801b064:	4362      	muls	r2, r4
 801b066:	fb06 2207 	mla	r2, r6, r7, r2
 801b06a:	fb0c 2505 	mla	r5, ip, r5, r2
 801b06e:	fb00 5303 	mla	r3, r0, r3, r5
 801b072:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b076:	b3a3      	cbz	r3, 801b0e2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801b078:	4a25      	ldr	r2, [pc, #148]	; (801b110 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801b07a:	880e      	ldrh	r6, [r1, #0]
 801b07c:	6815      	ldr	r5, [r2, #0]
 801b07e:	1234      	asrs	r4, r6, #8
 801b080:	b29a      	uxth	r2, r3
 801b082:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801b086:	43db      	mvns	r3, r3
 801b088:	b2db      	uxtb	r3, r3
 801b08a:	fb10 f002 	smulbb	r0, r0, r2
 801b08e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801b092:	fb04 0403 	mla	r4, r4, r3, r0
 801b096:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801b09a:	10f0      	asrs	r0, r6, #3
 801b09c:	b2ed      	uxtb	r5, r5
 801b09e:	00f6      	lsls	r6, r6, #3
 801b0a0:	fb17 f702 	smulbb	r7, r7, r2
 801b0a4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b0a8:	fb15 f202 	smulbb	r2, r5, r2
 801b0ac:	b2f6      	uxtb	r6, r6
 801b0ae:	b2a4      	uxth	r4, r4
 801b0b0:	fb00 7003 	mla	r0, r0, r3, r7
 801b0b4:	fb06 2303 	mla	r3, r6, r3, r2
 801b0b8:	b29a      	uxth	r2, r3
 801b0ba:	1c63      	adds	r3, r4, #1
 801b0bc:	b280      	uxth	r0, r0
 801b0be:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801b0c2:	1c53      	adds	r3, r2, #1
 801b0c4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b0c8:	1c42      	adds	r2, r0, #1
 801b0ca:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b0ce:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801b0d2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b0d6:	0940      	lsrs	r0, r0, #5
 801b0d8:	4323      	orrs	r3, r4
 801b0da:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b0de:	4303      	orrs	r3, r0
 801b0e0:	800b      	strh	r3, [r1, #0]
 801b0e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b0e6:	2600      	movs	r6, #0
 801b0e8:	e764      	b.n	801afb4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801b0ea:	2400      	movs	r4, #0
 801b0ec:	4626      	mov	r6, r4
 801b0ee:	e778      	b.n	801afe2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801b0f0:	2400      	movs	r4, #0
 801b0f2:	e776      	b.n	801afe2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801b0f4:	463c      	mov	r4, r7
 801b0f6:	e774      	b.n	801afe2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801b0f8:	2500      	movs	r5, #0
 801b0fa:	e78e      	b.n	801b01a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801b0fc:	2300      	movs	r3, #0
 801b0fe:	461d      	mov	r5, r3
 801b100:	e79f      	b.n	801b042 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801b102:	4663      	mov	r3, ip
 801b104:	4665      	mov	r5, ip
 801b106:	e79c      	b.n	801b042 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801b108:	2300      	movs	r3, #0
 801b10a:	e79a      	b.n	801b042 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801b10c:	463b      	mov	r3, r7
 801b10e:	e798      	b.n	801b042 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801b110:	20012678 	.word	0x20012678

0801b114 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b114:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b118:	b093      	sub	sp, #76	; 0x4c
 801b11a:	461d      	mov	r5, r3
 801b11c:	920c      	str	r2, [sp, #48]	; 0x30
 801b11e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801b120:	9107      	str	r1, [sp, #28]
 801b122:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801b126:	9011      	str	r0, [sp, #68]	; 0x44
 801b128:	6850      	ldr	r0, [r2, #4]
 801b12a:	6812      	ldr	r2, [r2, #0]
 801b12c:	fb00 1303 	mla	r3, r0, r3, r1
 801b130:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801b134:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b136:	689b      	ldr	r3, [r3, #8]
 801b138:	3301      	adds	r3, #1
 801b13a:	f023 0301 	bic.w	r3, r3, #1
 801b13e:	9306      	str	r3, [sp, #24]
 801b140:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b142:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801b146:	681f      	ldr	r7, [r3, #0]
 801b148:	9b07      	ldr	r3, [sp, #28]
 801b14a:	2b00      	cmp	r3, #0
 801b14c:	dc03      	bgt.n	801b156 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801b14e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b150:	2b00      	cmp	r3, #0
 801b152:	f340 8267 	ble.w	801b624 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801b156:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b158:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b15c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b160:	1e48      	subs	r0, r1, #1
 801b162:	f102 3cff 	add.w	ip, r2, #4294967295
 801b166:	2d00      	cmp	r5, #0
 801b168:	f340 80b8 	ble.w	801b2dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801b16c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801b170:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b174:	d406      	bmi.n	801b184 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b176:	4586      	cmp	lr, r0
 801b178:	da04      	bge.n	801b184 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b17a:	2b00      	cmp	r3, #0
 801b17c:	db02      	blt.n	801b184 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b17e:	4563      	cmp	r3, ip
 801b180:	f2c0 80ad 	blt.w	801b2de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801b184:	f11e 0e01 	adds.w	lr, lr, #1
 801b188:	f100 80a0 	bmi.w	801b2cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801b18c:	4571      	cmp	r1, lr
 801b18e:	f2c0 809d 	blt.w	801b2cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801b192:	3301      	adds	r3, #1
 801b194:	f100 809a 	bmi.w	801b2cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801b198:	429a      	cmp	r2, r3
 801b19a:	f2c0 8097 	blt.w	801b2cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801b19e:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801b1a2:	9509      	str	r5, [sp, #36]	; 0x24
 801b1a4:	46c8      	mov	r8, r9
 801b1a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b1a8:	2b00      	cmp	r3, #0
 801b1aa:	f340 80b6 	ble.w	801b31a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801b1ae:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801b1b2:	9308      	str	r3, [sp, #32]
 801b1b4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b1b6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801b1ba:	1423      	asrs	r3, r4, #16
 801b1bc:	ea4f 4026 	mov.w	r0, r6, asr #16
 801b1c0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801b1c4:	f100 813e 	bmi.w	801b444 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801b1c8:	f10c 3bff 	add.w	fp, ip, #4294967295
 801b1cc:	455b      	cmp	r3, fp
 801b1ce:	f280 8139 	bge.w	801b444 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801b1d2:	2800      	cmp	r0, #0
 801b1d4:	f2c0 8136 	blt.w	801b444 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801b1d8:	f10e 3bff 	add.w	fp, lr, #4294967295
 801b1dc:	4558      	cmp	r0, fp
 801b1de:	f280 8131 	bge.w	801b444 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801b1e2:	9a06      	ldr	r2, [sp, #24]
 801b1e4:	fb00 3302 	mla	r3, r0, r2, r3
 801b1e8:	0858      	lsrs	r0, r3, #1
 801b1ea:	07da      	lsls	r2, r3, #31
 801b1ec:	f817 c000 	ldrb.w	ip, [r7, r0]
 801b1f0:	9a08      	ldr	r2, [sp, #32]
 801b1f2:	bf54      	ite	pl
 801b1f4:	f00c 0c0f 	andpl.w	ip, ip, #15
 801b1f8:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801b1fc:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801b200:	fa5f fc8c 	uxtb.w	ip, ip
 801b204:	2a00      	cmp	r2, #0
 801b206:	f000 80cb 	beq.w	801b3a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801b20a:	1c58      	adds	r0, r3, #1
 801b20c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801b210:	07c0      	lsls	r0, r0, #31
 801b212:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801b216:	bf54      	ite	pl
 801b218:	f00e 0e0f 	andpl.w	lr, lr, #15
 801b21c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801b220:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801b224:	fa5f fe8e 	uxtb.w	lr, lr
 801b228:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801b22c:	b1b9      	cbz	r1, 801b25e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801b22e:	4453      	add	r3, sl
 801b230:	0858      	lsrs	r0, r3, #1
 801b232:	07da      	lsls	r2, r3, #31
 801b234:	5c38      	ldrb	r0, [r7, r0]
 801b236:	bf54      	ite	pl
 801b238:	f000 000f 	andpl.w	r0, r0, #15
 801b23c:	1100      	asrmi	r0, r0, #4
 801b23e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801b242:	b2c0      	uxtb	r0, r0
 801b244:	900a      	str	r0, [sp, #40]	; 0x28
 801b246:	1c58      	adds	r0, r3, #1
 801b248:	0843      	lsrs	r3, r0, #1
 801b24a:	07c2      	lsls	r2, r0, #31
 801b24c:	5cfb      	ldrb	r3, [r7, r3]
 801b24e:	bf54      	ite	pl
 801b250:	f003 030f 	andpl.w	r3, r3, #15
 801b254:	111b      	asrmi	r3, r3, #4
 801b256:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801b25a:	b2db      	uxtb	r3, r3
 801b25c:	930e      	str	r3, [sp, #56]	; 0x38
 801b25e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801b262:	b289      	uxth	r1, r1
 801b264:	fb02 f301 	mul.w	r3, r2, r1
 801b268:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801b26c:	0112      	lsls	r2, r2, #4
 801b26e:	b289      	uxth	r1, r1
 801b270:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801b274:	1a40      	subs	r0, r0, r1
 801b276:	fa1f fe80 	uxth.w	lr, r0
 801b27a:	1ad2      	subs	r2, r2, r3
 801b27c:	980d      	ldr	r0, [sp, #52]	; 0x34
 801b27e:	b292      	uxth	r2, r2
 801b280:	4342      	muls	r2, r0
 801b282:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801b286:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b288:	fb01 c102 	mla	r1, r1, r2, ip
 801b28c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801b28e:	fb03 1302 	mla	r3, r3, r2, r1
 801b292:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b296:	2bff      	cmp	r3, #255	; 0xff
 801b298:	f040 8093 	bne.w	801b3c2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801b29c:	4bbe      	ldr	r3, [pc, #760]	; (801b598 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801b29e:	681a      	ldr	r2, [r3, #0]
 801b2a0:	4bbe      	ldr	r3, [pc, #760]	; (801b59c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801b2a2:	0951      	lsrs	r1, r2, #5
 801b2a4:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801b2a8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b2ac:	430b      	orrs	r3, r1
 801b2ae:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b2b2:	4313      	orrs	r3, r2
 801b2b4:	f8a8 3000 	strh.w	r3, [r8]
 801b2b8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801b2ba:	441c      	add	r4, r3
 801b2bc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b2be:	441e      	add	r6, r3
 801b2c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b2c2:	3b01      	subs	r3, #1
 801b2c4:	f108 0802 	add.w	r8, r8, #2
 801b2c8:	9309      	str	r3, [sp, #36]	; 0x24
 801b2ca:	e76c      	b.n	801b1a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b2cc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801b2ce:	441c      	add	r4, r3
 801b2d0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b2d2:	3d01      	subs	r5, #1
 801b2d4:	441e      	add	r6, r3
 801b2d6:	f109 0902 	add.w	r9, r9, #2
 801b2da:	e744      	b.n	801b166 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801b2dc:	d021      	beq.n	801b322 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801b2de:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801b2e0:	1e6b      	subs	r3, r5, #1
 801b2e2:	fb00 4003 	mla	r0, r0, r3, r4
 801b2e6:	1400      	asrs	r0, r0, #16
 801b2e8:	f53f af59 	bmi.w	801b19e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801b2ec:	3901      	subs	r1, #1
 801b2ee:	4288      	cmp	r0, r1
 801b2f0:	f6bf af55 	bge.w	801b19e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801b2f4:	9920      	ldr	r1, [sp, #128]	; 0x80
 801b2f6:	fb01 6303 	mla	r3, r1, r3, r6
 801b2fa:	141b      	asrs	r3, r3, #16
 801b2fc:	f53f af4f 	bmi.w	801b19e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801b300:	3a01      	subs	r2, #1
 801b302:	4293      	cmp	r3, r2
 801b304:	f6bf af4b 	bge.w	801b19e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801b308:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801b30c:	9308      	str	r3, [sp, #32]
 801b30e:	46a8      	mov	r8, r5
 801b310:	46ce      	mov	lr, r9
 801b312:	f1b8 0f00 	cmp.w	r8, #0
 801b316:	f300 80b5 	bgt.w	801b484 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b31a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801b31e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801b322:	9b07      	ldr	r3, [sp, #28]
 801b324:	2b00      	cmp	r3, #0
 801b326:	f340 817d 	ble.w	801b624 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801b32a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b32e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b332:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b336:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801b338:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b33c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b340:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b344:	eef0 6a62 	vmov.f32	s13, s5
 801b348:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b34c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b350:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b354:	ee16 4a90 	vmov	r4, s13
 801b358:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b35c:	eef0 6a43 	vmov.f32	s13, s6
 801b360:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b364:	ee12 2a90 	vmov	r2, s5
 801b368:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b36c:	fb92 f3f3 	sdiv	r3, r2, r3
 801b370:	ee13 2a10 	vmov	r2, s6
 801b374:	931f      	str	r3, [sp, #124]	; 0x7c
 801b376:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801b378:	fb92 f3f3 	sdiv	r3, r2, r3
 801b37c:	9320      	str	r3, [sp, #128]	; 0x80
 801b37e:	9b07      	ldr	r3, [sp, #28]
 801b380:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b382:	3b01      	subs	r3, #1
 801b384:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b388:	9307      	str	r3, [sp, #28]
 801b38a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801b38c:	ee16 6a90 	vmov	r6, s13
 801b390:	bf14      	ite	ne
 801b392:	461d      	movne	r5, r3
 801b394:	4615      	moveq	r5, r2
 801b396:	eeb0 3a67 	vmov.f32	s6, s15
 801b39a:	eef0 2a47 	vmov.f32	s5, s14
 801b39e:	e6d3      	b.n	801b148 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801b3a0:	2900      	cmp	r1, #0
 801b3a2:	f43f af5c 	beq.w	801b25e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801b3a6:	eb0a 0003 	add.w	r0, sl, r3
 801b3aa:	0843      	lsrs	r3, r0, #1
 801b3ac:	07c0      	lsls	r0, r0, #31
 801b3ae:	5cfb      	ldrb	r3, [r7, r3]
 801b3b0:	bf54      	ite	pl
 801b3b2:	f003 030f 	andpl.w	r3, r3, #15
 801b3b6:	111b      	asrmi	r3, r3, #4
 801b3b8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801b3bc:	b2db      	uxtb	r3, r3
 801b3be:	930a      	str	r3, [sp, #40]	; 0x28
 801b3c0:	e74d      	b.n	801b25e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801b3c2:	2b00      	cmp	r3, #0
 801b3c4:	f43f af78 	beq.w	801b2b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b3c8:	4a73      	ldr	r2, [pc, #460]	; (801b598 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801b3ca:	f8b8 c000 	ldrh.w	ip, [r8]
 801b3ce:	6810      	ldr	r0, [r2, #0]
 801b3d0:	fa1f fe83 	uxth.w	lr, r3
 801b3d4:	ea4f 212c 	mov.w	r1, ip, asr #8
 801b3d8:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801b3dc:	43db      	mvns	r3, r3
 801b3de:	b2db      	uxtb	r3, r3
 801b3e0:	fb12 f20e 	smulbb	r2, r2, lr
 801b3e4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b3e8:	fb01 2103 	mla	r1, r1, r3, r2
 801b3ec:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801b3f0:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801b3f4:	b2c0      	uxtb	r0, r0
 801b3f6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b3fa:	fb1b fb0e 	smulbb	fp, fp, lr
 801b3fe:	b289      	uxth	r1, r1
 801b400:	fb10 fe0e 	smulbb	lr, r0, lr
 801b404:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b408:	fa5f fc8c 	uxtb.w	ip, ip
 801b40c:	fb02 b203 	mla	r2, r2, r3, fp
 801b410:	1c48      	adds	r0, r1, #1
 801b412:	fb0c e303 	mla	r3, ip, r3, lr
 801b416:	b292      	uxth	r2, r2
 801b418:	b29b      	uxth	r3, r3
 801b41a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801b41e:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801b422:	f102 0b01 	add.w	fp, r2, #1
 801b426:	1c59      	adds	r1, r3, #1
 801b428:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801b42c:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801b430:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801b434:	0952      	lsrs	r2, r2, #5
 801b436:	4301      	orrs	r1, r0
 801b438:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b43c:	4311      	orrs	r1, r2
 801b43e:	f8a8 1000 	strh.w	r1, [r8]
 801b442:	e739      	b.n	801b2b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b444:	f113 0b01 	adds.w	fp, r3, #1
 801b448:	f53f af36 	bmi.w	801b2b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b44c:	45dc      	cmp	ip, fp
 801b44e:	f6ff af33 	blt.w	801b2b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b452:	f110 0b01 	adds.w	fp, r0, #1
 801b456:	f53f af2f 	bmi.w	801b2b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b45a:	45de      	cmp	lr, fp
 801b45c:	f6ff af2c 	blt.w	801b2b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b460:	9a08      	ldr	r2, [sp, #32]
 801b462:	9302      	str	r3, [sp, #8]
 801b464:	fa0f f38e 	sxth.w	r3, lr
 801b468:	9301      	str	r3, [sp, #4]
 801b46a:	fa0f f38c 	sxth.w	r3, ip
 801b46e:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801b472:	9105      	str	r1, [sp, #20]
 801b474:	9300      	str	r3, [sp, #0]
 801b476:	463a      	mov	r2, r7
 801b478:	4653      	mov	r3, sl
 801b47a:	4641      	mov	r1, r8
 801b47c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b47e:	f7ff fd73 	bl	801af68 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801b482:	e719      	b.n	801b2b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b484:	9906      	ldr	r1, [sp, #24]
 801b486:	1422      	asrs	r2, r4, #16
 801b488:	1433      	asrs	r3, r6, #16
 801b48a:	fb01 2303 	mla	r3, r1, r3, r2
 801b48e:	085a      	lsrs	r2, r3, #1
 801b490:	07d9      	lsls	r1, r3, #31
 801b492:	5cba      	ldrb	r2, [r7, r2]
 801b494:	bf54      	ite	pl
 801b496:	f002 020f 	andpl.w	r2, r2, #15
 801b49a:	1112      	asrmi	r2, r2, #4
 801b49c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b4a0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801b4a4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801b4a8:	b2d2      	uxtb	r2, r2
 801b4aa:	2800      	cmp	r0, #0
 801b4ac:	d062      	beq.n	801b574 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 801b4ae:	f103 0a01 	add.w	sl, r3, #1
 801b4b2:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801b4b6:	f01a 0f01 	tst.w	sl, #1
 801b4ba:	5c79      	ldrb	r1, [r7, r1]
 801b4bc:	bf0c      	ite	eq
 801b4be:	f001 010f 	andeq.w	r1, r1, #15
 801b4c2:	1109      	asrne	r1, r1, #4
 801b4c4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b4c8:	b2c9      	uxtb	r1, r1
 801b4ca:	910f      	str	r1, [sp, #60]	; 0x3c
 801b4cc:	f1bc 0f00 	cmp.w	ip, #0
 801b4d0:	d019      	beq.n	801b506 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801b4d2:	9908      	ldr	r1, [sp, #32]
 801b4d4:	440b      	add	r3, r1
 801b4d6:	0859      	lsrs	r1, r3, #1
 801b4d8:	f013 0f01 	tst.w	r3, #1
 801b4dc:	5c79      	ldrb	r1, [r7, r1]
 801b4de:	bf0c      	ite	eq
 801b4e0:	f001 010f 	andeq.w	r1, r1, #15
 801b4e4:	1109      	asrne	r1, r1, #4
 801b4e6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b4ea:	b2c9      	uxtb	r1, r1
 801b4ec:	3301      	adds	r3, #1
 801b4ee:	910b      	str	r1, [sp, #44]	; 0x2c
 801b4f0:	0859      	lsrs	r1, r3, #1
 801b4f2:	07db      	lsls	r3, r3, #31
 801b4f4:	5c79      	ldrb	r1, [r7, r1]
 801b4f6:	bf54      	ite	pl
 801b4f8:	f001 010f 	andpl.w	r1, r1, #15
 801b4fc:	1109      	asrmi	r1, r1, #4
 801b4fe:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b502:	b2c9      	uxtb	r1, r1
 801b504:	9110      	str	r1, [sp, #64]	; 0x40
 801b506:	b280      	uxth	r0, r0
 801b508:	fa1f fc8c 	uxth.w	ip, ip
 801b50c:	fb00 f30c 	mul.w	r3, r0, ip
 801b510:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801b514:	0100      	lsls	r0, r0, #4
 801b516:	fa1f fc8c 	uxth.w	ip, ip
 801b51a:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801b51e:	eba1 010c 	sub.w	r1, r1, ip
 801b522:	fa1f fa81 	uxth.w	sl, r1
 801b526:	1ac0      	subs	r0, r0, r3
 801b528:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b52a:	b280      	uxth	r0, r0
 801b52c:	4348      	muls	r0, r1
 801b52e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b530:	fb02 020a 	mla	r2, r2, sl, r0
 801b534:	fb0c 2c01 	mla	ip, ip, r1, r2
 801b538:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b53a:	fb03 c302 	mla	r3, r3, r2, ip
 801b53e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b542:	2bff      	cmp	r3, #255	; 0xff
 801b544:	d12c      	bne.n	801b5a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801b546:	4b14      	ldr	r3, [pc, #80]	; (801b598 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801b548:	681a      	ldr	r2, [r3, #0]
 801b54a:	4b14      	ldr	r3, [pc, #80]	; (801b59c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801b54c:	0951      	lsrs	r1, r2, #5
 801b54e:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801b552:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b556:	430b      	orrs	r3, r1
 801b558:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b55c:	4313      	orrs	r3, r2
 801b55e:	f8ae 3000 	strh.w	r3, [lr]
 801b562:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801b564:	441c      	add	r4, r3
 801b566:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b568:	f10e 0e02 	add.w	lr, lr, #2
 801b56c:	441e      	add	r6, r3
 801b56e:	f108 38ff 	add.w	r8, r8, #4294967295
 801b572:	e6ce      	b.n	801b312 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801b574:	f1bc 0f00 	cmp.w	ip, #0
 801b578:	d0c5      	beq.n	801b506 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801b57a:	9908      	ldr	r1, [sp, #32]
 801b57c:	440b      	add	r3, r1
 801b57e:	0859      	lsrs	r1, r3, #1
 801b580:	07db      	lsls	r3, r3, #31
 801b582:	5c79      	ldrb	r1, [r7, r1]
 801b584:	bf54      	ite	pl
 801b586:	f001 010f 	andpl.w	r1, r1, #15
 801b58a:	1109      	asrmi	r1, r1, #4
 801b58c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801b590:	b2c9      	uxtb	r1, r1
 801b592:	910b      	str	r1, [sp, #44]	; 0x2c
 801b594:	e7b7      	b.n	801b506 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801b596:	bf00      	nop
 801b598:	20012678 	.word	0x20012678
 801b59c:	fffff800 	.word	0xfffff800
 801b5a0:	2b00      	cmp	r3, #0
 801b5a2:	d0de      	beq.n	801b562 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801b5a4:	4a21      	ldr	r2, [pc, #132]	; (801b62c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801b5a6:	f8be c000 	ldrh.w	ip, [lr]
 801b5aa:	6810      	ldr	r0, [r2, #0]
 801b5ac:	fa1f fa83 	uxth.w	sl, r3
 801b5b0:	ea4f 212c 	mov.w	r1, ip, asr #8
 801b5b4:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801b5b8:	43db      	mvns	r3, r3
 801b5ba:	b2db      	uxtb	r3, r3
 801b5bc:	fb12 f20a 	smulbb	r2, r2, sl
 801b5c0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b5c4:	fb01 2103 	mla	r1, r1, r3, r2
 801b5c8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801b5cc:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801b5d0:	b2c0      	uxtb	r0, r0
 801b5d2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b5d6:	fa5f fc8c 	uxtb.w	ip, ip
 801b5da:	fb10 f00a 	smulbb	r0, r0, sl
 801b5de:	fb0c 0003 	mla	r0, ip, r3, r0
 801b5e2:	b289      	uxth	r1, r1
 801b5e4:	fb1b fb0a 	smulbb	fp, fp, sl
 801b5e8:	b280      	uxth	r0, r0
 801b5ea:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b5ee:	fb02 b203 	mla	r2, r2, r3, fp
 801b5f2:	1c4b      	adds	r3, r1, #1
 801b5f4:	f100 0b01 	add.w	fp, r0, #1
 801b5f8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b5fc:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801b600:	b292      	uxth	r2, r2
 801b602:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801b606:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801b60a:	ea4b 0101 	orr.w	r1, fp, r1
 801b60e:	f102 0b01 	add.w	fp, r2, #1
 801b612:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801b616:	0952      	lsrs	r2, r2, #5
 801b618:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b61c:	4311      	orrs	r1, r2
 801b61e:	f8ae 1000 	strh.w	r1, [lr]
 801b622:	e79e      	b.n	801b562 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801b624:	b013      	add	sp, #76	; 0x4c
 801b626:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b62a:	bf00      	nop
 801b62c:	20012678 	.word	0x20012678

0801b630 <CRC_Lock>:
 801b630:	b530      	push	{r4, r5, lr}
 801b632:	4a20      	ldr	r2, [pc, #128]	; (801b6b4 <CRC_Lock+0x84>)
 801b634:	6813      	ldr	r3, [r2, #0]
 801b636:	f023 0301 	bic.w	r3, r3, #1
 801b63a:	6013      	str	r3, [r2, #0]
 801b63c:	4b1e      	ldr	r3, [pc, #120]	; (801b6b8 <CRC_Lock+0x88>)
 801b63e:	681a      	ldr	r2, [r3, #0]
 801b640:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801b644:	4022      	ands	r2, r4
 801b646:	f24c 2540 	movw	r5, #49728	; 0xc240
 801b64a:	42aa      	cmp	r2, r5
 801b64c:	d005      	beq.n	801b65a <CRC_Lock+0x2a>
 801b64e:	681b      	ldr	r3, [r3, #0]
 801b650:	f24c 2270 	movw	r2, #49776	; 0xc270
 801b654:	4023      	ands	r3, r4
 801b656:	4293      	cmp	r3, r2
 801b658:	d124      	bne.n	801b6a4 <CRC_Lock+0x74>
 801b65a:	4b18      	ldr	r3, [pc, #96]	; (801b6bc <CRC_Lock+0x8c>)
 801b65c:	681b      	ldr	r3, [r3, #0]
 801b65e:	bb0b      	cbnz	r3, 801b6a4 <CRC_Lock+0x74>
 801b660:	4b17      	ldr	r3, [pc, #92]	; (801b6c0 <CRC_Lock+0x90>)
 801b662:	681a      	ldr	r2, [r3, #0]
 801b664:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801b668:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801b66c:	d00d      	beq.n	801b68a <CRC_Lock+0x5a>
 801b66e:	681a      	ldr	r2, [r3, #0]
 801b670:	f240 4483 	movw	r4, #1155	; 0x483
 801b674:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801b678:	42a2      	cmp	r2, r4
 801b67a:	d006      	beq.n	801b68a <CRC_Lock+0x5a>
 801b67c:	681b      	ldr	r3, [r3, #0]
 801b67e:	f240 4285 	movw	r2, #1157	; 0x485
 801b682:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801b686:	4293      	cmp	r3, r2
 801b688:	d10c      	bne.n	801b6a4 <CRC_Lock+0x74>
 801b68a:	4b0e      	ldr	r3, [pc, #56]	; (801b6c4 <CRC_Lock+0x94>)
 801b68c:	2201      	movs	r2, #1
 801b68e:	601a      	str	r2, [r3, #0]
 801b690:	681a      	ldr	r2, [r3, #0]
 801b692:	2a00      	cmp	r2, #0
 801b694:	d1fc      	bne.n	801b690 <CRC_Lock+0x60>
 801b696:	4b0c      	ldr	r3, [pc, #48]	; (801b6c8 <CRC_Lock+0x98>)
 801b698:	6018      	str	r0, [r3, #0]
 801b69a:	6818      	ldr	r0, [r3, #0]
 801b69c:	1a43      	subs	r3, r0, r1
 801b69e:	4258      	negs	r0, r3
 801b6a0:	4158      	adcs	r0, r3
 801b6a2:	bd30      	pop	{r4, r5, pc}
 801b6a4:	4b09      	ldr	r3, [pc, #36]	; (801b6cc <CRC_Lock+0x9c>)
 801b6a6:	2201      	movs	r2, #1
 801b6a8:	601a      	str	r2, [r3, #0]
 801b6aa:	681a      	ldr	r2, [r3, #0]
 801b6ac:	2a00      	cmp	r2, #0
 801b6ae:	d1fc      	bne.n	801b6aa <CRC_Lock+0x7a>
 801b6b0:	4b07      	ldr	r3, [pc, #28]	; (801b6d0 <CRC_Lock+0xa0>)
 801b6b2:	e7f1      	b.n	801b698 <CRC_Lock+0x68>
 801b6b4:	e0002000 	.word	0xe0002000
 801b6b8:	e000ed00 	.word	0xe000ed00
 801b6bc:	e0042000 	.word	0xe0042000
 801b6c0:	5c001000 	.word	0x5c001000
 801b6c4:	58024c08 	.word	0x58024c08
 801b6c8:	58024c00 	.word	0x58024c00
 801b6cc:	40023008 	.word	0x40023008
 801b6d0:	40023000 	.word	0x40023000

0801b6d4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801b6d4:	6101      	str	r1, [r0, #16]
 801b6d6:	4770      	bx	lr

0801b6d8 <_ZN8touchgfx8Gestures4tickEv>:
 801b6d8:	7b83      	ldrb	r3, [r0, #14]
 801b6da:	b14b      	cbz	r3, 801b6f0 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801b6dc:	8903      	ldrh	r3, [r0, #8]
 801b6de:	3301      	adds	r3, #1
 801b6e0:	b29b      	uxth	r3, r3
 801b6e2:	2b07      	cmp	r3, #7
 801b6e4:	8103      	strh	r3, [r0, #8]
 801b6e6:	bf81      	itttt	hi
 801b6e8:	2300      	movhi	r3, #0
 801b6ea:	8143      	strhhi	r3, [r0, #10]
 801b6ec:	8183      	strhhi	r3, [r0, #12]
 801b6ee:	7383      	strbhi	r3, [r0, #14]
 801b6f0:	4770      	bx	lr
	...

0801b6f4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801b6f4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801b6f8:	4698      	mov	r8, r3
 801b6fa:	8883      	ldrh	r3, [r0, #4]
 801b6fc:	f8ad 3006 	strh.w	r3, [sp, #6]
 801b700:	eba8 0303 	sub.w	r3, r8, r3
 801b704:	b21b      	sxth	r3, r3
 801b706:	4604      	mov	r4, r0
 801b708:	2b00      	cmp	r3, #0
 801b70a:	4617      	mov	r7, r2
 801b70c:	4a18      	ldr	r2, [pc, #96]	; (801b770 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801b70e:	9200      	str	r2, [sp, #0]
 801b710:	bfb8      	it	lt
 801b712:	425b      	neglt	r3, r3
 801b714:	8aa2      	ldrh	r2, [r4, #20]
 801b716:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801b71a:	f8ad 800a 	strh.w	r8, [sp, #10]
 801b71e:	b21b      	sxth	r3, r3
 801b720:	460e      	mov	r6, r1
 801b722:	4293      	cmp	r3, r2
 801b724:	88c1      	ldrh	r1, [r0, #6]
 801b726:	f8ad 1008 	strh.w	r1, [sp, #8]
 801b72a:	f04f 0000 	mov.w	r0, #0
 801b72e:	f88d 0004 	strb.w	r0, [sp, #4]
 801b732:	f8ad 500c 	strh.w	r5, [sp, #12]
 801b736:	dc07      	bgt.n	801b748 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 801b738:	1a69      	subs	r1, r5, r1
 801b73a:	b209      	sxth	r1, r1
 801b73c:	2900      	cmp	r1, #0
 801b73e:	bfb8      	it	lt
 801b740:	4249      	neglt	r1, r1
 801b742:	b209      	sxth	r1, r1
 801b744:	428a      	cmp	r2, r1
 801b746:	da10      	bge.n	801b76a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 801b748:	6920      	ldr	r0, [r4, #16]
 801b74a:	6803      	ldr	r3, [r0, #0]
 801b74c:	4669      	mov	r1, sp
 801b74e:	685b      	ldr	r3, [r3, #4]
 801b750:	4798      	blx	r3
 801b752:	eba8 0606 	sub.w	r6, r8, r6
 801b756:	2300      	movs	r3, #0
 801b758:	1bef      	subs	r7, r5, r7
 801b75a:	2001      	movs	r0, #1
 801b75c:	8123      	strh	r3, [r4, #8]
 801b75e:	8166      	strh	r6, [r4, #10]
 801b760:	81a7      	strh	r7, [r4, #12]
 801b762:	f8a4 8004 	strh.w	r8, [r4, #4]
 801b766:	80e5      	strh	r5, [r4, #6]
 801b768:	73a0      	strb	r0, [r4, #14]
 801b76a:	b004      	add	sp, #16
 801b76c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b770:	0801e0bc 	.word	0x0801e0bc

0801b774 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801b774:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b776:	461e      	mov	r6, r3
 801b778:	1e4b      	subs	r3, r1, #1
 801b77a:	2b01      	cmp	r3, #1
 801b77c:	b085      	sub	sp, #20
 801b77e:	4604      	mov	r4, r0
 801b780:	460d      	mov	r5, r1
 801b782:	4617      	mov	r7, r2
 801b784:	d84b      	bhi.n	801b81e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801b786:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801b78a:	1cd3      	adds	r3, r2, #3
 801b78c:	b29b      	uxth	r3, r3
 801b78e:	2b06      	cmp	r3, #6
 801b790:	d916      	bls.n	801b7c0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801b792:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801b834 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801b796:	f8cd c004 	str.w	ip, [sp, #4]
 801b79a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b79e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801b7a2:	6900      	ldr	r0, [r0, #16]
 801b7a4:	f8ad 100c 	strh.w	r1, [sp, #12]
 801b7a8:	f04f 0c00 	mov.w	ip, #0
 801b7ac:	f88d c008 	strb.w	ip, [sp, #8]
 801b7b0:	f8ad 200a 	strh.w	r2, [sp, #10]
 801b7b4:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b7b8:	6803      	ldr	r3, [r0, #0]
 801b7ba:	a901      	add	r1, sp, #4
 801b7bc:	689b      	ldr	r3, [r3, #8]
 801b7be:	4798      	blx	r3
 801b7c0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801b7c4:	1cd3      	adds	r3, r2, #3
 801b7c6:	b29b      	uxth	r3, r3
 801b7c8:	2b06      	cmp	r3, #6
 801b7ca:	d916      	bls.n	801b7fa <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b7cc:	f8df c064 	ldr.w	ip, [pc, #100]	; 801b834 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801b7d0:	f8cd c004 	str.w	ip, [sp, #4]
 801b7d4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b7d8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801b7dc:	6920      	ldr	r0, [r4, #16]
 801b7de:	f8ad 100c 	strh.w	r1, [sp, #12]
 801b7e2:	f04f 0c01 	mov.w	ip, #1
 801b7e6:	f88d c008 	strb.w	ip, [sp, #8]
 801b7ea:	f8ad 200a 	strh.w	r2, [sp, #10]
 801b7ee:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b7f2:	6803      	ldr	r3, [r0, #0]
 801b7f4:	a901      	add	r1, sp, #4
 801b7f6:	689b      	ldr	r3, [r3, #8]
 801b7f8:	4798      	blx	r3
 801b7fa:	4b0d      	ldr	r3, [pc, #52]	; (801b830 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801b7fc:	9301      	str	r3, [sp, #4]
 801b7fe:	6920      	ldr	r0, [r4, #16]
 801b800:	f88d 5008 	strb.w	r5, [sp, #8]
 801b804:	2300      	movs	r3, #0
 801b806:	f8ad 700a 	strh.w	r7, [sp, #10]
 801b80a:	f8ad 600c 	strh.w	r6, [sp, #12]
 801b80e:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b812:	6803      	ldr	r3, [r0, #0]
 801b814:	a901      	add	r1, sp, #4
 801b816:	681b      	ldr	r3, [r3, #0]
 801b818:	4798      	blx	r3
 801b81a:	b005      	add	sp, #20
 801b81c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b81e:	2900      	cmp	r1, #0
 801b820:	d1eb      	bne.n	801b7fa <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b822:	80a2      	strh	r2, [r4, #4]
 801b824:	80c6      	strh	r6, [r0, #6]
 801b826:	60a1      	str	r1, [r4, #8]
 801b828:	81a1      	strh	r1, [r4, #12]
 801b82a:	73a1      	strb	r1, [r4, #14]
 801b82c:	e7e5      	b.n	801b7fa <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b82e:	bf00      	nop
 801b830:	0801e0a8 	.word	0x0801e0a8
 801b834:	0801e0d0 	.word	0x0801e0d0

0801b838 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801b838:	b570      	push	{r4, r5, r6, lr}
 801b83a:	790b      	ldrb	r3, [r1, #4]
 801b83c:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 801b840:	2b00      	cmp	r3, #0
 801b842:	bf0c      	ite	eq
 801b844:	2301      	moveq	r3, #1
 801b846:	2300      	movne	r3, #0
 801b848:	4604      	mov	r4, r0
 801b84a:	460e      	mov	r6, r1
 801b84c:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801b850:	d109      	bne.n	801b866 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 801b852:	b14d      	cbz	r5, 801b868 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 801b854:	7933      	ldrb	r3, [r6, #4]
 801b856:	2b01      	cmp	r3, #1
 801b858:	d10c      	bne.n	801b874 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801b85a:	6823      	ldr	r3, [r4, #0]
 801b85c:	4620      	mov	r0, r4
 801b85e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801b860:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801b864:	4718      	bx	r3
 801b866:	b12d      	cbz	r5, 801b874 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801b868:	6823      	ldr	r3, [r4, #0]
 801b86a:	4620      	mov	r0, r4
 801b86c:	695b      	ldr	r3, [r3, #20]
 801b86e:	4798      	blx	r3
 801b870:	2d00      	cmp	r5, #0
 801b872:	d1ef      	bne.n	801b854 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801b874:	bd70      	pop	{r4, r5, r6, pc}

0801b876 <__aeabi_atexit>:
 801b876:	460b      	mov	r3, r1
 801b878:	4601      	mov	r1, r0
 801b87a:	4618      	mov	r0, r3
 801b87c:	f000 b852 	b.w	801b924 <__cxa_atexit>

0801b880 <_ZdlPvj>:
 801b880:	f000 b812 	b.w	801b8a8 <_ZdlPv>

0801b884 <__cxa_guard_acquire>:
 801b884:	6803      	ldr	r3, [r0, #0]
 801b886:	07db      	lsls	r3, r3, #31
 801b888:	d406      	bmi.n	801b898 <__cxa_guard_acquire+0x14>
 801b88a:	7843      	ldrb	r3, [r0, #1]
 801b88c:	b103      	cbz	r3, 801b890 <__cxa_guard_acquire+0xc>
 801b88e:	deff      	udf	#255	; 0xff
 801b890:	2301      	movs	r3, #1
 801b892:	7043      	strb	r3, [r0, #1]
 801b894:	4618      	mov	r0, r3
 801b896:	4770      	bx	lr
 801b898:	2000      	movs	r0, #0
 801b89a:	4770      	bx	lr

0801b89c <__cxa_guard_release>:
 801b89c:	2301      	movs	r3, #1
 801b89e:	6003      	str	r3, [r0, #0]
 801b8a0:	4770      	bx	lr

0801b8a2 <__cxa_pure_virtual>:
 801b8a2:	b508      	push	{r3, lr}
 801b8a4:	f000 f80e 	bl	801b8c4 <_ZSt9terminatev>

0801b8a8 <_ZdlPv>:
 801b8a8:	f000 b88e 	b.w	801b9c8 <free>

0801b8ac <_ZN10__cxxabiv111__terminateEPFvvE>:
 801b8ac:	b508      	push	{r3, lr}
 801b8ae:	4780      	blx	r0
 801b8b0:	f000 f80d 	bl	801b8ce <abort>

0801b8b4 <_ZSt13get_terminatev>:
 801b8b4:	4b02      	ldr	r3, [pc, #8]	; (801b8c0 <_ZSt13get_terminatev+0xc>)
 801b8b6:	6818      	ldr	r0, [r3, #0]
 801b8b8:	f3bf 8f5b 	dmb	ish
 801b8bc:	4770      	bx	lr
 801b8be:	bf00      	nop
 801b8c0:	200000f8 	.word	0x200000f8

0801b8c4 <_ZSt9terminatev>:
 801b8c4:	b508      	push	{r3, lr}
 801b8c6:	f7ff fff5 	bl	801b8b4 <_ZSt13get_terminatev>
 801b8ca:	f7ff ffef 	bl	801b8ac <_ZN10__cxxabiv111__terminateEPFvvE>

0801b8ce <abort>:
 801b8ce:	b508      	push	{r3, lr}
 801b8d0:	2006      	movs	r0, #6
 801b8d2:	f000 fc9d 	bl	801c210 <raise>
 801b8d6:	2001      	movs	r0, #1
 801b8d8:	f7e6 fb0e 	bl	8001ef8 <_exit>

0801b8dc <__assert_func>:
 801b8dc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801b8de:	4614      	mov	r4, r2
 801b8e0:	461a      	mov	r2, r3
 801b8e2:	4b09      	ldr	r3, [pc, #36]	; (801b908 <__assert_func+0x2c>)
 801b8e4:	681b      	ldr	r3, [r3, #0]
 801b8e6:	4605      	mov	r5, r0
 801b8e8:	68d8      	ldr	r0, [r3, #12]
 801b8ea:	b14c      	cbz	r4, 801b900 <__assert_func+0x24>
 801b8ec:	4b07      	ldr	r3, [pc, #28]	; (801b90c <__assert_func+0x30>)
 801b8ee:	9100      	str	r1, [sp, #0]
 801b8f0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801b8f4:	4906      	ldr	r1, [pc, #24]	; (801b910 <__assert_func+0x34>)
 801b8f6:	462b      	mov	r3, r5
 801b8f8:	f000 f828 	bl	801b94c <fiprintf>
 801b8fc:	f7ff ffe7 	bl	801b8ce <abort>
 801b900:	4b04      	ldr	r3, [pc, #16]	; (801b914 <__assert_func+0x38>)
 801b902:	461c      	mov	r4, r3
 801b904:	e7f3      	b.n	801b8ee <__assert_func+0x12>
 801b906:	bf00      	nop
 801b908:	200000fc 	.word	0x200000fc
 801b90c:	0801e398 	.word	0x0801e398
 801b910:	0801e3a5 	.word	0x0801e3a5
 801b914:	0801e3d3 	.word	0x0801e3d3

0801b918 <atexit>:
 801b918:	2300      	movs	r3, #0
 801b91a:	4601      	mov	r1, r0
 801b91c:	461a      	mov	r2, r3
 801b91e:	4618      	mov	r0, r3
 801b920:	f000 bd52 	b.w	801c3c8 <__register_exitproc>

0801b924 <__cxa_atexit>:
 801b924:	b510      	push	{r4, lr}
 801b926:	4c05      	ldr	r4, [pc, #20]	; (801b93c <__cxa_atexit+0x18>)
 801b928:	4613      	mov	r3, r2
 801b92a:	b12c      	cbz	r4, 801b938 <__cxa_atexit+0x14>
 801b92c:	460a      	mov	r2, r1
 801b92e:	4601      	mov	r1, r0
 801b930:	2002      	movs	r0, #2
 801b932:	f000 fd49 	bl	801c3c8 <__register_exitproc>
 801b936:	bd10      	pop	{r4, pc}
 801b938:	4620      	mov	r0, r4
 801b93a:	e7fc      	b.n	801b936 <__cxa_atexit+0x12>
 801b93c:	0801c3c9 	.word	0x0801c3c9

0801b940 <__errno>:
 801b940:	4b01      	ldr	r3, [pc, #4]	; (801b948 <__errno+0x8>)
 801b942:	6818      	ldr	r0, [r3, #0]
 801b944:	4770      	bx	lr
 801b946:	bf00      	nop
 801b948:	200000fc 	.word	0x200000fc

0801b94c <fiprintf>:
 801b94c:	b40e      	push	{r1, r2, r3}
 801b94e:	b503      	push	{r0, r1, lr}
 801b950:	4601      	mov	r1, r0
 801b952:	ab03      	add	r3, sp, #12
 801b954:	4805      	ldr	r0, [pc, #20]	; (801b96c <fiprintf+0x20>)
 801b956:	f853 2b04 	ldr.w	r2, [r3], #4
 801b95a:	6800      	ldr	r0, [r0, #0]
 801b95c:	9301      	str	r3, [sp, #4]
 801b95e:	f000 f95b 	bl	801bc18 <_vfiprintf_r>
 801b962:	b002      	add	sp, #8
 801b964:	f85d eb04 	ldr.w	lr, [sp], #4
 801b968:	b003      	add	sp, #12
 801b96a:	4770      	bx	lr
 801b96c:	200000fc 	.word	0x200000fc

0801b970 <__libc_init_array>:
 801b970:	b570      	push	{r4, r5, r6, lr}
 801b972:	4d0d      	ldr	r5, [pc, #52]	; (801b9a8 <__libc_init_array+0x38>)
 801b974:	4c0d      	ldr	r4, [pc, #52]	; (801b9ac <__libc_init_array+0x3c>)
 801b976:	1b64      	subs	r4, r4, r5
 801b978:	10a4      	asrs	r4, r4, #2
 801b97a:	2600      	movs	r6, #0
 801b97c:	42a6      	cmp	r6, r4
 801b97e:	d109      	bne.n	801b994 <__libc_init_array+0x24>
 801b980:	4d0b      	ldr	r5, [pc, #44]	; (801b9b0 <__libc_init_array+0x40>)
 801b982:	4c0c      	ldr	r4, [pc, #48]	; (801b9b4 <__libc_init_array+0x44>)
 801b984:	f001 f85a 	bl	801ca3c <_init>
 801b988:	1b64      	subs	r4, r4, r5
 801b98a:	10a4      	asrs	r4, r4, #2
 801b98c:	2600      	movs	r6, #0
 801b98e:	42a6      	cmp	r6, r4
 801b990:	d105      	bne.n	801b99e <__libc_init_array+0x2e>
 801b992:	bd70      	pop	{r4, r5, r6, pc}
 801b994:	f855 3b04 	ldr.w	r3, [r5], #4
 801b998:	4798      	blx	r3
 801b99a:	3601      	adds	r6, #1
 801b99c:	e7ee      	b.n	801b97c <__libc_init_array+0xc>
 801b99e:	f855 3b04 	ldr.w	r3, [r5], #4
 801b9a2:	4798      	blx	r3
 801b9a4:	3601      	adds	r6, #1
 801b9a6:	e7f2      	b.n	801b98e <__libc_init_array+0x1e>
 801b9a8:	0816f158 	.word	0x0816f158
 801b9ac:	0816f158 	.word	0x0816f158
 801b9b0:	0816f158 	.word	0x0816f158
 801b9b4:	0816f16c 	.word	0x0816f16c

0801b9b8 <malloc>:
 801b9b8:	4b02      	ldr	r3, [pc, #8]	; (801b9c4 <malloc+0xc>)
 801b9ba:	4601      	mov	r1, r0
 801b9bc:	6818      	ldr	r0, [r3, #0]
 801b9be:	f000 b88d 	b.w	801badc <_malloc_r>
 801b9c2:	bf00      	nop
 801b9c4:	200000fc 	.word	0x200000fc

0801b9c8 <free>:
 801b9c8:	4b02      	ldr	r3, [pc, #8]	; (801b9d4 <free+0xc>)
 801b9ca:	4601      	mov	r1, r0
 801b9cc:	6818      	ldr	r0, [r3, #0]
 801b9ce:	f000 b819 	b.w	801ba04 <_free_r>
 801b9d2:	bf00      	nop
 801b9d4:	200000fc 	.word	0x200000fc

0801b9d8 <memcpy>:
 801b9d8:	440a      	add	r2, r1
 801b9da:	4291      	cmp	r1, r2
 801b9dc:	f100 33ff 	add.w	r3, r0, #4294967295
 801b9e0:	d100      	bne.n	801b9e4 <memcpy+0xc>
 801b9e2:	4770      	bx	lr
 801b9e4:	b510      	push	{r4, lr}
 801b9e6:	f811 4b01 	ldrb.w	r4, [r1], #1
 801b9ea:	f803 4f01 	strb.w	r4, [r3, #1]!
 801b9ee:	4291      	cmp	r1, r2
 801b9f0:	d1f9      	bne.n	801b9e6 <memcpy+0xe>
 801b9f2:	bd10      	pop	{r4, pc}

0801b9f4 <memset>:
 801b9f4:	4402      	add	r2, r0
 801b9f6:	4603      	mov	r3, r0
 801b9f8:	4293      	cmp	r3, r2
 801b9fa:	d100      	bne.n	801b9fe <memset+0xa>
 801b9fc:	4770      	bx	lr
 801b9fe:	f803 1b01 	strb.w	r1, [r3], #1
 801ba02:	e7f9      	b.n	801b9f8 <memset+0x4>

0801ba04 <_free_r>:
 801ba04:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801ba06:	2900      	cmp	r1, #0
 801ba08:	d044      	beq.n	801ba94 <_free_r+0x90>
 801ba0a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801ba0e:	9001      	str	r0, [sp, #4]
 801ba10:	2b00      	cmp	r3, #0
 801ba12:	f1a1 0404 	sub.w	r4, r1, #4
 801ba16:	bfb8      	it	lt
 801ba18:	18e4      	addlt	r4, r4, r3
 801ba1a:	f000 ff57 	bl	801c8cc <__malloc_lock>
 801ba1e:	4a1e      	ldr	r2, [pc, #120]	; (801ba98 <_free_r+0x94>)
 801ba20:	9801      	ldr	r0, [sp, #4]
 801ba22:	6813      	ldr	r3, [r2, #0]
 801ba24:	b933      	cbnz	r3, 801ba34 <_free_r+0x30>
 801ba26:	6063      	str	r3, [r4, #4]
 801ba28:	6014      	str	r4, [r2, #0]
 801ba2a:	b003      	add	sp, #12
 801ba2c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801ba30:	f000 bf52 	b.w	801c8d8 <__malloc_unlock>
 801ba34:	42a3      	cmp	r3, r4
 801ba36:	d908      	bls.n	801ba4a <_free_r+0x46>
 801ba38:	6825      	ldr	r5, [r4, #0]
 801ba3a:	1961      	adds	r1, r4, r5
 801ba3c:	428b      	cmp	r3, r1
 801ba3e:	bf01      	itttt	eq
 801ba40:	6819      	ldreq	r1, [r3, #0]
 801ba42:	685b      	ldreq	r3, [r3, #4]
 801ba44:	1949      	addeq	r1, r1, r5
 801ba46:	6021      	streq	r1, [r4, #0]
 801ba48:	e7ed      	b.n	801ba26 <_free_r+0x22>
 801ba4a:	461a      	mov	r2, r3
 801ba4c:	685b      	ldr	r3, [r3, #4]
 801ba4e:	b10b      	cbz	r3, 801ba54 <_free_r+0x50>
 801ba50:	42a3      	cmp	r3, r4
 801ba52:	d9fa      	bls.n	801ba4a <_free_r+0x46>
 801ba54:	6811      	ldr	r1, [r2, #0]
 801ba56:	1855      	adds	r5, r2, r1
 801ba58:	42a5      	cmp	r5, r4
 801ba5a:	d10b      	bne.n	801ba74 <_free_r+0x70>
 801ba5c:	6824      	ldr	r4, [r4, #0]
 801ba5e:	4421      	add	r1, r4
 801ba60:	1854      	adds	r4, r2, r1
 801ba62:	42a3      	cmp	r3, r4
 801ba64:	6011      	str	r1, [r2, #0]
 801ba66:	d1e0      	bne.n	801ba2a <_free_r+0x26>
 801ba68:	681c      	ldr	r4, [r3, #0]
 801ba6a:	685b      	ldr	r3, [r3, #4]
 801ba6c:	6053      	str	r3, [r2, #4]
 801ba6e:	4421      	add	r1, r4
 801ba70:	6011      	str	r1, [r2, #0]
 801ba72:	e7da      	b.n	801ba2a <_free_r+0x26>
 801ba74:	d902      	bls.n	801ba7c <_free_r+0x78>
 801ba76:	230c      	movs	r3, #12
 801ba78:	6003      	str	r3, [r0, #0]
 801ba7a:	e7d6      	b.n	801ba2a <_free_r+0x26>
 801ba7c:	6825      	ldr	r5, [r4, #0]
 801ba7e:	1961      	adds	r1, r4, r5
 801ba80:	428b      	cmp	r3, r1
 801ba82:	bf04      	itt	eq
 801ba84:	6819      	ldreq	r1, [r3, #0]
 801ba86:	685b      	ldreq	r3, [r3, #4]
 801ba88:	6063      	str	r3, [r4, #4]
 801ba8a:	bf04      	itt	eq
 801ba8c:	1949      	addeq	r1, r1, r5
 801ba8e:	6021      	streq	r1, [r4, #0]
 801ba90:	6054      	str	r4, [r2, #4]
 801ba92:	e7ca      	b.n	801ba2a <_free_r+0x26>
 801ba94:	b003      	add	sp, #12
 801ba96:	bd30      	pop	{r4, r5, pc}
 801ba98:	2001276c 	.word	0x2001276c

0801ba9c <sbrk_aligned>:
 801ba9c:	b570      	push	{r4, r5, r6, lr}
 801ba9e:	4e0e      	ldr	r6, [pc, #56]	; (801bad8 <sbrk_aligned+0x3c>)
 801baa0:	460c      	mov	r4, r1
 801baa2:	6831      	ldr	r1, [r6, #0]
 801baa4:	4605      	mov	r5, r0
 801baa6:	b911      	cbnz	r1, 801baae <sbrk_aligned+0x12>
 801baa8:	f000 fb7a 	bl	801c1a0 <_sbrk_r>
 801baac:	6030      	str	r0, [r6, #0]
 801baae:	4621      	mov	r1, r4
 801bab0:	4628      	mov	r0, r5
 801bab2:	f000 fb75 	bl	801c1a0 <_sbrk_r>
 801bab6:	1c43      	adds	r3, r0, #1
 801bab8:	d00a      	beq.n	801bad0 <sbrk_aligned+0x34>
 801baba:	1cc4      	adds	r4, r0, #3
 801babc:	f024 0403 	bic.w	r4, r4, #3
 801bac0:	42a0      	cmp	r0, r4
 801bac2:	d007      	beq.n	801bad4 <sbrk_aligned+0x38>
 801bac4:	1a21      	subs	r1, r4, r0
 801bac6:	4628      	mov	r0, r5
 801bac8:	f000 fb6a 	bl	801c1a0 <_sbrk_r>
 801bacc:	3001      	adds	r0, #1
 801bace:	d101      	bne.n	801bad4 <sbrk_aligned+0x38>
 801bad0:	f04f 34ff 	mov.w	r4, #4294967295
 801bad4:	4620      	mov	r0, r4
 801bad6:	bd70      	pop	{r4, r5, r6, pc}
 801bad8:	20012770 	.word	0x20012770

0801badc <_malloc_r>:
 801badc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801bae0:	1ccd      	adds	r5, r1, #3
 801bae2:	f025 0503 	bic.w	r5, r5, #3
 801bae6:	3508      	adds	r5, #8
 801bae8:	2d0c      	cmp	r5, #12
 801baea:	bf38      	it	cc
 801baec:	250c      	movcc	r5, #12
 801baee:	2d00      	cmp	r5, #0
 801baf0:	4607      	mov	r7, r0
 801baf2:	db01      	blt.n	801baf8 <_malloc_r+0x1c>
 801baf4:	42a9      	cmp	r1, r5
 801baf6:	d905      	bls.n	801bb04 <_malloc_r+0x28>
 801baf8:	230c      	movs	r3, #12
 801bafa:	603b      	str	r3, [r7, #0]
 801bafc:	2600      	movs	r6, #0
 801bafe:	4630      	mov	r0, r6
 801bb00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801bb04:	4e2e      	ldr	r6, [pc, #184]	; (801bbc0 <_malloc_r+0xe4>)
 801bb06:	f000 fee1 	bl	801c8cc <__malloc_lock>
 801bb0a:	6833      	ldr	r3, [r6, #0]
 801bb0c:	461c      	mov	r4, r3
 801bb0e:	bb34      	cbnz	r4, 801bb5e <_malloc_r+0x82>
 801bb10:	4629      	mov	r1, r5
 801bb12:	4638      	mov	r0, r7
 801bb14:	f7ff ffc2 	bl	801ba9c <sbrk_aligned>
 801bb18:	1c43      	adds	r3, r0, #1
 801bb1a:	4604      	mov	r4, r0
 801bb1c:	d14d      	bne.n	801bbba <_malloc_r+0xde>
 801bb1e:	6834      	ldr	r4, [r6, #0]
 801bb20:	4626      	mov	r6, r4
 801bb22:	2e00      	cmp	r6, #0
 801bb24:	d140      	bne.n	801bba8 <_malloc_r+0xcc>
 801bb26:	6823      	ldr	r3, [r4, #0]
 801bb28:	4631      	mov	r1, r6
 801bb2a:	4638      	mov	r0, r7
 801bb2c:	eb04 0803 	add.w	r8, r4, r3
 801bb30:	f000 fb36 	bl	801c1a0 <_sbrk_r>
 801bb34:	4580      	cmp	r8, r0
 801bb36:	d13a      	bne.n	801bbae <_malloc_r+0xd2>
 801bb38:	6821      	ldr	r1, [r4, #0]
 801bb3a:	3503      	adds	r5, #3
 801bb3c:	1a6d      	subs	r5, r5, r1
 801bb3e:	f025 0503 	bic.w	r5, r5, #3
 801bb42:	3508      	adds	r5, #8
 801bb44:	2d0c      	cmp	r5, #12
 801bb46:	bf38      	it	cc
 801bb48:	250c      	movcc	r5, #12
 801bb4a:	4629      	mov	r1, r5
 801bb4c:	4638      	mov	r0, r7
 801bb4e:	f7ff ffa5 	bl	801ba9c <sbrk_aligned>
 801bb52:	3001      	adds	r0, #1
 801bb54:	d02b      	beq.n	801bbae <_malloc_r+0xd2>
 801bb56:	6823      	ldr	r3, [r4, #0]
 801bb58:	442b      	add	r3, r5
 801bb5a:	6023      	str	r3, [r4, #0]
 801bb5c:	e00e      	b.n	801bb7c <_malloc_r+0xa0>
 801bb5e:	6822      	ldr	r2, [r4, #0]
 801bb60:	1b52      	subs	r2, r2, r5
 801bb62:	d41e      	bmi.n	801bba2 <_malloc_r+0xc6>
 801bb64:	2a0b      	cmp	r2, #11
 801bb66:	d916      	bls.n	801bb96 <_malloc_r+0xba>
 801bb68:	1961      	adds	r1, r4, r5
 801bb6a:	42a3      	cmp	r3, r4
 801bb6c:	6025      	str	r5, [r4, #0]
 801bb6e:	bf18      	it	ne
 801bb70:	6059      	strne	r1, [r3, #4]
 801bb72:	6863      	ldr	r3, [r4, #4]
 801bb74:	bf08      	it	eq
 801bb76:	6031      	streq	r1, [r6, #0]
 801bb78:	5162      	str	r2, [r4, r5]
 801bb7a:	604b      	str	r3, [r1, #4]
 801bb7c:	4638      	mov	r0, r7
 801bb7e:	f104 060b 	add.w	r6, r4, #11
 801bb82:	f000 fea9 	bl	801c8d8 <__malloc_unlock>
 801bb86:	f026 0607 	bic.w	r6, r6, #7
 801bb8a:	1d23      	adds	r3, r4, #4
 801bb8c:	1af2      	subs	r2, r6, r3
 801bb8e:	d0b6      	beq.n	801bafe <_malloc_r+0x22>
 801bb90:	1b9b      	subs	r3, r3, r6
 801bb92:	50a3      	str	r3, [r4, r2]
 801bb94:	e7b3      	b.n	801bafe <_malloc_r+0x22>
 801bb96:	6862      	ldr	r2, [r4, #4]
 801bb98:	42a3      	cmp	r3, r4
 801bb9a:	bf0c      	ite	eq
 801bb9c:	6032      	streq	r2, [r6, #0]
 801bb9e:	605a      	strne	r2, [r3, #4]
 801bba0:	e7ec      	b.n	801bb7c <_malloc_r+0xa0>
 801bba2:	4623      	mov	r3, r4
 801bba4:	6864      	ldr	r4, [r4, #4]
 801bba6:	e7b2      	b.n	801bb0e <_malloc_r+0x32>
 801bba8:	4634      	mov	r4, r6
 801bbaa:	6876      	ldr	r6, [r6, #4]
 801bbac:	e7b9      	b.n	801bb22 <_malloc_r+0x46>
 801bbae:	230c      	movs	r3, #12
 801bbb0:	603b      	str	r3, [r7, #0]
 801bbb2:	4638      	mov	r0, r7
 801bbb4:	f000 fe90 	bl	801c8d8 <__malloc_unlock>
 801bbb8:	e7a1      	b.n	801bafe <_malloc_r+0x22>
 801bbba:	6025      	str	r5, [r4, #0]
 801bbbc:	e7de      	b.n	801bb7c <_malloc_r+0xa0>
 801bbbe:	bf00      	nop
 801bbc0:	2001276c 	.word	0x2001276c

0801bbc4 <__sfputc_r>:
 801bbc4:	6893      	ldr	r3, [r2, #8]
 801bbc6:	3b01      	subs	r3, #1
 801bbc8:	2b00      	cmp	r3, #0
 801bbca:	b410      	push	{r4}
 801bbcc:	6093      	str	r3, [r2, #8]
 801bbce:	da08      	bge.n	801bbe2 <__sfputc_r+0x1e>
 801bbd0:	6994      	ldr	r4, [r2, #24]
 801bbd2:	42a3      	cmp	r3, r4
 801bbd4:	db01      	blt.n	801bbda <__sfputc_r+0x16>
 801bbd6:	290a      	cmp	r1, #10
 801bbd8:	d103      	bne.n	801bbe2 <__sfputc_r+0x1e>
 801bbda:	f85d 4b04 	ldr.w	r4, [sp], #4
 801bbde:	f000 bb33 	b.w	801c248 <__swbuf_r>
 801bbe2:	6813      	ldr	r3, [r2, #0]
 801bbe4:	1c58      	adds	r0, r3, #1
 801bbe6:	6010      	str	r0, [r2, #0]
 801bbe8:	7019      	strb	r1, [r3, #0]
 801bbea:	4608      	mov	r0, r1
 801bbec:	f85d 4b04 	ldr.w	r4, [sp], #4
 801bbf0:	4770      	bx	lr

0801bbf2 <__sfputs_r>:
 801bbf2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801bbf4:	4606      	mov	r6, r0
 801bbf6:	460f      	mov	r7, r1
 801bbf8:	4614      	mov	r4, r2
 801bbfa:	18d5      	adds	r5, r2, r3
 801bbfc:	42ac      	cmp	r4, r5
 801bbfe:	d101      	bne.n	801bc04 <__sfputs_r+0x12>
 801bc00:	2000      	movs	r0, #0
 801bc02:	e007      	b.n	801bc14 <__sfputs_r+0x22>
 801bc04:	f814 1b01 	ldrb.w	r1, [r4], #1
 801bc08:	463a      	mov	r2, r7
 801bc0a:	4630      	mov	r0, r6
 801bc0c:	f7ff ffda 	bl	801bbc4 <__sfputc_r>
 801bc10:	1c43      	adds	r3, r0, #1
 801bc12:	d1f3      	bne.n	801bbfc <__sfputs_r+0xa>
 801bc14:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801bc18 <_vfiprintf_r>:
 801bc18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bc1c:	460d      	mov	r5, r1
 801bc1e:	b09d      	sub	sp, #116	; 0x74
 801bc20:	4614      	mov	r4, r2
 801bc22:	4698      	mov	r8, r3
 801bc24:	4606      	mov	r6, r0
 801bc26:	b118      	cbz	r0, 801bc30 <_vfiprintf_r+0x18>
 801bc28:	6983      	ldr	r3, [r0, #24]
 801bc2a:	b90b      	cbnz	r3, 801bc30 <_vfiprintf_r+0x18>
 801bc2c:	f000 fd48 	bl	801c6c0 <__sinit>
 801bc30:	4b89      	ldr	r3, [pc, #548]	; (801be58 <_vfiprintf_r+0x240>)
 801bc32:	429d      	cmp	r5, r3
 801bc34:	d11b      	bne.n	801bc6e <_vfiprintf_r+0x56>
 801bc36:	6875      	ldr	r5, [r6, #4]
 801bc38:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801bc3a:	07d9      	lsls	r1, r3, #31
 801bc3c:	d405      	bmi.n	801bc4a <_vfiprintf_r+0x32>
 801bc3e:	89ab      	ldrh	r3, [r5, #12]
 801bc40:	059a      	lsls	r2, r3, #22
 801bc42:	d402      	bmi.n	801bc4a <_vfiprintf_r+0x32>
 801bc44:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801bc46:	f000 fdd9 	bl	801c7fc <__retarget_lock_acquire_recursive>
 801bc4a:	89ab      	ldrh	r3, [r5, #12]
 801bc4c:	071b      	lsls	r3, r3, #28
 801bc4e:	d501      	bpl.n	801bc54 <_vfiprintf_r+0x3c>
 801bc50:	692b      	ldr	r3, [r5, #16]
 801bc52:	b9eb      	cbnz	r3, 801bc90 <_vfiprintf_r+0x78>
 801bc54:	4629      	mov	r1, r5
 801bc56:	4630      	mov	r0, r6
 801bc58:	f000 fb48 	bl	801c2ec <__swsetup_r>
 801bc5c:	b1c0      	cbz	r0, 801bc90 <_vfiprintf_r+0x78>
 801bc5e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801bc60:	07dc      	lsls	r4, r3, #31
 801bc62:	d50e      	bpl.n	801bc82 <_vfiprintf_r+0x6a>
 801bc64:	f04f 30ff 	mov.w	r0, #4294967295
 801bc68:	b01d      	add	sp, #116	; 0x74
 801bc6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bc6e:	4b7b      	ldr	r3, [pc, #492]	; (801be5c <_vfiprintf_r+0x244>)
 801bc70:	429d      	cmp	r5, r3
 801bc72:	d101      	bne.n	801bc78 <_vfiprintf_r+0x60>
 801bc74:	68b5      	ldr	r5, [r6, #8]
 801bc76:	e7df      	b.n	801bc38 <_vfiprintf_r+0x20>
 801bc78:	4b79      	ldr	r3, [pc, #484]	; (801be60 <_vfiprintf_r+0x248>)
 801bc7a:	429d      	cmp	r5, r3
 801bc7c:	bf08      	it	eq
 801bc7e:	68f5      	ldreq	r5, [r6, #12]
 801bc80:	e7da      	b.n	801bc38 <_vfiprintf_r+0x20>
 801bc82:	89ab      	ldrh	r3, [r5, #12]
 801bc84:	0598      	lsls	r0, r3, #22
 801bc86:	d4ed      	bmi.n	801bc64 <_vfiprintf_r+0x4c>
 801bc88:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801bc8a:	f000 fdb9 	bl	801c800 <__retarget_lock_release_recursive>
 801bc8e:	e7e9      	b.n	801bc64 <_vfiprintf_r+0x4c>
 801bc90:	2300      	movs	r3, #0
 801bc92:	9309      	str	r3, [sp, #36]	; 0x24
 801bc94:	2320      	movs	r3, #32
 801bc96:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801bc9a:	f8cd 800c 	str.w	r8, [sp, #12]
 801bc9e:	2330      	movs	r3, #48	; 0x30
 801bca0:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 801be64 <_vfiprintf_r+0x24c>
 801bca4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801bca8:	f04f 0901 	mov.w	r9, #1
 801bcac:	4623      	mov	r3, r4
 801bcae:	469a      	mov	sl, r3
 801bcb0:	f813 2b01 	ldrb.w	r2, [r3], #1
 801bcb4:	b10a      	cbz	r2, 801bcba <_vfiprintf_r+0xa2>
 801bcb6:	2a25      	cmp	r2, #37	; 0x25
 801bcb8:	d1f9      	bne.n	801bcae <_vfiprintf_r+0x96>
 801bcba:	ebba 0b04 	subs.w	fp, sl, r4
 801bcbe:	d00b      	beq.n	801bcd8 <_vfiprintf_r+0xc0>
 801bcc0:	465b      	mov	r3, fp
 801bcc2:	4622      	mov	r2, r4
 801bcc4:	4629      	mov	r1, r5
 801bcc6:	4630      	mov	r0, r6
 801bcc8:	f7ff ff93 	bl	801bbf2 <__sfputs_r>
 801bccc:	3001      	adds	r0, #1
 801bcce:	f000 80aa 	beq.w	801be26 <_vfiprintf_r+0x20e>
 801bcd2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801bcd4:	445a      	add	r2, fp
 801bcd6:	9209      	str	r2, [sp, #36]	; 0x24
 801bcd8:	f89a 3000 	ldrb.w	r3, [sl]
 801bcdc:	2b00      	cmp	r3, #0
 801bcde:	f000 80a2 	beq.w	801be26 <_vfiprintf_r+0x20e>
 801bce2:	2300      	movs	r3, #0
 801bce4:	f04f 32ff 	mov.w	r2, #4294967295
 801bce8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801bcec:	f10a 0a01 	add.w	sl, sl, #1
 801bcf0:	9304      	str	r3, [sp, #16]
 801bcf2:	9307      	str	r3, [sp, #28]
 801bcf4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801bcf8:	931a      	str	r3, [sp, #104]	; 0x68
 801bcfa:	4654      	mov	r4, sl
 801bcfc:	2205      	movs	r2, #5
 801bcfe:	f814 1b01 	ldrb.w	r1, [r4], #1
 801bd02:	4858      	ldr	r0, [pc, #352]	; (801be64 <_vfiprintf_r+0x24c>)
 801bd04:	f7e4 fa74 	bl	80001f0 <memchr>
 801bd08:	9a04      	ldr	r2, [sp, #16]
 801bd0a:	b9d8      	cbnz	r0, 801bd44 <_vfiprintf_r+0x12c>
 801bd0c:	06d1      	lsls	r1, r2, #27
 801bd0e:	bf44      	itt	mi
 801bd10:	2320      	movmi	r3, #32
 801bd12:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801bd16:	0713      	lsls	r3, r2, #28
 801bd18:	bf44      	itt	mi
 801bd1a:	232b      	movmi	r3, #43	; 0x2b
 801bd1c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801bd20:	f89a 3000 	ldrb.w	r3, [sl]
 801bd24:	2b2a      	cmp	r3, #42	; 0x2a
 801bd26:	d015      	beq.n	801bd54 <_vfiprintf_r+0x13c>
 801bd28:	9a07      	ldr	r2, [sp, #28]
 801bd2a:	4654      	mov	r4, sl
 801bd2c:	2000      	movs	r0, #0
 801bd2e:	f04f 0c0a 	mov.w	ip, #10
 801bd32:	4621      	mov	r1, r4
 801bd34:	f811 3b01 	ldrb.w	r3, [r1], #1
 801bd38:	3b30      	subs	r3, #48	; 0x30
 801bd3a:	2b09      	cmp	r3, #9
 801bd3c:	d94e      	bls.n	801bddc <_vfiprintf_r+0x1c4>
 801bd3e:	b1b0      	cbz	r0, 801bd6e <_vfiprintf_r+0x156>
 801bd40:	9207      	str	r2, [sp, #28]
 801bd42:	e014      	b.n	801bd6e <_vfiprintf_r+0x156>
 801bd44:	eba0 0308 	sub.w	r3, r0, r8
 801bd48:	fa09 f303 	lsl.w	r3, r9, r3
 801bd4c:	4313      	orrs	r3, r2
 801bd4e:	9304      	str	r3, [sp, #16]
 801bd50:	46a2      	mov	sl, r4
 801bd52:	e7d2      	b.n	801bcfa <_vfiprintf_r+0xe2>
 801bd54:	9b03      	ldr	r3, [sp, #12]
 801bd56:	1d19      	adds	r1, r3, #4
 801bd58:	681b      	ldr	r3, [r3, #0]
 801bd5a:	9103      	str	r1, [sp, #12]
 801bd5c:	2b00      	cmp	r3, #0
 801bd5e:	bfbb      	ittet	lt
 801bd60:	425b      	neglt	r3, r3
 801bd62:	f042 0202 	orrlt.w	r2, r2, #2
 801bd66:	9307      	strge	r3, [sp, #28]
 801bd68:	9307      	strlt	r3, [sp, #28]
 801bd6a:	bfb8      	it	lt
 801bd6c:	9204      	strlt	r2, [sp, #16]
 801bd6e:	7823      	ldrb	r3, [r4, #0]
 801bd70:	2b2e      	cmp	r3, #46	; 0x2e
 801bd72:	d10c      	bne.n	801bd8e <_vfiprintf_r+0x176>
 801bd74:	7863      	ldrb	r3, [r4, #1]
 801bd76:	2b2a      	cmp	r3, #42	; 0x2a
 801bd78:	d135      	bne.n	801bde6 <_vfiprintf_r+0x1ce>
 801bd7a:	9b03      	ldr	r3, [sp, #12]
 801bd7c:	1d1a      	adds	r2, r3, #4
 801bd7e:	681b      	ldr	r3, [r3, #0]
 801bd80:	9203      	str	r2, [sp, #12]
 801bd82:	2b00      	cmp	r3, #0
 801bd84:	bfb8      	it	lt
 801bd86:	f04f 33ff 	movlt.w	r3, #4294967295
 801bd8a:	3402      	adds	r4, #2
 801bd8c:	9305      	str	r3, [sp, #20]
 801bd8e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 801be74 <_vfiprintf_r+0x25c>
 801bd92:	7821      	ldrb	r1, [r4, #0]
 801bd94:	2203      	movs	r2, #3
 801bd96:	4650      	mov	r0, sl
 801bd98:	f7e4 fa2a 	bl	80001f0 <memchr>
 801bd9c:	b140      	cbz	r0, 801bdb0 <_vfiprintf_r+0x198>
 801bd9e:	2340      	movs	r3, #64	; 0x40
 801bda0:	eba0 000a 	sub.w	r0, r0, sl
 801bda4:	fa03 f000 	lsl.w	r0, r3, r0
 801bda8:	9b04      	ldr	r3, [sp, #16]
 801bdaa:	4303      	orrs	r3, r0
 801bdac:	3401      	adds	r4, #1
 801bdae:	9304      	str	r3, [sp, #16]
 801bdb0:	f814 1b01 	ldrb.w	r1, [r4], #1
 801bdb4:	482c      	ldr	r0, [pc, #176]	; (801be68 <_vfiprintf_r+0x250>)
 801bdb6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801bdba:	2206      	movs	r2, #6
 801bdbc:	f7e4 fa18 	bl	80001f0 <memchr>
 801bdc0:	2800      	cmp	r0, #0
 801bdc2:	d03f      	beq.n	801be44 <_vfiprintf_r+0x22c>
 801bdc4:	4b29      	ldr	r3, [pc, #164]	; (801be6c <_vfiprintf_r+0x254>)
 801bdc6:	bb1b      	cbnz	r3, 801be10 <_vfiprintf_r+0x1f8>
 801bdc8:	9b03      	ldr	r3, [sp, #12]
 801bdca:	3307      	adds	r3, #7
 801bdcc:	f023 0307 	bic.w	r3, r3, #7
 801bdd0:	3308      	adds	r3, #8
 801bdd2:	9303      	str	r3, [sp, #12]
 801bdd4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bdd6:	443b      	add	r3, r7
 801bdd8:	9309      	str	r3, [sp, #36]	; 0x24
 801bdda:	e767      	b.n	801bcac <_vfiprintf_r+0x94>
 801bddc:	fb0c 3202 	mla	r2, ip, r2, r3
 801bde0:	460c      	mov	r4, r1
 801bde2:	2001      	movs	r0, #1
 801bde4:	e7a5      	b.n	801bd32 <_vfiprintf_r+0x11a>
 801bde6:	2300      	movs	r3, #0
 801bde8:	3401      	adds	r4, #1
 801bdea:	9305      	str	r3, [sp, #20]
 801bdec:	4619      	mov	r1, r3
 801bdee:	f04f 0c0a 	mov.w	ip, #10
 801bdf2:	4620      	mov	r0, r4
 801bdf4:	f810 2b01 	ldrb.w	r2, [r0], #1
 801bdf8:	3a30      	subs	r2, #48	; 0x30
 801bdfa:	2a09      	cmp	r2, #9
 801bdfc:	d903      	bls.n	801be06 <_vfiprintf_r+0x1ee>
 801bdfe:	2b00      	cmp	r3, #0
 801be00:	d0c5      	beq.n	801bd8e <_vfiprintf_r+0x176>
 801be02:	9105      	str	r1, [sp, #20]
 801be04:	e7c3      	b.n	801bd8e <_vfiprintf_r+0x176>
 801be06:	fb0c 2101 	mla	r1, ip, r1, r2
 801be0a:	4604      	mov	r4, r0
 801be0c:	2301      	movs	r3, #1
 801be0e:	e7f0      	b.n	801bdf2 <_vfiprintf_r+0x1da>
 801be10:	ab03      	add	r3, sp, #12
 801be12:	9300      	str	r3, [sp, #0]
 801be14:	462a      	mov	r2, r5
 801be16:	4b16      	ldr	r3, [pc, #88]	; (801be70 <_vfiprintf_r+0x258>)
 801be18:	a904      	add	r1, sp, #16
 801be1a:	4630      	mov	r0, r6
 801be1c:	f3af 8000 	nop.w
 801be20:	4607      	mov	r7, r0
 801be22:	1c78      	adds	r0, r7, #1
 801be24:	d1d6      	bne.n	801bdd4 <_vfiprintf_r+0x1bc>
 801be26:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801be28:	07d9      	lsls	r1, r3, #31
 801be2a:	d405      	bmi.n	801be38 <_vfiprintf_r+0x220>
 801be2c:	89ab      	ldrh	r3, [r5, #12]
 801be2e:	059a      	lsls	r2, r3, #22
 801be30:	d402      	bmi.n	801be38 <_vfiprintf_r+0x220>
 801be32:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801be34:	f000 fce4 	bl	801c800 <__retarget_lock_release_recursive>
 801be38:	89ab      	ldrh	r3, [r5, #12]
 801be3a:	065b      	lsls	r3, r3, #25
 801be3c:	f53f af12 	bmi.w	801bc64 <_vfiprintf_r+0x4c>
 801be40:	9809      	ldr	r0, [sp, #36]	; 0x24
 801be42:	e711      	b.n	801bc68 <_vfiprintf_r+0x50>
 801be44:	ab03      	add	r3, sp, #12
 801be46:	9300      	str	r3, [sp, #0]
 801be48:	462a      	mov	r2, r5
 801be4a:	4b09      	ldr	r3, [pc, #36]	; (801be70 <_vfiprintf_r+0x258>)
 801be4c:	a904      	add	r1, sp, #16
 801be4e:	4630      	mov	r0, r6
 801be50:	f000 f880 	bl	801bf54 <_printf_i>
 801be54:	e7e4      	b.n	801be20 <_vfiprintf_r+0x208>
 801be56:	bf00      	nop
 801be58:	0801e430 	.word	0x0801e430
 801be5c:	0801e450 	.word	0x0801e450
 801be60:	0801e410 	.word	0x0801e410
 801be64:	0801e3d8 	.word	0x0801e3d8
 801be68:	0801e3e2 	.word	0x0801e3e2
 801be6c:	00000000 	.word	0x00000000
 801be70:	0801bbf3 	.word	0x0801bbf3
 801be74:	0801e3de 	.word	0x0801e3de

0801be78 <_printf_common>:
 801be78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801be7c:	4616      	mov	r6, r2
 801be7e:	4699      	mov	r9, r3
 801be80:	688a      	ldr	r2, [r1, #8]
 801be82:	690b      	ldr	r3, [r1, #16]
 801be84:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801be88:	4293      	cmp	r3, r2
 801be8a:	bfb8      	it	lt
 801be8c:	4613      	movlt	r3, r2
 801be8e:	6033      	str	r3, [r6, #0]
 801be90:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801be94:	4607      	mov	r7, r0
 801be96:	460c      	mov	r4, r1
 801be98:	b10a      	cbz	r2, 801be9e <_printf_common+0x26>
 801be9a:	3301      	adds	r3, #1
 801be9c:	6033      	str	r3, [r6, #0]
 801be9e:	6823      	ldr	r3, [r4, #0]
 801bea0:	0699      	lsls	r1, r3, #26
 801bea2:	bf42      	ittt	mi
 801bea4:	6833      	ldrmi	r3, [r6, #0]
 801bea6:	3302      	addmi	r3, #2
 801bea8:	6033      	strmi	r3, [r6, #0]
 801beaa:	6825      	ldr	r5, [r4, #0]
 801beac:	f015 0506 	ands.w	r5, r5, #6
 801beb0:	d106      	bne.n	801bec0 <_printf_common+0x48>
 801beb2:	f104 0a19 	add.w	sl, r4, #25
 801beb6:	68e3      	ldr	r3, [r4, #12]
 801beb8:	6832      	ldr	r2, [r6, #0]
 801beba:	1a9b      	subs	r3, r3, r2
 801bebc:	42ab      	cmp	r3, r5
 801bebe:	dc26      	bgt.n	801bf0e <_printf_common+0x96>
 801bec0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801bec4:	1e13      	subs	r3, r2, #0
 801bec6:	6822      	ldr	r2, [r4, #0]
 801bec8:	bf18      	it	ne
 801beca:	2301      	movne	r3, #1
 801becc:	0692      	lsls	r2, r2, #26
 801bece:	d42b      	bmi.n	801bf28 <_printf_common+0xb0>
 801bed0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801bed4:	4649      	mov	r1, r9
 801bed6:	4638      	mov	r0, r7
 801bed8:	47c0      	blx	r8
 801beda:	3001      	adds	r0, #1
 801bedc:	d01e      	beq.n	801bf1c <_printf_common+0xa4>
 801bede:	6823      	ldr	r3, [r4, #0]
 801bee0:	68e5      	ldr	r5, [r4, #12]
 801bee2:	6832      	ldr	r2, [r6, #0]
 801bee4:	f003 0306 	and.w	r3, r3, #6
 801bee8:	2b04      	cmp	r3, #4
 801beea:	bf08      	it	eq
 801beec:	1aad      	subeq	r5, r5, r2
 801beee:	68a3      	ldr	r3, [r4, #8]
 801bef0:	6922      	ldr	r2, [r4, #16]
 801bef2:	bf0c      	ite	eq
 801bef4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801bef8:	2500      	movne	r5, #0
 801befa:	4293      	cmp	r3, r2
 801befc:	bfc4      	itt	gt
 801befe:	1a9b      	subgt	r3, r3, r2
 801bf00:	18ed      	addgt	r5, r5, r3
 801bf02:	2600      	movs	r6, #0
 801bf04:	341a      	adds	r4, #26
 801bf06:	42b5      	cmp	r5, r6
 801bf08:	d11a      	bne.n	801bf40 <_printf_common+0xc8>
 801bf0a:	2000      	movs	r0, #0
 801bf0c:	e008      	b.n	801bf20 <_printf_common+0xa8>
 801bf0e:	2301      	movs	r3, #1
 801bf10:	4652      	mov	r2, sl
 801bf12:	4649      	mov	r1, r9
 801bf14:	4638      	mov	r0, r7
 801bf16:	47c0      	blx	r8
 801bf18:	3001      	adds	r0, #1
 801bf1a:	d103      	bne.n	801bf24 <_printf_common+0xac>
 801bf1c:	f04f 30ff 	mov.w	r0, #4294967295
 801bf20:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bf24:	3501      	adds	r5, #1
 801bf26:	e7c6      	b.n	801beb6 <_printf_common+0x3e>
 801bf28:	18e1      	adds	r1, r4, r3
 801bf2a:	1c5a      	adds	r2, r3, #1
 801bf2c:	2030      	movs	r0, #48	; 0x30
 801bf2e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801bf32:	4422      	add	r2, r4
 801bf34:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801bf38:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801bf3c:	3302      	adds	r3, #2
 801bf3e:	e7c7      	b.n	801bed0 <_printf_common+0x58>
 801bf40:	2301      	movs	r3, #1
 801bf42:	4622      	mov	r2, r4
 801bf44:	4649      	mov	r1, r9
 801bf46:	4638      	mov	r0, r7
 801bf48:	47c0      	blx	r8
 801bf4a:	3001      	adds	r0, #1
 801bf4c:	d0e6      	beq.n	801bf1c <_printf_common+0xa4>
 801bf4e:	3601      	adds	r6, #1
 801bf50:	e7d9      	b.n	801bf06 <_printf_common+0x8e>
	...

0801bf54 <_printf_i>:
 801bf54:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801bf58:	7e0f      	ldrb	r7, [r1, #24]
 801bf5a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801bf5c:	2f78      	cmp	r7, #120	; 0x78
 801bf5e:	4691      	mov	r9, r2
 801bf60:	4680      	mov	r8, r0
 801bf62:	460c      	mov	r4, r1
 801bf64:	469a      	mov	sl, r3
 801bf66:	f101 0243 	add.w	r2, r1, #67	; 0x43
 801bf6a:	d807      	bhi.n	801bf7c <_printf_i+0x28>
 801bf6c:	2f62      	cmp	r7, #98	; 0x62
 801bf6e:	d80a      	bhi.n	801bf86 <_printf_i+0x32>
 801bf70:	2f00      	cmp	r7, #0
 801bf72:	f000 80d8 	beq.w	801c126 <_printf_i+0x1d2>
 801bf76:	2f58      	cmp	r7, #88	; 0x58
 801bf78:	f000 80a3 	beq.w	801c0c2 <_printf_i+0x16e>
 801bf7c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801bf80:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801bf84:	e03a      	b.n	801bffc <_printf_i+0xa8>
 801bf86:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801bf8a:	2b15      	cmp	r3, #21
 801bf8c:	d8f6      	bhi.n	801bf7c <_printf_i+0x28>
 801bf8e:	a101      	add	r1, pc, #4	; (adr r1, 801bf94 <_printf_i+0x40>)
 801bf90:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801bf94:	0801bfed 	.word	0x0801bfed
 801bf98:	0801c001 	.word	0x0801c001
 801bf9c:	0801bf7d 	.word	0x0801bf7d
 801bfa0:	0801bf7d 	.word	0x0801bf7d
 801bfa4:	0801bf7d 	.word	0x0801bf7d
 801bfa8:	0801bf7d 	.word	0x0801bf7d
 801bfac:	0801c001 	.word	0x0801c001
 801bfb0:	0801bf7d 	.word	0x0801bf7d
 801bfb4:	0801bf7d 	.word	0x0801bf7d
 801bfb8:	0801bf7d 	.word	0x0801bf7d
 801bfbc:	0801bf7d 	.word	0x0801bf7d
 801bfc0:	0801c10d 	.word	0x0801c10d
 801bfc4:	0801c031 	.word	0x0801c031
 801bfc8:	0801c0ef 	.word	0x0801c0ef
 801bfcc:	0801bf7d 	.word	0x0801bf7d
 801bfd0:	0801bf7d 	.word	0x0801bf7d
 801bfd4:	0801c12f 	.word	0x0801c12f
 801bfd8:	0801bf7d 	.word	0x0801bf7d
 801bfdc:	0801c031 	.word	0x0801c031
 801bfe0:	0801bf7d 	.word	0x0801bf7d
 801bfe4:	0801bf7d 	.word	0x0801bf7d
 801bfe8:	0801c0f7 	.word	0x0801c0f7
 801bfec:	682b      	ldr	r3, [r5, #0]
 801bfee:	1d1a      	adds	r2, r3, #4
 801bff0:	681b      	ldr	r3, [r3, #0]
 801bff2:	602a      	str	r2, [r5, #0]
 801bff4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801bff8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801bffc:	2301      	movs	r3, #1
 801bffe:	e0a3      	b.n	801c148 <_printf_i+0x1f4>
 801c000:	6820      	ldr	r0, [r4, #0]
 801c002:	6829      	ldr	r1, [r5, #0]
 801c004:	0606      	lsls	r6, r0, #24
 801c006:	f101 0304 	add.w	r3, r1, #4
 801c00a:	d50a      	bpl.n	801c022 <_printf_i+0xce>
 801c00c:	680e      	ldr	r6, [r1, #0]
 801c00e:	602b      	str	r3, [r5, #0]
 801c010:	2e00      	cmp	r6, #0
 801c012:	da03      	bge.n	801c01c <_printf_i+0xc8>
 801c014:	232d      	movs	r3, #45	; 0x2d
 801c016:	4276      	negs	r6, r6
 801c018:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801c01c:	485e      	ldr	r0, [pc, #376]	; (801c198 <_printf_i+0x244>)
 801c01e:	230a      	movs	r3, #10
 801c020:	e019      	b.n	801c056 <_printf_i+0x102>
 801c022:	680e      	ldr	r6, [r1, #0]
 801c024:	602b      	str	r3, [r5, #0]
 801c026:	f010 0f40 	tst.w	r0, #64	; 0x40
 801c02a:	bf18      	it	ne
 801c02c:	b236      	sxthne	r6, r6
 801c02e:	e7ef      	b.n	801c010 <_printf_i+0xbc>
 801c030:	682b      	ldr	r3, [r5, #0]
 801c032:	6820      	ldr	r0, [r4, #0]
 801c034:	1d19      	adds	r1, r3, #4
 801c036:	6029      	str	r1, [r5, #0]
 801c038:	0601      	lsls	r1, r0, #24
 801c03a:	d501      	bpl.n	801c040 <_printf_i+0xec>
 801c03c:	681e      	ldr	r6, [r3, #0]
 801c03e:	e002      	b.n	801c046 <_printf_i+0xf2>
 801c040:	0646      	lsls	r6, r0, #25
 801c042:	d5fb      	bpl.n	801c03c <_printf_i+0xe8>
 801c044:	881e      	ldrh	r6, [r3, #0]
 801c046:	4854      	ldr	r0, [pc, #336]	; (801c198 <_printf_i+0x244>)
 801c048:	2f6f      	cmp	r7, #111	; 0x6f
 801c04a:	bf0c      	ite	eq
 801c04c:	2308      	moveq	r3, #8
 801c04e:	230a      	movne	r3, #10
 801c050:	2100      	movs	r1, #0
 801c052:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801c056:	6865      	ldr	r5, [r4, #4]
 801c058:	60a5      	str	r5, [r4, #8]
 801c05a:	2d00      	cmp	r5, #0
 801c05c:	bfa2      	ittt	ge
 801c05e:	6821      	ldrge	r1, [r4, #0]
 801c060:	f021 0104 	bicge.w	r1, r1, #4
 801c064:	6021      	strge	r1, [r4, #0]
 801c066:	b90e      	cbnz	r6, 801c06c <_printf_i+0x118>
 801c068:	2d00      	cmp	r5, #0
 801c06a:	d04d      	beq.n	801c108 <_printf_i+0x1b4>
 801c06c:	4615      	mov	r5, r2
 801c06e:	fbb6 f1f3 	udiv	r1, r6, r3
 801c072:	fb03 6711 	mls	r7, r3, r1, r6
 801c076:	5dc7      	ldrb	r7, [r0, r7]
 801c078:	f805 7d01 	strb.w	r7, [r5, #-1]!
 801c07c:	4637      	mov	r7, r6
 801c07e:	42bb      	cmp	r3, r7
 801c080:	460e      	mov	r6, r1
 801c082:	d9f4      	bls.n	801c06e <_printf_i+0x11a>
 801c084:	2b08      	cmp	r3, #8
 801c086:	d10b      	bne.n	801c0a0 <_printf_i+0x14c>
 801c088:	6823      	ldr	r3, [r4, #0]
 801c08a:	07de      	lsls	r6, r3, #31
 801c08c:	d508      	bpl.n	801c0a0 <_printf_i+0x14c>
 801c08e:	6923      	ldr	r3, [r4, #16]
 801c090:	6861      	ldr	r1, [r4, #4]
 801c092:	4299      	cmp	r1, r3
 801c094:	bfde      	ittt	le
 801c096:	2330      	movle	r3, #48	; 0x30
 801c098:	f805 3c01 	strble.w	r3, [r5, #-1]
 801c09c:	f105 35ff 	addle.w	r5, r5, #4294967295
 801c0a0:	1b52      	subs	r2, r2, r5
 801c0a2:	6122      	str	r2, [r4, #16]
 801c0a4:	f8cd a000 	str.w	sl, [sp]
 801c0a8:	464b      	mov	r3, r9
 801c0aa:	aa03      	add	r2, sp, #12
 801c0ac:	4621      	mov	r1, r4
 801c0ae:	4640      	mov	r0, r8
 801c0b0:	f7ff fee2 	bl	801be78 <_printf_common>
 801c0b4:	3001      	adds	r0, #1
 801c0b6:	d14c      	bne.n	801c152 <_printf_i+0x1fe>
 801c0b8:	f04f 30ff 	mov.w	r0, #4294967295
 801c0bc:	b004      	add	sp, #16
 801c0be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c0c2:	4835      	ldr	r0, [pc, #212]	; (801c198 <_printf_i+0x244>)
 801c0c4:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 801c0c8:	6829      	ldr	r1, [r5, #0]
 801c0ca:	6823      	ldr	r3, [r4, #0]
 801c0cc:	f851 6b04 	ldr.w	r6, [r1], #4
 801c0d0:	6029      	str	r1, [r5, #0]
 801c0d2:	061d      	lsls	r5, r3, #24
 801c0d4:	d514      	bpl.n	801c100 <_printf_i+0x1ac>
 801c0d6:	07df      	lsls	r7, r3, #31
 801c0d8:	bf44      	itt	mi
 801c0da:	f043 0320 	orrmi.w	r3, r3, #32
 801c0de:	6023      	strmi	r3, [r4, #0]
 801c0e0:	b91e      	cbnz	r6, 801c0ea <_printf_i+0x196>
 801c0e2:	6823      	ldr	r3, [r4, #0]
 801c0e4:	f023 0320 	bic.w	r3, r3, #32
 801c0e8:	6023      	str	r3, [r4, #0]
 801c0ea:	2310      	movs	r3, #16
 801c0ec:	e7b0      	b.n	801c050 <_printf_i+0xfc>
 801c0ee:	6823      	ldr	r3, [r4, #0]
 801c0f0:	f043 0320 	orr.w	r3, r3, #32
 801c0f4:	6023      	str	r3, [r4, #0]
 801c0f6:	2378      	movs	r3, #120	; 0x78
 801c0f8:	4828      	ldr	r0, [pc, #160]	; (801c19c <_printf_i+0x248>)
 801c0fa:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801c0fe:	e7e3      	b.n	801c0c8 <_printf_i+0x174>
 801c100:	0659      	lsls	r1, r3, #25
 801c102:	bf48      	it	mi
 801c104:	b2b6      	uxthmi	r6, r6
 801c106:	e7e6      	b.n	801c0d6 <_printf_i+0x182>
 801c108:	4615      	mov	r5, r2
 801c10a:	e7bb      	b.n	801c084 <_printf_i+0x130>
 801c10c:	682b      	ldr	r3, [r5, #0]
 801c10e:	6826      	ldr	r6, [r4, #0]
 801c110:	6961      	ldr	r1, [r4, #20]
 801c112:	1d18      	adds	r0, r3, #4
 801c114:	6028      	str	r0, [r5, #0]
 801c116:	0635      	lsls	r5, r6, #24
 801c118:	681b      	ldr	r3, [r3, #0]
 801c11a:	d501      	bpl.n	801c120 <_printf_i+0x1cc>
 801c11c:	6019      	str	r1, [r3, #0]
 801c11e:	e002      	b.n	801c126 <_printf_i+0x1d2>
 801c120:	0670      	lsls	r0, r6, #25
 801c122:	d5fb      	bpl.n	801c11c <_printf_i+0x1c8>
 801c124:	8019      	strh	r1, [r3, #0]
 801c126:	2300      	movs	r3, #0
 801c128:	6123      	str	r3, [r4, #16]
 801c12a:	4615      	mov	r5, r2
 801c12c:	e7ba      	b.n	801c0a4 <_printf_i+0x150>
 801c12e:	682b      	ldr	r3, [r5, #0]
 801c130:	1d1a      	adds	r2, r3, #4
 801c132:	602a      	str	r2, [r5, #0]
 801c134:	681d      	ldr	r5, [r3, #0]
 801c136:	6862      	ldr	r2, [r4, #4]
 801c138:	2100      	movs	r1, #0
 801c13a:	4628      	mov	r0, r5
 801c13c:	f7e4 f858 	bl	80001f0 <memchr>
 801c140:	b108      	cbz	r0, 801c146 <_printf_i+0x1f2>
 801c142:	1b40      	subs	r0, r0, r5
 801c144:	6060      	str	r0, [r4, #4]
 801c146:	6863      	ldr	r3, [r4, #4]
 801c148:	6123      	str	r3, [r4, #16]
 801c14a:	2300      	movs	r3, #0
 801c14c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801c150:	e7a8      	b.n	801c0a4 <_printf_i+0x150>
 801c152:	6923      	ldr	r3, [r4, #16]
 801c154:	462a      	mov	r2, r5
 801c156:	4649      	mov	r1, r9
 801c158:	4640      	mov	r0, r8
 801c15a:	47d0      	blx	sl
 801c15c:	3001      	adds	r0, #1
 801c15e:	d0ab      	beq.n	801c0b8 <_printf_i+0x164>
 801c160:	6823      	ldr	r3, [r4, #0]
 801c162:	079b      	lsls	r3, r3, #30
 801c164:	d413      	bmi.n	801c18e <_printf_i+0x23a>
 801c166:	68e0      	ldr	r0, [r4, #12]
 801c168:	9b03      	ldr	r3, [sp, #12]
 801c16a:	4298      	cmp	r0, r3
 801c16c:	bfb8      	it	lt
 801c16e:	4618      	movlt	r0, r3
 801c170:	e7a4      	b.n	801c0bc <_printf_i+0x168>
 801c172:	2301      	movs	r3, #1
 801c174:	4632      	mov	r2, r6
 801c176:	4649      	mov	r1, r9
 801c178:	4640      	mov	r0, r8
 801c17a:	47d0      	blx	sl
 801c17c:	3001      	adds	r0, #1
 801c17e:	d09b      	beq.n	801c0b8 <_printf_i+0x164>
 801c180:	3501      	adds	r5, #1
 801c182:	68e3      	ldr	r3, [r4, #12]
 801c184:	9903      	ldr	r1, [sp, #12]
 801c186:	1a5b      	subs	r3, r3, r1
 801c188:	42ab      	cmp	r3, r5
 801c18a:	dcf2      	bgt.n	801c172 <_printf_i+0x21e>
 801c18c:	e7eb      	b.n	801c166 <_printf_i+0x212>
 801c18e:	2500      	movs	r5, #0
 801c190:	f104 0619 	add.w	r6, r4, #25
 801c194:	e7f5      	b.n	801c182 <_printf_i+0x22e>
 801c196:	bf00      	nop
 801c198:	0801e3e9 	.word	0x0801e3e9
 801c19c:	0801e3fa 	.word	0x0801e3fa

0801c1a0 <_sbrk_r>:
 801c1a0:	b538      	push	{r3, r4, r5, lr}
 801c1a2:	4d06      	ldr	r5, [pc, #24]	; (801c1bc <_sbrk_r+0x1c>)
 801c1a4:	2300      	movs	r3, #0
 801c1a6:	4604      	mov	r4, r0
 801c1a8:	4608      	mov	r0, r1
 801c1aa:	602b      	str	r3, [r5, #0]
 801c1ac:	f7e5 fed2 	bl	8001f54 <_sbrk>
 801c1b0:	1c43      	adds	r3, r0, #1
 801c1b2:	d102      	bne.n	801c1ba <_sbrk_r+0x1a>
 801c1b4:	682b      	ldr	r3, [r5, #0]
 801c1b6:	b103      	cbz	r3, 801c1ba <_sbrk_r+0x1a>
 801c1b8:	6023      	str	r3, [r4, #0]
 801c1ba:	bd38      	pop	{r3, r4, r5, pc}
 801c1bc:	20012910 	.word	0x20012910

0801c1c0 <_raise_r>:
 801c1c0:	291f      	cmp	r1, #31
 801c1c2:	b538      	push	{r3, r4, r5, lr}
 801c1c4:	4604      	mov	r4, r0
 801c1c6:	460d      	mov	r5, r1
 801c1c8:	d904      	bls.n	801c1d4 <_raise_r+0x14>
 801c1ca:	2316      	movs	r3, #22
 801c1cc:	6003      	str	r3, [r0, #0]
 801c1ce:	f04f 30ff 	mov.w	r0, #4294967295
 801c1d2:	bd38      	pop	{r3, r4, r5, pc}
 801c1d4:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801c1d6:	b112      	cbz	r2, 801c1de <_raise_r+0x1e>
 801c1d8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801c1dc:	b94b      	cbnz	r3, 801c1f2 <_raise_r+0x32>
 801c1de:	4620      	mov	r0, r4
 801c1e0:	f000 f830 	bl	801c244 <_getpid_r>
 801c1e4:	462a      	mov	r2, r5
 801c1e6:	4601      	mov	r1, r0
 801c1e8:	4620      	mov	r0, r4
 801c1ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801c1ee:	f000 b817 	b.w	801c220 <_kill_r>
 801c1f2:	2b01      	cmp	r3, #1
 801c1f4:	d00a      	beq.n	801c20c <_raise_r+0x4c>
 801c1f6:	1c59      	adds	r1, r3, #1
 801c1f8:	d103      	bne.n	801c202 <_raise_r+0x42>
 801c1fa:	2316      	movs	r3, #22
 801c1fc:	6003      	str	r3, [r0, #0]
 801c1fe:	2001      	movs	r0, #1
 801c200:	e7e7      	b.n	801c1d2 <_raise_r+0x12>
 801c202:	2400      	movs	r4, #0
 801c204:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801c208:	4628      	mov	r0, r5
 801c20a:	4798      	blx	r3
 801c20c:	2000      	movs	r0, #0
 801c20e:	e7e0      	b.n	801c1d2 <_raise_r+0x12>

0801c210 <raise>:
 801c210:	4b02      	ldr	r3, [pc, #8]	; (801c21c <raise+0xc>)
 801c212:	4601      	mov	r1, r0
 801c214:	6818      	ldr	r0, [r3, #0]
 801c216:	f7ff bfd3 	b.w	801c1c0 <_raise_r>
 801c21a:	bf00      	nop
 801c21c:	200000fc 	.word	0x200000fc

0801c220 <_kill_r>:
 801c220:	b538      	push	{r3, r4, r5, lr}
 801c222:	4d07      	ldr	r5, [pc, #28]	; (801c240 <_kill_r+0x20>)
 801c224:	2300      	movs	r3, #0
 801c226:	4604      	mov	r4, r0
 801c228:	4608      	mov	r0, r1
 801c22a:	4611      	mov	r1, r2
 801c22c:	602b      	str	r3, [r5, #0]
 801c22e:	f7e5 fe5b 	bl	8001ee8 <_kill>
 801c232:	1c43      	adds	r3, r0, #1
 801c234:	d102      	bne.n	801c23c <_kill_r+0x1c>
 801c236:	682b      	ldr	r3, [r5, #0]
 801c238:	b103      	cbz	r3, 801c23c <_kill_r+0x1c>
 801c23a:	6023      	str	r3, [r4, #0]
 801c23c:	bd38      	pop	{r3, r4, r5, pc}
 801c23e:	bf00      	nop
 801c240:	20012910 	.word	0x20012910

0801c244 <_getpid_r>:
 801c244:	f7e5 be4e 	b.w	8001ee4 <_getpid>

0801c248 <__swbuf_r>:
 801c248:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c24a:	460e      	mov	r6, r1
 801c24c:	4614      	mov	r4, r2
 801c24e:	4605      	mov	r5, r0
 801c250:	b118      	cbz	r0, 801c25a <__swbuf_r+0x12>
 801c252:	6983      	ldr	r3, [r0, #24]
 801c254:	b90b      	cbnz	r3, 801c25a <__swbuf_r+0x12>
 801c256:	f000 fa33 	bl	801c6c0 <__sinit>
 801c25a:	4b21      	ldr	r3, [pc, #132]	; (801c2e0 <__swbuf_r+0x98>)
 801c25c:	429c      	cmp	r4, r3
 801c25e:	d12b      	bne.n	801c2b8 <__swbuf_r+0x70>
 801c260:	686c      	ldr	r4, [r5, #4]
 801c262:	69a3      	ldr	r3, [r4, #24]
 801c264:	60a3      	str	r3, [r4, #8]
 801c266:	89a3      	ldrh	r3, [r4, #12]
 801c268:	071a      	lsls	r2, r3, #28
 801c26a:	d52f      	bpl.n	801c2cc <__swbuf_r+0x84>
 801c26c:	6923      	ldr	r3, [r4, #16]
 801c26e:	b36b      	cbz	r3, 801c2cc <__swbuf_r+0x84>
 801c270:	6923      	ldr	r3, [r4, #16]
 801c272:	6820      	ldr	r0, [r4, #0]
 801c274:	1ac0      	subs	r0, r0, r3
 801c276:	6963      	ldr	r3, [r4, #20]
 801c278:	b2f6      	uxtb	r6, r6
 801c27a:	4283      	cmp	r3, r0
 801c27c:	4637      	mov	r7, r6
 801c27e:	dc04      	bgt.n	801c28a <__swbuf_r+0x42>
 801c280:	4621      	mov	r1, r4
 801c282:	4628      	mov	r0, r5
 801c284:	f000 f988 	bl	801c598 <_fflush_r>
 801c288:	bb30      	cbnz	r0, 801c2d8 <__swbuf_r+0x90>
 801c28a:	68a3      	ldr	r3, [r4, #8]
 801c28c:	3b01      	subs	r3, #1
 801c28e:	60a3      	str	r3, [r4, #8]
 801c290:	6823      	ldr	r3, [r4, #0]
 801c292:	1c5a      	adds	r2, r3, #1
 801c294:	6022      	str	r2, [r4, #0]
 801c296:	701e      	strb	r6, [r3, #0]
 801c298:	6963      	ldr	r3, [r4, #20]
 801c29a:	3001      	adds	r0, #1
 801c29c:	4283      	cmp	r3, r0
 801c29e:	d004      	beq.n	801c2aa <__swbuf_r+0x62>
 801c2a0:	89a3      	ldrh	r3, [r4, #12]
 801c2a2:	07db      	lsls	r3, r3, #31
 801c2a4:	d506      	bpl.n	801c2b4 <__swbuf_r+0x6c>
 801c2a6:	2e0a      	cmp	r6, #10
 801c2a8:	d104      	bne.n	801c2b4 <__swbuf_r+0x6c>
 801c2aa:	4621      	mov	r1, r4
 801c2ac:	4628      	mov	r0, r5
 801c2ae:	f000 f973 	bl	801c598 <_fflush_r>
 801c2b2:	b988      	cbnz	r0, 801c2d8 <__swbuf_r+0x90>
 801c2b4:	4638      	mov	r0, r7
 801c2b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801c2b8:	4b0a      	ldr	r3, [pc, #40]	; (801c2e4 <__swbuf_r+0x9c>)
 801c2ba:	429c      	cmp	r4, r3
 801c2bc:	d101      	bne.n	801c2c2 <__swbuf_r+0x7a>
 801c2be:	68ac      	ldr	r4, [r5, #8]
 801c2c0:	e7cf      	b.n	801c262 <__swbuf_r+0x1a>
 801c2c2:	4b09      	ldr	r3, [pc, #36]	; (801c2e8 <__swbuf_r+0xa0>)
 801c2c4:	429c      	cmp	r4, r3
 801c2c6:	bf08      	it	eq
 801c2c8:	68ec      	ldreq	r4, [r5, #12]
 801c2ca:	e7ca      	b.n	801c262 <__swbuf_r+0x1a>
 801c2cc:	4621      	mov	r1, r4
 801c2ce:	4628      	mov	r0, r5
 801c2d0:	f000 f80c 	bl	801c2ec <__swsetup_r>
 801c2d4:	2800      	cmp	r0, #0
 801c2d6:	d0cb      	beq.n	801c270 <__swbuf_r+0x28>
 801c2d8:	f04f 37ff 	mov.w	r7, #4294967295
 801c2dc:	e7ea      	b.n	801c2b4 <__swbuf_r+0x6c>
 801c2de:	bf00      	nop
 801c2e0:	0801e430 	.word	0x0801e430
 801c2e4:	0801e450 	.word	0x0801e450
 801c2e8:	0801e410 	.word	0x0801e410

0801c2ec <__swsetup_r>:
 801c2ec:	4b32      	ldr	r3, [pc, #200]	; (801c3b8 <__swsetup_r+0xcc>)
 801c2ee:	b570      	push	{r4, r5, r6, lr}
 801c2f0:	681d      	ldr	r5, [r3, #0]
 801c2f2:	4606      	mov	r6, r0
 801c2f4:	460c      	mov	r4, r1
 801c2f6:	b125      	cbz	r5, 801c302 <__swsetup_r+0x16>
 801c2f8:	69ab      	ldr	r3, [r5, #24]
 801c2fa:	b913      	cbnz	r3, 801c302 <__swsetup_r+0x16>
 801c2fc:	4628      	mov	r0, r5
 801c2fe:	f000 f9df 	bl	801c6c0 <__sinit>
 801c302:	4b2e      	ldr	r3, [pc, #184]	; (801c3bc <__swsetup_r+0xd0>)
 801c304:	429c      	cmp	r4, r3
 801c306:	d10f      	bne.n	801c328 <__swsetup_r+0x3c>
 801c308:	686c      	ldr	r4, [r5, #4]
 801c30a:	89a3      	ldrh	r3, [r4, #12]
 801c30c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801c310:	0719      	lsls	r1, r3, #28
 801c312:	d42c      	bmi.n	801c36e <__swsetup_r+0x82>
 801c314:	06dd      	lsls	r5, r3, #27
 801c316:	d411      	bmi.n	801c33c <__swsetup_r+0x50>
 801c318:	2309      	movs	r3, #9
 801c31a:	6033      	str	r3, [r6, #0]
 801c31c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801c320:	81a3      	strh	r3, [r4, #12]
 801c322:	f04f 30ff 	mov.w	r0, #4294967295
 801c326:	e03e      	b.n	801c3a6 <__swsetup_r+0xba>
 801c328:	4b25      	ldr	r3, [pc, #148]	; (801c3c0 <__swsetup_r+0xd4>)
 801c32a:	429c      	cmp	r4, r3
 801c32c:	d101      	bne.n	801c332 <__swsetup_r+0x46>
 801c32e:	68ac      	ldr	r4, [r5, #8]
 801c330:	e7eb      	b.n	801c30a <__swsetup_r+0x1e>
 801c332:	4b24      	ldr	r3, [pc, #144]	; (801c3c4 <__swsetup_r+0xd8>)
 801c334:	429c      	cmp	r4, r3
 801c336:	bf08      	it	eq
 801c338:	68ec      	ldreq	r4, [r5, #12]
 801c33a:	e7e6      	b.n	801c30a <__swsetup_r+0x1e>
 801c33c:	0758      	lsls	r0, r3, #29
 801c33e:	d512      	bpl.n	801c366 <__swsetup_r+0x7a>
 801c340:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801c342:	b141      	cbz	r1, 801c356 <__swsetup_r+0x6a>
 801c344:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801c348:	4299      	cmp	r1, r3
 801c34a:	d002      	beq.n	801c352 <__swsetup_r+0x66>
 801c34c:	4630      	mov	r0, r6
 801c34e:	f7ff fb59 	bl	801ba04 <_free_r>
 801c352:	2300      	movs	r3, #0
 801c354:	6363      	str	r3, [r4, #52]	; 0x34
 801c356:	89a3      	ldrh	r3, [r4, #12]
 801c358:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801c35c:	81a3      	strh	r3, [r4, #12]
 801c35e:	2300      	movs	r3, #0
 801c360:	6063      	str	r3, [r4, #4]
 801c362:	6923      	ldr	r3, [r4, #16]
 801c364:	6023      	str	r3, [r4, #0]
 801c366:	89a3      	ldrh	r3, [r4, #12]
 801c368:	f043 0308 	orr.w	r3, r3, #8
 801c36c:	81a3      	strh	r3, [r4, #12]
 801c36e:	6923      	ldr	r3, [r4, #16]
 801c370:	b94b      	cbnz	r3, 801c386 <__swsetup_r+0x9a>
 801c372:	89a3      	ldrh	r3, [r4, #12]
 801c374:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801c378:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801c37c:	d003      	beq.n	801c386 <__swsetup_r+0x9a>
 801c37e:	4621      	mov	r1, r4
 801c380:	4630      	mov	r0, r6
 801c382:	f000 fa63 	bl	801c84c <__smakebuf_r>
 801c386:	89a0      	ldrh	r0, [r4, #12]
 801c388:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801c38c:	f010 0301 	ands.w	r3, r0, #1
 801c390:	d00a      	beq.n	801c3a8 <__swsetup_r+0xbc>
 801c392:	2300      	movs	r3, #0
 801c394:	60a3      	str	r3, [r4, #8]
 801c396:	6963      	ldr	r3, [r4, #20]
 801c398:	425b      	negs	r3, r3
 801c39a:	61a3      	str	r3, [r4, #24]
 801c39c:	6923      	ldr	r3, [r4, #16]
 801c39e:	b943      	cbnz	r3, 801c3b2 <__swsetup_r+0xc6>
 801c3a0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801c3a4:	d1ba      	bne.n	801c31c <__swsetup_r+0x30>
 801c3a6:	bd70      	pop	{r4, r5, r6, pc}
 801c3a8:	0781      	lsls	r1, r0, #30
 801c3aa:	bf58      	it	pl
 801c3ac:	6963      	ldrpl	r3, [r4, #20]
 801c3ae:	60a3      	str	r3, [r4, #8]
 801c3b0:	e7f4      	b.n	801c39c <__swsetup_r+0xb0>
 801c3b2:	2000      	movs	r0, #0
 801c3b4:	e7f7      	b.n	801c3a6 <__swsetup_r+0xba>
 801c3b6:	bf00      	nop
 801c3b8:	200000fc 	.word	0x200000fc
 801c3bc:	0801e430 	.word	0x0801e430
 801c3c0:	0801e450 	.word	0x0801e450
 801c3c4:	0801e410 	.word	0x0801e410

0801c3c8 <__register_exitproc>:
 801c3c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801c3cc:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 801c488 <__register_exitproc+0xc0>
 801c3d0:	4606      	mov	r6, r0
 801c3d2:	f8d8 0000 	ldr.w	r0, [r8]
 801c3d6:	461f      	mov	r7, r3
 801c3d8:	460d      	mov	r5, r1
 801c3da:	4691      	mov	r9, r2
 801c3dc:	f000 fa0e 	bl	801c7fc <__retarget_lock_acquire_recursive>
 801c3e0:	4b25      	ldr	r3, [pc, #148]	; (801c478 <__register_exitproc+0xb0>)
 801c3e2:	681c      	ldr	r4, [r3, #0]
 801c3e4:	b934      	cbnz	r4, 801c3f4 <__register_exitproc+0x2c>
 801c3e6:	4c25      	ldr	r4, [pc, #148]	; (801c47c <__register_exitproc+0xb4>)
 801c3e8:	601c      	str	r4, [r3, #0]
 801c3ea:	4b25      	ldr	r3, [pc, #148]	; (801c480 <__register_exitproc+0xb8>)
 801c3ec:	b113      	cbz	r3, 801c3f4 <__register_exitproc+0x2c>
 801c3ee:	681b      	ldr	r3, [r3, #0]
 801c3f0:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801c3f4:	6863      	ldr	r3, [r4, #4]
 801c3f6:	2b1f      	cmp	r3, #31
 801c3f8:	dd07      	ble.n	801c40a <__register_exitproc+0x42>
 801c3fa:	f8d8 0000 	ldr.w	r0, [r8]
 801c3fe:	f000 f9ff 	bl	801c800 <__retarget_lock_release_recursive>
 801c402:	f04f 30ff 	mov.w	r0, #4294967295
 801c406:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801c40a:	b34e      	cbz	r6, 801c460 <__register_exitproc+0x98>
 801c40c:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801c410:	b988      	cbnz	r0, 801c436 <__register_exitproc+0x6e>
 801c412:	4b1c      	ldr	r3, [pc, #112]	; (801c484 <__register_exitproc+0xbc>)
 801c414:	b923      	cbnz	r3, 801c420 <__register_exitproc+0x58>
 801c416:	f8d8 0000 	ldr.w	r0, [r8]
 801c41a:	f000 f9f0 	bl	801c7fe <__retarget_lock_release>
 801c41e:	e7f0      	b.n	801c402 <__register_exitproc+0x3a>
 801c420:	f44f 7084 	mov.w	r0, #264	; 0x108
 801c424:	f7ff fac8 	bl	801b9b8 <malloc>
 801c428:	2800      	cmp	r0, #0
 801c42a:	d0f4      	beq.n	801c416 <__register_exitproc+0x4e>
 801c42c:	2300      	movs	r3, #0
 801c42e:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 801c432:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801c436:	6863      	ldr	r3, [r4, #4]
 801c438:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801c43c:	2201      	movs	r2, #1
 801c43e:	409a      	lsls	r2, r3
 801c440:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801c444:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 801c448:	4313      	orrs	r3, r2
 801c44a:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801c44e:	2e02      	cmp	r6, #2
 801c450:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 801c454:	bf02      	ittt	eq
 801c456:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 801c45a:	4313      	orreq	r3, r2
 801c45c:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801c460:	6863      	ldr	r3, [r4, #4]
 801c462:	f8d8 0000 	ldr.w	r0, [r8]
 801c466:	1c5a      	adds	r2, r3, #1
 801c468:	3302      	adds	r3, #2
 801c46a:	6062      	str	r2, [r4, #4]
 801c46c:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801c470:	f000 f9c6 	bl	801c800 <__retarget_lock_release_recursive>
 801c474:	2000      	movs	r0, #0
 801c476:	e7c6      	b.n	801c406 <__register_exitproc+0x3e>
 801c478:	20012908 	.word	0x20012908
 801c47c:	2001287c 	.word	0x2001287c
 801c480:	0801e40c 	.word	0x0801e40c
 801c484:	0801b9b9 	.word	0x0801b9b9
 801c488:	20000160 	.word	0x20000160

0801c48c <__sflush_r>:
 801c48c:	898a      	ldrh	r2, [r1, #12]
 801c48e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801c492:	4605      	mov	r5, r0
 801c494:	0710      	lsls	r0, r2, #28
 801c496:	460c      	mov	r4, r1
 801c498:	d458      	bmi.n	801c54c <__sflush_r+0xc0>
 801c49a:	684b      	ldr	r3, [r1, #4]
 801c49c:	2b00      	cmp	r3, #0
 801c49e:	dc05      	bgt.n	801c4ac <__sflush_r+0x20>
 801c4a0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801c4a2:	2b00      	cmp	r3, #0
 801c4a4:	dc02      	bgt.n	801c4ac <__sflush_r+0x20>
 801c4a6:	2000      	movs	r0, #0
 801c4a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801c4ac:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801c4ae:	2e00      	cmp	r6, #0
 801c4b0:	d0f9      	beq.n	801c4a6 <__sflush_r+0x1a>
 801c4b2:	2300      	movs	r3, #0
 801c4b4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801c4b8:	682f      	ldr	r7, [r5, #0]
 801c4ba:	602b      	str	r3, [r5, #0]
 801c4bc:	d032      	beq.n	801c524 <__sflush_r+0x98>
 801c4be:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801c4c0:	89a3      	ldrh	r3, [r4, #12]
 801c4c2:	075a      	lsls	r2, r3, #29
 801c4c4:	d505      	bpl.n	801c4d2 <__sflush_r+0x46>
 801c4c6:	6863      	ldr	r3, [r4, #4]
 801c4c8:	1ac0      	subs	r0, r0, r3
 801c4ca:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801c4cc:	b10b      	cbz	r3, 801c4d2 <__sflush_r+0x46>
 801c4ce:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801c4d0:	1ac0      	subs	r0, r0, r3
 801c4d2:	2300      	movs	r3, #0
 801c4d4:	4602      	mov	r2, r0
 801c4d6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801c4d8:	6a21      	ldr	r1, [r4, #32]
 801c4da:	4628      	mov	r0, r5
 801c4dc:	47b0      	blx	r6
 801c4de:	1c43      	adds	r3, r0, #1
 801c4e0:	89a3      	ldrh	r3, [r4, #12]
 801c4e2:	d106      	bne.n	801c4f2 <__sflush_r+0x66>
 801c4e4:	6829      	ldr	r1, [r5, #0]
 801c4e6:	291d      	cmp	r1, #29
 801c4e8:	d82c      	bhi.n	801c544 <__sflush_r+0xb8>
 801c4ea:	4a2a      	ldr	r2, [pc, #168]	; (801c594 <__sflush_r+0x108>)
 801c4ec:	40ca      	lsrs	r2, r1
 801c4ee:	07d6      	lsls	r6, r2, #31
 801c4f0:	d528      	bpl.n	801c544 <__sflush_r+0xb8>
 801c4f2:	2200      	movs	r2, #0
 801c4f4:	6062      	str	r2, [r4, #4]
 801c4f6:	04d9      	lsls	r1, r3, #19
 801c4f8:	6922      	ldr	r2, [r4, #16]
 801c4fa:	6022      	str	r2, [r4, #0]
 801c4fc:	d504      	bpl.n	801c508 <__sflush_r+0x7c>
 801c4fe:	1c42      	adds	r2, r0, #1
 801c500:	d101      	bne.n	801c506 <__sflush_r+0x7a>
 801c502:	682b      	ldr	r3, [r5, #0]
 801c504:	b903      	cbnz	r3, 801c508 <__sflush_r+0x7c>
 801c506:	6560      	str	r0, [r4, #84]	; 0x54
 801c508:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801c50a:	602f      	str	r7, [r5, #0]
 801c50c:	2900      	cmp	r1, #0
 801c50e:	d0ca      	beq.n	801c4a6 <__sflush_r+0x1a>
 801c510:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801c514:	4299      	cmp	r1, r3
 801c516:	d002      	beq.n	801c51e <__sflush_r+0x92>
 801c518:	4628      	mov	r0, r5
 801c51a:	f7ff fa73 	bl	801ba04 <_free_r>
 801c51e:	2000      	movs	r0, #0
 801c520:	6360      	str	r0, [r4, #52]	; 0x34
 801c522:	e7c1      	b.n	801c4a8 <__sflush_r+0x1c>
 801c524:	6a21      	ldr	r1, [r4, #32]
 801c526:	2301      	movs	r3, #1
 801c528:	4628      	mov	r0, r5
 801c52a:	47b0      	blx	r6
 801c52c:	1c41      	adds	r1, r0, #1
 801c52e:	d1c7      	bne.n	801c4c0 <__sflush_r+0x34>
 801c530:	682b      	ldr	r3, [r5, #0]
 801c532:	2b00      	cmp	r3, #0
 801c534:	d0c4      	beq.n	801c4c0 <__sflush_r+0x34>
 801c536:	2b1d      	cmp	r3, #29
 801c538:	d001      	beq.n	801c53e <__sflush_r+0xb2>
 801c53a:	2b16      	cmp	r3, #22
 801c53c:	d101      	bne.n	801c542 <__sflush_r+0xb6>
 801c53e:	602f      	str	r7, [r5, #0]
 801c540:	e7b1      	b.n	801c4a6 <__sflush_r+0x1a>
 801c542:	89a3      	ldrh	r3, [r4, #12]
 801c544:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801c548:	81a3      	strh	r3, [r4, #12]
 801c54a:	e7ad      	b.n	801c4a8 <__sflush_r+0x1c>
 801c54c:	690f      	ldr	r7, [r1, #16]
 801c54e:	2f00      	cmp	r7, #0
 801c550:	d0a9      	beq.n	801c4a6 <__sflush_r+0x1a>
 801c552:	0793      	lsls	r3, r2, #30
 801c554:	680e      	ldr	r6, [r1, #0]
 801c556:	bf08      	it	eq
 801c558:	694b      	ldreq	r3, [r1, #20]
 801c55a:	600f      	str	r7, [r1, #0]
 801c55c:	bf18      	it	ne
 801c55e:	2300      	movne	r3, #0
 801c560:	eba6 0807 	sub.w	r8, r6, r7
 801c564:	608b      	str	r3, [r1, #8]
 801c566:	f1b8 0f00 	cmp.w	r8, #0
 801c56a:	dd9c      	ble.n	801c4a6 <__sflush_r+0x1a>
 801c56c:	6a21      	ldr	r1, [r4, #32]
 801c56e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801c570:	4643      	mov	r3, r8
 801c572:	463a      	mov	r2, r7
 801c574:	4628      	mov	r0, r5
 801c576:	47b0      	blx	r6
 801c578:	2800      	cmp	r0, #0
 801c57a:	dc06      	bgt.n	801c58a <__sflush_r+0xfe>
 801c57c:	89a3      	ldrh	r3, [r4, #12]
 801c57e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801c582:	81a3      	strh	r3, [r4, #12]
 801c584:	f04f 30ff 	mov.w	r0, #4294967295
 801c588:	e78e      	b.n	801c4a8 <__sflush_r+0x1c>
 801c58a:	4407      	add	r7, r0
 801c58c:	eba8 0800 	sub.w	r8, r8, r0
 801c590:	e7e9      	b.n	801c566 <__sflush_r+0xda>
 801c592:	bf00      	nop
 801c594:	20400001 	.word	0x20400001

0801c598 <_fflush_r>:
 801c598:	b538      	push	{r3, r4, r5, lr}
 801c59a:	690b      	ldr	r3, [r1, #16]
 801c59c:	4605      	mov	r5, r0
 801c59e:	460c      	mov	r4, r1
 801c5a0:	b913      	cbnz	r3, 801c5a8 <_fflush_r+0x10>
 801c5a2:	2500      	movs	r5, #0
 801c5a4:	4628      	mov	r0, r5
 801c5a6:	bd38      	pop	{r3, r4, r5, pc}
 801c5a8:	b118      	cbz	r0, 801c5b2 <_fflush_r+0x1a>
 801c5aa:	6983      	ldr	r3, [r0, #24]
 801c5ac:	b90b      	cbnz	r3, 801c5b2 <_fflush_r+0x1a>
 801c5ae:	f000 f887 	bl	801c6c0 <__sinit>
 801c5b2:	4b14      	ldr	r3, [pc, #80]	; (801c604 <_fflush_r+0x6c>)
 801c5b4:	429c      	cmp	r4, r3
 801c5b6:	d11b      	bne.n	801c5f0 <_fflush_r+0x58>
 801c5b8:	686c      	ldr	r4, [r5, #4]
 801c5ba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801c5be:	2b00      	cmp	r3, #0
 801c5c0:	d0ef      	beq.n	801c5a2 <_fflush_r+0xa>
 801c5c2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801c5c4:	07d0      	lsls	r0, r2, #31
 801c5c6:	d404      	bmi.n	801c5d2 <_fflush_r+0x3a>
 801c5c8:	0599      	lsls	r1, r3, #22
 801c5ca:	d402      	bmi.n	801c5d2 <_fflush_r+0x3a>
 801c5cc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801c5ce:	f000 f915 	bl	801c7fc <__retarget_lock_acquire_recursive>
 801c5d2:	4628      	mov	r0, r5
 801c5d4:	4621      	mov	r1, r4
 801c5d6:	f7ff ff59 	bl	801c48c <__sflush_r>
 801c5da:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801c5dc:	07da      	lsls	r2, r3, #31
 801c5de:	4605      	mov	r5, r0
 801c5e0:	d4e0      	bmi.n	801c5a4 <_fflush_r+0xc>
 801c5e2:	89a3      	ldrh	r3, [r4, #12]
 801c5e4:	059b      	lsls	r3, r3, #22
 801c5e6:	d4dd      	bmi.n	801c5a4 <_fflush_r+0xc>
 801c5e8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801c5ea:	f000 f909 	bl	801c800 <__retarget_lock_release_recursive>
 801c5ee:	e7d9      	b.n	801c5a4 <_fflush_r+0xc>
 801c5f0:	4b05      	ldr	r3, [pc, #20]	; (801c608 <_fflush_r+0x70>)
 801c5f2:	429c      	cmp	r4, r3
 801c5f4:	d101      	bne.n	801c5fa <_fflush_r+0x62>
 801c5f6:	68ac      	ldr	r4, [r5, #8]
 801c5f8:	e7df      	b.n	801c5ba <_fflush_r+0x22>
 801c5fa:	4b04      	ldr	r3, [pc, #16]	; (801c60c <_fflush_r+0x74>)
 801c5fc:	429c      	cmp	r4, r3
 801c5fe:	bf08      	it	eq
 801c600:	68ec      	ldreq	r4, [r5, #12]
 801c602:	e7da      	b.n	801c5ba <_fflush_r+0x22>
 801c604:	0801e430 	.word	0x0801e430
 801c608:	0801e450 	.word	0x0801e450
 801c60c:	0801e410 	.word	0x0801e410

0801c610 <std>:
 801c610:	2300      	movs	r3, #0
 801c612:	b510      	push	{r4, lr}
 801c614:	4604      	mov	r4, r0
 801c616:	e9c0 3300 	strd	r3, r3, [r0]
 801c61a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801c61e:	6083      	str	r3, [r0, #8]
 801c620:	8181      	strh	r1, [r0, #12]
 801c622:	6643      	str	r3, [r0, #100]	; 0x64
 801c624:	81c2      	strh	r2, [r0, #14]
 801c626:	6183      	str	r3, [r0, #24]
 801c628:	4619      	mov	r1, r3
 801c62a:	2208      	movs	r2, #8
 801c62c:	305c      	adds	r0, #92	; 0x5c
 801c62e:	f7ff f9e1 	bl	801b9f4 <memset>
 801c632:	4b05      	ldr	r3, [pc, #20]	; (801c648 <std+0x38>)
 801c634:	6263      	str	r3, [r4, #36]	; 0x24
 801c636:	4b05      	ldr	r3, [pc, #20]	; (801c64c <std+0x3c>)
 801c638:	62a3      	str	r3, [r4, #40]	; 0x28
 801c63a:	4b05      	ldr	r3, [pc, #20]	; (801c650 <std+0x40>)
 801c63c:	62e3      	str	r3, [r4, #44]	; 0x2c
 801c63e:	4b05      	ldr	r3, [pc, #20]	; (801c654 <std+0x44>)
 801c640:	6224      	str	r4, [r4, #32]
 801c642:	6323      	str	r3, [r4, #48]	; 0x30
 801c644:	bd10      	pop	{r4, pc}
 801c646:	bf00      	nop
 801c648:	0801c8e5 	.word	0x0801c8e5
 801c64c:	0801c907 	.word	0x0801c907
 801c650:	0801c93f 	.word	0x0801c93f
 801c654:	0801c963 	.word	0x0801c963

0801c658 <_cleanup_r>:
 801c658:	4901      	ldr	r1, [pc, #4]	; (801c660 <_cleanup_r+0x8>)
 801c65a:	f000 b8af 	b.w	801c7bc <_fwalk_reent>
 801c65e:	bf00      	nop
 801c660:	0801c599 	.word	0x0801c599

0801c664 <__sfmoreglue>:
 801c664:	b570      	push	{r4, r5, r6, lr}
 801c666:	2268      	movs	r2, #104	; 0x68
 801c668:	1e4d      	subs	r5, r1, #1
 801c66a:	4355      	muls	r5, r2
 801c66c:	460e      	mov	r6, r1
 801c66e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801c672:	f7ff fa33 	bl	801badc <_malloc_r>
 801c676:	4604      	mov	r4, r0
 801c678:	b140      	cbz	r0, 801c68c <__sfmoreglue+0x28>
 801c67a:	2100      	movs	r1, #0
 801c67c:	e9c0 1600 	strd	r1, r6, [r0]
 801c680:	300c      	adds	r0, #12
 801c682:	60a0      	str	r0, [r4, #8]
 801c684:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801c688:	f7ff f9b4 	bl	801b9f4 <memset>
 801c68c:	4620      	mov	r0, r4
 801c68e:	bd70      	pop	{r4, r5, r6, pc}

0801c690 <__sfp_lock_acquire>:
 801c690:	4801      	ldr	r0, [pc, #4]	; (801c698 <__sfp_lock_acquire+0x8>)
 801c692:	f000 b8b3 	b.w	801c7fc <__retarget_lock_acquire_recursive>
 801c696:	bf00      	nop
 801c698:	2001290e 	.word	0x2001290e

0801c69c <__sfp_lock_release>:
 801c69c:	4801      	ldr	r0, [pc, #4]	; (801c6a4 <__sfp_lock_release+0x8>)
 801c69e:	f000 b8af 	b.w	801c800 <__retarget_lock_release_recursive>
 801c6a2:	bf00      	nop
 801c6a4:	2001290e 	.word	0x2001290e

0801c6a8 <__sinit_lock_acquire>:
 801c6a8:	4801      	ldr	r0, [pc, #4]	; (801c6b0 <__sinit_lock_acquire+0x8>)
 801c6aa:	f000 b8a7 	b.w	801c7fc <__retarget_lock_acquire_recursive>
 801c6ae:	bf00      	nop
 801c6b0:	2001290f 	.word	0x2001290f

0801c6b4 <__sinit_lock_release>:
 801c6b4:	4801      	ldr	r0, [pc, #4]	; (801c6bc <__sinit_lock_release+0x8>)
 801c6b6:	f000 b8a3 	b.w	801c800 <__retarget_lock_release_recursive>
 801c6ba:	bf00      	nop
 801c6bc:	2001290f 	.word	0x2001290f

0801c6c0 <__sinit>:
 801c6c0:	b510      	push	{r4, lr}
 801c6c2:	4604      	mov	r4, r0
 801c6c4:	f7ff fff0 	bl	801c6a8 <__sinit_lock_acquire>
 801c6c8:	69a3      	ldr	r3, [r4, #24]
 801c6ca:	b11b      	cbz	r3, 801c6d4 <__sinit+0x14>
 801c6cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c6d0:	f7ff bff0 	b.w	801c6b4 <__sinit_lock_release>
 801c6d4:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 801c6d8:	6523      	str	r3, [r4, #80]	; 0x50
 801c6da:	4b13      	ldr	r3, [pc, #76]	; (801c728 <__sinit+0x68>)
 801c6dc:	4a13      	ldr	r2, [pc, #76]	; (801c72c <__sinit+0x6c>)
 801c6de:	681b      	ldr	r3, [r3, #0]
 801c6e0:	62a2      	str	r2, [r4, #40]	; 0x28
 801c6e2:	42a3      	cmp	r3, r4
 801c6e4:	bf04      	itt	eq
 801c6e6:	2301      	moveq	r3, #1
 801c6e8:	61a3      	streq	r3, [r4, #24]
 801c6ea:	4620      	mov	r0, r4
 801c6ec:	f000 f820 	bl	801c730 <__sfp>
 801c6f0:	6060      	str	r0, [r4, #4]
 801c6f2:	4620      	mov	r0, r4
 801c6f4:	f000 f81c 	bl	801c730 <__sfp>
 801c6f8:	60a0      	str	r0, [r4, #8]
 801c6fa:	4620      	mov	r0, r4
 801c6fc:	f000 f818 	bl	801c730 <__sfp>
 801c700:	2200      	movs	r2, #0
 801c702:	60e0      	str	r0, [r4, #12]
 801c704:	2104      	movs	r1, #4
 801c706:	6860      	ldr	r0, [r4, #4]
 801c708:	f7ff ff82 	bl	801c610 <std>
 801c70c:	68a0      	ldr	r0, [r4, #8]
 801c70e:	2201      	movs	r2, #1
 801c710:	2109      	movs	r1, #9
 801c712:	f7ff ff7d 	bl	801c610 <std>
 801c716:	68e0      	ldr	r0, [r4, #12]
 801c718:	2202      	movs	r2, #2
 801c71a:	2112      	movs	r1, #18
 801c71c:	f7ff ff78 	bl	801c610 <std>
 801c720:	2301      	movs	r3, #1
 801c722:	61a3      	str	r3, [r4, #24]
 801c724:	e7d2      	b.n	801c6cc <__sinit+0xc>
 801c726:	bf00      	nop
 801c728:	0801e3d4 	.word	0x0801e3d4
 801c72c:	0801c659 	.word	0x0801c659

0801c730 <__sfp>:
 801c730:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c732:	4607      	mov	r7, r0
 801c734:	f7ff ffac 	bl	801c690 <__sfp_lock_acquire>
 801c738:	4b1e      	ldr	r3, [pc, #120]	; (801c7b4 <__sfp+0x84>)
 801c73a:	681e      	ldr	r6, [r3, #0]
 801c73c:	69b3      	ldr	r3, [r6, #24]
 801c73e:	b913      	cbnz	r3, 801c746 <__sfp+0x16>
 801c740:	4630      	mov	r0, r6
 801c742:	f7ff ffbd 	bl	801c6c0 <__sinit>
 801c746:	3648      	adds	r6, #72	; 0x48
 801c748:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801c74c:	3b01      	subs	r3, #1
 801c74e:	d503      	bpl.n	801c758 <__sfp+0x28>
 801c750:	6833      	ldr	r3, [r6, #0]
 801c752:	b30b      	cbz	r3, 801c798 <__sfp+0x68>
 801c754:	6836      	ldr	r6, [r6, #0]
 801c756:	e7f7      	b.n	801c748 <__sfp+0x18>
 801c758:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801c75c:	b9d5      	cbnz	r5, 801c794 <__sfp+0x64>
 801c75e:	4b16      	ldr	r3, [pc, #88]	; (801c7b8 <__sfp+0x88>)
 801c760:	60e3      	str	r3, [r4, #12]
 801c762:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801c766:	6665      	str	r5, [r4, #100]	; 0x64
 801c768:	f000 f847 	bl	801c7fa <__retarget_lock_init_recursive>
 801c76c:	f7ff ff96 	bl	801c69c <__sfp_lock_release>
 801c770:	e9c4 5501 	strd	r5, r5, [r4, #4]
 801c774:	e9c4 5504 	strd	r5, r5, [r4, #16]
 801c778:	6025      	str	r5, [r4, #0]
 801c77a:	61a5      	str	r5, [r4, #24]
 801c77c:	2208      	movs	r2, #8
 801c77e:	4629      	mov	r1, r5
 801c780:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801c784:	f7ff f936 	bl	801b9f4 <memset>
 801c788:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801c78c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801c790:	4620      	mov	r0, r4
 801c792:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801c794:	3468      	adds	r4, #104	; 0x68
 801c796:	e7d9      	b.n	801c74c <__sfp+0x1c>
 801c798:	2104      	movs	r1, #4
 801c79a:	4638      	mov	r0, r7
 801c79c:	f7ff ff62 	bl	801c664 <__sfmoreglue>
 801c7a0:	4604      	mov	r4, r0
 801c7a2:	6030      	str	r0, [r6, #0]
 801c7a4:	2800      	cmp	r0, #0
 801c7a6:	d1d5      	bne.n	801c754 <__sfp+0x24>
 801c7a8:	f7ff ff78 	bl	801c69c <__sfp_lock_release>
 801c7ac:	230c      	movs	r3, #12
 801c7ae:	603b      	str	r3, [r7, #0]
 801c7b0:	e7ee      	b.n	801c790 <__sfp+0x60>
 801c7b2:	bf00      	nop
 801c7b4:	0801e3d4 	.word	0x0801e3d4
 801c7b8:	ffff0001 	.word	0xffff0001

0801c7bc <_fwalk_reent>:
 801c7bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801c7c0:	4606      	mov	r6, r0
 801c7c2:	4688      	mov	r8, r1
 801c7c4:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801c7c8:	2700      	movs	r7, #0
 801c7ca:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801c7ce:	f1b9 0901 	subs.w	r9, r9, #1
 801c7d2:	d505      	bpl.n	801c7e0 <_fwalk_reent+0x24>
 801c7d4:	6824      	ldr	r4, [r4, #0]
 801c7d6:	2c00      	cmp	r4, #0
 801c7d8:	d1f7      	bne.n	801c7ca <_fwalk_reent+0xe>
 801c7da:	4638      	mov	r0, r7
 801c7dc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801c7e0:	89ab      	ldrh	r3, [r5, #12]
 801c7e2:	2b01      	cmp	r3, #1
 801c7e4:	d907      	bls.n	801c7f6 <_fwalk_reent+0x3a>
 801c7e6:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801c7ea:	3301      	adds	r3, #1
 801c7ec:	d003      	beq.n	801c7f6 <_fwalk_reent+0x3a>
 801c7ee:	4629      	mov	r1, r5
 801c7f0:	4630      	mov	r0, r6
 801c7f2:	47c0      	blx	r8
 801c7f4:	4307      	orrs	r7, r0
 801c7f6:	3568      	adds	r5, #104	; 0x68
 801c7f8:	e7e9      	b.n	801c7ce <_fwalk_reent+0x12>

0801c7fa <__retarget_lock_init_recursive>:
 801c7fa:	4770      	bx	lr

0801c7fc <__retarget_lock_acquire_recursive>:
 801c7fc:	4770      	bx	lr

0801c7fe <__retarget_lock_release>:
 801c7fe:	4770      	bx	lr

0801c800 <__retarget_lock_release_recursive>:
 801c800:	4770      	bx	lr

0801c802 <__swhatbuf_r>:
 801c802:	b570      	push	{r4, r5, r6, lr}
 801c804:	460e      	mov	r6, r1
 801c806:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c80a:	2900      	cmp	r1, #0
 801c80c:	b096      	sub	sp, #88	; 0x58
 801c80e:	4614      	mov	r4, r2
 801c810:	461d      	mov	r5, r3
 801c812:	da08      	bge.n	801c826 <__swhatbuf_r+0x24>
 801c814:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 801c818:	2200      	movs	r2, #0
 801c81a:	602a      	str	r2, [r5, #0]
 801c81c:	061a      	lsls	r2, r3, #24
 801c81e:	d410      	bmi.n	801c842 <__swhatbuf_r+0x40>
 801c820:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801c824:	e00e      	b.n	801c844 <__swhatbuf_r+0x42>
 801c826:	466a      	mov	r2, sp
 801c828:	f000 f8c2 	bl	801c9b0 <_fstat_r>
 801c82c:	2800      	cmp	r0, #0
 801c82e:	dbf1      	blt.n	801c814 <__swhatbuf_r+0x12>
 801c830:	9a01      	ldr	r2, [sp, #4]
 801c832:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801c836:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801c83a:	425a      	negs	r2, r3
 801c83c:	415a      	adcs	r2, r3
 801c83e:	602a      	str	r2, [r5, #0]
 801c840:	e7ee      	b.n	801c820 <__swhatbuf_r+0x1e>
 801c842:	2340      	movs	r3, #64	; 0x40
 801c844:	2000      	movs	r0, #0
 801c846:	6023      	str	r3, [r4, #0]
 801c848:	b016      	add	sp, #88	; 0x58
 801c84a:	bd70      	pop	{r4, r5, r6, pc}

0801c84c <__smakebuf_r>:
 801c84c:	898b      	ldrh	r3, [r1, #12]
 801c84e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801c850:	079d      	lsls	r5, r3, #30
 801c852:	4606      	mov	r6, r0
 801c854:	460c      	mov	r4, r1
 801c856:	d507      	bpl.n	801c868 <__smakebuf_r+0x1c>
 801c858:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801c85c:	6023      	str	r3, [r4, #0]
 801c85e:	6123      	str	r3, [r4, #16]
 801c860:	2301      	movs	r3, #1
 801c862:	6163      	str	r3, [r4, #20]
 801c864:	b002      	add	sp, #8
 801c866:	bd70      	pop	{r4, r5, r6, pc}
 801c868:	ab01      	add	r3, sp, #4
 801c86a:	466a      	mov	r2, sp
 801c86c:	f7ff ffc9 	bl	801c802 <__swhatbuf_r>
 801c870:	9900      	ldr	r1, [sp, #0]
 801c872:	4605      	mov	r5, r0
 801c874:	4630      	mov	r0, r6
 801c876:	f7ff f931 	bl	801badc <_malloc_r>
 801c87a:	b948      	cbnz	r0, 801c890 <__smakebuf_r+0x44>
 801c87c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801c880:	059a      	lsls	r2, r3, #22
 801c882:	d4ef      	bmi.n	801c864 <__smakebuf_r+0x18>
 801c884:	f023 0303 	bic.w	r3, r3, #3
 801c888:	f043 0302 	orr.w	r3, r3, #2
 801c88c:	81a3      	strh	r3, [r4, #12]
 801c88e:	e7e3      	b.n	801c858 <__smakebuf_r+0xc>
 801c890:	4b0d      	ldr	r3, [pc, #52]	; (801c8c8 <__smakebuf_r+0x7c>)
 801c892:	62b3      	str	r3, [r6, #40]	; 0x28
 801c894:	89a3      	ldrh	r3, [r4, #12]
 801c896:	6020      	str	r0, [r4, #0]
 801c898:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801c89c:	81a3      	strh	r3, [r4, #12]
 801c89e:	9b00      	ldr	r3, [sp, #0]
 801c8a0:	6163      	str	r3, [r4, #20]
 801c8a2:	9b01      	ldr	r3, [sp, #4]
 801c8a4:	6120      	str	r0, [r4, #16]
 801c8a6:	b15b      	cbz	r3, 801c8c0 <__smakebuf_r+0x74>
 801c8a8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801c8ac:	4630      	mov	r0, r6
 801c8ae:	f000 f891 	bl	801c9d4 <_isatty_r>
 801c8b2:	b128      	cbz	r0, 801c8c0 <__smakebuf_r+0x74>
 801c8b4:	89a3      	ldrh	r3, [r4, #12]
 801c8b6:	f023 0303 	bic.w	r3, r3, #3
 801c8ba:	f043 0301 	orr.w	r3, r3, #1
 801c8be:	81a3      	strh	r3, [r4, #12]
 801c8c0:	89a0      	ldrh	r0, [r4, #12]
 801c8c2:	4305      	orrs	r5, r0
 801c8c4:	81a5      	strh	r5, [r4, #12]
 801c8c6:	e7cd      	b.n	801c864 <__smakebuf_r+0x18>
 801c8c8:	0801c659 	.word	0x0801c659

0801c8cc <__malloc_lock>:
 801c8cc:	4801      	ldr	r0, [pc, #4]	; (801c8d4 <__malloc_lock+0x8>)
 801c8ce:	f7ff bf95 	b.w	801c7fc <__retarget_lock_acquire_recursive>
 801c8d2:	bf00      	nop
 801c8d4:	2001290d 	.word	0x2001290d

0801c8d8 <__malloc_unlock>:
 801c8d8:	4801      	ldr	r0, [pc, #4]	; (801c8e0 <__malloc_unlock+0x8>)
 801c8da:	f7ff bf91 	b.w	801c800 <__retarget_lock_release_recursive>
 801c8de:	bf00      	nop
 801c8e0:	2001290d 	.word	0x2001290d

0801c8e4 <__sread>:
 801c8e4:	b510      	push	{r4, lr}
 801c8e6:	460c      	mov	r4, r1
 801c8e8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c8ec:	f000 f894 	bl	801ca18 <_read_r>
 801c8f0:	2800      	cmp	r0, #0
 801c8f2:	bfab      	itete	ge
 801c8f4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801c8f6:	89a3      	ldrhlt	r3, [r4, #12]
 801c8f8:	181b      	addge	r3, r3, r0
 801c8fa:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801c8fe:	bfac      	ite	ge
 801c900:	6563      	strge	r3, [r4, #84]	; 0x54
 801c902:	81a3      	strhlt	r3, [r4, #12]
 801c904:	bd10      	pop	{r4, pc}

0801c906 <__swrite>:
 801c906:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801c90a:	461f      	mov	r7, r3
 801c90c:	898b      	ldrh	r3, [r1, #12]
 801c90e:	05db      	lsls	r3, r3, #23
 801c910:	4605      	mov	r5, r0
 801c912:	460c      	mov	r4, r1
 801c914:	4616      	mov	r6, r2
 801c916:	d505      	bpl.n	801c924 <__swrite+0x1e>
 801c918:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c91c:	2302      	movs	r3, #2
 801c91e:	2200      	movs	r2, #0
 801c920:	f000 f868 	bl	801c9f4 <_lseek_r>
 801c924:	89a3      	ldrh	r3, [r4, #12]
 801c926:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801c92a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801c92e:	81a3      	strh	r3, [r4, #12]
 801c930:	4632      	mov	r2, r6
 801c932:	463b      	mov	r3, r7
 801c934:	4628      	mov	r0, r5
 801c936:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801c93a:	f000 b817 	b.w	801c96c <_write_r>

0801c93e <__sseek>:
 801c93e:	b510      	push	{r4, lr}
 801c940:	460c      	mov	r4, r1
 801c942:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c946:	f000 f855 	bl	801c9f4 <_lseek_r>
 801c94a:	1c43      	adds	r3, r0, #1
 801c94c:	89a3      	ldrh	r3, [r4, #12]
 801c94e:	bf15      	itete	ne
 801c950:	6560      	strne	r0, [r4, #84]	; 0x54
 801c952:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801c956:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801c95a:	81a3      	strheq	r3, [r4, #12]
 801c95c:	bf18      	it	ne
 801c95e:	81a3      	strhne	r3, [r4, #12]
 801c960:	bd10      	pop	{r4, pc}

0801c962 <__sclose>:
 801c962:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c966:	f000 b813 	b.w	801c990 <_close_r>
	...

0801c96c <_write_r>:
 801c96c:	b538      	push	{r3, r4, r5, lr}
 801c96e:	4d07      	ldr	r5, [pc, #28]	; (801c98c <_write_r+0x20>)
 801c970:	4604      	mov	r4, r0
 801c972:	4608      	mov	r0, r1
 801c974:	4611      	mov	r1, r2
 801c976:	2200      	movs	r2, #0
 801c978:	602a      	str	r2, [r5, #0]
 801c97a:	461a      	mov	r2, r3
 801c97c:	f7e5 fad0 	bl	8001f20 <_write>
 801c980:	1c43      	adds	r3, r0, #1
 801c982:	d102      	bne.n	801c98a <_write_r+0x1e>
 801c984:	682b      	ldr	r3, [r5, #0]
 801c986:	b103      	cbz	r3, 801c98a <_write_r+0x1e>
 801c988:	6023      	str	r3, [r4, #0]
 801c98a:	bd38      	pop	{r3, r4, r5, pc}
 801c98c:	20012910 	.word	0x20012910

0801c990 <_close_r>:
 801c990:	b538      	push	{r3, r4, r5, lr}
 801c992:	4d06      	ldr	r5, [pc, #24]	; (801c9ac <_close_r+0x1c>)
 801c994:	2300      	movs	r3, #0
 801c996:	4604      	mov	r4, r0
 801c998:	4608      	mov	r0, r1
 801c99a:	602b      	str	r3, [r5, #0]
 801c99c:	f7e5 face 	bl	8001f3c <_close>
 801c9a0:	1c43      	adds	r3, r0, #1
 801c9a2:	d102      	bne.n	801c9aa <_close_r+0x1a>
 801c9a4:	682b      	ldr	r3, [r5, #0]
 801c9a6:	b103      	cbz	r3, 801c9aa <_close_r+0x1a>
 801c9a8:	6023      	str	r3, [r4, #0]
 801c9aa:	bd38      	pop	{r3, r4, r5, pc}
 801c9ac:	20012910 	.word	0x20012910

0801c9b0 <_fstat_r>:
 801c9b0:	b538      	push	{r3, r4, r5, lr}
 801c9b2:	4d07      	ldr	r5, [pc, #28]	; (801c9d0 <_fstat_r+0x20>)
 801c9b4:	2300      	movs	r3, #0
 801c9b6:	4604      	mov	r4, r0
 801c9b8:	4608      	mov	r0, r1
 801c9ba:	4611      	mov	r1, r2
 801c9bc:	602b      	str	r3, [r5, #0]
 801c9be:	f7e5 fac0 	bl	8001f42 <_fstat>
 801c9c2:	1c43      	adds	r3, r0, #1
 801c9c4:	d102      	bne.n	801c9cc <_fstat_r+0x1c>
 801c9c6:	682b      	ldr	r3, [r5, #0]
 801c9c8:	b103      	cbz	r3, 801c9cc <_fstat_r+0x1c>
 801c9ca:	6023      	str	r3, [r4, #0]
 801c9cc:	bd38      	pop	{r3, r4, r5, pc}
 801c9ce:	bf00      	nop
 801c9d0:	20012910 	.word	0x20012910

0801c9d4 <_isatty_r>:
 801c9d4:	b538      	push	{r3, r4, r5, lr}
 801c9d6:	4d06      	ldr	r5, [pc, #24]	; (801c9f0 <_isatty_r+0x1c>)
 801c9d8:	2300      	movs	r3, #0
 801c9da:	4604      	mov	r4, r0
 801c9dc:	4608      	mov	r0, r1
 801c9de:	602b      	str	r3, [r5, #0]
 801c9e0:	f7e5 fab4 	bl	8001f4c <_isatty>
 801c9e4:	1c43      	adds	r3, r0, #1
 801c9e6:	d102      	bne.n	801c9ee <_isatty_r+0x1a>
 801c9e8:	682b      	ldr	r3, [r5, #0]
 801c9ea:	b103      	cbz	r3, 801c9ee <_isatty_r+0x1a>
 801c9ec:	6023      	str	r3, [r4, #0]
 801c9ee:	bd38      	pop	{r3, r4, r5, pc}
 801c9f0:	20012910 	.word	0x20012910

0801c9f4 <_lseek_r>:
 801c9f4:	b538      	push	{r3, r4, r5, lr}
 801c9f6:	4d07      	ldr	r5, [pc, #28]	; (801ca14 <_lseek_r+0x20>)
 801c9f8:	4604      	mov	r4, r0
 801c9fa:	4608      	mov	r0, r1
 801c9fc:	4611      	mov	r1, r2
 801c9fe:	2200      	movs	r2, #0
 801ca00:	602a      	str	r2, [r5, #0]
 801ca02:	461a      	mov	r2, r3
 801ca04:	f7e5 faa4 	bl	8001f50 <_lseek>
 801ca08:	1c43      	adds	r3, r0, #1
 801ca0a:	d102      	bne.n	801ca12 <_lseek_r+0x1e>
 801ca0c:	682b      	ldr	r3, [r5, #0]
 801ca0e:	b103      	cbz	r3, 801ca12 <_lseek_r+0x1e>
 801ca10:	6023      	str	r3, [r4, #0]
 801ca12:	bd38      	pop	{r3, r4, r5, pc}
 801ca14:	20012910 	.word	0x20012910

0801ca18 <_read_r>:
 801ca18:	b538      	push	{r3, r4, r5, lr}
 801ca1a:	4d07      	ldr	r5, [pc, #28]	; (801ca38 <_read_r+0x20>)
 801ca1c:	4604      	mov	r4, r0
 801ca1e:	4608      	mov	r0, r1
 801ca20:	4611      	mov	r1, r2
 801ca22:	2200      	movs	r2, #0
 801ca24:	602a      	str	r2, [r5, #0]
 801ca26:	461a      	mov	r2, r3
 801ca28:	f7e5 fa6c 	bl	8001f04 <_read>
 801ca2c:	1c43      	adds	r3, r0, #1
 801ca2e:	d102      	bne.n	801ca36 <_read_r+0x1e>
 801ca30:	682b      	ldr	r3, [r5, #0]
 801ca32:	b103      	cbz	r3, 801ca36 <_read_r+0x1e>
 801ca34:	6023      	str	r3, [r4, #0]
 801ca36:	bd38      	pop	{r3, r4, r5, pc}
 801ca38:	20012910 	.word	0x20012910

0801ca3c <_init>:
 801ca3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801ca3e:	bf00      	nop
 801ca40:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801ca42:	bc08      	pop	{r3}
 801ca44:	469e      	mov	lr, r3
 801ca46:	4770      	bx	lr

0801ca48 <_fini>:
 801ca48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801ca4a:	bf00      	nop
 801ca4c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801ca4e:	bc08      	pop	{r3}
 801ca50:	469e      	mov	lr, r3
 801ca52:	4770      	bx	lr
